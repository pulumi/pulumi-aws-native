// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securityhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AutomationRuleDateFilter struct {
	DateRange *AutomationRuleDateRange `pulumi:"dateRange"`
	End       *string                  `pulumi:"end"`
	Start     *string                  `pulumi:"start"`
}

// AutomationRuleDateFilterInput is an input type that accepts AutomationRuleDateFilterArgs and AutomationRuleDateFilterOutput values.
// You can construct a concrete instance of `AutomationRuleDateFilterInput` via:
//
//	AutomationRuleDateFilterArgs{...}
type AutomationRuleDateFilterInput interface {
	pulumi.Input

	ToAutomationRuleDateFilterOutput() AutomationRuleDateFilterOutput
	ToAutomationRuleDateFilterOutputWithContext(context.Context) AutomationRuleDateFilterOutput
}

type AutomationRuleDateFilterArgs struct {
	DateRange AutomationRuleDateRangePtrInput `pulumi:"dateRange"`
	End       pulumi.StringPtrInput           `pulumi:"end"`
	Start     pulumi.StringPtrInput           `pulumi:"start"`
}

func (AutomationRuleDateFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleDateFilter)(nil)).Elem()
}

func (i AutomationRuleDateFilterArgs) ToAutomationRuleDateFilterOutput() AutomationRuleDateFilterOutput {
	return i.ToAutomationRuleDateFilterOutputWithContext(context.Background())
}

func (i AutomationRuleDateFilterArgs) ToAutomationRuleDateFilterOutputWithContext(ctx context.Context) AutomationRuleDateFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleDateFilterOutput)
}

// AutomationRuleDateFilterArrayInput is an input type that accepts AutomationRuleDateFilterArray and AutomationRuleDateFilterArrayOutput values.
// You can construct a concrete instance of `AutomationRuleDateFilterArrayInput` via:
//
//	AutomationRuleDateFilterArray{ AutomationRuleDateFilterArgs{...} }
type AutomationRuleDateFilterArrayInput interface {
	pulumi.Input

	ToAutomationRuleDateFilterArrayOutput() AutomationRuleDateFilterArrayOutput
	ToAutomationRuleDateFilterArrayOutputWithContext(context.Context) AutomationRuleDateFilterArrayOutput
}

type AutomationRuleDateFilterArray []AutomationRuleDateFilterInput

func (AutomationRuleDateFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleDateFilter)(nil)).Elem()
}

func (i AutomationRuleDateFilterArray) ToAutomationRuleDateFilterArrayOutput() AutomationRuleDateFilterArrayOutput {
	return i.ToAutomationRuleDateFilterArrayOutputWithContext(context.Background())
}

func (i AutomationRuleDateFilterArray) ToAutomationRuleDateFilterArrayOutputWithContext(ctx context.Context) AutomationRuleDateFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleDateFilterArrayOutput)
}

type AutomationRuleDateFilterOutput struct{ *pulumi.OutputState }

func (AutomationRuleDateFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleDateFilter)(nil)).Elem()
}

func (o AutomationRuleDateFilterOutput) ToAutomationRuleDateFilterOutput() AutomationRuleDateFilterOutput {
	return o
}

func (o AutomationRuleDateFilterOutput) ToAutomationRuleDateFilterOutputWithContext(ctx context.Context) AutomationRuleDateFilterOutput {
	return o
}

func (o AutomationRuleDateFilterOutput) DateRange() AutomationRuleDateRangePtrOutput {
	return o.ApplyT(func(v AutomationRuleDateFilter) *AutomationRuleDateRange { return v.DateRange }).(AutomationRuleDateRangePtrOutput)
}

func (o AutomationRuleDateFilterOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRuleDateFilter) *string { return v.End }).(pulumi.StringPtrOutput)
}

func (o AutomationRuleDateFilterOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRuleDateFilter) *string { return v.Start }).(pulumi.StringPtrOutput)
}

type AutomationRuleDateFilterArrayOutput struct{ *pulumi.OutputState }

func (AutomationRuleDateFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleDateFilter)(nil)).Elem()
}

func (o AutomationRuleDateFilterArrayOutput) ToAutomationRuleDateFilterArrayOutput() AutomationRuleDateFilterArrayOutput {
	return o
}

func (o AutomationRuleDateFilterArrayOutput) ToAutomationRuleDateFilterArrayOutputWithContext(ctx context.Context) AutomationRuleDateFilterArrayOutput {
	return o
}

func (o AutomationRuleDateFilterArrayOutput) Index(i pulumi.IntInput) AutomationRuleDateFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRuleDateFilter {
		return vs[0].([]AutomationRuleDateFilter)[vs[1].(int)]
	}).(AutomationRuleDateFilterOutput)
}

type AutomationRuleDateRange struct {
	Unit  AutomationRuleDateRangeUnit `pulumi:"unit"`
	Value float64                     `pulumi:"value"`
}

// AutomationRuleDateRangeInput is an input type that accepts AutomationRuleDateRangeArgs and AutomationRuleDateRangeOutput values.
// You can construct a concrete instance of `AutomationRuleDateRangeInput` via:
//
//	AutomationRuleDateRangeArgs{...}
type AutomationRuleDateRangeInput interface {
	pulumi.Input

	ToAutomationRuleDateRangeOutput() AutomationRuleDateRangeOutput
	ToAutomationRuleDateRangeOutputWithContext(context.Context) AutomationRuleDateRangeOutput
}

type AutomationRuleDateRangeArgs struct {
	Unit  AutomationRuleDateRangeUnitInput `pulumi:"unit"`
	Value pulumi.Float64Input              `pulumi:"value"`
}

func (AutomationRuleDateRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleDateRange)(nil)).Elem()
}

func (i AutomationRuleDateRangeArgs) ToAutomationRuleDateRangeOutput() AutomationRuleDateRangeOutput {
	return i.ToAutomationRuleDateRangeOutputWithContext(context.Background())
}

func (i AutomationRuleDateRangeArgs) ToAutomationRuleDateRangeOutputWithContext(ctx context.Context) AutomationRuleDateRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleDateRangeOutput)
}

func (i AutomationRuleDateRangeArgs) ToAutomationRuleDateRangePtrOutput() AutomationRuleDateRangePtrOutput {
	return i.ToAutomationRuleDateRangePtrOutputWithContext(context.Background())
}

func (i AutomationRuleDateRangeArgs) ToAutomationRuleDateRangePtrOutputWithContext(ctx context.Context) AutomationRuleDateRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleDateRangeOutput).ToAutomationRuleDateRangePtrOutputWithContext(ctx)
}

// AutomationRuleDateRangePtrInput is an input type that accepts AutomationRuleDateRangeArgs, AutomationRuleDateRangePtr and AutomationRuleDateRangePtrOutput values.
// You can construct a concrete instance of `AutomationRuleDateRangePtrInput` via:
//
//	        AutomationRuleDateRangeArgs{...}
//
//	or:
//
//	        nil
type AutomationRuleDateRangePtrInput interface {
	pulumi.Input

	ToAutomationRuleDateRangePtrOutput() AutomationRuleDateRangePtrOutput
	ToAutomationRuleDateRangePtrOutputWithContext(context.Context) AutomationRuleDateRangePtrOutput
}

type automationRuleDateRangePtrType AutomationRuleDateRangeArgs

func AutomationRuleDateRangePtr(v *AutomationRuleDateRangeArgs) AutomationRuleDateRangePtrInput {
	return (*automationRuleDateRangePtrType)(v)
}

func (*automationRuleDateRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleDateRange)(nil)).Elem()
}

func (i *automationRuleDateRangePtrType) ToAutomationRuleDateRangePtrOutput() AutomationRuleDateRangePtrOutput {
	return i.ToAutomationRuleDateRangePtrOutputWithContext(context.Background())
}

func (i *automationRuleDateRangePtrType) ToAutomationRuleDateRangePtrOutputWithContext(ctx context.Context) AutomationRuleDateRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleDateRangePtrOutput)
}

type AutomationRuleDateRangeOutput struct{ *pulumi.OutputState }

func (AutomationRuleDateRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleDateRange)(nil)).Elem()
}

func (o AutomationRuleDateRangeOutput) ToAutomationRuleDateRangeOutput() AutomationRuleDateRangeOutput {
	return o
}

func (o AutomationRuleDateRangeOutput) ToAutomationRuleDateRangeOutputWithContext(ctx context.Context) AutomationRuleDateRangeOutput {
	return o
}

func (o AutomationRuleDateRangeOutput) ToAutomationRuleDateRangePtrOutput() AutomationRuleDateRangePtrOutput {
	return o.ToAutomationRuleDateRangePtrOutputWithContext(context.Background())
}

func (o AutomationRuleDateRangeOutput) ToAutomationRuleDateRangePtrOutputWithContext(ctx context.Context) AutomationRuleDateRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRuleDateRange) *AutomationRuleDateRange {
		return &v
	}).(AutomationRuleDateRangePtrOutput)
}

func (o AutomationRuleDateRangeOutput) Unit() AutomationRuleDateRangeUnitOutput {
	return o.ApplyT(func(v AutomationRuleDateRange) AutomationRuleDateRangeUnit { return v.Unit }).(AutomationRuleDateRangeUnitOutput)
}

func (o AutomationRuleDateRangeOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v AutomationRuleDateRange) float64 { return v.Value }).(pulumi.Float64Output)
}

type AutomationRuleDateRangePtrOutput struct{ *pulumi.OutputState }

func (AutomationRuleDateRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleDateRange)(nil)).Elem()
}

func (o AutomationRuleDateRangePtrOutput) ToAutomationRuleDateRangePtrOutput() AutomationRuleDateRangePtrOutput {
	return o
}

func (o AutomationRuleDateRangePtrOutput) ToAutomationRuleDateRangePtrOutputWithContext(ctx context.Context) AutomationRuleDateRangePtrOutput {
	return o
}

func (o AutomationRuleDateRangePtrOutput) Elem() AutomationRuleDateRangeOutput {
	return o.ApplyT(func(v *AutomationRuleDateRange) AutomationRuleDateRange {
		if v != nil {
			return *v
		}
		var ret AutomationRuleDateRange
		return ret
	}).(AutomationRuleDateRangeOutput)
}

func (o AutomationRuleDateRangePtrOutput) Unit() AutomationRuleDateRangeUnitPtrOutput {
	return o.ApplyT(func(v *AutomationRuleDateRange) *AutomationRuleDateRangeUnit {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(AutomationRuleDateRangeUnitPtrOutput)
}

func (o AutomationRuleDateRangePtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutomationRuleDateRange) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

type AutomationRuleMapFilter struct {
	Comparison AutomationRuleMapFilterComparison `pulumi:"comparison"`
	Key        string                            `pulumi:"key"`
	Value      string                            `pulumi:"value"`
}

// AutomationRuleMapFilterInput is an input type that accepts AutomationRuleMapFilterArgs and AutomationRuleMapFilterOutput values.
// You can construct a concrete instance of `AutomationRuleMapFilterInput` via:
//
//	AutomationRuleMapFilterArgs{...}
type AutomationRuleMapFilterInput interface {
	pulumi.Input

	ToAutomationRuleMapFilterOutput() AutomationRuleMapFilterOutput
	ToAutomationRuleMapFilterOutputWithContext(context.Context) AutomationRuleMapFilterOutput
}

type AutomationRuleMapFilterArgs struct {
	Comparison AutomationRuleMapFilterComparisonInput `pulumi:"comparison"`
	Key        pulumi.StringInput                     `pulumi:"key"`
	Value      pulumi.StringInput                     `pulumi:"value"`
}

func (AutomationRuleMapFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleMapFilter)(nil)).Elem()
}

func (i AutomationRuleMapFilterArgs) ToAutomationRuleMapFilterOutput() AutomationRuleMapFilterOutput {
	return i.ToAutomationRuleMapFilterOutputWithContext(context.Background())
}

func (i AutomationRuleMapFilterArgs) ToAutomationRuleMapFilterOutputWithContext(ctx context.Context) AutomationRuleMapFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleMapFilterOutput)
}

// AutomationRuleMapFilterArrayInput is an input type that accepts AutomationRuleMapFilterArray and AutomationRuleMapFilterArrayOutput values.
// You can construct a concrete instance of `AutomationRuleMapFilterArrayInput` via:
//
//	AutomationRuleMapFilterArray{ AutomationRuleMapFilterArgs{...} }
type AutomationRuleMapFilterArrayInput interface {
	pulumi.Input

	ToAutomationRuleMapFilterArrayOutput() AutomationRuleMapFilterArrayOutput
	ToAutomationRuleMapFilterArrayOutputWithContext(context.Context) AutomationRuleMapFilterArrayOutput
}

type AutomationRuleMapFilterArray []AutomationRuleMapFilterInput

func (AutomationRuleMapFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleMapFilter)(nil)).Elem()
}

func (i AutomationRuleMapFilterArray) ToAutomationRuleMapFilterArrayOutput() AutomationRuleMapFilterArrayOutput {
	return i.ToAutomationRuleMapFilterArrayOutputWithContext(context.Background())
}

func (i AutomationRuleMapFilterArray) ToAutomationRuleMapFilterArrayOutputWithContext(ctx context.Context) AutomationRuleMapFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleMapFilterArrayOutput)
}

type AutomationRuleMapFilterOutput struct{ *pulumi.OutputState }

func (AutomationRuleMapFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleMapFilter)(nil)).Elem()
}

func (o AutomationRuleMapFilterOutput) ToAutomationRuleMapFilterOutput() AutomationRuleMapFilterOutput {
	return o
}

func (o AutomationRuleMapFilterOutput) ToAutomationRuleMapFilterOutputWithContext(ctx context.Context) AutomationRuleMapFilterOutput {
	return o
}

func (o AutomationRuleMapFilterOutput) Comparison() AutomationRuleMapFilterComparisonOutput {
	return o.ApplyT(func(v AutomationRuleMapFilter) AutomationRuleMapFilterComparison { return v.Comparison }).(AutomationRuleMapFilterComparisonOutput)
}

func (o AutomationRuleMapFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleMapFilter) string { return v.Key }).(pulumi.StringOutput)
}

func (o AutomationRuleMapFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleMapFilter) string { return v.Value }).(pulumi.StringOutput)
}

type AutomationRuleMapFilterArrayOutput struct{ *pulumi.OutputState }

func (AutomationRuleMapFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleMapFilter)(nil)).Elem()
}

func (o AutomationRuleMapFilterArrayOutput) ToAutomationRuleMapFilterArrayOutput() AutomationRuleMapFilterArrayOutput {
	return o
}

func (o AutomationRuleMapFilterArrayOutput) ToAutomationRuleMapFilterArrayOutputWithContext(ctx context.Context) AutomationRuleMapFilterArrayOutput {
	return o
}

func (o AutomationRuleMapFilterArrayOutput) Index(i pulumi.IntInput) AutomationRuleMapFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRuleMapFilter {
		return vs[0].([]AutomationRuleMapFilter)[vs[1].(int)]
	}).(AutomationRuleMapFilterOutput)
}

type AutomationRuleNoteUpdate struct {
	Text      string `pulumi:"text"`
	UpdatedBy string `pulumi:"updatedBy"`
}

// AutomationRuleNoteUpdateInput is an input type that accepts AutomationRuleNoteUpdateArgs and AutomationRuleNoteUpdateOutput values.
// You can construct a concrete instance of `AutomationRuleNoteUpdateInput` via:
//
//	AutomationRuleNoteUpdateArgs{...}
type AutomationRuleNoteUpdateInput interface {
	pulumi.Input

	ToAutomationRuleNoteUpdateOutput() AutomationRuleNoteUpdateOutput
	ToAutomationRuleNoteUpdateOutputWithContext(context.Context) AutomationRuleNoteUpdateOutput
}

type AutomationRuleNoteUpdateArgs struct {
	Text      pulumi.StringInput `pulumi:"text"`
	UpdatedBy pulumi.StringInput `pulumi:"updatedBy"`
}

func (AutomationRuleNoteUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleNoteUpdate)(nil)).Elem()
}

func (i AutomationRuleNoteUpdateArgs) ToAutomationRuleNoteUpdateOutput() AutomationRuleNoteUpdateOutput {
	return i.ToAutomationRuleNoteUpdateOutputWithContext(context.Background())
}

func (i AutomationRuleNoteUpdateArgs) ToAutomationRuleNoteUpdateOutputWithContext(ctx context.Context) AutomationRuleNoteUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleNoteUpdateOutput)
}

func (i AutomationRuleNoteUpdateArgs) ToAutomationRuleNoteUpdatePtrOutput() AutomationRuleNoteUpdatePtrOutput {
	return i.ToAutomationRuleNoteUpdatePtrOutputWithContext(context.Background())
}

func (i AutomationRuleNoteUpdateArgs) ToAutomationRuleNoteUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleNoteUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleNoteUpdateOutput).ToAutomationRuleNoteUpdatePtrOutputWithContext(ctx)
}

// AutomationRuleNoteUpdatePtrInput is an input type that accepts AutomationRuleNoteUpdateArgs, AutomationRuleNoteUpdatePtr and AutomationRuleNoteUpdatePtrOutput values.
// You can construct a concrete instance of `AutomationRuleNoteUpdatePtrInput` via:
//
//	        AutomationRuleNoteUpdateArgs{...}
//
//	or:
//
//	        nil
type AutomationRuleNoteUpdatePtrInput interface {
	pulumi.Input

	ToAutomationRuleNoteUpdatePtrOutput() AutomationRuleNoteUpdatePtrOutput
	ToAutomationRuleNoteUpdatePtrOutputWithContext(context.Context) AutomationRuleNoteUpdatePtrOutput
}

type automationRuleNoteUpdatePtrType AutomationRuleNoteUpdateArgs

func AutomationRuleNoteUpdatePtr(v *AutomationRuleNoteUpdateArgs) AutomationRuleNoteUpdatePtrInput {
	return (*automationRuleNoteUpdatePtrType)(v)
}

func (*automationRuleNoteUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleNoteUpdate)(nil)).Elem()
}

func (i *automationRuleNoteUpdatePtrType) ToAutomationRuleNoteUpdatePtrOutput() AutomationRuleNoteUpdatePtrOutput {
	return i.ToAutomationRuleNoteUpdatePtrOutputWithContext(context.Background())
}

func (i *automationRuleNoteUpdatePtrType) ToAutomationRuleNoteUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleNoteUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleNoteUpdatePtrOutput)
}

type AutomationRuleNoteUpdateOutput struct{ *pulumi.OutputState }

func (AutomationRuleNoteUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleNoteUpdate)(nil)).Elem()
}

func (o AutomationRuleNoteUpdateOutput) ToAutomationRuleNoteUpdateOutput() AutomationRuleNoteUpdateOutput {
	return o
}

func (o AutomationRuleNoteUpdateOutput) ToAutomationRuleNoteUpdateOutputWithContext(ctx context.Context) AutomationRuleNoteUpdateOutput {
	return o
}

func (o AutomationRuleNoteUpdateOutput) ToAutomationRuleNoteUpdatePtrOutput() AutomationRuleNoteUpdatePtrOutput {
	return o.ToAutomationRuleNoteUpdatePtrOutputWithContext(context.Background())
}

func (o AutomationRuleNoteUpdateOutput) ToAutomationRuleNoteUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleNoteUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRuleNoteUpdate) *AutomationRuleNoteUpdate {
		return &v
	}).(AutomationRuleNoteUpdatePtrOutput)
}

func (o AutomationRuleNoteUpdateOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleNoteUpdate) string { return v.Text }).(pulumi.StringOutput)
}

func (o AutomationRuleNoteUpdateOutput) UpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleNoteUpdate) string { return v.UpdatedBy }).(pulumi.StringOutput)
}

type AutomationRuleNoteUpdatePtrOutput struct{ *pulumi.OutputState }

func (AutomationRuleNoteUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleNoteUpdate)(nil)).Elem()
}

func (o AutomationRuleNoteUpdatePtrOutput) ToAutomationRuleNoteUpdatePtrOutput() AutomationRuleNoteUpdatePtrOutput {
	return o
}

func (o AutomationRuleNoteUpdatePtrOutput) ToAutomationRuleNoteUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleNoteUpdatePtrOutput {
	return o
}

func (o AutomationRuleNoteUpdatePtrOutput) Elem() AutomationRuleNoteUpdateOutput {
	return o.ApplyT(func(v *AutomationRuleNoteUpdate) AutomationRuleNoteUpdate {
		if v != nil {
			return *v
		}
		var ret AutomationRuleNoteUpdate
		return ret
	}).(AutomationRuleNoteUpdateOutput)
}

func (o AutomationRuleNoteUpdatePtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRuleNoteUpdate) *string {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(pulumi.StringPtrOutput)
}

func (o AutomationRuleNoteUpdatePtrOutput) UpdatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRuleNoteUpdate) *string {
		if v == nil {
			return nil
		}
		return &v.UpdatedBy
	}).(pulumi.StringPtrOutput)
}

type AutomationRuleNumberFilter struct {
	Eq  *float64 `pulumi:"eq"`
	Gte *float64 `pulumi:"gte"`
	Lte *float64 `pulumi:"lte"`
}

// AutomationRuleNumberFilterInput is an input type that accepts AutomationRuleNumberFilterArgs and AutomationRuleNumberFilterOutput values.
// You can construct a concrete instance of `AutomationRuleNumberFilterInput` via:
//
//	AutomationRuleNumberFilterArgs{...}
type AutomationRuleNumberFilterInput interface {
	pulumi.Input

	ToAutomationRuleNumberFilterOutput() AutomationRuleNumberFilterOutput
	ToAutomationRuleNumberFilterOutputWithContext(context.Context) AutomationRuleNumberFilterOutput
}

type AutomationRuleNumberFilterArgs struct {
	Eq  pulumi.Float64PtrInput `pulumi:"eq"`
	Gte pulumi.Float64PtrInput `pulumi:"gte"`
	Lte pulumi.Float64PtrInput `pulumi:"lte"`
}

func (AutomationRuleNumberFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleNumberFilter)(nil)).Elem()
}

func (i AutomationRuleNumberFilterArgs) ToAutomationRuleNumberFilterOutput() AutomationRuleNumberFilterOutput {
	return i.ToAutomationRuleNumberFilterOutputWithContext(context.Background())
}

func (i AutomationRuleNumberFilterArgs) ToAutomationRuleNumberFilterOutputWithContext(ctx context.Context) AutomationRuleNumberFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleNumberFilterOutput)
}

// AutomationRuleNumberFilterArrayInput is an input type that accepts AutomationRuleNumberFilterArray and AutomationRuleNumberFilterArrayOutput values.
// You can construct a concrete instance of `AutomationRuleNumberFilterArrayInput` via:
//
//	AutomationRuleNumberFilterArray{ AutomationRuleNumberFilterArgs{...} }
type AutomationRuleNumberFilterArrayInput interface {
	pulumi.Input

	ToAutomationRuleNumberFilterArrayOutput() AutomationRuleNumberFilterArrayOutput
	ToAutomationRuleNumberFilterArrayOutputWithContext(context.Context) AutomationRuleNumberFilterArrayOutput
}

type AutomationRuleNumberFilterArray []AutomationRuleNumberFilterInput

func (AutomationRuleNumberFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleNumberFilter)(nil)).Elem()
}

func (i AutomationRuleNumberFilterArray) ToAutomationRuleNumberFilterArrayOutput() AutomationRuleNumberFilterArrayOutput {
	return i.ToAutomationRuleNumberFilterArrayOutputWithContext(context.Background())
}

func (i AutomationRuleNumberFilterArray) ToAutomationRuleNumberFilterArrayOutputWithContext(ctx context.Context) AutomationRuleNumberFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleNumberFilterArrayOutput)
}

type AutomationRuleNumberFilterOutput struct{ *pulumi.OutputState }

func (AutomationRuleNumberFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleNumberFilter)(nil)).Elem()
}

func (o AutomationRuleNumberFilterOutput) ToAutomationRuleNumberFilterOutput() AutomationRuleNumberFilterOutput {
	return o
}

func (o AutomationRuleNumberFilterOutput) ToAutomationRuleNumberFilterOutputWithContext(ctx context.Context) AutomationRuleNumberFilterOutput {
	return o
}

func (o AutomationRuleNumberFilterOutput) Eq() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutomationRuleNumberFilter) *float64 { return v.Eq }).(pulumi.Float64PtrOutput)
}

func (o AutomationRuleNumberFilterOutput) Gte() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutomationRuleNumberFilter) *float64 { return v.Gte }).(pulumi.Float64PtrOutput)
}

func (o AutomationRuleNumberFilterOutput) Lte() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutomationRuleNumberFilter) *float64 { return v.Lte }).(pulumi.Float64PtrOutput)
}

type AutomationRuleNumberFilterArrayOutput struct{ *pulumi.OutputState }

func (AutomationRuleNumberFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleNumberFilter)(nil)).Elem()
}

func (o AutomationRuleNumberFilterArrayOutput) ToAutomationRuleNumberFilterArrayOutput() AutomationRuleNumberFilterArrayOutput {
	return o
}

func (o AutomationRuleNumberFilterArrayOutput) ToAutomationRuleNumberFilterArrayOutputWithContext(ctx context.Context) AutomationRuleNumberFilterArrayOutput {
	return o
}

func (o AutomationRuleNumberFilterArrayOutput) Index(i pulumi.IntInput) AutomationRuleNumberFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRuleNumberFilter {
		return vs[0].([]AutomationRuleNumberFilter)[vs[1].(int)]
	}).(AutomationRuleNumberFilterOutput)
}

// Provides details about a list of findings that the current finding relates to.
type AutomationRuleRelatedFinding struct {
	Id string `pulumi:"id"`
	// The Amazon Resource Name (ARN) for the product that generated a related finding.
	ProductArn string `pulumi:"productArn"`
}

// AutomationRuleRelatedFindingInput is an input type that accepts AutomationRuleRelatedFindingArgs and AutomationRuleRelatedFindingOutput values.
// You can construct a concrete instance of `AutomationRuleRelatedFindingInput` via:
//
//	AutomationRuleRelatedFindingArgs{...}
type AutomationRuleRelatedFindingInput interface {
	pulumi.Input

	ToAutomationRuleRelatedFindingOutput() AutomationRuleRelatedFindingOutput
	ToAutomationRuleRelatedFindingOutputWithContext(context.Context) AutomationRuleRelatedFindingOutput
}

// Provides details about a list of findings that the current finding relates to.
type AutomationRuleRelatedFindingArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
	// The Amazon Resource Name (ARN) for the product that generated a related finding.
	ProductArn pulumi.StringInput `pulumi:"productArn"`
}

func (AutomationRuleRelatedFindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleRelatedFinding)(nil)).Elem()
}

func (i AutomationRuleRelatedFindingArgs) ToAutomationRuleRelatedFindingOutput() AutomationRuleRelatedFindingOutput {
	return i.ToAutomationRuleRelatedFindingOutputWithContext(context.Background())
}

func (i AutomationRuleRelatedFindingArgs) ToAutomationRuleRelatedFindingOutputWithContext(ctx context.Context) AutomationRuleRelatedFindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleRelatedFindingOutput)
}

// AutomationRuleRelatedFindingArrayInput is an input type that accepts AutomationRuleRelatedFindingArray and AutomationRuleRelatedFindingArrayOutput values.
// You can construct a concrete instance of `AutomationRuleRelatedFindingArrayInput` via:
//
//	AutomationRuleRelatedFindingArray{ AutomationRuleRelatedFindingArgs{...} }
type AutomationRuleRelatedFindingArrayInput interface {
	pulumi.Input

	ToAutomationRuleRelatedFindingArrayOutput() AutomationRuleRelatedFindingArrayOutput
	ToAutomationRuleRelatedFindingArrayOutputWithContext(context.Context) AutomationRuleRelatedFindingArrayOutput
}

type AutomationRuleRelatedFindingArray []AutomationRuleRelatedFindingInput

func (AutomationRuleRelatedFindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleRelatedFinding)(nil)).Elem()
}

func (i AutomationRuleRelatedFindingArray) ToAutomationRuleRelatedFindingArrayOutput() AutomationRuleRelatedFindingArrayOutput {
	return i.ToAutomationRuleRelatedFindingArrayOutputWithContext(context.Background())
}

func (i AutomationRuleRelatedFindingArray) ToAutomationRuleRelatedFindingArrayOutputWithContext(ctx context.Context) AutomationRuleRelatedFindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleRelatedFindingArrayOutput)
}

// Provides details about a list of findings that the current finding relates to.
type AutomationRuleRelatedFindingOutput struct{ *pulumi.OutputState }

func (AutomationRuleRelatedFindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleRelatedFinding)(nil)).Elem()
}

func (o AutomationRuleRelatedFindingOutput) ToAutomationRuleRelatedFindingOutput() AutomationRuleRelatedFindingOutput {
	return o
}

func (o AutomationRuleRelatedFindingOutput) ToAutomationRuleRelatedFindingOutputWithContext(ctx context.Context) AutomationRuleRelatedFindingOutput {
	return o
}

func (o AutomationRuleRelatedFindingOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleRelatedFinding) string { return v.Id }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) for the product that generated a related finding.
func (o AutomationRuleRelatedFindingOutput) ProductArn() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleRelatedFinding) string { return v.ProductArn }).(pulumi.StringOutput)
}

type AutomationRuleRelatedFindingArrayOutput struct{ *pulumi.OutputState }

func (AutomationRuleRelatedFindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleRelatedFinding)(nil)).Elem()
}

func (o AutomationRuleRelatedFindingArrayOutput) ToAutomationRuleRelatedFindingArrayOutput() AutomationRuleRelatedFindingArrayOutput {
	return o
}

func (o AutomationRuleRelatedFindingArrayOutput) ToAutomationRuleRelatedFindingArrayOutputWithContext(ctx context.Context) AutomationRuleRelatedFindingArrayOutput {
	return o
}

func (o AutomationRuleRelatedFindingArrayOutput) Index(i pulumi.IntInput) AutomationRuleRelatedFindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRuleRelatedFinding {
		return vs[0].([]AutomationRuleRelatedFinding)[vs[1].(int)]
	}).(AutomationRuleRelatedFindingOutput)
}

type AutomationRuleSeverityUpdate struct {
	Label      *AutomationRuleSeverityUpdateLabel `pulumi:"label"`
	Normalized *int                               `pulumi:"normalized"`
	Product    *float64                           `pulumi:"product"`
}

// AutomationRuleSeverityUpdateInput is an input type that accepts AutomationRuleSeverityUpdateArgs and AutomationRuleSeverityUpdateOutput values.
// You can construct a concrete instance of `AutomationRuleSeverityUpdateInput` via:
//
//	AutomationRuleSeverityUpdateArgs{...}
type AutomationRuleSeverityUpdateInput interface {
	pulumi.Input

	ToAutomationRuleSeverityUpdateOutput() AutomationRuleSeverityUpdateOutput
	ToAutomationRuleSeverityUpdateOutputWithContext(context.Context) AutomationRuleSeverityUpdateOutput
}

type AutomationRuleSeverityUpdateArgs struct {
	Label      AutomationRuleSeverityUpdateLabelPtrInput `pulumi:"label"`
	Normalized pulumi.IntPtrInput                        `pulumi:"normalized"`
	Product    pulumi.Float64PtrInput                    `pulumi:"product"`
}

func (AutomationRuleSeverityUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleSeverityUpdate)(nil)).Elem()
}

func (i AutomationRuleSeverityUpdateArgs) ToAutomationRuleSeverityUpdateOutput() AutomationRuleSeverityUpdateOutput {
	return i.ToAutomationRuleSeverityUpdateOutputWithContext(context.Background())
}

func (i AutomationRuleSeverityUpdateArgs) ToAutomationRuleSeverityUpdateOutputWithContext(ctx context.Context) AutomationRuleSeverityUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleSeverityUpdateOutput)
}

func (i AutomationRuleSeverityUpdateArgs) ToAutomationRuleSeverityUpdatePtrOutput() AutomationRuleSeverityUpdatePtrOutput {
	return i.ToAutomationRuleSeverityUpdatePtrOutputWithContext(context.Background())
}

func (i AutomationRuleSeverityUpdateArgs) ToAutomationRuleSeverityUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleSeverityUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleSeverityUpdateOutput).ToAutomationRuleSeverityUpdatePtrOutputWithContext(ctx)
}

// AutomationRuleSeverityUpdatePtrInput is an input type that accepts AutomationRuleSeverityUpdateArgs, AutomationRuleSeverityUpdatePtr and AutomationRuleSeverityUpdatePtrOutput values.
// You can construct a concrete instance of `AutomationRuleSeverityUpdatePtrInput` via:
//
//	        AutomationRuleSeverityUpdateArgs{...}
//
//	or:
//
//	        nil
type AutomationRuleSeverityUpdatePtrInput interface {
	pulumi.Input

	ToAutomationRuleSeverityUpdatePtrOutput() AutomationRuleSeverityUpdatePtrOutput
	ToAutomationRuleSeverityUpdatePtrOutputWithContext(context.Context) AutomationRuleSeverityUpdatePtrOutput
}

type automationRuleSeverityUpdatePtrType AutomationRuleSeverityUpdateArgs

func AutomationRuleSeverityUpdatePtr(v *AutomationRuleSeverityUpdateArgs) AutomationRuleSeverityUpdatePtrInput {
	return (*automationRuleSeverityUpdatePtrType)(v)
}

func (*automationRuleSeverityUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleSeverityUpdate)(nil)).Elem()
}

func (i *automationRuleSeverityUpdatePtrType) ToAutomationRuleSeverityUpdatePtrOutput() AutomationRuleSeverityUpdatePtrOutput {
	return i.ToAutomationRuleSeverityUpdatePtrOutputWithContext(context.Background())
}

func (i *automationRuleSeverityUpdatePtrType) ToAutomationRuleSeverityUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleSeverityUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleSeverityUpdatePtrOutput)
}

type AutomationRuleSeverityUpdateOutput struct{ *pulumi.OutputState }

func (AutomationRuleSeverityUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleSeverityUpdate)(nil)).Elem()
}

func (o AutomationRuleSeverityUpdateOutput) ToAutomationRuleSeverityUpdateOutput() AutomationRuleSeverityUpdateOutput {
	return o
}

func (o AutomationRuleSeverityUpdateOutput) ToAutomationRuleSeverityUpdateOutputWithContext(ctx context.Context) AutomationRuleSeverityUpdateOutput {
	return o
}

func (o AutomationRuleSeverityUpdateOutput) ToAutomationRuleSeverityUpdatePtrOutput() AutomationRuleSeverityUpdatePtrOutput {
	return o.ToAutomationRuleSeverityUpdatePtrOutputWithContext(context.Background())
}

func (o AutomationRuleSeverityUpdateOutput) ToAutomationRuleSeverityUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleSeverityUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRuleSeverityUpdate) *AutomationRuleSeverityUpdate {
		return &v
	}).(AutomationRuleSeverityUpdatePtrOutput)
}

func (o AutomationRuleSeverityUpdateOutput) Label() AutomationRuleSeverityUpdateLabelPtrOutput {
	return o.ApplyT(func(v AutomationRuleSeverityUpdate) *AutomationRuleSeverityUpdateLabel { return v.Label }).(AutomationRuleSeverityUpdateLabelPtrOutput)
}

func (o AutomationRuleSeverityUpdateOutput) Normalized() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutomationRuleSeverityUpdate) *int { return v.Normalized }).(pulumi.IntPtrOutput)
}

func (o AutomationRuleSeverityUpdateOutput) Product() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutomationRuleSeverityUpdate) *float64 { return v.Product }).(pulumi.Float64PtrOutput)
}

type AutomationRuleSeverityUpdatePtrOutput struct{ *pulumi.OutputState }

func (AutomationRuleSeverityUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleSeverityUpdate)(nil)).Elem()
}

func (o AutomationRuleSeverityUpdatePtrOutput) ToAutomationRuleSeverityUpdatePtrOutput() AutomationRuleSeverityUpdatePtrOutput {
	return o
}

func (o AutomationRuleSeverityUpdatePtrOutput) ToAutomationRuleSeverityUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleSeverityUpdatePtrOutput {
	return o
}

func (o AutomationRuleSeverityUpdatePtrOutput) Elem() AutomationRuleSeverityUpdateOutput {
	return o.ApplyT(func(v *AutomationRuleSeverityUpdate) AutomationRuleSeverityUpdate {
		if v != nil {
			return *v
		}
		var ret AutomationRuleSeverityUpdate
		return ret
	}).(AutomationRuleSeverityUpdateOutput)
}

func (o AutomationRuleSeverityUpdatePtrOutput) Label() AutomationRuleSeverityUpdateLabelPtrOutput {
	return o.ApplyT(func(v *AutomationRuleSeverityUpdate) *AutomationRuleSeverityUpdateLabel {
		if v == nil {
			return nil
		}
		return v.Label
	}).(AutomationRuleSeverityUpdateLabelPtrOutput)
}

func (o AutomationRuleSeverityUpdatePtrOutput) Normalized() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutomationRuleSeverityUpdate) *int {
		if v == nil {
			return nil
		}
		return v.Normalized
	}).(pulumi.IntPtrOutput)
}

func (o AutomationRuleSeverityUpdatePtrOutput) Product() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutomationRuleSeverityUpdate) *float64 {
		if v == nil {
			return nil
		}
		return v.Product
	}).(pulumi.Float64PtrOutput)
}

type AutomationRuleStringFilter struct {
	Comparison AutomationRuleStringFilterComparison `pulumi:"comparison"`
	Value      string                               `pulumi:"value"`
}

// AutomationRuleStringFilterInput is an input type that accepts AutomationRuleStringFilterArgs and AutomationRuleStringFilterOutput values.
// You can construct a concrete instance of `AutomationRuleStringFilterInput` via:
//
//	AutomationRuleStringFilterArgs{...}
type AutomationRuleStringFilterInput interface {
	pulumi.Input

	ToAutomationRuleStringFilterOutput() AutomationRuleStringFilterOutput
	ToAutomationRuleStringFilterOutputWithContext(context.Context) AutomationRuleStringFilterOutput
}

type AutomationRuleStringFilterArgs struct {
	Comparison AutomationRuleStringFilterComparisonInput `pulumi:"comparison"`
	Value      pulumi.StringInput                        `pulumi:"value"`
}

func (AutomationRuleStringFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleStringFilter)(nil)).Elem()
}

func (i AutomationRuleStringFilterArgs) ToAutomationRuleStringFilterOutput() AutomationRuleStringFilterOutput {
	return i.ToAutomationRuleStringFilterOutputWithContext(context.Background())
}

func (i AutomationRuleStringFilterArgs) ToAutomationRuleStringFilterOutputWithContext(ctx context.Context) AutomationRuleStringFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleStringFilterOutput)
}

// AutomationRuleStringFilterArrayInput is an input type that accepts AutomationRuleStringFilterArray and AutomationRuleStringFilterArrayOutput values.
// You can construct a concrete instance of `AutomationRuleStringFilterArrayInput` via:
//
//	AutomationRuleStringFilterArray{ AutomationRuleStringFilterArgs{...} }
type AutomationRuleStringFilterArrayInput interface {
	pulumi.Input

	ToAutomationRuleStringFilterArrayOutput() AutomationRuleStringFilterArrayOutput
	ToAutomationRuleStringFilterArrayOutputWithContext(context.Context) AutomationRuleStringFilterArrayOutput
}

type AutomationRuleStringFilterArray []AutomationRuleStringFilterInput

func (AutomationRuleStringFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleStringFilter)(nil)).Elem()
}

func (i AutomationRuleStringFilterArray) ToAutomationRuleStringFilterArrayOutput() AutomationRuleStringFilterArrayOutput {
	return i.ToAutomationRuleStringFilterArrayOutputWithContext(context.Background())
}

func (i AutomationRuleStringFilterArray) ToAutomationRuleStringFilterArrayOutputWithContext(ctx context.Context) AutomationRuleStringFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleStringFilterArrayOutput)
}

type AutomationRuleStringFilterOutput struct{ *pulumi.OutputState }

func (AutomationRuleStringFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleStringFilter)(nil)).Elem()
}

func (o AutomationRuleStringFilterOutput) ToAutomationRuleStringFilterOutput() AutomationRuleStringFilterOutput {
	return o
}

func (o AutomationRuleStringFilterOutput) ToAutomationRuleStringFilterOutputWithContext(ctx context.Context) AutomationRuleStringFilterOutput {
	return o
}

func (o AutomationRuleStringFilterOutput) Comparison() AutomationRuleStringFilterComparisonOutput {
	return o.ApplyT(func(v AutomationRuleStringFilter) AutomationRuleStringFilterComparison { return v.Comparison }).(AutomationRuleStringFilterComparisonOutput)
}

func (o AutomationRuleStringFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleStringFilter) string { return v.Value }).(pulumi.StringOutput)
}

type AutomationRuleStringFilterArrayOutput struct{ *pulumi.OutputState }

func (AutomationRuleStringFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleStringFilter)(nil)).Elem()
}

func (o AutomationRuleStringFilterArrayOutput) ToAutomationRuleStringFilterArrayOutput() AutomationRuleStringFilterArrayOutput {
	return o
}

func (o AutomationRuleStringFilterArrayOutput) ToAutomationRuleStringFilterArrayOutputWithContext(ctx context.Context) AutomationRuleStringFilterArrayOutput {
	return o
}

func (o AutomationRuleStringFilterArrayOutput) Index(i pulumi.IntInput) AutomationRuleStringFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRuleStringFilter {
		return vs[0].([]AutomationRuleStringFilter)[vs[1].(int)]
	}).(AutomationRuleStringFilterOutput)
}

type AutomationRuleWorkflowUpdate struct {
	Status AutomationRuleWorkflowUpdateStatus `pulumi:"status"`
}

// AutomationRuleWorkflowUpdateInput is an input type that accepts AutomationRuleWorkflowUpdateArgs and AutomationRuleWorkflowUpdateOutput values.
// You can construct a concrete instance of `AutomationRuleWorkflowUpdateInput` via:
//
//	AutomationRuleWorkflowUpdateArgs{...}
type AutomationRuleWorkflowUpdateInput interface {
	pulumi.Input

	ToAutomationRuleWorkflowUpdateOutput() AutomationRuleWorkflowUpdateOutput
	ToAutomationRuleWorkflowUpdateOutputWithContext(context.Context) AutomationRuleWorkflowUpdateOutput
}

type AutomationRuleWorkflowUpdateArgs struct {
	Status AutomationRuleWorkflowUpdateStatusInput `pulumi:"status"`
}

func (AutomationRuleWorkflowUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleWorkflowUpdate)(nil)).Elem()
}

func (i AutomationRuleWorkflowUpdateArgs) ToAutomationRuleWorkflowUpdateOutput() AutomationRuleWorkflowUpdateOutput {
	return i.ToAutomationRuleWorkflowUpdateOutputWithContext(context.Background())
}

func (i AutomationRuleWorkflowUpdateArgs) ToAutomationRuleWorkflowUpdateOutputWithContext(ctx context.Context) AutomationRuleWorkflowUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleWorkflowUpdateOutput)
}

func (i AutomationRuleWorkflowUpdateArgs) ToAutomationRuleWorkflowUpdatePtrOutput() AutomationRuleWorkflowUpdatePtrOutput {
	return i.ToAutomationRuleWorkflowUpdatePtrOutputWithContext(context.Background())
}

func (i AutomationRuleWorkflowUpdateArgs) ToAutomationRuleWorkflowUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleWorkflowUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleWorkflowUpdateOutput).ToAutomationRuleWorkflowUpdatePtrOutputWithContext(ctx)
}

// AutomationRuleWorkflowUpdatePtrInput is an input type that accepts AutomationRuleWorkflowUpdateArgs, AutomationRuleWorkflowUpdatePtr and AutomationRuleWorkflowUpdatePtrOutput values.
// You can construct a concrete instance of `AutomationRuleWorkflowUpdatePtrInput` via:
//
//	        AutomationRuleWorkflowUpdateArgs{...}
//
//	or:
//
//	        nil
type AutomationRuleWorkflowUpdatePtrInput interface {
	pulumi.Input

	ToAutomationRuleWorkflowUpdatePtrOutput() AutomationRuleWorkflowUpdatePtrOutput
	ToAutomationRuleWorkflowUpdatePtrOutputWithContext(context.Context) AutomationRuleWorkflowUpdatePtrOutput
}

type automationRuleWorkflowUpdatePtrType AutomationRuleWorkflowUpdateArgs

func AutomationRuleWorkflowUpdatePtr(v *AutomationRuleWorkflowUpdateArgs) AutomationRuleWorkflowUpdatePtrInput {
	return (*automationRuleWorkflowUpdatePtrType)(v)
}

func (*automationRuleWorkflowUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleWorkflowUpdate)(nil)).Elem()
}

func (i *automationRuleWorkflowUpdatePtrType) ToAutomationRuleWorkflowUpdatePtrOutput() AutomationRuleWorkflowUpdatePtrOutput {
	return i.ToAutomationRuleWorkflowUpdatePtrOutputWithContext(context.Background())
}

func (i *automationRuleWorkflowUpdatePtrType) ToAutomationRuleWorkflowUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleWorkflowUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleWorkflowUpdatePtrOutput)
}

type AutomationRuleWorkflowUpdateOutput struct{ *pulumi.OutputState }

func (AutomationRuleWorkflowUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleWorkflowUpdate)(nil)).Elem()
}

func (o AutomationRuleWorkflowUpdateOutput) ToAutomationRuleWorkflowUpdateOutput() AutomationRuleWorkflowUpdateOutput {
	return o
}

func (o AutomationRuleWorkflowUpdateOutput) ToAutomationRuleWorkflowUpdateOutputWithContext(ctx context.Context) AutomationRuleWorkflowUpdateOutput {
	return o
}

func (o AutomationRuleWorkflowUpdateOutput) ToAutomationRuleWorkflowUpdatePtrOutput() AutomationRuleWorkflowUpdatePtrOutput {
	return o.ToAutomationRuleWorkflowUpdatePtrOutputWithContext(context.Background())
}

func (o AutomationRuleWorkflowUpdateOutput) ToAutomationRuleWorkflowUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleWorkflowUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRuleWorkflowUpdate) *AutomationRuleWorkflowUpdate {
		return &v
	}).(AutomationRuleWorkflowUpdatePtrOutput)
}

func (o AutomationRuleWorkflowUpdateOutput) Status() AutomationRuleWorkflowUpdateStatusOutput {
	return o.ApplyT(func(v AutomationRuleWorkflowUpdate) AutomationRuleWorkflowUpdateStatus { return v.Status }).(AutomationRuleWorkflowUpdateStatusOutput)
}

type AutomationRuleWorkflowUpdatePtrOutput struct{ *pulumi.OutputState }

func (AutomationRuleWorkflowUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleWorkflowUpdate)(nil)).Elem()
}

func (o AutomationRuleWorkflowUpdatePtrOutput) ToAutomationRuleWorkflowUpdatePtrOutput() AutomationRuleWorkflowUpdatePtrOutput {
	return o
}

func (o AutomationRuleWorkflowUpdatePtrOutput) ToAutomationRuleWorkflowUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleWorkflowUpdatePtrOutput {
	return o
}

func (o AutomationRuleWorkflowUpdatePtrOutput) Elem() AutomationRuleWorkflowUpdateOutput {
	return o.ApplyT(func(v *AutomationRuleWorkflowUpdate) AutomationRuleWorkflowUpdate {
		if v != nil {
			return *v
		}
		var ret AutomationRuleWorkflowUpdate
		return ret
	}).(AutomationRuleWorkflowUpdateOutput)
}

func (o AutomationRuleWorkflowUpdatePtrOutput) Status() AutomationRuleWorkflowUpdateStatusPtrOutput {
	return o.ApplyT(func(v *AutomationRuleWorkflowUpdate) *AutomationRuleWorkflowUpdateStatus {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(AutomationRuleWorkflowUpdateStatusPtrOutput)
}

type AutomationRulesAction struct {
	FindingFieldsUpdate AutomationRulesFindingFieldsUpdate `pulumi:"findingFieldsUpdate"`
	Type                AutomationRulesActionType          `pulumi:"type"`
}

// AutomationRulesActionInput is an input type that accepts AutomationRulesActionArgs and AutomationRulesActionOutput values.
// You can construct a concrete instance of `AutomationRulesActionInput` via:
//
//	AutomationRulesActionArgs{...}
type AutomationRulesActionInput interface {
	pulumi.Input

	ToAutomationRulesActionOutput() AutomationRulesActionOutput
	ToAutomationRulesActionOutputWithContext(context.Context) AutomationRulesActionOutput
}

type AutomationRulesActionArgs struct {
	FindingFieldsUpdate AutomationRulesFindingFieldsUpdateInput `pulumi:"findingFieldsUpdate"`
	Type                AutomationRulesActionTypeInput          `pulumi:"type"`
}

func (AutomationRulesActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulesAction)(nil)).Elem()
}

func (i AutomationRulesActionArgs) ToAutomationRulesActionOutput() AutomationRulesActionOutput {
	return i.ToAutomationRulesActionOutputWithContext(context.Background())
}

func (i AutomationRulesActionArgs) ToAutomationRulesActionOutputWithContext(ctx context.Context) AutomationRulesActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulesActionOutput)
}

// AutomationRulesActionArrayInput is an input type that accepts AutomationRulesActionArray and AutomationRulesActionArrayOutput values.
// You can construct a concrete instance of `AutomationRulesActionArrayInput` via:
//
//	AutomationRulesActionArray{ AutomationRulesActionArgs{...} }
type AutomationRulesActionArrayInput interface {
	pulumi.Input

	ToAutomationRulesActionArrayOutput() AutomationRulesActionArrayOutput
	ToAutomationRulesActionArrayOutputWithContext(context.Context) AutomationRulesActionArrayOutput
}

type AutomationRulesActionArray []AutomationRulesActionInput

func (AutomationRulesActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRulesAction)(nil)).Elem()
}

func (i AutomationRulesActionArray) ToAutomationRulesActionArrayOutput() AutomationRulesActionArrayOutput {
	return i.ToAutomationRulesActionArrayOutputWithContext(context.Background())
}

func (i AutomationRulesActionArray) ToAutomationRulesActionArrayOutputWithContext(ctx context.Context) AutomationRulesActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulesActionArrayOutput)
}

type AutomationRulesActionOutput struct{ *pulumi.OutputState }

func (AutomationRulesActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulesAction)(nil)).Elem()
}

func (o AutomationRulesActionOutput) ToAutomationRulesActionOutput() AutomationRulesActionOutput {
	return o
}

func (o AutomationRulesActionOutput) ToAutomationRulesActionOutputWithContext(ctx context.Context) AutomationRulesActionOutput {
	return o
}

func (o AutomationRulesActionOutput) FindingFieldsUpdate() AutomationRulesFindingFieldsUpdateOutput {
	return o.ApplyT(func(v AutomationRulesAction) AutomationRulesFindingFieldsUpdate { return v.FindingFieldsUpdate }).(AutomationRulesFindingFieldsUpdateOutput)
}

func (o AutomationRulesActionOutput) Type() AutomationRulesActionTypeOutput {
	return o.ApplyT(func(v AutomationRulesAction) AutomationRulesActionType { return v.Type }).(AutomationRulesActionTypeOutput)
}

type AutomationRulesActionArrayOutput struct{ *pulumi.OutputState }

func (AutomationRulesActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRulesAction)(nil)).Elem()
}

func (o AutomationRulesActionArrayOutput) ToAutomationRulesActionArrayOutput() AutomationRulesActionArrayOutput {
	return o
}

func (o AutomationRulesActionArrayOutput) ToAutomationRulesActionArrayOutputWithContext(ctx context.Context) AutomationRulesActionArrayOutput {
	return o
}

func (o AutomationRulesActionArrayOutput) Index(i pulumi.IntInput) AutomationRulesActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRulesAction {
		return vs[0].([]AutomationRulesAction)[vs[1].(int)]
	}).(AutomationRulesActionOutput)
}

// The rule action will update the “Note“ field of a finding.
type AutomationRulesFindingFieldsUpdate struct {
	Confidence  *int `pulumi:"confidence"`
	Criticality *int `pulumi:"criticality"`
	// The rule action will update the ``Note`` field of a finding.
	Note *AutomationRuleNoteUpdate `pulumi:"note"`
	// The rule action will update the ``RelatedFindings`` field of a finding.
	RelatedFindings []AutomationRuleRelatedFinding `pulumi:"relatedFindings"`
	// The rule action will update the ``Severity`` field of a finding.
	Severity          *AutomationRuleSeverityUpdate                        `pulumi:"severity"`
	Types             []string                                             `pulumi:"types"`
	UserDefinedFields map[string]string                                    `pulumi:"userDefinedFields"`
	VerificationState *AutomationRulesFindingFieldsUpdateVerificationState `pulumi:"verificationState"`
	// The rule action will update the ``Workflow`` field of a finding.
	Workflow *AutomationRuleWorkflowUpdate `pulumi:"workflow"`
}

// AutomationRulesFindingFieldsUpdateInput is an input type that accepts AutomationRulesFindingFieldsUpdateArgs and AutomationRulesFindingFieldsUpdateOutput values.
// You can construct a concrete instance of `AutomationRulesFindingFieldsUpdateInput` via:
//
//	AutomationRulesFindingFieldsUpdateArgs{...}
type AutomationRulesFindingFieldsUpdateInput interface {
	pulumi.Input

	ToAutomationRulesFindingFieldsUpdateOutput() AutomationRulesFindingFieldsUpdateOutput
	ToAutomationRulesFindingFieldsUpdateOutputWithContext(context.Context) AutomationRulesFindingFieldsUpdateOutput
}

// The rule action will update the “Note“ field of a finding.
type AutomationRulesFindingFieldsUpdateArgs struct {
	Confidence  pulumi.IntPtrInput `pulumi:"confidence"`
	Criticality pulumi.IntPtrInput `pulumi:"criticality"`
	// The rule action will update the ``Note`` field of a finding.
	Note AutomationRuleNoteUpdatePtrInput `pulumi:"note"`
	// The rule action will update the ``RelatedFindings`` field of a finding.
	RelatedFindings AutomationRuleRelatedFindingArrayInput `pulumi:"relatedFindings"`
	// The rule action will update the ``Severity`` field of a finding.
	Severity          AutomationRuleSeverityUpdatePtrInput                        `pulumi:"severity"`
	Types             pulumi.StringArrayInput                                     `pulumi:"types"`
	UserDefinedFields pulumi.StringMapInput                                       `pulumi:"userDefinedFields"`
	VerificationState AutomationRulesFindingFieldsUpdateVerificationStatePtrInput `pulumi:"verificationState"`
	// The rule action will update the ``Workflow`` field of a finding.
	Workflow AutomationRuleWorkflowUpdatePtrInput `pulumi:"workflow"`
}

func (AutomationRulesFindingFieldsUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulesFindingFieldsUpdate)(nil)).Elem()
}

func (i AutomationRulesFindingFieldsUpdateArgs) ToAutomationRulesFindingFieldsUpdateOutput() AutomationRulesFindingFieldsUpdateOutput {
	return i.ToAutomationRulesFindingFieldsUpdateOutputWithContext(context.Background())
}

func (i AutomationRulesFindingFieldsUpdateArgs) ToAutomationRulesFindingFieldsUpdateOutputWithContext(ctx context.Context) AutomationRulesFindingFieldsUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulesFindingFieldsUpdateOutput)
}

// The rule action will update the “Note“ field of a finding.
type AutomationRulesFindingFieldsUpdateOutput struct{ *pulumi.OutputState }

func (AutomationRulesFindingFieldsUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulesFindingFieldsUpdate)(nil)).Elem()
}

func (o AutomationRulesFindingFieldsUpdateOutput) ToAutomationRulesFindingFieldsUpdateOutput() AutomationRulesFindingFieldsUpdateOutput {
	return o
}

func (o AutomationRulesFindingFieldsUpdateOutput) ToAutomationRulesFindingFieldsUpdateOutputWithContext(ctx context.Context) AutomationRulesFindingFieldsUpdateOutput {
	return o
}

func (o AutomationRulesFindingFieldsUpdateOutput) Confidence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutomationRulesFindingFieldsUpdate) *int { return v.Confidence }).(pulumi.IntPtrOutput)
}

func (o AutomationRulesFindingFieldsUpdateOutput) Criticality() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutomationRulesFindingFieldsUpdate) *int { return v.Criticality }).(pulumi.IntPtrOutput)
}

// The rule action will update the “Note“ field of a finding.
func (o AutomationRulesFindingFieldsUpdateOutput) Note() AutomationRuleNoteUpdatePtrOutput {
	return o.ApplyT(func(v AutomationRulesFindingFieldsUpdate) *AutomationRuleNoteUpdate { return v.Note }).(AutomationRuleNoteUpdatePtrOutput)
}

// The rule action will update the “RelatedFindings“ field of a finding.
func (o AutomationRulesFindingFieldsUpdateOutput) RelatedFindings() AutomationRuleRelatedFindingArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFieldsUpdate) []AutomationRuleRelatedFinding { return v.RelatedFindings }).(AutomationRuleRelatedFindingArrayOutput)
}

// The rule action will update the “Severity“ field of a finding.
func (o AutomationRulesFindingFieldsUpdateOutput) Severity() AutomationRuleSeverityUpdatePtrOutput {
	return o.ApplyT(func(v AutomationRulesFindingFieldsUpdate) *AutomationRuleSeverityUpdate { return v.Severity }).(AutomationRuleSeverityUpdatePtrOutput)
}

func (o AutomationRulesFindingFieldsUpdateOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFieldsUpdate) []string { return v.Types }).(pulumi.StringArrayOutput)
}

func (o AutomationRulesFindingFieldsUpdateOutput) UserDefinedFields() pulumi.StringMapOutput {
	return o.ApplyT(func(v AutomationRulesFindingFieldsUpdate) map[string]string { return v.UserDefinedFields }).(pulumi.StringMapOutput)
}

func (o AutomationRulesFindingFieldsUpdateOutput) VerificationState() AutomationRulesFindingFieldsUpdateVerificationStatePtrOutput {
	return o.ApplyT(func(v AutomationRulesFindingFieldsUpdate) *AutomationRulesFindingFieldsUpdateVerificationState {
		return v.VerificationState
	}).(AutomationRulesFindingFieldsUpdateVerificationStatePtrOutput)
}

// The rule action will update the “Workflow“ field of a finding.
func (o AutomationRulesFindingFieldsUpdateOutput) Workflow() AutomationRuleWorkflowUpdatePtrOutput {
	return o.ApplyT(func(v AutomationRulesFindingFieldsUpdate) *AutomationRuleWorkflowUpdate { return v.Workflow }).(AutomationRuleWorkflowUpdatePtrOutput)
}

type AutomationRulesFindingFilters struct {
	AwsAccountId                    []AutomationRuleStringFilter `pulumi:"awsAccountId"`
	CompanyName                     []AutomationRuleStringFilter `pulumi:"companyName"`
	ComplianceAssociatedStandardsId []AutomationRuleStringFilter `pulumi:"complianceAssociatedStandardsId"`
	ComplianceSecurityControlId     []AutomationRuleStringFilter `pulumi:"complianceSecurityControlId"`
	ComplianceStatus                []AutomationRuleStringFilter `pulumi:"complianceStatus"`
	Confidence                      []AutomationRuleNumberFilter `pulumi:"confidence"`
	CreatedAt                       []AutomationRuleDateFilter   `pulumi:"createdAt"`
	Criticality                     []AutomationRuleNumberFilter `pulumi:"criticality"`
	Description                     []AutomationRuleStringFilter `pulumi:"description"`
	FirstObservedAt                 []AutomationRuleDateFilter   `pulumi:"firstObservedAt"`
	GeneratorId                     []AutomationRuleStringFilter `pulumi:"generatorId"`
	Id                              []AutomationRuleStringFilter `pulumi:"id"`
	LastObservedAt                  []AutomationRuleDateFilter   `pulumi:"lastObservedAt"`
	NoteText                        []AutomationRuleStringFilter `pulumi:"noteText"`
	NoteUpdatedAt                   []AutomationRuleDateFilter   `pulumi:"noteUpdatedAt"`
	NoteUpdatedBy                   []AutomationRuleStringFilter `pulumi:"noteUpdatedBy"`
	ProductArn                      []AutomationRuleStringFilter `pulumi:"productArn"`
	ProductName                     []AutomationRuleStringFilter `pulumi:"productName"`
	RecordState                     []AutomationRuleStringFilter `pulumi:"recordState"`
	RelatedFindingsId               []AutomationRuleStringFilter `pulumi:"relatedFindingsId"`
	RelatedFindingsProductArn       []AutomationRuleStringFilter `pulumi:"relatedFindingsProductArn"`
	ResourceDetailsOther            []AutomationRuleMapFilter    `pulumi:"resourceDetailsOther"`
	ResourceId                      []AutomationRuleStringFilter `pulumi:"resourceId"`
	ResourcePartition               []AutomationRuleStringFilter `pulumi:"resourcePartition"`
	ResourceRegion                  []AutomationRuleStringFilter `pulumi:"resourceRegion"`
	ResourceTags                    []AutomationRuleMapFilter    `pulumi:"resourceTags"`
	ResourceType                    []AutomationRuleStringFilter `pulumi:"resourceType"`
	SeverityLabel                   []AutomationRuleStringFilter `pulumi:"severityLabel"`
	SourceUrl                       []AutomationRuleStringFilter `pulumi:"sourceUrl"`
	Title                           []AutomationRuleStringFilter `pulumi:"title"`
	Type                            []AutomationRuleStringFilter `pulumi:"type"`
	UpdatedAt                       []AutomationRuleDateFilter   `pulumi:"updatedAt"`
	UserDefinedFields               []AutomationRuleMapFilter    `pulumi:"userDefinedFields"`
	VerificationState               []AutomationRuleStringFilter `pulumi:"verificationState"`
	WorkflowStatus                  []AutomationRuleStringFilter `pulumi:"workflowStatus"`
}

// AutomationRulesFindingFiltersInput is an input type that accepts AutomationRulesFindingFiltersArgs and AutomationRulesFindingFiltersOutput values.
// You can construct a concrete instance of `AutomationRulesFindingFiltersInput` via:
//
//	AutomationRulesFindingFiltersArgs{...}
type AutomationRulesFindingFiltersInput interface {
	pulumi.Input

	ToAutomationRulesFindingFiltersOutput() AutomationRulesFindingFiltersOutput
	ToAutomationRulesFindingFiltersOutputWithContext(context.Context) AutomationRulesFindingFiltersOutput
}

type AutomationRulesFindingFiltersArgs struct {
	AwsAccountId                    AutomationRuleStringFilterArrayInput `pulumi:"awsAccountId"`
	CompanyName                     AutomationRuleStringFilterArrayInput `pulumi:"companyName"`
	ComplianceAssociatedStandardsId AutomationRuleStringFilterArrayInput `pulumi:"complianceAssociatedStandardsId"`
	ComplianceSecurityControlId     AutomationRuleStringFilterArrayInput `pulumi:"complianceSecurityControlId"`
	ComplianceStatus                AutomationRuleStringFilterArrayInput `pulumi:"complianceStatus"`
	Confidence                      AutomationRuleNumberFilterArrayInput `pulumi:"confidence"`
	CreatedAt                       AutomationRuleDateFilterArrayInput   `pulumi:"createdAt"`
	Criticality                     AutomationRuleNumberFilterArrayInput `pulumi:"criticality"`
	Description                     AutomationRuleStringFilterArrayInput `pulumi:"description"`
	FirstObservedAt                 AutomationRuleDateFilterArrayInput   `pulumi:"firstObservedAt"`
	GeneratorId                     AutomationRuleStringFilterArrayInput `pulumi:"generatorId"`
	Id                              AutomationRuleStringFilterArrayInput `pulumi:"id"`
	LastObservedAt                  AutomationRuleDateFilterArrayInput   `pulumi:"lastObservedAt"`
	NoteText                        AutomationRuleStringFilterArrayInput `pulumi:"noteText"`
	NoteUpdatedAt                   AutomationRuleDateFilterArrayInput   `pulumi:"noteUpdatedAt"`
	NoteUpdatedBy                   AutomationRuleStringFilterArrayInput `pulumi:"noteUpdatedBy"`
	ProductArn                      AutomationRuleStringFilterArrayInput `pulumi:"productArn"`
	ProductName                     AutomationRuleStringFilterArrayInput `pulumi:"productName"`
	RecordState                     AutomationRuleStringFilterArrayInput `pulumi:"recordState"`
	RelatedFindingsId               AutomationRuleStringFilterArrayInput `pulumi:"relatedFindingsId"`
	RelatedFindingsProductArn       AutomationRuleStringFilterArrayInput `pulumi:"relatedFindingsProductArn"`
	ResourceDetailsOther            AutomationRuleMapFilterArrayInput    `pulumi:"resourceDetailsOther"`
	ResourceId                      AutomationRuleStringFilterArrayInput `pulumi:"resourceId"`
	ResourcePartition               AutomationRuleStringFilterArrayInput `pulumi:"resourcePartition"`
	ResourceRegion                  AutomationRuleStringFilterArrayInput `pulumi:"resourceRegion"`
	ResourceTags                    AutomationRuleMapFilterArrayInput    `pulumi:"resourceTags"`
	ResourceType                    AutomationRuleStringFilterArrayInput `pulumi:"resourceType"`
	SeverityLabel                   AutomationRuleStringFilterArrayInput `pulumi:"severityLabel"`
	SourceUrl                       AutomationRuleStringFilterArrayInput `pulumi:"sourceUrl"`
	Title                           AutomationRuleStringFilterArrayInput `pulumi:"title"`
	Type                            AutomationRuleStringFilterArrayInput `pulumi:"type"`
	UpdatedAt                       AutomationRuleDateFilterArrayInput   `pulumi:"updatedAt"`
	UserDefinedFields               AutomationRuleMapFilterArrayInput    `pulumi:"userDefinedFields"`
	VerificationState               AutomationRuleStringFilterArrayInput `pulumi:"verificationState"`
	WorkflowStatus                  AutomationRuleStringFilterArrayInput `pulumi:"workflowStatus"`
}

func (AutomationRulesFindingFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulesFindingFilters)(nil)).Elem()
}

func (i AutomationRulesFindingFiltersArgs) ToAutomationRulesFindingFiltersOutput() AutomationRulesFindingFiltersOutput {
	return i.ToAutomationRulesFindingFiltersOutputWithContext(context.Background())
}

func (i AutomationRulesFindingFiltersArgs) ToAutomationRulesFindingFiltersOutputWithContext(ctx context.Context) AutomationRulesFindingFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulesFindingFiltersOutput)
}

func (i AutomationRulesFindingFiltersArgs) ToAutomationRulesFindingFiltersPtrOutput() AutomationRulesFindingFiltersPtrOutput {
	return i.ToAutomationRulesFindingFiltersPtrOutputWithContext(context.Background())
}

func (i AutomationRulesFindingFiltersArgs) ToAutomationRulesFindingFiltersPtrOutputWithContext(ctx context.Context) AutomationRulesFindingFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulesFindingFiltersOutput).ToAutomationRulesFindingFiltersPtrOutputWithContext(ctx)
}

// AutomationRulesFindingFiltersPtrInput is an input type that accepts AutomationRulesFindingFiltersArgs, AutomationRulesFindingFiltersPtr and AutomationRulesFindingFiltersPtrOutput values.
// You can construct a concrete instance of `AutomationRulesFindingFiltersPtrInput` via:
//
//	        AutomationRulesFindingFiltersArgs{...}
//
//	or:
//
//	        nil
type AutomationRulesFindingFiltersPtrInput interface {
	pulumi.Input

	ToAutomationRulesFindingFiltersPtrOutput() AutomationRulesFindingFiltersPtrOutput
	ToAutomationRulesFindingFiltersPtrOutputWithContext(context.Context) AutomationRulesFindingFiltersPtrOutput
}

type automationRulesFindingFiltersPtrType AutomationRulesFindingFiltersArgs

func AutomationRulesFindingFiltersPtr(v *AutomationRulesFindingFiltersArgs) AutomationRulesFindingFiltersPtrInput {
	return (*automationRulesFindingFiltersPtrType)(v)
}

func (*automationRulesFindingFiltersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulesFindingFilters)(nil)).Elem()
}

func (i *automationRulesFindingFiltersPtrType) ToAutomationRulesFindingFiltersPtrOutput() AutomationRulesFindingFiltersPtrOutput {
	return i.ToAutomationRulesFindingFiltersPtrOutputWithContext(context.Background())
}

func (i *automationRulesFindingFiltersPtrType) ToAutomationRulesFindingFiltersPtrOutputWithContext(ctx context.Context) AutomationRulesFindingFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulesFindingFiltersPtrOutput)
}

type AutomationRulesFindingFiltersOutput struct{ *pulumi.OutputState }

func (AutomationRulesFindingFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulesFindingFilters)(nil)).Elem()
}

func (o AutomationRulesFindingFiltersOutput) ToAutomationRulesFindingFiltersOutput() AutomationRulesFindingFiltersOutput {
	return o
}

func (o AutomationRulesFindingFiltersOutput) ToAutomationRulesFindingFiltersOutputWithContext(ctx context.Context) AutomationRulesFindingFiltersOutput {
	return o
}

func (o AutomationRulesFindingFiltersOutput) ToAutomationRulesFindingFiltersPtrOutput() AutomationRulesFindingFiltersPtrOutput {
	return o.ToAutomationRulesFindingFiltersPtrOutputWithContext(context.Background())
}

func (o AutomationRulesFindingFiltersOutput) ToAutomationRulesFindingFiltersPtrOutputWithContext(ctx context.Context) AutomationRulesFindingFiltersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulesFindingFilters) *AutomationRulesFindingFilters {
		return &v
	}).(AutomationRulesFindingFiltersPtrOutput)
}

func (o AutomationRulesFindingFiltersOutput) AwsAccountId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.AwsAccountId }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) CompanyName() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.CompanyName }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) ComplianceAssociatedStandardsId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		return v.ComplianceAssociatedStandardsId
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) ComplianceSecurityControlId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		return v.ComplianceSecurityControlId
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) ComplianceStatus() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.ComplianceStatus }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) Confidence() AutomationRuleNumberFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleNumberFilter { return v.Confidence }).(AutomationRuleNumberFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) CreatedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleDateFilter { return v.CreatedAt }).(AutomationRuleDateFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) Criticality() AutomationRuleNumberFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleNumberFilter { return v.Criticality }).(AutomationRuleNumberFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) Description() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.Description }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) FirstObservedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleDateFilter { return v.FirstObservedAt }).(AutomationRuleDateFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) GeneratorId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.GeneratorId }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) Id() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.Id }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) LastObservedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleDateFilter { return v.LastObservedAt }).(AutomationRuleDateFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) NoteText() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.NoteText }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) NoteUpdatedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleDateFilter { return v.NoteUpdatedAt }).(AutomationRuleDateFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) NoteUpdatedBy() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.NoteUpdatedBy }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) ProductArn() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.ProductArn }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) ProductName() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.ProductName }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) RecordState() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.RecordState }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) RelatedFindingsId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.RelatedFindingsId }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) RelatedFindingsProductArn() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.RelatedFindingsProductArn }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) ResourceDetailsOther() AutomationRuleMapFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleMapFilter { return v.ResourceDetailsOther }).(AutomationRuleMapFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) ResourceId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.ResourceId }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) ResourcePartition() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.ResourcePartition }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) ResourceRegion() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.ResourceRegion }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) ResourceTags() AutomationRuleMapFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleMapFilter { return v.ResourceTags }).(AutomationRuleMapFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) ResourceType() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.ResourceType }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) SeverityLabel() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.SeverityLabel }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) SourceUrl() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.SourceUrl }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) Title() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.Title }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) Type() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.Type }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) UpdatedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleDateFilter { return v.UpdatedAt }).(AutomationRuleDateFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) UserDefinedFields() AutomationRuleMapFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleMapFilter { return v.UserDefinedFields }).(AutomationRuleMapFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) VerificationState() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.VerificationState }).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersOutput) WorkflowStatus() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.WorkflowStatus }).(AutomationRuleStringFilterArrayOutput)
}

type AutomationRulesFindingFiltersPtrOutput struct{ *pulumi.OutputState }

func (AutomationRulesFindingFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulesFindingFilters)(nil)).Elem()
}

func (o AutomationRulesFindingFiltersPtrOutput) ToAutomationRulesFindingFiltersPtrOutput() AutomationRulesFindingFiltersPtrOutput {
	return o
}

func (o AutomationRulesFindingFiltersPtrOutput) ToAutomationRulesFindingFiltersPtrOutputWithContext(ctx context.Context) AutomationRulesFindingFiltersPtrOutput {
	return o
}

func (o AutomationRulesFindingFiltersPtrOutput) Elem() AutomationRulesFindingFiltersOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) AutomationRulesFindingFilters {
		if v != nil {
			return *v
		}
		var ret AutomationRulesFindingFilters
		return ret
	}).(AutomationRulesFindingFiltersOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) AwsAccountId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) CompanyName() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.CompanyName
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) ComplianceAssociatedStandardsId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.ComplianceAssociatedStandardsId
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) ComplianceSecurityControlId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.ComplianceSecurityControlId
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) ComplianceStatus() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.ComplianceStatus
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) Confidence() AutomationRuleNumberFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleNumberFilter {
		if v == nil {
			return nil
		}
		return v.Confidence
	}).(AutomationRuleNumberFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) CreatedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleDateFilter {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(AutomationRuleDateFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) Criticality() AutomationRuleNumberFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleNumberFilter {
		if v == nil {
			return nil
		}
		return v.Criticality
	}).(AutomationRuleNumberFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) Description() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.Description
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) FirstObservedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleDateFilter {
		if v == nil {
			return nil
		}
		return v.FirstObservedAt
	}).(AutomationRuleDateFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) GeneratorId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.GeneratorId
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) Id() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.Id
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) LastObservedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleDateFilter {
		if v == nil {
			return nil
		}
		return v.LastObservedAt
	}).(AutomationRuleDateFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) NoteText() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.NoteText
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) NoteUpdatedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleDateFilter {
		if v == nil {
			return nil
		}
		return v.NoteUpdatedAt
	}).(AutomationRuleDateFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) NoteUpdatedBy() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.NoteUpdatedBy
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) ProductArn() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.ProductArn
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) ProductName() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.ProductName
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) RecordState() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.RecordState
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) RelatedFindingsId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.RelatedFindingsId
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) RelatedFindingsProductArn() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.RelatedFindingsProductArn
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) ResourceDetailsOther() AutomationRuleMapFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleMapFilter {
		if v == nil {
			return nil
		}
		return v.ResourceDetailsOther
	}).(AutomationRuleMapFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) ResourceId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) ResourcePartition() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourcePartition
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) ResourceRegion() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceRegion
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) ResourceTags() AutomationRuleMapFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleMapFilter {
		if v == nil {
			return nil
		}
		return v.ResourceTags
	}).(AutomationRuleMapFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) ResourceType() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceType
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) SeverityLabel() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.SeverityLabel
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) SourceUrl() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.SourceUrl
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) Title() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) Type() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.Type
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) UpdatedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleDateFilter {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(AutomationRuleDateFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) UserDefinedFields() AutomationRuleMapFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleMapFilter {
		if v == nil {
			return nil
		}
		return v.UserDefinedFields
	}).(AutomationRuleMapFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) VerificationState() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.VerificationState
	}).(AutomationRuleStringFilterArrayOutput)
}

func (o AutomationRulesFindingFiltersPtrOutput) WorkflowStatus() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.WorkflowStatus
	}).(AutomationRuleStringFilterArrayOutput)
}

// A collection of filters that are applied to all active findings aggregated by AWS Security Hub.
type InsightAwsSecurityFindingFilters struct {
	// The AWS account ID in which a finding is generated.
	AwsAccountId []InsightStringFilter `pulumi:"awsAccountId"`
	// The name of the AWS account in which a finding is generated.
	AwsAccountName []InsightStringFilter `pulumi:"awsAccountName"`
	// The name of the findings provider (company) that owns the solution (product) that generates findings.
	CompanyName []InsightStringFilter `pulumi:"companyName"`
	// The unique identifier of a standard in which a control is enabled.
	ComplianceAssociatedStandardsId []InsightStringFilter `pulumi:"complianceAssociatedStandardsId"`
	// The unique identifier of a control across standards.
	ComplianceSecurityControlId []InsightStringFilter `pulumi:"complianceSecurityControlId"`
	// The name of a security control parameter.
	ComplianceSecurityControlParametersName []InsightStringFilter `pulumi:"complianceSecurityControlParametersName"`
	// The current value of a security control parameter.
	ComplianceSecurityControlParametersValue []InsightStringFilter `pulumi:"complianceSecurityControlParametersValue"`
	// Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard.
	ComplianceStatus []InsightStringFilter `pulumi:"complianceStatus"`
	// A finding's confidence.
	Confidence []InsightNumberFilter `pulumi:"confidence"`
	// An ISO8601-formatted timestamp that indicates when the security findings provider captured the potential security issue that a finding captured.
	CreatedAt []InsightDateFilter `pulumi:"createdAt"`
	// The level of importance assigned to the resources associated with the finding.
	Criticality []InsightNumberFilter `pulumi:"criticality"`
	// A finding's description.
	Description []InsightStringFilter `pulumi:"description"`
	// The finding provider value for the finding confidence.
	FindingProviderFieldsConfidence []InsightNumberFilter `pulumi:"findingProviderFieldsConfidence"`
	// The finding provider value for the level of importance assigned to the resources associated with the findings.
	FindingProviderFieldsCriticality []InsightNumberFilter `pulumi:"findingProviderFieldsCriticality"`
	// The finding identifier of a related finding that is identified by the finding provider.
	FindingProviderFieldsRelatedFindingsId []InsightStringFilter `pulumi:"findingProviderFieldsRelatedFindingsId"`
	// The ARN of the solution that generated a related finding that is identified by the finding provider.
	FindingProviderFieldsRelatedFindingsProductArn []InsightStringFilter `pulumi:"findingProviderFieldsRelatedFindingsProductArn"`
	// The finding provider value for the severity label.
	FindingProviderFieldsSeverityLabel []InsightStringFilter `pulumi:"findingProviderFieldsSeverityLabel"`
	// The finding provider's original value for the severity.
	FindingProviderFieldsSeverityOriginal []InsightStringFilter `pulumi:"findingProviderFieldsSeverityOriginal"`
	// One or more finding types that the finding provider assigned to the finding.
	FindingProviderFieldsTypes []InsightStringFilter `pulumi:"findingProviderFieldsTypes"`
	// An ISO8601-formatted timestamp that indicates when the security findings provider first observed the potential security issue that a finding captured.
	FirstObservedAt []InsightDateFilter `pulumi:"firstObservedAt"`
	// The identifier for the solution-specific component (a discrete unit of logic) that generated a finding.
	GeneratorId []InsightStringFilter `pulumi:"generatorId"`
	// The security findings provider-specific identifier for a finding.
	Id []InsightStringFilter `pulumi:"id"`
	// An ISO8601-formatted timestamp that indicates when the security findings provider most recently observed the potential security issue that a finding captured.
	LastObservedAt []InsightDateFilter `pulumi:"lastObservedAt"`
	// The name of the malware that was observed.
	MalwareName []InsightStringFilter `pulumi:"malwareName"`
	// The filesystem path of the malware that was observed.
	MalwarePath []InsightStringFilter `pulumi:"malwarePath"`
	// The state of the malware that was observed.
	MalwareState []InsightStringFilter `pulumi:"malwareState"`
	// The type of the malware that was observed.
	MalwareType []InsightStringFilter `pulumi:"malwareType"`
	// The destination domain of network-related information about a finding.
	NetworkDestinationDomain []InsightStringFilter `pulumi:"networkDestinationDomain"`
	// The destination IPv4 address of network-related information about a finding.
	NetworkDestinationIpV4 []InsightIpFilter `pulumi:"networkDestinationIpV4"`
	// The destination IPv6 address of network-related information about a finding.
	NetworkDestinationIpV6 []InsightIpFilter `pulumi:"networkDestinationIpV6"`
	// The destination port of network-related information about a finding.
	NetworkDestinationPort []InsightNumberFilter `pulumi:"networkDestinationPort"`
	// Indicates the direction of network traffic associated with a finding.
	NetworkDirection []InsightStringFilter `pulumi:"networkDirection"`
	// The protocol of network-related information about a finding.
	NetworkProtocol []InsightStringFilter `pulumi:"networkProtocol"`
	// The source domain of network-related information about a finding.
	NetworkSourceDomain []InsightStringFilter `pulumi:"networkSourceDomain"`
	// The source IPv4 address of network-related information about a finding.
	NetworkSourceIpV4 []InsightIpFilter `pulumi:"networkSourceIpV4"`
	// The source IPv6 address of network-related information about a finding.
	NetworkSourceIpV6 []InsightIpFilter `pulumi:"networkSourceIpV6"`
	// The source media access control (MAC) address of network-related information about a finding.
	NetworkSourceMac []InsightStringFilter `pulumi:"networkSourceMac"`
	// The source port of network-related information about a finding.
	NetworkSourcePort []InsightNumberFilter `pulumi:"networkSourcePort"`
	// The text of a note.
	NoteText []InsightStringFilter `pulumi:"noteText"`
	// The timestamp of when the note was updated.
	NoteUpdatedAt []InsightDateFilter `pulumi:"noteUpdatedAt"`
	// The principal that created a note.
	NoteUpdatedBy []InsightStringFilter `pulumi:"noteUpdatedBy"`
	// A timestamp that identifies when the process was launched.
	ProcessLaunchedAt []InsightDateFilter `pulumi:"processLaunchedAt"`
	// The name of the process.
	ProcessName []InsightStringFilter `pulumi:"processName"`
	// The parent process ID.
	ProcessParentPid []InsightNumberFilter `pulumi:"processParentPid"`
	// The path to the process executable.
	ProcessPath []InsightStringFilter `pulumi:"processPath"`
	// The process ID.
	ProcessPid []InsightNumberFilter `pulumi:"processPid"`
	// A timestamp that identifies when the process was terminated.
	ProcessTerminatedAt []InsightDateFilter `pulumi:"processTerminatedAt"`
	// The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub.
	ProductArn []InsightStringFilter `pulumi:"productArn"`
	// A data type where security findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format.
	ProductFields []InsightMapFilter `pulumi:"productFields"`
	// The name of the solution (product) that generates findings.
	ProductName []InsightStringFilter `pulumi:"productName"`
	// The recommendation of what to do about the issue described in a finding.
	RecommendationText []InsightStringFilter `pulumi:"recommendationText"`
	// The updated record state for the finding.
	RecordState []InsightStringFilter `pulumi:"recordState"`
	// The Region from which the finding was generated.
	Region []InsightStringFilter `pulumi:"region"`
	// The solution-generated identifier for a related finding.
	RelatedFindingsId []InsightStringFilter `pulumi:"relatedFindingsId"`
	// The ARN of the solution that generated a related finding.
	RelatedFindingsProductArn []InsightStringFilter `pulumi:"relatedFindingsProductArn"`
	// The ARN of the application that is related to a finding.
	ResourceApplicationArn []InsightStringFilter `pulumi:"resourceApplicationArn"`
	// The name of the application that is related to a finding.
	ResourceApplicationName []InsightStringFilter `pulumi:"resourceApplicationName"`
	// The IAM profile ARN of the instance.
	ResourceAwsEc2InstanceIamInstanceProfileArn []InsightStringFilter `pulumi:"resourceAwsEc2InstanceIamInstanceProfileArn"`
	// The Amazon Machine Image (AMI) ID of the instance.
	ResourceAwsEc2InstanceImageId []InsightStringFilter `pulumi:"resourceAwsEc2InstanceImageId"`
	// The IPv4 addresses associated with the instance.
	ResourceAwsEc2InstanceIpV4Addresses []InsightIpFilter `pulumi:"resourceAwsEc2InstanceIpV4Addresses"`
	// The IPv6 addresses associated with the instance.
	ResourceAwsEc2InstanceIpV6Addresses []InsightIpFilter `pulumi:"resourceAwsEc2InstanceIpV6Addresses"`
	// The key name associated with the instance.
	ResourceAwsEc2InstanceKeyName []InsightStringFilter `pulumi:"resourceAwsEc2InstanceKeyName"`
	// The date and time the instance was launched.
	ResourceAwsEc2InstanceLaunchedAt []InsightDateFilter `pulumi:"resourceAwsEc2InstanceLaunchedAt"`
	// The identifier of the subnet that the instance was launched in.
	ResourceAwsEc2InstanceSubnetId []InsightStringFilter `pulumi:"resourceAwsEc2InstanceSubnetId"`
	// The instance type of the instance.
	ResourceAwsEc2InstanceType []InsightStringFilter `pulumi:"resourceAwsEc2InstanceType"`
	// The identifier of the VPC that the instance was launched in.
	ResourceAwsEc2InstanceVpcId []InsightStringFilter `pulumi:"resourceAwsEc2InstanceVpcId"`
	// The creation date/time of the IAM access key related to a finding.
	ResourceAwsIamAccessKeyCreatedAt []InsightDateFilter `pulumi:"resourceAwsIamAccessKeyCreatedAt"`
	// The name of the principal that is associated with an IAM access key.
	ResourceAwsIamAccessKeyPrincipalName []InsightStringFilter `pulumi:"resourceAwsIamAccessKeyPrincipalName"`
	// The status of the IAM access key related to a finding.
	ResourceAwsIamAccessKeyStatus []InsightStringFilter `pulumi:"resourceAwsIamAccessKeyStatus"`
	// The name of an IAM user.
	ResourceAwsIamUserUserName []InsightStringFilter `pulumi:"resourceAwsIamUserUserName"`
	// The canonical user ID of the owner of the S3 bucket.
	ResourceAwsS3BucketOwnerId []InsightStringFilter `pulumi:"resourceAwsS3BucketOwnerId"`
	// The display name of the owner of the S3 bucket.
	ResourceAwsS3BucketOwnerName []InsightStringFilter `pulumi:"resourceAwsS3BucketOwnerName"`
	// The identifier of the image related to a finding.
	ResourceContainerImageId []InsightStringFilter `pulumi:"resourceContainerImageId"`
	// The name of the image related to a finding.
	ResourceContainerImageName []InsightStringFilter `pulumi:"resourceContainerImageName"`
	// A timestamp that identifies when the container was started.
	ResourceContainerLaunchedAt []InsightDateFilter `pulumi:"resourceContainerLaunchedAt"`
	// The name of the container related to a finding.
	ResourceContainerName []InsightStringFilter `pulumi:"resourceContainerName"`
	// The details of a resource that doesn't have a specific subfield for the resource type defined.
	ResourceDetailsOther []InsightMapFilter `pulumi:"resourceDetailsOther"`
	// The canonical identifier for the given resource type.
	ResourceId []InsightStringFilter `pulumi:"resourceId"`
	// The canonical AWS partition name that the Region is assigned to.
	ResourcePartition []InsightStringFilter `pulumi:"resourcePartition"`
	// The canonical AWS external Region name where this resource is located.
	ResourceRegion []InsightStringFilter `pulumi:"resourceRegion"`
	// A list of AWS tags associated with a resource at the time the finding was processed.
	ResourceTags []InsightMapFilter `pulumi:"resourceTags"`
	// Specifies the type of the resource that details are provided for.
	ResourceType []InsightStringFilter `pulumi:"resourceType"`
	// Indicates whether or not sample findings are included in the filter results.
	Sample []InsightBooleanFilter `pulumi:"sample"`
	// The label of a finding's severity.
	SeverityLabel []InsightStringFilter `pulumi:"severityLabel"`
	// A URL that links to a page about the current finding in the security findings provider's solution.
	SourceUrl []InsightStringFilter `pulumi:"sourceUrl"`
	// The category of a threat intelligence indicator.
	ThreatIntelIndicatorCategory []InsightStringFilter `pulumi:"threatIntelIndicatorCategory"`
	// A timestamp that identifies the last observation of a threat intelligence indicator.
	ThreatIntelIndicatorLastObservedAt []InsightDateFilter `pulumi:"threatIntelIndicatorLastObservedAt"`
	// The source of the threat intelligence.
	ThreatIntelIndicatorSource []InsightStringFilter `pulumi:"threatIntelIndicatorSource"`
	// The URL for more details from the source of the threat intelligence.
	ThreatIntelIndicatorSourceUrl []InsightStringFilter `pulumi:"threatIntelIndicatorSourceUrl"`
	// The type of a threat intelligence indicator.
	ThreatIntelIndicatorType []InsightStringFilter `pulumi:"threatIntelIndicatorType"`
	// The value of a threat intelligence indicator.
	ThreatIntelIndicatorValue []InsightStringFilter `pulumi:"threatIntelIndicatorValue"`
	// A finding's title.
	Title []InsightStringFilter `pulumi:"title"`
	// A finding type in the format of namespace/category/classifier that classifies a finding.
	Type []InsightStringFilter `pulumi:"type"`
	// An ISO8601-formatted timestamp that indicates when the security findings provider last updated the finding record.
	UpdatedAt []InsightDateFilter `pulumi:"updatedAt"`
	// A list of name/value string pairs associated with the finding.
	UserDefinedFields []InsightMapFilter `pulumi:"userDefinedFields"`
	// The veracity of a finding.
	VerificationState []InsightStringFilter `pulumi:"verificationState"`
	// Indicates whether a software vulnerability in your environment has a known exploit.
	VulnerabilitiesExploitAvailable []InsightStringFilter `pulumi:"vulnerabilitiesExploitAvailable"`
	// Indicates whether a vulnerability is fixed in a newer version of the affected software packages.
	VulnerabilitiesFixAvailable []InsightStringFilter `pulumi:"vulnerabilitiesFixAvailable"`
	// The workflow state of a finding.
	WorkflowState []InsightStringFilter `pulumi:"workflowState"`
	// The status of the investigation into a finding.
	WorkflowStatus []InsightStringFilter `pulumi:"workflowStatus"`
}

// InsightAwsSecurityFindingFiltersInput is an input type that accepts InsightAwsSecurityFindingFiltersArgs and InsightAwsSecurityFindingFiltersOutput values.
// You can construct a concrete instance of `InsightAwsSecurityFindingFiltersInput` via:
//
//	InsightAwsSecurityFindingFiltersArgs{...}
type InsightAwsSecurityFindingFiltersInput interface {
	pulumi.Input

	ToInsightAwsSecurityFindingFiltersOutput() InsightAwsSecurityFindingFiltersOutput
	ToInsightAwsSecurityFindingFiltersOutputWithContext(context.Context) InsightAwsSecurityFindingFiltersOutput
}

// A collection of filters that are applied to all active findings aggregated by AWS Security Hub.
type InsightAwsSecurityFindingFiltersArgs struct {
	// The AWS account ID in which a finding is generated.
	AwsAccountId InsightStringFilterArrayInput `pulumi:"awsAccountId"`
	// The name of the AWS account in which a finding is generated.
	AwsAccountName InsightStringFilterArrayInput `pulumi:"awsAccountName"`
	// The name of the findings provider (company) that owns the solution (product) that generates findings.
	CompanyName InsightStringFilterArrayInput `pulumi:"companyName"`
	// The unique identifier of a standard in which a control is enabled.
	ComplianceAssociatedStandardsId InsightStringFilterArrayInput `pulumi:"complianceAssociatedStandardsId"`
	// The unique identifier of a control across standards.
	ComplianceSecurityControlId InsightStringFilterArrayInput `pulumi:"complianceSecurityControlId"`
	// The name of a security control parameter.
	ComplianceSecurityControlParametersName InsightStringFilterArrayInput `pulumi:"complianceSecurityControlParametersName"`
	// The current value of a security control parameter.
	ComplianceSecurityControlParametersValue InsightStringFilterArrayInput `pulumi:"complianceSecurityControlParametersValue"`
	// Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard.
	ComplianceStatus InsightStringFilterArrayInput `pulumi:"complianceStatus"`
	// A finding's confidence.
	Confidence InsightNumberFilterArrayInput `pulumi:"confidence"`
	// An ISO8601-formatted timestamp that indicates when the security findings provider captured the potential security issue that a finding captured.
	CreatedAt InsightDateFilterArrayInput `pulumi:"createdAt"`
	// The level of importance assigned to the resources associated with the finding.
	Criticality InsightNumberFilterArrayInput `pulumi:"criticality"`
	// A finding's description.
	Description InsightStringFilterArrayInput `pulumi:"description"`
	// The finding provider value for the finding confidence.
	FindingProviderFieldsConfidence InsightNumberFilterArrayInput `pulumi:"findingProviderFieldsConfidence"`
	// The finding provider value for the level of importance assigned to the resources associated with the findings.
	FindingProviderFieldsCriticality InsightNumberFilterArrayInput `pulumi:"findingProviderFieldsCriticality"`
	// The finding identifier of a related finding that is identified by the finding provider.
	FindingProviderFieldsRelatedFindingsId InsightStringFilterArrayInput `pulumi:"findingProviderFieldsRelatedFindingsId"`
	// The ARN of the solution that generated a related finding that is identified by the finding provider.
	FindingProviderFieldsRelatedFindingsProductArn InsightStringFilterArrayInput `pulumi:"findingProviderFieldsRelatedFindingsProductArn"`
	// The finding provider value for the severity label.
	FindingProviderFieldsSeverityLabel InsightStringFilterArrayInput `pulumi:"findingProviderFieldsSeverityLabel"`
	// The finding provider's original value for the severity.
	FindingProviderFieldsSeverityOriginal InsightStringFilterArrayInput `pulumi:"findingProviderFieldsSeverityOriginal"`
	// One or more finding types that the finding provider assigned to the finding.
	FindingProviderFieldsTypes InsightStringFilterArrayInput `pulumi:"findingProviderFieldsTypes"`
	// An ISO8601-formatted timestamp that indicates when the security findings provider first observed the potential security issue that a finding captured.
	FirstObservedAt InsightDateFilterArrayInput `pulumi:"firstObservedAt"`
	// The identifier for the solution-specific component (a discrete unit of logic) that generated a finding.
	GeneratorId InsightStringFilterArrayInput `pulumi:"generatorId"`
	// The security findings provider-specific identifier for a finding.
	Id InsightStringFilterArrayInput `pulumi:"id"`
	// An ISO8601-formatted timestamp that indicates when the security findings provider most recently observed the potential security issue that a finding captured.
	LastObservedAt InsightDateFilterArrayInput `pulumi:"lastObservedAt"`
	// The name of the malware that was observed.
	MalwareName InsightStringFilterArrayInput `pulumi:"malwareName"`
	// The filesystem path of the malware that was observed.
	MalwarePath InsightStringFilterArrayInput `pulumi:"malwarePath"`
	// The state of the malware that was observed.
	MalwareState InsightStringFilterArrayInput `pulumi:"malwareState"`
	// The type of the malware that was observed.
	MalwareType InsightStringFilterArrayInput `pulumi:"malwareType"`
	// The destination domain of network-related information about a finding.
	NetworkDestinationDomain InsightStringFilterArrayInput `pulumi:"networkDestinationDomain"`
	// The destination IPv4 address of network-related information about a finding.
	NetworkDestinationIpV4 InsightIpFilterArrayInput `pulumi:"networkDestinationIpV4"`
	// The destination IPv6 address of network-related information about a finding.
	NetworkDestinationIpV6 InsightIpFilterArrayInput `pulumi:"networkDestinationIpV6"`
	// The destination port of network-related information about a finding.
	NetworkDestinationPort InsightNumberFilterArrayInput `pulumi:"networkDestinationPort"`
	// Indicates the direction of network traffic associated with a finding.
	NetworkDirection InsightStringFilterArrayInput `pulumi:"networkDirection"`
	// The protocol of network-related information about a finding.
	NetworkProtocol InsightStringFilterArrayInput `pulumi:"networkProtocol"`
	// The source domain of network-related information about a finding.
	NetworkSourceDomain InsightStringFilterArrayInput `pulumi:"networkSourceDomain"`
	// The source IPv4 address of network-related information about a finding.
	NetworkSourceIpV4 InsightIpFilterArrayInput `pulumi:"networkSourceIpV4"`
	// The source IPv6 address of network-related information about a finding.
	NetworkSourceIpV6 InsightIpFilterArrayInput `pulumi:"networkSourceIpV6"`
	// The source media access control (MAC) address of network-related information about a finding.
	NetworkSourceMac InsightStringFilterArrayInput `pulumi:"networkSourceMac"`
	// The source port of network-related information about a finding.
	NetworkSourcePort InsightNumberFilterArrayInput `pulumi:"networkSourcePort"`
	// The text of a note.
	NoteText InsightStringFilterArrayInput `pulumi:"noteText"`
	// The timestamp of when the note was updated.
	NoteUpdatedAt InsightDateFilterArrayInput `pulumi:"noteUpdatedAt"`
	// The principal that created a note.
	NoteUpdatedBy InsightStringFilterArrayInput `pulumi:"noteUpdatedBy"`
	// A timestamp that identifies when the process was launched.
	ProcessLaunchedAt InsightDateFilterArrayInput `pulumi:"processLaunchedAt"`
	// The name of the process.
	ProcessName InsightStringFilterArrayInput `pulumi:"processName"`
	// The parent process ID.
	ProcessParentPid InsightNumberFilterArrayInput `pulumi:"processParentPid"`
	// The path to the process executable.
	ProcessPath InsightStringFilterArrayInput `pulumi:"processPath"`
	// The process ID.
	ProcessPid InsightNumberFilterArrayInput `pulumi:"processPid"`
	// A timestamp that identifies when the process was terminated.
	ProcessTerminatedAt InsightDateFilterArrayInput `pulumi:"processTerminatedAt"`
	// The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub.
	ProductArn InsightStringFilterArrayInput `pulumi:"productArn"`
	// A data type where security findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format.
	ProductFields InsightMapFilterArrayInput `pulumi:"productFields"`
	// The name of the solution (product) that generates findings.
	ProductName InsightStringFilterArrayInput `pulumi:"productName"`
	// The recommendation of what to do about the issue described in a finding.
	RecommendationText InsightStringFilterArrayInput `pulumi:"recommendationText"`
	// The updated record state for the finding.
	RecordState InsightStringFilterArrayInput `pulumi:"recordState"`
	// The Region from which the finding was generated.
	Region InsightStringFilterArrayInput `pulumi:"region"`
	// The solution-generated identifier for a related finding.
	RelatedFindingsId InsightStringFilterArrayInput `pulumi:"relatedFindingsId"`
	// The ARN of the solution that generated a related finding.
	RelatedFindingsProductArn InsightStringFilterArrayInput `pulumi:"relatedFindingsProductArn"`
	// The ARN of the application that is related to a finding.
	ResourceApplicationArn InsightStringFilterArrayInput `pulumi:"resourceApplicationArn"`
	// The name of the application that is related to a finding.
	ResourceApplicationName InsightStringFilterArrayInput `pulumi:"resourceApplicationName"`
	// The IAM profile ARN of the instance.
	ResourceAwsEc2InstanceIamInstanceProfileArn InsightStringFilterArrayInput `pulumi:"resourceAwsEc2InstanceIamInstanceProfileArn"`
	// The Amazon Machine Image (AMI) ID of the instance.
	ResourceAwsEc2InstanceImageId InsightStringFilterArrayInput `pulumi:"resourceAwsEc2InstanceImageId"`
	// The IPv4 addresses associated with the instance.
	ResourceAwsEc2InstanceIpV4Addresses InsightIpFilterArrayInput `pulumi:"resourceAwsEc2InstanceIpV4Addresses"`
	// The IPv6 addresses associated with the instance.
	ResourceAwsEc2InstanceIpV6Addresses InsightIpFilterArrayInput `pulumi:"resourceAwsEc2InstanceIpV6Addresses"`
	// The key name associated with the instance.
	ResourceAwsEc2InstanceKeyName InsightStringFilterArrayInput `pulumi:"resourceAwsEc2InstanceKeyName"`
	// The date and time the instance was launched.
	ResourceAwsEc2InstanceLaunchedAt InsightDateFilterArrayInput `pulumi:"resourceAwsEc2InstanceLaunchedAt"`
	// The identifier of the subnet that the instance was launched in.
	ResourceAwsEc2InstanceSubnetId InsightStringFilterArrayInput `pulumi:"resourceAwsEc2InstanceSubnetId"`
	// The instance type of the instance.
	ResourceAwsEc2InstanceType InsightStringFilterArrayInput `pulumi:"resourceAwsEc2InstanceType"`
	// The identifier of the VPC that the instance was launched in.
	ResourceAwsEc2InstanceVpcId InsightStringFilterArrayInput `pulumi:"resourceAwsEc2InstanceVpcId"`
	// The creation date/time of the IAM access key related to a finding.
	ResourceAwsIamAccessKeyCreatedAt InsightDateFilterArrayInput `pulumi:"resourceAwsIamAccessKeyCreatedAt"`
	// The name of the principal that is associated with an IAM access key.
	ResourceAwsIamAccessKeyPrincipalName InsightStringFilterArrayInput `pulumi:"resourceAwsIamAccessKeyPrincipalName"`
	// The status of the IAM access key related to a finding.
	ResourceAwsIamAccessKeyStatus InsightStringFilterArrayInput `pulumi:"resourceAwsIamAccessKeyStatus"`
	// The name of an IAM user.
	ResourceAwsIamUserUserName InsightStringFilterArrayInput `pulumi:"resourceAwsIamUserUserName"`
	// The canonical user ID of the owner of the S3 bucket.
	ResourceAwsS3BucketOwnerId InsightStringFilterArrayInput `pulumi:"resourceAwsS3BucketOwnerId"`
	// The display name of the owner of the S3 bucket.
	ResourceAwsS3BucketOwnerName InsightStringFilterArrayInput `pulumi:"resourceAwsS3BucketOwnerName"`
	// The identifier of the image related to a finding.
	ResourceContainerImageId InsightStringFilterArrayInput `pulumi:"resourceContainerImageId"`
	// The name of the image related to a finding.
	ResourceContainerImageName InsightStringFilterArrayInput `pulumi:"resourceContainerImageName"`
	// A timestamp that identifies when the container was started.
	ResourceContainerLaunchedAt InsightDateFilterArrayInput `pulumi:"resourceContainerLaunchedAt"`
	// The name of the container related to a finding.
	ResourceContainerName InsightStringFilterArrayInput `pulumi:"resourceContainerName"`
	// The details of a resource that doesn't have a specific subfield for the resource type defined.
	ResourceDetailsOther InsightMapFilterArrayInput `pulumi:"resourceDetailsOther"`
	// The canonical identifier for the given resource type.
	ResourceId InsightStringFilterArrayInput `pulumi:"resourceId"`
	// The canonical AWS partition name that the Region is assigned to.
	ResourcePartition InsightStringFilterArrayInput `pulumi:"resourcePartition"`
	// The canonical AWS external Region name where this resource is located.
	ResourceRegion InsightStringFilterArrayInput `pulumi:"resourceRegion"`
	// A list of AWS tags associated with a resource at the time the finding was processed.
	ResourceTags InsightMapFilterArrayInput `pulumi:"resourceTags"`
	// Specifies the type of the resource that details are provided for.
	ResourceType InsightStringFilterArrayInput `pulumi:"resourceType"`
	// Indicates whether or not sample findings are included in the filter results.
	Sample InsightBooleanFilterArrayInput `pulumi:"sample"`
	// The label of a finding's severity.
	SeverityLabel InsightStringFilterArrayInput `pulumi:"severityLabel"`
	// A URL that links to a page about the current finding in the security findings provider's solution.
	SourceUrl InsightStringFilterArrayInput `pulumi:"sourceUrl"`
	// The category of a threat intelligence indicator.
	ThreatIntelIndicatorCategory InsightStringFilterArrayInput `pulumi:"threatIntelIndicatorCategory"`
	// A timestamp that identifies the last observation of a threat intelligence indicator.
	ThreatIntelIndicatorLastObservedAt InsightDateFilterArrayInput `pulumi:"threatIntelIndicatorLastObservedAt"`
	// The source of the threat intelligence.
	ThreatIntelIndicatorSource InsightStringFilterArrayInput `pulumi:"threatIntelIndicatorSource"`
	// The URL for more details from the source of the threat intelligence.
	ThreatIntelIndicatorSourceUrl InsightStringFilterArrayInput `pulumi:"threatIntelIndicatorSourceUrl"`
	// The type of a threat intelligence indicator.
	ThreatIntelIndicatorType InsightStringFilterArrayInput `pulumi:"threatIntelIndicatorType"`
	// The value of a threat intelligence indicator.
	ThreatIntelIndicatorValue InsightStringFilterArrayInput `pulumi:"threatIntelIndicatorValue"`
	// A finding's title.
	Title InsightStringFilterArrayInput `pulumi:"title"`
	// A finding type in the format of namespace/category/classifier that classifies a finding.
	Type InsightStringFilterArrayInput `pulumi:"type"`
	// An ISO8601-formatted timestamp that indicates when the security findings provider last updated the finding record.
	UpdatedAt InsightDateFilterArrayInput `pulumi:"updatedAt"`
	// A list of name/value string pairs associated with the finding.
	UserDefinedFields InsightMapFilterArrayInput `pulumi:"userDefinedFields"`
	// The veracity of a finding.
	VerificationState InsightStringFilterArrayInput `pulumi:"verificationState"`
	// Indicates whether a software vulnerability in your environment has a known exploit.
	VulnerabilitiesExploitAvailable InsightStringFilterArrayInput `pulumi:"vulnerabilitiesExploitAvailable"`
	// Indicates whether a vulnerability is fixed in a newer version of the affected software packages.
	VulnerabilitiesFixAvailable InsightStringFilterArrayInput `pulumi:"vulnerabilitiesFixAvailable"`
	// The workflow state of a finding.
	WorkflowState InsightStringFilterArrayInput `pulumi:"workflowState"`
	// The status of the investigation into a finding.
	WorkflowStatus InsightStringFilterArrayInput `pulumi:"workflowStatus"`
}

func (InsightAwsSecurityFindingFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightAwsSecurityFindingFilters)(nil)).Elem()
}

func (i InsightAwsSecurityFindingFiltersArgs) ToInsightAwsSecurityFindingFiltersOutput() InsightAwsSecurityFindingFiltersOutput {
	return i.ToInsightAwsSecurityFindingFiltersOutputWithContext(context.Background())
}

func (i InsightAwsSecurityFindingFiltersArgs) ToInsightAwsSecurityFindingFiltersOutputWithContext(ctx context.Context) InsightAwsSecurityFindingFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightAwsSecurityFindingFiltersOutput)
}

// A collection of filters that are applied to all active findings aggregated by AWS Security Hub.
type InsightAwsSecurityFindingFiltersOutput struct{ *pulumi.OutputState }

func (InsightAwsSecurityFindingFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightAwsSecurityFindingFilters)(nil)).Elem()
}

func (o InsightAwsSecurityFindingFiltersOutput) ToInsightAwsSecurityFindingFiltersOutput() InsightAwsSecurityFindingFiltersOutput {
	return o
}

func (o InsightAwsSecurityFindingFiltersOutput) ToInsightAwsSecurityFindingFiltersOutputWithContext(ctx context.Context) InsightAwsSecurityFindingFiltersOutput {
	return o
}

// The AWS account ID in which a finding is generated.
func (o InsightAwsSecurityFindingFiltersOutput) AwsAccountId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.AwsAccountId }).(InsightStringFilterArrayOutput)
}

// The name of the AWS account in which a finding is generated.
func (o InsightAwsSecurityFindingFiltersOutput) AwsAccountName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.AwsAccountName }).(InsightStringFilterArrayOutput)
}

// The name of the findings provider (company) that owns the solution (product) that generates findings.
func (o InsightAwsSecurityFindingFiltersOutput) CompanyName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.CompanyName }).(InsightStringFilterArrayOutput)
}

// The unique identifier of a standard in which a control is enabled.
func (o InsightAwsSecurityFindingFiltersOutput) ComplianceAssociatedStandardsId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.ComplianceAssociatedStandardsId
	}).(InsightStringFilterArrayOutput)
}

// The unique identifier of a control across standards.
func (o InsightAwsSecurityFindingFiltersOutput) ComplianceSecurityControlId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ComplianceSecurityControlId }).(InsightStringFilterArrayOutput)
}

// The name of a security control parameter.
func (o InsightAwsSecurityFindingFiltersOutput) ComplianceSecurityControlParametersName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.ComplianceSecurityControlParametersName
	}).(InsightStringFilterArrayOutput)
}

// The current value of a security control parameter.
func (o InsightAwsSecurityFindingFiltersOutput) ComplianceSecurityControlParametersValue() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.ComplianceSecurityControlParametersValue
	}).(InsightStringFilterArrayOutput)
}

// Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard.
func (o InsightAwsSecurityFindingFiltersOutput) ComplianceStatus() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ComplianceStatus }).(InsightStringFilterArrayOutput)
}

// A finding's confidence.
func (o InsightAwsSecurityFindingFiltersOutput) Confidence() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightNumberFilter { return v.Confidence }).(InsightNumberFilterArrayOutput)
}

// An ISO8601-formatted timestamp that indicates when the security findings provider captured the potential security issue that a finding captured.
func (o InsightAwsSecurityFindingFiltersOutput) CreatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter { return v.CreatedAt }).(InsightDateFilterArrayOutput)
}

// The level of importance assigned to the resources associated with the finding.
func (o InsightAwsSecurityFindingFiltersOutput) Criticality() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightNumberFilter { return v.Criticality }).(InsightNumberFilterArrayOutput)
}

// A finding's description.
func (o InsightAwsSecurityFindingFiltersOutput) Description() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.Description }).(InsightStringFilterArrayOutput)
}

// The finding provider value for the finding confidence.
func (o InsightAwsSecurityFindingFiltersOutput) FindingProviderFieldsConfidence() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		return v.FindingProviderFieldsConfidence
	}).(InsightNumberFilterArrayOutput)
}

// The finding provider value for the level of importance assigned to the resources associated with the findings.
func (o InsightAwsSecurityFindingFiltersOutput) FindingProviderFieldsCriticality() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		return v.FindingProviderFieldsCriticality
	}).(InsightNumberFilterArrayOutput)
}

// The finding identifier of a related finding that is identified by the finding provider.
func (o InsightAwsSecurityFindingFiltersOutput) FindingProviderFieldsRelatedFindingsId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.FindingProviderFieldsRelatedFindingsId
	}).(InsightStringFilterArrayOutput)
}

// The ARN of the solution that generated a related finding that is identified by the finding provider.
func (o InsightAwsSecurityFindingFiltersOutput) FindingProviderFieldsRelatedFindingsProductArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.FindingProviderFieldsRelatedFindingsProductArn
	}).(InsightStringFilterArrayOutput)
}

// The finding provider value for the severity label.
func (o InsightAwsSecurityFindingFiltersOutput) FindingProviderFieldsSeverityLabel() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.FindingProviderFieldsSeverityLabel
	}).(InsightStringFilterArrayOutput)
}

// The finding provider's original value for the severity.
func (o InsightAwsSecurityFindingFiltersOutput) FindingProviderFieldsSeverityOriginal() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.FindingProviderFieldsSeverityOriginal
	}).(InsightStringFilterArrayOutput)
}

// One or more finding types that the finding provider assigned to the finding.
func (o InsightAwsSecurityFindingFiltersOutput) FindingProviderFieldsTypes() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.FindingProviderFieldsTypes }).(InsightStringFilterArrayOutput)
}

// An ISO8601-formatted timestamp that indicates when the security findings provider first observed the potential security issue that a finding captured.
func (o InsightAwsSecurityFindingFiltersOutput) FirstObservedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter { return v.FirstObservedAt }).(InsightDateFilterArrayOutput)
}

// The identifier for the solution-specific component (a discrete unit of logic) that generated a finding.
func (o InsightAwsSecurityFindingFiltersOutput) GeneratorId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.GeneratorId }).(InsightStringFilterArrayOutput)
}

// The security findings provider-specific identifier for a finding.
func (o InsightAwsSecurityFindingFiltersOutput) Id() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.Id }).(InsightStringFilterArrayOutput)
}

// An ISO8601-formatted timestamp that indicates when the security findings provider most recently observed the potential security issue that a finding captured.
func (o InsightAwsSecurityFindingFiltersOutput) LastObservedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter { return v.LastObservedAt }).(InsightDateFilterArrayOutput)
}

// The name of the malware that was observed.
func (o InsightAwsSecurityFindingFiltersOutput) MalwareName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.MalwareName }).(InsightStringFilterArrayOutput)
}

// The filesystem path of the malware that was observed.
func (o InsightAwsSecurityFindingFiltersOutput) MalwarePath() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.MalwarePath }).(InsightStringFilterArrayOutput)
}

// The state of the malware that was observed.
func (o InsightAwsSecurityFindingFiltersOutput) MalwareState() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.MalwareState }).(InsightStringFilterArrayOutput)
}

// The type of the malware that was observed.
func (o InsightAwsSecurityFindingFiltersOutput) MalwareType() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.MalwareType }).(InsightStringFilterArrayOutput)
}

// The destination domain of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkDestinationDomain() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.NetworkDestinationDomain }).(InsightStringFilterArrayOutput)
}

// The destination IPv4 address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkDestinationIpV4() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightIpFilter { return v.NetworkDestinationIpV4 }).(InsightIpFilterArrayOutput)
}

// The destination IPv6 address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkDestinationIpV6() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightIpFilter { return v.NetworkDestinationIpV6 }).(InsightIpFilterArrayOutput)
}

// The destination port of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkDestinationPort() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightNumberFilter { return v.NetworkDestinationPort }).(InsightNumberFilterArrayOutput)
}

// Indicates the direction of network traffic associated with a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkDirection() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.NetworkDirection }).(InsightStringFilterArrayOutput)
}

// The protocol of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkProtocol() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.NetworkProtocol }).(InsightStringFilterArrayOutput)
}

// The source domain of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkSourceDomain() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.NetworkSourceDomain }).(InsightStringFilterArrayOutput)
}

// The source IPv4 address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkSourceIpV4() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightIpFilter { return v.NetworkSourceIpV4 }).(InsightIpFilterArrayOutput)
}

// The source IPv6 address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkSourceIpV6() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightIpFilter { return v.NetworkSourceIpV6 }).(InsightIpFilterArrayOutput)
}

// The source media access control (MAC) address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkSourceMac() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.NetworkSourceMac }).(InsightStringFilterArrayOutput)
}

// The source port of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkSourcePort() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightNumberFilter { return v.NetworkSourcePort }).(InsightNumberFilterArrayOutput)
}

// The text of a note.
func (o InsightAwsSecurityFindingFiltersOutput) NoteText() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.NoteText }).(InsightStringFilterArrayOutput)
}

// The timestamp of when the note was updated.
func (o InsightAwsSecurityFindingFiltersOutput) NoteUpdatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter { return v.NoteUpdatedAt }).(InsightDateFilterArrayOutput)
}

// The principal that created a note.
func (o InsightAwsSecurityFindingFiltersOutput) NoteUpdatedBy() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.NoteUpdatedBy }).(InsightStringFilterArrayOutput)
}

// A timestamp that identifies when the process was launched.
func (o InsightAwsSecurityFindingFiltersOutput) ProcessLaunchedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter { return v.ProcessLaunchedAt }).(InsightDateFilterArrayOutput)
}

// The name of the process.
func (o InsightAwsSecurityFindingFiltersOutput) ProcessName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ProcessName }).(InsightStringFilterArrayOutput)
}

// The parent process ID.
func (o InsightAwsSecurityFindingFiltersOutput) ProcessParentPid() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightNumberFilter { return v.ProcessParentPid }).(InsightNumberFilterArrayOutput)
}

// The path to the process executable.
func (o InsightAwsSecurityFindingFiltersOutput) ProcessPath() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ProcessPath }).(InsightStringFilterArrayOutput)
}

// The process ID.
func (o InsightAwsSecurityFindingFiltersOutput) ProcessPid() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightNumberFilter { return v.ProcessPid }).(InsightNumberFilterArrayOutput)
}

// A timestamp that identifies when the process was terminated.
func (o InsightAwsSecurityFindingFiltersOutput) ProcessTerminatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter { return v.ProcessTerminatedAt }).(InsightDateFilterArrayOutput)
}

// The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub.
func (o InsightAwsSecurityFindingFiltersOutput) ProductArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ProductArn }).(InsightStringFilterArrayOutput)
}

// A data type where security findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format.
func (o InsightAwsSecurityFindingFiltersOutput) ProductFields() InsightMapFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightMapFilter { return v.ProductFields }).(InsightMapFilterArrayOutput)
}

// The name of the solution (product) that generates findings.
func (o InsightAwsSecurityFindingFiltersOutput) ProductName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ProductName }).(InsightStringFilterArrayOutput)
}

// The recommendation of what to do about the issue described in a finding.
func (o InsightAwsSecurityFindingFiltersOutput) RecommendationText() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.RecommendationText }).(InsightStringFilterArrayOutput)
}

// The updated record state for the finding.
func (o InsightAwsSecurityFindingFiltersOutput) RecordState() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.RecordState }).(InsightStringFilterArrayOutput)
}

// The Region from which the finding was generated.
func (o InsightAwsSecurityFindingFiltersOutput) Region() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.Region }).(InsightStringFilterArrayOutput)
}

// The solution-generated identifier for a related finding.
func (o InsightAwsSecurityFindingFiltersOutput) RelatedFindingsId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.RelatedFindingsId }).(InsightStringFilterArrayOutput)
}

// The ARN of the solution that generated a related finding.
func (o InsightAwsSecurityFindingFiltersOutput) RelatedFindingsProductArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.RelatedFindingsProductArn }).(InsightStringFilterArrayOutput)
}

// The ARN of the application that is related to a finding.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceApplicationArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceApplicationArn }).(InsightStringFilterArrayOutput)
}

// The name of the application that is related to a finding.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceApplicationName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceApplicationName }).(InsightStringFilterArrayOutput)
}

// The IAM profile ARN of the instance.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsEc2InstanceIamInstanceProfileArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.ResourceAwsEc2InstanceIamInstanceProfileArn
	}).(InsightStringFilterArrayOutput)
}

// The Amazon Machine Image (AMI) ID of the instance.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsEc2InstanceImageId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceAwsEc2InstanceImageId }).(InsightStringFilterArrayOutput)
}

// The IPv4 addresses associated with the instance.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsEc2InstanceIpV4Addresses() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightIpFilter {
		return v.ResourceAwsEc2InstanceIpV4Addresses
	}).(InsightIpFilterArrayOutput)
}

// The IPv6 addresses associated with the instance.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsEc2InstanceIpV6Addresses() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightIpFilter {
		return v.ResourceAwsEc2InstanceIpV6Addresses
	}).(InsightIpFilterArrayOutput)
}

// The key name associated with the instance.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsEc2InstanceKeyName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceAwsEc2InstanceKeyName }).(InsightStringFilterArrayOutput)
}

// The date and time the instance was launched.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsEc2InstanceLaunchedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter {
		return v.ResourceAwsEc2InstanceLaunchedAt
	}).(InsightDateFilterArrayOutput)
}

// The identifier of the subnet that the instance was launched in.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsEc2InstanceSubnetId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.ResourceAwsEc2InstanceSubnetId
	}).(InsightStringFilterArrayOutput)
}

// The instance type of the instance.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsEc2InstanceType() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceAwsEc2InstanceType }).(InsightStringFilterArrayOutput)
}

// The identifier of the VPC that the instance was launched in.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsEc2InstanceVpcId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceAwsEc2InstanceVpcId }).(InsightStringFilterArrayOutput)
}

// The creation date/time of the IAM access key related to a finding.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsIamAccessKeyCreatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter {
		return v.ResourceAwsIamAccessKeyCreatedAt
	}).(InsightDateFilterArrayOutput)
}

// The name of the principal that is associated with an IAM access key.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsIamAccessKeyPrincipalName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.ResourceAwsIamAccessKeyPrincipalName
	}).(InsightStringFilterArrayOutput)
}

// The status of the IAM access key related to a finding.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsIamAccessKeyStatus() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceAwsIamAccessKeyStatus }).(InsightStringFilterArrayOutput)
}

// The name of an IAM user.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsIamUserUserName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceAwsIamUserUserName }).(InsightStringFilterArrayOutput)
}

// The canonical user ID of the owner of the S3 bucket.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsS3BucketOwnerId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceAwsS3BucketOwnerId }).(InsightStringFilterArrayOutput)
}

// The display name of the owner of the S3 bucket.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsS3BucketOwnerName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceAwsS3BucketOwnerName }).(InsightStringFilterArrayOutput)
}

// The identifier of the image related to a finding.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceContainerImageId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceContainerImageId }).(InsightStringFilterArrayOutput)
}

// The name of the image related to a finding.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceContainerImageName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceContainerImageName }).(InsightStringFilterArrayOutput)
}

// A timestamp that identifies when the container was started.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceContainerLaunchedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter { return v.ResourceContainerLaunchedAt }).(InsightDateFilterArrayOutput)
}

// The name of the container related to a finding.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceContainerName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceContainerName }).(InsightStringFilterArrayOutput)
}

// The details of a resource that doesn't have a specific subfield for the resource type defined.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceDetailsOther() InsightMapFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightMapFilter { return v.ResourceDetailsOther }).(InsightMapFilterArrayOutput)
}

// The canonical identifier for the given resource type.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceId }).(InsightStringFilterArrayOutput)
}

// The canonical AWS partition name that the Region is assigned to.
func (o InsightAwsSecurityFindingFiltersOutput) ResourcePartition() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourcePartition }).(InsightStringFilterArrayOutput)
}

// The canonical AWS external Region name where this resource is located.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceRegion() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceRegion }).(InsightStringFilterArrayOutput)
}

// A list of AWS tags associated with a resource at the time the finding was processed.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceTags() InsightMapFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightMapFilter { return v.ResourceTags }).(InsightMapFilterArrayOutput)
}

// Specifies the type of the resource that details are provided for.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceType() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceType }).(InsightStringFilterArrayOutput)
}

// Indicates whether or not sample findings are included in the filter results.
func (o InsightAwsSecurityFindingFiltersOutput) Sample() InsightBooleanFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightBooleanFilter { return v.Sample }).(InsightBooleanFilterArrayOutput)
}

// The label of a finding's severity.
func (o InsightAwsSecurityFindingFiltersOutput) SeverityLabel() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.SeverityLabel }).(InsightStringFilterArrayOutput)
}

// A URL that links to a page about the current finding in the security findings provider's solution.
func (o InsightAwsSecurityFindingFiltersOutput) SourceUrl() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.SourceUrl }).(InsightStringFilterArrayOutput)
}

// The category of a threat intelligence indicator.
func (o InsightAwsSecurityFindingFiltersOutput) ThreatIntelIndicatorCategory() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ThreatIntelIndicatorCategory }).(InsightStringFilterArrayOutput)
}

// A timestamp that identifies the last observation of a threat intelligence indicator.
func (o InsightAwsSecurityFindingFiltersOutput) ThreatIntelIndicatorLastObservedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter {
		return v.ThreatIntelIndicatorLastObservedAt
	}).(InsightDateFilterArrayOutput)
}

// The source of the threat intelligence.
func (o InsightAwsSecurityFindingFiltersOutput) ThreatIntelIndicatorSource() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ThreatIntelIndicatorSource }).(InsightStringFilterArrayOutput)
}

// The URL for more details from the source of the threat intelligence.
func (o InsightAwsSecurityFindingFiltersOutput) ThreatIntelIndicatorSourceUrl() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ThreatIntelIndicatorSourceUrl }).(InsightStringFilterArrayOutput)
}

// The type of a threat intelligence indicator.
func (o InsightAwsSecurityFindingFiltersOutput) ThreatIntelIndicatorType() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ThreatIntelIndicatorType }).(InsightStringFilterArrayOutput)
}

// The value of a threat intelligence indicator.
func (o InsightAwsSecurityFindingFiltersOutput) ThreatIntelIndicatorValue() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ThreatIntelIndicatorValue }).(InsightStringFilterArrayOutput)
}

// A finding's title.
func (o InsightAwsSecurityFindingFiltersOutput) Title() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.Title }).(InsightStringFilterArrayOutput)
}

// A finding type in the format of namespace/category/classifier that classifies a finding.
func (o InsightAwsSecurityFindingFiltersOutput) Type() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.Type }).(InsightStringFilterArrayOutput)
}

// An ISO8601-formatted timestamp that indicates when the security findings provider last updated the finding record.
func (o InsightAwsSecurityFindingFiltersOutput) UpdatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter { return v.UpdatedAt }).(InsightDateFilterArrayOutput)
}

// A list of name/value string pairs associated with the finding.
func (o InsightAwsSecurityFindingFiltersOutput) UserDefinedFields() InsightMapFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightMapFilter { return v.UserDefinedFields }).(InsightMapFilterArrayOutput)
}

// The veracity of a finding.
func (o InsightAwsSecurityFindingFiltersOutput) VerificationState() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.VerificationState }).(InsightStringFilterArrayOutput)
}

// Indicates whether a software vulnerability in your environment has a known exploit.
func (o InsightAwsSecurityFindingFiltersOutput) VulnerabilitiesExploitAvailable() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.VulnerabilitiesExploitAvailable
	}).(InsightStringFilterArrayOutput)
}

// Indicates whether a vulnerability is fixed in a newer version of the affected software packages.
func (o InsightAwsSecurityFindingFiltersOutput) VulnerabilitiesFixAvailable() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.VulnerabilitiesFixAvailable }).(InsightStringFilterArrayOutput)
}

// The workflow state of a finding.
func (o InsightAwsSecurityFindingFiltersOutput) WorkflowState() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.WorkflowState }).(InsightStringFilterArrayOutput)
}

// The status of the investigation into a finding.
func (o InsightAwsSecurityFindingFiltersOutput) WorkflowStatus() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.WorkflowStatus }).(InsightStringFilterArrayOutput)
}

type InsightAwsSecurityFindingFiltersPtrOutput struct{ *pulumi.OutputState }

func (InsightAwsSecurityFindingFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightAwsSecurityFindingFilters)(nil)).Elem()
}

func (o InsightAwsSecurityFindingFiltersPtrOutput) ToInsightAwsSecurityFindingFiltersPtrOutput() InsightAwsSecurityFindingFiltersPtrOutput {
	return o
}

func (o InsightAwsSecurityFindingFiltersPtrOutput) ToInsightAwsSecurityFindingFiltersPtrOutputWithContext(ctx context.Context) InsightAwsSecurityFindingFiltersPtrOutput {
	return o
}

func (o InsightAwsSecurityFindingFiltersPtrOutput) Elem() InsightAwsSecurityFindingFiltersOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) InsightAwsSecurityFindingFilters {
		if v != nil {
			return *v
		}
		var ret InsightAwsSecurityFindingFilters
		return ret
	}).(InsightAwsSecurityFindingFiltersOutput)
}

// The AWS account ID in which a finding is generated.
func (o InsightAwsSecurityFindingFiltersPtrOutput) AwsAccountId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(InsightStringFilterArrayOutput)
}

// The name of the AWS account in which a finding is generated.
func (o InsightAwsSecurityFindingFiltersPtrOutput) AwsAccountName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.AwsAccountName
	}).(InsightStringFilterArrayOutput)
}

// The name of the findings provider (company) that owns the solution (product) that generates findings.
func (o InsightAwsSecurityFindingFiltersPtrOutput) CompanyName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.CompanyName
	}).(InsightStringFilterArrayOutput)
}

// The unique identifier of a standard in which a control is enabled.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ComplianceAssociatedStandardsId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ComplianceAssociatedStandardsId
	}).(InsightStringFilterArrayOutput)
}

// The unique identifier of a control across standards.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ComplianceSecurityControlId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ComplianceSecurityControlId
	}).(InsightStringFilterArrayOutput)
}

// The name of a security control parameter.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ComplianceSecurityControlParametersName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ComplianceSecurityControlParametersName
	}).(InsightStringFilterArrayOutput)
}

// The current value of a security control parameter.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ComplianceSecurityControlParametersValue() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ComplianceSecurityControlParametersValue
	}).(InsightStringFilterArrayOutput)
}

// Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ComplianceStatus() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ComplianceStatus
	}).(InsightStringFilterArrayOutput)
}

// A finding's confidence.
func (o InsightAwsSecurityFindingFiltersPtrOutput) Confidence() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		if v == nil {
			return nil
		}
		return v.Confidence
	}).(InsightNumberFilterArrayOutput)
}

// An ISO8601-formatted timestamp that indicates when the security findings provider captured the potential security issue that a finding captured.
func (o InsightAwsSecurityFindingFiltersPtrOutput) CreatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(InsightDateFilterArrayOutput)
}

// The level of importance assigned to the resources associated with the finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) Criticality() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		if v == nil {
			return nil
		}
		return v.Criticality
	}).(InsightNumberFilterArrayOutput)
}

// A finding's description.
func (o InsightAwsSecurityFindingFiltersPtrOutput) Description() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.Description
	}).(InsightStringFilterArrayOutput)
}

// The finding provider value for the finding confidence.
func (o InsightAwsSecurityFindingFiltersPtrOutput) FindingProviderFieldsConfidence() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		if v == nil {
			return nil
		}
		return v.FindingProviderFieldsConfidence
	}).(InsightNumberFilterArrayOutput)
}

// The finding provider value for the level of importance assigned to the resources associated with the findings.
func (o InsightAwsSecurityFindingFiltersPtrOutput) FindingProviderFieldsCriticality() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		if v == nil {
			return nil
		}
		return v.FindingProviderFieldsCriticality
	}).(InsightNumberFilterArrayOutput)
}

// The finding identifier of a related finding that is identified by the finding provider.
func (o InsightAwsSecurityFindingFiltersPtrOutput) FindingProviderFieldsRelatedFindingsId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.FindingProviderFieldsRelatedFindingsId
	}).(InsightStringFilterArrayOutput)
}

// The ARN of the solution that generated a related finding that is identified by the finding provider.
func (o InsightAwsSecurityFindingFiltersPtrOutput) FindingProviderFieldsRelatedFindingsProductArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.FindingProviderFieldsRelatedFindingsProductArn
	}).(InsightStringFilterArrayOutput)
}

// The finding provider value for the severity label.
func (o InsightAwsSecurityFindingFiltersPtrOutput) FindingProviderFieldsSeverityLabel() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.FindingProviderFieldsSeverityLabel
	}).(InsightStringFilterArrayOutput)
}

// The finding provider's original value for the severity.
func (o InsightAwsSecurityFindingFiltersPtrOutput) FindingProviderFieldsSeverityOriginal() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.FindingProviderFieldsSeverityOriginal
	}).(InsightStringFilterArrayOutput)
}

// One or more finding types that the finding provider assigned to the finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) FindingProviderFieldsTypes() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.FindingProviderFieldsTypes
	}).(InsightStringFilterArrayOutput)
}

// An ISO8601-formatted timestamp that indicates when the security findings provider first observed the potential security issue that a finding captured.
func (o InsightAwsSecurityFindingFiltersPtrOutput) FirstObservedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.FirstObservedAt
	}).(InsightDateFilterArrayOutput)
}

// The identifier for the solution-specific component (a discrete unit of logic) that generated a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) GeneratorId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.GeneratorId
	}).(InsightStringFilterArrayOutput)
}

// The security findings provider-specific identifier for a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) Id() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.Id
	}).(InsightStringFilterArrayOutput)
}

// An ISO8601-formatted timestamp that indicates when the security findings provider most recently observed the potential security issue that a finding captured.
func (o InsightAwsSecurityFindingFiltersPtrOutput) LastObservedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.LastObservedAt
	}).(InsightDateFilterArrayOutput)
}

// The name of the malware that was observed.
func (o InsightAwsSecurityFindingFiltersPtrOutput) MalwareName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.MalwareName
	}).(InsightStringFilterArrayOutput)
}

// The filesystem path of the malware that was observed.
func (o InsightAwsSecurityFindingFiltersPtrOutput) MalwarePath() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.MalwarePath
	}).(InsightStringFilterArrayOutput)
}

// The state of the malware that was observed.
func (o InsightAwsSecurityFindingFiltersPtrOutput) MalwareState() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.MalwareState
	}).(InsightStringFilterArrayOutput)
}

// The type of the malware that was observed.
func (o InsightAwsSecurityFindingFiltersPtrOutput) MalwareType() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.MalwareType
	}).(InsightStringFilterArrayOutput)
}

// The destination domain of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkDestinationDomain() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.NetworkDestinationDomain
	}).(InsightStringFilterArrayOutput)
}

// The destination IPv4 address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkDestinationIpV4() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightIpFilter {
		if v == nil {
			return nil
		}
		return v.NetworkDestinationIpV4
	}).(InsightIpFilterArrayOutput)
}

// The destination IPv6 address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkDestinationIpV6() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightIpFilter {
		if v == nil {
			return nil
		}
		return v.NetworkDestinationIpV6
	}).(InsightIpFilterArrayOutput)
}

// The destination port of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkDestinationPort() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		if v == nil {
			return nil
		}
		return v.NetworkDestinationPort
	}).(InsightNumberFilterArrayOutput)
}

// Indicates the direction of network traffic associated with a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkDirection() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.NetworkDirection
	}).(InsightStringFilterArrayOutput)
}

// The protocol of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkProtocol() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.NetworkProtocol
	}).(InsightStringFilterArrayOutput)
}

// The source domain of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkSourceDomain() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.NetworkSourceDomain
	}).(InsightStringFilterArrayOutput)
}

// The source IPv4 address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkSourceIpV4() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightIpFilter {
		if v == nil {
			return nil
		}
		return v.NetworkSourceIpV4
	}).(InsightIpFilterArrayOutput)
}

// The source IPv6 address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkSourceIpV6() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightIpFilter {
		if v == nil {
			return nil
		}
		return v.NetworkSourceIpV6
	}).(InsightIpFilterArrayOutput)
}

// The source media access control (MAC) address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkSourceMac() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.NetworkSourceMac
	}).(InsightStringFilterArrayOutput)
}

// The source port of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkSourcePort() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		if v == nil {
			return nil
		}
		return v.NetworkSourcePort
	}).(InsightNumberFilterArrayOutput)
}

// The text of a note.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NoteText() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.NoteText
	}).(InsightStringFilterArrayOutput)
}

// The timestamp of when the note was updated.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NoteUpdatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.NoteUpdatedAt
	}).(InsightDateFilterArrayOutput)
}

// The principal that created a note.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NoteUpdatedBy() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.NoteUpdatedBy
	}).(InsightStringFilterArrayOutput)
}

// A timestamp that identifies when the process was launched.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ProcessLaunchedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.ProcessLaunchedAt
	}).(InsightDateFilterArrayOutput)
}

// The name of the process.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ProcessName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ProcessName
	}).(InsightStringFilterArrayOutput)
}

// The parent process ID.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ProcessParentPid() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		if v == nil {
			return nil
		}
		return v.ProcessParentPid
	}).(InsightNumberFilterArrayOutput)
}

// The path to the process executable.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ProcessPath() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ProcessPath
	}).(InsightStringFilterArrayOutput)
}

// The process ID.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ProcessPid() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		if v == nil {
			return nil
		}
		return v.ProcessPid
	}).(InsightNumberFilterArrayOutput)
}

// A timestamp that identifies when the process was terminated.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ProcessTerminatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.ProcessTerminatedAt
	}).(InsightDateFilterArrayOutput)
}

// The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ProductArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ProductArn
	}).(InsightStringFilterArrayOutput)
}

// A data type where security findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ProductFields() InsightMapFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightMapFilter {
		if v == nil {
			return nil
		}
		return v.ProductFields
	}).(InsightMapFilterArrayOutput)
}

// The name of the solution (product) that generates findings.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ProductName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ProductName
	}).(InsightStringFilterArrayOutput)
}

// The recommendation of what to do about the issue described in a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) RecommendationText() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.RecommendationText
	}).(InsightStringFilterArrayOutput)
}

// The updated record state for the finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) RecordState() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.RecordState
	}).(InsightStringFilterArrayOutput)
}

// The Region from which the finding was generated.
func (o InsightAwsSecurityFindingFiltersPtrOutput) Region() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.Region
	}).(InsightStringFilterArrayOutput)
}

// The solution-generated identifier for a related finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) RelatedFindingsId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.RelatedFindingsId
	}).(InsightStringFilterArrayOutput)
}

// The ARN of the solution that generated a related finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) RelatedFindingsProductArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.RelatedFindingsProductArn
	}).(InsightStringFilterArrayOutput)
}

// The ARN of the application that is related to a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceApplicationArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceApplicationArn
	}).(InsightStringFilterArrayOutput)
}

// The name of the application that is related to a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceApplicationName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceApplicationName
	}).(InsightStringFilterArrayOutput)
}

// The IAM profile ARN of the instance.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsEc2InstanceIamInstanceProfileArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsEc2InstanceIamInstanceProfileArn
	}).(InsightStringFilterArrayOutput)
}

// The Amazon Machine Image (AMI) ID of the instance.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsEc2InstanceImageId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsEc2InstanceImageId
	}).(InsightStringFilterArrayOutput)
}

// The IPv4 addresses associated with the instance.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsEc2InstanceIpV4Addresses() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightIpFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsEc2InstanceIpV4Addresses
	}).(InsightIpFilterArrayOutput)
}

// The IPv6 addresses associated with the instance.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsEc2InstanceIpV6Addresses() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightIpFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsEc2InstanceIpV6Addresses
	}).(InsightIpFilterArrayOutput)
}

// The key name associated with the instance.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsEc2InstanceKeyName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsEc2InstanceKeyName
	}).(InsightStringFilterArrayOutput)
}

// The date and time the instance was launched.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsEc2InstanceLaunchedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsEc2InstanceLaunchedAt
	}).(InsightDateFilterArrayOutput)
}

// The identifier of the subnet that the instance was launched in.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsEc2InstanceSubnetId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsEc2InstanceSubnetId
	}).(InsightStringFilterArrayOutput)
}

// The instance type of the instance.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsEc2InstanceType() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsEc2InstanceType
	}).(InsightStringFilterArrayOutput)
}

// The identifier of the VPC that the instance was launched in.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsEc2InstanceVpcId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsEc2InstanceVpcId
	}).(InsightStringFilterArrayOutput)
}

// The creation date/time of the IAM access key related to a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsIamAccessKeyCreatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsIamAccessKeyCreatedAt
	}).(InsightDateFilterArrayOutput)
}

// The name of the principal that is associated with an IAM access key.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsIamAccessKeyPrincipalName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsIamAccessKeyPrincipalName
	}).(InsightStringFilterArrayOutput)
}

// The status of the IAM access key related to a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsIamAccessKeyStatus() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsIamAccessKeyStatus
	}).(InsightStringFilterArrayOutput)
}

// The name of an IAM user.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsIamUserUserName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsIamUserUserName
	}).(InsightStringFilterArrayOutput)
}

// The canonical user ID of the owner of the S3 bucket.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsS3BucketOwnerId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsS3BucketOwnerId
	}).(InsightStringFilterArrayOutput)
}

// The display name of the owner of the S3 bucket.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsS3BucketOwnerName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsS3BucketOwnerName
	}).(InsightStringFilterArrayOutput)
}

// The identifier of the image related to a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceContainerImageId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceContainerImageId
	}).(InsightStringFilterArrayOutput)
}

// The name of the image related to a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceContainerImageName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceContainerImageName
	}).(InsightStringFilterArrayOutput)
}

// A timestamp that identifies when the container was started.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceContainerLaunchedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.ResourceContainerLaunchedAt
	}).(InsightDateFilterArrayOutput)
}

// The name of the container related to a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceContainerName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceContainerName
	}).(InsightStringFilterArrayOutput)
}

// The details of a resource that doesn't have a specific subfield for the resource type defined.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceDetailsOther() InsightMapFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightMapFilter {
		if v == nil {
			return nil
		}
		return v.ResourceDetailsOther
	}).(InsightMapFilterArrayOutput)
}

// The canonical identifier for the given resource type.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(InsightStringFilterArrayOutput)
}

// The canonical AWS partition name that the Region is assigned to.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourcePartition() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourcePartition
	}).(InsightStringFilterArrayOutput)
}

// The canonical AWS external Region name where this resource is located.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceRegion() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceRegion
	}).(InsightStringFilterArrayOutput)
}

// A list of AWS tags associated with a resource at the time the finding was processed.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceTags() InsightMapFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightMapFilter {
		if v == nil {
			return nil
		}
		return v.ResourceTags
	}).(InsightMapFilterArrayOutput)
}

// Specifies the type of the resource that details are provided for.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceType() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceType
	}).(InsightStringFilterArrayOutput)
}

// Indicates whether or not sample findings are included in the filter results.
func (o InsightAwsSecurityFindingFiltersPtrOutput) Sample() InsightBooleanFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightBooleanFilter {
		if v == nil {
			return nil
		}
		return v.Sample
	}).(InsightBooleanFilterArrayOutput)
}

// The label of a finding's severity.
func (o InsightAwsSecurityFindingFiltersPtrOutput) SeverityLabel() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.SeverityLabel
	}).(InsightStringFilterArrayOutput)
}

// A URL that links to a page about the current finding in the security findings provider's solution.
func (o InsightAwsSecurityFindingFiltersPtrOutput) SourceUrl() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.SourceUrl
	}).(InsightStringFilterArrayOutput)
}

// The category of a threat intelligence indicator.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ThreatIntelIndicatorCategory() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ThreatIntelIndicatorCategory
	}).(InsightStringFilterArrayOutput)
}

// A timestamp that identifies the last observation of a threat intelligence indicator.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ThreatIntelIndicatorLastObservedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.ThreatIntelIndicatorLastObservedAt
	}).(InsightDateFilterArrayOutput)
}

// The source of the threat intelligence.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ThreatIntelIndicatorSource() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ThreatIntelIndicatorSource
	}).(InsightStringFilterArrayOutput)
}

// The URL for more details from the source of the threat intelligence.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ThreatIntelIndicatorSourceUrl() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ThreatIntelIndicatorSourceUrl
	}).(InsightStringFilterArrayOutput)
}

// The type of a threat intelligence indicator.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ThreatIntelIndicatorType() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ThreatIntelIndicatorType
	}).(InsightStringFilterArrayOutput)
}

// The value of a threat intelligence indicator.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ThreatIntelIndicatorValue() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ThreatIntelIndicatorValue
	}).(InsightStringFilterArrayOutput)
}

// A finding's title.
func (o InsightAwsSecurityFindingFiltersPtrOutput) Title() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.Title
	}).(InsightStringFilterArrayOutput)
}

// A finding type in the format of namespace/category/classifier that classifies a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) Type() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.Type
	}).(InsightStringFilterArrayOutput)
}

// An ISO8601-formatted timestamp that indicates when the security findings provider last updated the finding record.
func (o InsightAwsSecurityFindingFiltersPtrOutput) UpdatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(InsightDateFilterArrayOutput)
}

// A list of name/value string pairs associated with the finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) UserDefinedFields() InsightMapFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightMapFilter {
		if v == nil {
			return nil
		}
		return v.UserDefinedFields
	}).(InsightMapFilterArrayOutput)
}

// The veracity of a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) VerificationState() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.VerificationState
	}).(InsightStringFilterArrayOutput)
}

// Indicates whether a software vulnerability in your environment has a known exploit.
func (o InsightAwsSecurityFindingFiltersPtrOutput) VulnerabilitiesExploitAvailable() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.VulnerabilitiesExploitAvailable
	}).(InsightStringFilterArrayOutput)
}

// Indicates whether a vulnerability is fixed in a newer version of the affected software packages.
func (o InsightAwsSecurityFindingFiltersPtrOutput) VulnerabilitiesFixAvailable() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.VulnerabilitiesFixAvailable
	}).(InsightStringFilterArrayOutput)
}

// The workflow state of a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) WorkflowState() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.WorkflowState
	}).(InsightStringFilterArrayOutput)
}

// The status of the investigation into a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) WorkflowStatus() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.WorkflowStatus
	}).(InsightStringFilterArrayOutput)
}

// Boolean filter for querying findings.
type InsightBooleanFilter struct {
	// The value of the boolean.
	Value bool `pulumi:"value"`
}

// InsightBooleanFilterInput is an input type that accepts InsightBooleanFilterArgs and InsightBooleanFilterOutput values.
// You can construct a concrete instance of `InsightBooleanFilterInput` via:
//
//	InsightBooleanFilterArgs{...}
type InsightBooleanFilterInput interface {
	pulumi.Input

	ToInsightBooleanFilterOutput() InsightBooleanFilterOutput
	ToInsightBooleanFilterOutputWithContext(context.Context) InsightBooleanFilterOutput
}

// Boolean filter for querying findings.
type InsightBooleanFilterArgs struct {
	// The value of the boolean.
	Value pulumi.BoolInput `pulumi:"value"`
}

func (InsightBooleanFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightBooleanFilter)(nil)).Elem()
}

func (i InsightBooleanFilterArgs) ToInsightBooleanFilterOutput() InsightBooleanFilterOutput {
	return i.ToInsightBooleanFilterOutputWithContext(context.Background())
}

func (i InsightBooleanFilterArgs) ToInsightBooleanFilterOutputWithContext(ctx context.Context) InsightBooleanFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightBooleanFilterOutput)
}

// InsightBooleanFilterArrayInput is an input type that accepts InsightBooleanFilterArray and InsightBooleanFilterArrayOutput values.
// You can construct a concrete instance of `InsightBooleanFilterArrayInput` via:
//
//	InsightBooleanFilterArray{ InsightBooleanFilterArgs{...} }
type InsightBooleanFilterArrayInput interface {
	pulumi.Input

	ToInsightBooleanFilterArrayOutput() InsightBooleanFilterArrayOutput
	ToInsightBooleanFilterArrayOutputWithContext(context.Context) InsightBooleanFilterArrayOutput
}

type InsightBooleanFilterArray []InsightBooleanFilterInput

func (InsightBooleanFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightBooleanFilter)(nil)).Elem()
}

func (i InsightBooleanFilterArray) ToInsightBooleanFilterArrayOutput() InsightBooleanFilterArrayOutput {
	return i.ToInsightBooleanFilterArrayOutputWithContext(context.Background())
}

func (i InsightBooleanFilterArray) ToInsightBooleanFilterArrayOutputWithContext(ctx context.Context) InsightBooleanFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightBooleanFilterArrayOutput)
}

// Boolean filter for querying findings.
type InsightBooleanFilterOutput struct{ *pulumi.OutputState }

func (InsightBooleanFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightBooleanFilter)(nil)).Elem()
}

func (o InsightBooleanFilterOutput) ToInsightBooleanFilterOutput() InsightBooleanFilterOutput {
	return o
}

func (o InsightBooleanFilterOutput) ToInsightBooleanFilterOutputWithContext(ctx context.Context) InsightBooleanFilterOutput {
	return o
}

// The value of the boolean.
func (o InsightBooleanFilterOutput) Value() pulumi.BoolOutput {
	return o.ApplyT(func(v InsightBooleanFilter) bool { return v.Value }).(pulumi.BoolOutput)
}

type InsightBooleanFilterArrayOutput struct{ *pulumi.OutputState }

func (InsightBooleanFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightBooleanFilter)(nil)).Elem()
}

func (o InsightBooleanFilterArrayOutput) ToInsightBooleanFilterArrayOutput() InsightBooleanFilterArrayOutput {
	return o
}

func (o InsightBooleanFilterArrayOutput) ToInsightBooleanFilterArrayOutputWithContext(ctx context.Context) InsightBooleanFilterArrayOutput {
	return o
}

func (o InsightBooleanFilterArrayOutput) Index(i pulumi.IntInput) InsightBooleanFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightBooleanFilter {
		return vs[0].([]InsightBooleanFilter)[vs[1].(int)]
	}).(InsightBooleanFilterOutput)
}

// A date filter for querying findings.
type InsightDateFilter struct {
	DateRange *InsightDateRange `pulumi:"dateRange"`
	End       *string           `pulumi:"end"`
	Start     *string           `pulumi:"start"`
}

// InsightDateFilterInput is an input type that accepts InsightDateFilterArgs and InsightDateFilterOutput values.
// You can construct a concrete instance of `InsightDateFilterInput` via:
//
//	InsightDateFilterArgs{...}
type InsightDateFilterInput interface {
	pulumi.Input

	ToInsightDateFilterOutput() InsightDateFilterOutput
	ToInsightDateFilterOutputWithContext(context.Context) InsightDateFilterOutput
}

// A date filter for querying findings.
type InsightDateFilterArgs struct {
	DateRange InsightDateRangePtrInput `pulumi:"dateRange"`
	End       pulumi.StringPtrInput    `pulumi:"end"`
	Start     pulumi.StringPtrInput    `pulumi:"start"`
}

func (InsightDateFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightDateFilter)(nil)).Elem()
}

func (i InsightDateFilterArgs) ToInsightDateFilterOutput() InsightDateFilterOutput {
	return i.ToInsightDateFilterOutputWithContext(context.Background())
}

func (i InsightDateFilterArgs) ToInsightDateFilterOutputWithContext(ctx context.Context) InsightDateFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightDateFilterOutput)
}

// InsightDateFilterArrayInput is an input type that accepts InsightDateFilterArray and InsightDateFilterArrayOutput values.
// You can construct a concrete instance of `InsightDateFilterArrayInput` via:
//
//	InsightDateFilterArray{ InsightDateFilterArgs{...} }
type InsightDateFilterArrayInput interface {
	pulumi.Input

	ToInsightDateFilterArrayOutput() InsightDateFilterArrayOutput
	ToInsightDateFilterArrayOutputWithContext(context.Context) InsightDateFilterArrayOutput
}

type InsightDateFilterArray []InsightDateFilterInput

func (InsightDateFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightDateFilter)(nil)).Elem()
}

func (i InsightDateFilterArray) ToInsightDateFilterArrayOutput() InsightDateFilterArrayOutput {
	return i.ToInsightDateFilterArrayOutputWithContext(context.Background())
}

func (i InsightDateFilterArray) ToInsightDateFilterArrayOutputWithContext(ctx context.Context) InsightDateFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightDateFilterArrayOutput)
}

// A date filter for querying findings.
type InsightDateFilterOutput struct{ *pulumi.OutputState }

func (InsightDateFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightDateFilter)(nil)).Elem()
}

func (o InsightDateFilterOutput) ToInsightDateFilterOutput() InsightDateFilterOutput {
	return o
}

func (o InsightDateFilterOutput) ToInsightDateFilterOutputWithContext(ctx context.Context) InsightDateFilterOutput {
	return o
}

func (o InsightDateFilterOutput) DateRange() InsightDateRangePtrOutput {
	return o.ApplyT(func(v InsightDateFilter) *InsightDateRange { return v.DateRange }).(InsightDateRangePtrOutput)
}

func (o InsightDateFilterOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightDateFilter) *string { return v.End }).(pulumi.StringPtrOutput)
}

func (o InsightDateFilterOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightDateFilter) *string { return v.Start }).(pulumi.StringPtrOutput)
}

type InsightDateFilterArrayOutput struct{ *pulumi.OutputState }

func (InsightDateFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightDateFilter)(nil)).Elem()
}

func (o InsightDateFilterArrayOutput) ToInsightDateFilterArrayOutput() InsightDateFilterArrayOutput {
	return o
}

func (o InsightDateFilterArrayOutput) ToInsightDateFilterArrayOutputWithContext(ctx context.Context) InsightDateFilterArrayOutput {
	return o
}

func (o InsightDateFilterArrayOutput) Index(i pulumi.IntInput) InsightDateFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightDateFilter {
		return vs[0].([]InsightDateFilter)[vs[1].(int)]
	}).(InsightDateFilterOutput)
}

// A date range for the date filter.
type InsightDateRange struct {
	// A date range unit for the date filter.
	Unit InsightDateRangeUnit `pulumi:"unit"`
	// A date range value for the date filter.
	Value float64 `pulumi:"value"`
}

// InsightDateRangeInput is an input type that accepts InsightDateRangeArgs and InsightDateRangeOutput values.
// You can construct a concrete instance of `InsightDateRangeInput` via:
//
//	InsightDateRangeArgs{...}
type InsightDateRangeInput interface {
	pulumi.Input

	ToInsightDateRangeOutput() InsightDateRangeOutput
	ToInsightDateRangeOutputWithContext(context.Context) InsightDateRangeOutput
}

// A date range for the date filter.
type InsightDateRangeArgs struct {
	// A date range unit for the date filter.
	Unit InsightDateRangeUnitInput `pulumi:"unit"`
	// A date range value for the date filter.
	Value pulumi.Float64Input `pulumi:"value"`
}

func (InsightDateRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightDateRange)(nil)).Elem()
}

func (i InsightDateRangeArgs) ToInsightDateRangeOutput() InsightDateRangeOutput {
	return i.ToInsightDateRangeOutputWithContext(context.Background())
}

func (i InsightDateRangeArgs) ToInsightDateRangeOutputWithContext(ctx context.Context) InsightDateRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightDateRangeOutput)
}

func (i InsightDateRangeArgs) ToInsightDateRangePtrOutput() InsightDateRangePtrOutput {
	return i.ToInsightDateRangePtrOutputWithContext(context.Background())
}

func (i InsightDateRangeArgs) ToInsightDateRangePtrOutputWithContext(ctx context.Context) InsightDateRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightDateRangeOutput).ToInsightDateRangePtrOutputWithContext(ctx)
}

// InsightDateRangePtrInput is an input type that accepts InsightDateRangeArgs, InsightDateRangePtr and InsightDateRangePtrOutput values.
// You can construct a concrete instance of `InsightDateRangePtrInput` via:
//
//	        InsightDateRangeArgs{...}
//
//	or:
//
//	        nil
type InsightDateRangePtrInput interface {
	pulumi.Input

	ToInsightDateRangePtrOutput() InsightDateRangePtrOutput
	ToInsightDateRangePtrOutputWithContext(context.Context) InsightDateRangePtrOutput
}

type insightDateRangePtrType InsightDateRangeArgs

func InsightDateRangePtr(v *InsightDateRangeArgs) InsightDateRangePtrInput {
	return (*insightDateRangePtrType)(v)
}

func (*insightDateRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightDateRange)(nil)).Elem()
}

func (i *insightDateRangePtrType) ToInsightDateRangePtrOutput() InsightDateRangePtrOutput {
	return i.ToInsightDateRangePtrOutputWithContext(context.Background())
}

func (i *insightDateRangePtrType) ToInsightDateRangePtrOutputWithContext(ctx context.Context) InsightDateRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightDateRangePtrOutput)
}

// A date range for the date filter.
type InsightDateRangeOutput struct{ *pulumi.OutputState }

func (InsightDateRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightDateRange)(nil)).Elem()
}

func (o InsightDateRangeOutput) ToInsightDateRangeOutput() InsightDateRangeOutput {
	return o
}

func (o InsightDateRangeOutput) ToInsightDateRangeOutputWithContext(ctx context.Context) InsightDateRangeOutput {
	return o
}

func (o InsightDateRangeOutput) ToInsightDateRangePtrOutput() InsightDateRangePtrOutput {
	return o.ToInsightDateRangePtrOutputWithContext(context.Background())
}

func (o InsightDateRangeOutput) ToInsightDateRangePtrOutputWithContext(ctx context.Context) InsightDateRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InsightDateRange) *InsightDateRange {
		return &v
	}).(InsightDateRangePtrOutput)
}

// A date range unit for the date filter.
func (o InsightDateRangeOutput) Unit() InsightDateRangeUnitOutput {
	return o.ApplyT(func(v InsightDateRange) InsightDateRangeUnit { return v.Unit }).(InsightDateRangeUnitOutput)
}

// A date range value for the date filter.
func (o InsightDateRangeOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v InsightDateRange) float64 { return v.Value }).(pulumi.Float64Output)
}

type InsightDateRangePtrOutput struct{ *pulumi.OutputState }

func (InsightDateRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightDateRange)(nil)).Elem()
}

func (o InsightDateRangePtrOutput) ToInsightDateRangePtrOutput() InsightDateRangePtrOutput {
	return o
}

func (o InsightDateRangePtrOutput) ToInsightDateRangePtrOutputWithContext(ctx context.Context) InsightDateRangePtrOutput {
	return o
}

func (o InsightDateRangePtrOutput) Elem() InsightDateRangeOutput {
	return o.ApplyT(func(v *InsightDateRange) InsightDateRange {
		if v != nil {
			return *v
		}
		var ret InsightDateRange
		return ret
	}).(InsightDateRangeOutput)
}

// A date range unit for the date filter.
func (o InsightDateRangePtrOutput) Unit() InsightDateRangeUnitPtrOutput {
	return o.ApplyT(func(v *InsightDateRange) *InsightDateRangeUnit {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(InsightDateRangeUnitPtrOutput)
}

// A date range value for the date filter.
func (o InsightDateRangePtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InsightDateRange) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

// The IP filter for querying findings.
type InsightIpFilter struct {
	// A finding's CIDR value.
	Cidr *string `pulumi:"cidr"`
}

// InsightIpFilterInput is an input type that accepts InsightIpFilterArgs and InsightIpFilterOutput values.
// You can construct a concrete instance of `InsightIpFilterInput` via:
//
//	InsightIpFilterArgs{...}
type InsightIpFilterInput interface {
	pulumi.Input

	ToInsightIpFilterOutput() InsightIpFilterOutput
	ToInsightIpFilterOutputWithContext(context.Context) InsightIpFilterOutput
}

// The IP filter for querying findings.
type InsightIpFilterArgs struct {
	// A finding's CIDR value.
	Cidr pulumi.StringPtrInput `pulumi:"cidr"`
}

func (InsightIpFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightIpFilter)(nil)).Elem()
}

func (i InsightIpFilterArgs) ToInsightIpFilterOutput() InsightIpFilterOutput {
	return i.ToInsightIpFilterOutputWithContext(context.Background())
}

func (i InsightIpFilterArgs) ToInsightIpFilterOutputWithContext(ctx context.Context) InsightIpFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightIpFilterOutput)
}

// InsightIpFilterArrayInput is an input type that accepts InsightIpFilterArray and InsightIpFilterArrayOutput values.
// You can construct a concrete instance of `InsightIpFilterArrayInput` via:
//
//	InsightIpFilterArray{ InsightIpFilterArgs{...} }
type InsightIpFilterArrayInput interface {
	pulumi.Input

	ToInsightIpFilterArrayOutput() InsightIpFilterArrayOutput
	ToInsightIpFilterArrayOutputWithContext(context.Context) InsightIpFilterArrayOutput
}

type InsightIpFilterArray []InsightIpFilterInput

func (InsightIpFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightIpFilter)(nil)).Elem()
}

func (i InsightIpFilterArray) ToInsightIpFilterArrayOutput() InsightIpFilterArrayOutput {
	return i.ToInsightIpFilterArrayOutputWithContext(context.Background())
}

func (i InsightIpFilterArray) ToInsightIpFilterArrayOutputWithContext(ctx context.Context) InsightIpFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightIpFilterArrayOutput)
}

// The IP filter for querying findings.
type InsightIpFilterOutput struct{ *pulumi.OutputState }

func (InsightIpFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightIpFilter)(nil)).Elem()
}

func (o InsightIpFilterOutput) ToInsightIpFilterOutput() InsightIpFilterOutput {
	return o
}

func (o InsightIpFilterOutput) ToInsightIpFilterOutputWithContext(ctx context.Context) InsightIpFilterOutput {
	return o
}

// A finding's CIDR value.
func (o InsightIpFilterOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightIpFilter) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

type InsightIpFilterArrayOutput struct{ *pulumi.OutputState }

func (InsightIpFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightIpFilter)(nil)).Elem()
}

func (o InsightIpFilterArrayOutput) ToInsightIpFilterArrayOutput() InsightIpFilterArrayOutput {
	return o
}

func (o InsightIpFilterArrayOutput) ToInsightIpFilterArrayOutputWithContext(ctx context.Context) InsightIpFilterArrayOutput {
	return o
}

func (o InsightIpFilterArrayOutput) Index(i pulumi.IntInput) InsightIpFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightIpFilter {
		return vs[0].([]InsightIpFilter)[vs[1].(int)]
	}).(InsightIpFilterOutput)
}

// A map filter for filtering AWS Security Hub findings.
type InsightMapFilter struct {
	// The condition to apply to the key value when filtering Security Hub findings with a map filter.
	Comparison InsightMapFilterComparison `pulumi:"comparison"`
	Key        string                     `pulumi:"key"`
	Value      string                     `pulumi:"value"`
}

// InsightMapFilterInput is an input type that accepts InsightMapFilterArgs and InsightMapFilterOutput values.
// You can construct a concrete instance of `InsightMapFilterInput` via:
//
//	InsightMapFilterArgs{...}
type InsightMapFilterInput interface {
	pulumi.Input

	ToInsightMapFilterOutput() InsightMapFilterOutput
	ToInsightMapFilterOutputWithContext(context.Context) InsightMapFilterOutput
}

// A map filter for filtering AWS Security Hub findings.
type InsightMapFilterArgs struct {
	// The condition to apply to the key value when filtering Security Hub findings with a map filter.
	Comparison InsightMapFilterComparisonInput `pulumi:"comparison"`
	Key        pulumi.StringInput              `pulumi:"key"`
	Value      pulumi.StringInput              `pulumi:"value"`
}

func (InsightMapFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightMapFilter)(nil)).Elem()
}

func (i InsightMapFilterArgs) ToInsightMapFilterOutput() InsightMapFilterOutput {
	return i.ToInsightMapFilterOutputWithContext(context.Background())
}

func (i InsightMapFilterArgs) ToInsightMapFilterOutputWithContext(ctx context.Context) InsightMapFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightMapFilterOutput)
}

// InsightMapFilterArrayInput is an input type that accepts InsightMapFilterArray and InsightMapFilterArrayOutput values.
// You can construct a concrete instance of `InsightMapFilterArrayInput` via:
//
//	InsightMapFilterArray{ InsightMapFilterArgs{...} }
type InsightMapFilterArrayInput interface {
	pulumi.Input

	ToInsightMapFilterArrayOutput() InsightMapFilterArrayOutput
	ToInsightMapFilterArrayOutputWithContext(context.Context) InsightMapFilterArrayOutput
}

type InsightMapFilterArray []InsightMapFilterInput

func (InsightMapFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightMapFilter)(nil)).Elem()
}

func (i InsightMapFilterArray) ToInsightMapFilterArrayOutput() InsightMapFilterArrayOutput {
	return i.ToInsightMapFilterArrayOutputWithContext(context.Background())
}

func (i InsightMapFilterArray) ToInsightMapFilterArrayOutputWithContext(ctx context.Context) InsightMapFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightMapFilterArrayOutput)
}

// A map filter for filtering AWS Security Hub findings.
type InsightMapFilterOutput struct{ *pulumi.OutputState }

func (InsightMapFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightMapFilter)(nil)).Elem()
}

func (o InsightMapFilterOutput) ToInsightMapFilterOutput() InsightMapFilterOutput {
	return o
}

func (o InsightMapFilterOutput) ToInsightMapFilterOutputWithContext(ctx context.Context) InsightMapFilterOutput {
	return o
}

// The condition to apply to the key value when filtering Security Hub findings with a map filter.
func (o InsightMapFilterOutput) Comparison() InsightMapFilterComparisonOutput {
	return o.ApplyT(func(v InsightMapFilter) InsightMapFilterComparison { return v.Comparison }).(InsightMapFilterComparisonOutput)
}

func (o InsightMapFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InsightMapFilter) string { return v.Key }).(pulumi.StringOutput)
}

func (o InsightMapFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InsightMapFilter) string { return v.Value }).(pulumi.StringOutput)
}

type InsightMapFilterArrayOutput struct{ *pulumi.OutputState }

func (InsightMapFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightMapFilter)(nil)).Elem()
}

func (o InsightMapFilterArrayOutput) ToInsightMapFilterArrayOutput() InsightMapFilterArrayOutput {
	return o
}

func (o InsightMapFilterArrayOutput) ToInsightMapFilterArrayOutputWithContext(ctx context.Context) InsightMapFilterArrayOutput {
	return o
}

func (o InsightMapFilterArrayOutput) Index(i pulumi.IntInput) InsightMapFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightMapFilter {
		return vs[0].([]InsightMapFilter)[vs[1].(int)]
	}).(InsightMapFilterOutput)
}

// A number filter for querying findings.
type InsightNumberFilter struct {
	// The equal-to condition to be applied to a single field when querying for findings.
	Eq *float64 `pulumi:"eq"`
	// The greater-than-equal condition to be applied to a single field when querying for findings.
	Gte *float64 `pulumi:"gte"`
	// The less-than-equal condition to be applied to a single field when querying for findings.
	Lte *float64 `pulumi:"lte"`
}

// InsightNumberFilterInput is an input type that accepts InsightNumberFilterArgs and InsightNumberFilterOutput values.
// You can construct a concrete instance of `InsightNumberFilterInput` via:
//
//	InsightNumberFilterArgs{...}
type InsightNumberFilterInput interface {
	pulumi.Input

	ToInsightNumberFilterOutput() InsightNumberFilterOutput
	ToInsightNumberFilterOutputWithContext(context.Context) InsightNumberFilterOutput
}

// A number filter for querying findings.
type InsightNumberFilterArgs struct {
	// The equal-to condition to be applied to a single field when querying for findings.
	Eq pulumi.Float64PtrInput `pulumi:"eq"`
	// The greater-than-equal condition to be applied to a single field when querying for findings.
	Gte pulumi.Float64PtrInput `pulumi:"gte"`
	// The less-than-equal condition to be applied to a single field when querying for findings.
	Lte pulumi.Float64PtrInput `pulumi:"lte"`
}

func (InsightNumberFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightNumberFilter)(nil)).Elem()
}

func (i InsightNumberFilterArgs) ToInsightNumberFilterOutput() InsightNumberFilterOutput {
	return i.ToInsightNumberFilterOutputWithContext(context.Background())
}

func (i InsightNumberFilterArgs) ToInsightNumberFilterOutputWithContext(ctx context.Context) InsightNumberFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightNumberFilterOutput)
}

// InsightNumberFilterArrayInput is an input type that accepts InsightNumberFilterArray and InsightNumberFilterArrayOutput values.
// You can construct a concrete instance of `InsightNumberFilterArrayInput` via:
//
//	InsightNumberFilterArray{ InsightNumberFilterArgs{...} }
type InsightNumberFilterArrayInput interface {
	pulumi.Input

	ToInsightNumberFilterArrayOutput() InsightNumberFilterArrayOutput
	ToInsightNumberFilterArrayOutputWithContext(context.Context) InsightNumberFilterArrayOutput
}

type InsightNumberFilterArray []InsightNumberFilterInput

func (InsightNumberFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightNumberFilter)(nil)).Elem()
}

func (i InsightNumberFilterArray) ToInsightNumberFilterArrayOutput() InsightNumberFilterArrayOutput {
	return i.ToInsightNumberFilterArrayOutputWithContext(context.Background())
}

func (i InsightNumberFilterArray) ToInsightNumberFilterArrayOutputWithContext(ctx context.Context) InsightNumberFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightNumberFilterArrayOutput)
}

// A number filter for querying findings.
type InsightNumberFilterOutput struct{ *pulumi.OutputState }

func (InsightNumberFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightNumberFilter)(nil)).Elem()
}

func (o InsightNumberFilterOutput) ToInsightNumberFilterOutput() InsightNumberFilterOutput {
	return o
}

func (o InsightNumberFilterOutput) ToInsightNumberFilterOutputWithContext(ctx context.Context) InsightNumberFilterOutput {
	return o
}

// The equal-to condition to be applied to a single field when querying for findings.
func (o InsightNumberFilterOutput) Eq() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InsightNumberFilter) *float64 { return v.Eq }).(pulumi.Float64PtrOutput)
}

// The greater-than-equal condition to be applied to a single field when querying for findings.
func (o InsightNumberFilterOutput) Gte() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InsightNumberFilter) *float64 { return v.Gte }).(pulumi.Float64PtrOutput)
}

// The less-than-equal condition to be applied to a single field when querying for findings.
func (o InsightNumberFilterOutput) Lte() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InsightNumberFilter) *float64 { return v.Lte }).(pulumi.Float64PtrOutput)
}

type InsightNumberFilterArrayOutput struct{ *pulumi.OutputState }

func (InsightNumberFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightNumberFilter)(nil)).Elem()
}

func (o InsightNumberFilterArrayOutput) ToInsightNumberFilterArrayOutput() InsightNumberFilterArrayOutput {
	return o
}

func (o InsightNumberFilterArrayOutput) ToInsightNumberFilterArrayOutputWithContext(ctx context.Context) InsightNumberFilterArrayOutput {
	return o
}

func (o InsightNumberFilterArrayOutput) Index(i pulumi.IntInput) InsightNumberFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightNumberFilter {
		return vs[0].([]InsightNumberFilter)[vs[1].(int)]
	}).(InsightNumberFilterOutput)
}

// A string filter for filtering AWS Security Hub findings.
type InsightStringFilter struct {
	Comparison InsightStringFilterComparison `pulumi:"comparison"`
	Value      string                        `pulumi:"value"`
}

// InsightStringFilterInput is an input type that accepts InsightStringFilterArgs and InsightStringFilterOutput values.
// You can construct a concrete instance of `InsightStringFilterInput` via:
//
//	InsightStringFilterArgs{...}
type InsightStringFilterInput interface {
	pulumi.Input

	ToInsightStringFilterOutput() InsightStringFilterOutput
	ToInsightStringFilterOutputWithContext(context.Context) InsightStringFilterOutput
}

// A string filter for filtering AWS Security Hub findings.
type InsightStringFilterArgs struct {
	Comparison InsightStringFilterComparisonInput `pulumi:"comparison"`
	Value      pulumi.StringInput                 `pulumi:"value"`
}

func (InsightStringFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightStringFilter)(nil)).Elem()
}

func (i InsightStringFilterArgs) ToInsightStringFilterOutput() InsightStringFilterOutput {
	return i.ToInsightStringFilterOutputWithContext(context.Background())
}

func (i InsightStringFilterArgs) ToInsightStringFilterOutputWithContext(ctx context.Context) InsightStringFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightStringFilterOutput)
}

// InsightStringFilterArrayInput is an input type that accepts InsightStringFilterArray and InsightStringFilterArrayOutput values.
// You can construct a concrete instance of `InsightStringFilterArrayInput` via:
//
//	InsightStringFilterArray{ InsightStringFilterArgs{...} }
type InsightStringFilterArrayInput interface {
	pulumi.Input

	ToInsightStringFilterArrayOutput() InsightStringFilterArrayOutput
	ToInsightStringFilterArrayOutputWithContext(context.Context) InsightStringFilterArrayOutput
}

type InsightStringFilterArray []InsightStringFilterInput

func (InsightStringFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightStringFilter)(nil)).Elem()
}

func (i InsightStringFilterArray) ToInsightStringFilterArrayOutput() InsightStringFilterArrayOutput {
	return i.ToInsightStringFilterArrayOutputWithContext(context.Background())
}

func (i InsightStringFilterArray) ToInsightStringFilterArrayOutputWithContext(ctx context.Context) InsightStringFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightStringFilterArrayOutput)
}

// A string filter for filtering AWS Security Hub findings.
type InsightStringFilterOutput struct{ *pulumi.OutputState }

func (InsightStringFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightStringFilter)(nil)).Elem()
}

func (o InsightStringFilterOutput) ToInsightStringFilterOutput() InsightStringFilterOutput {
	return o
}

func (o InsightStringFilterOutput) ToInsightStringFilterOutputWithContext(ctx context.Context) InsightStringFilterOutput {
	return o
}

func (o InsightStringFilterOutput) Comparison() InsightStringFilterComparisonOutput {
	return o.ApplyT(func(v InsightStringFilter) InsightStringFilterComparison { return v.Comparison }).(InsightStringFilterComparisonOutput)
}

func (o InsightStringFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InsightStringFilter) string { return v.Value }).(pulumi.StringOutput)
}

type InsightStringFilterArrayOutput struct{ *pulumi.OutputState }

func (InsightStringFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightStringFilter)(nil)).Elem()
}

func (o InsightStringFilterArrayOutput) ToInsightStringFilterArrayOutput() InsightStringFilterArrayOutput {
	return o
}

func (o InsightStringFilterArrayOutput) ToInsightStringFilterArrayOutputWithContext(ctx context.Context) InsightStringFilterArrayOutput {
	return o
}

func (o InsightStringFilterArrayOutput) Index(i pulumi.IntInput) InsightStringFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightStringFilter {
		return vs[0].([]InsightStringFilter)[vs[1].(int)]
	}).(InsightStringFilterOutput)
}

// Provides details about an individual security control. For a list of ASH controls, see [controls reference](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-controls-reference.html) in the *User Guide*.
type StandardsControl struct {
	// A user-defined reason for changing a control's enablement status in a specified standard. If you are disabling a control, then this property is required.
	Reason *string `pulumi:"reason"`
	// The Amazon Resource Name (ARN) of the control.
	StandardsControlArn string `pulumi:"standardsControlArn"`
}

// StandardsControlInput is an input type that accepts StandardsControlArgs and StandardsControlOutput values.
// You can construct a concrete instance of `StandardsControlInput` via:
//
//	StandardsControlArgs{...}
type StandardsControlInput interface {
	pulumi.Input

	ToStandardsControlOutput() StandardsControlOutput
	ToStandardsControlOutputWithContext(context.Context) StandardsControlOutput
}

// Provides details about an individual security control. For a list of ASH controls, see [controls reference](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-controls-reference.html) in the *User Guide*.
type StandardsControlArgs struct {
	// A user-defined reason for changing a control's enablement status in a specified standard. If you are disabling a control, then this property is required.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// The Amazon Resource Name (ARN) of the control.
	StandardsControlArn pulumi.StringInput `pulumi:"standardsControlArn"`
}

func (StandardsControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardsControl)(nil)).Elem()
}

func (i StandardsControlArgs) ToStandardsControlOutput() StandardsControlOutput {
	return i.ToStandardsControlOutputWithContext(context.Background())
}

func (i StandardsControlArgs) ToStandardsControlOutputWithContext(ctx context.Context) StandardsControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardsControlOutput)
}

// StandardsControlArrayInput is an input type that accepts StandardsControlArray and StandardsControlArrayOutput values.
// You can construct a concrete instance of `StandardsControlArrayInput` via:
//
//	StandardsControlArray{ StandardsControlArgs{...} }
type StandardsControlArrayInput interface {
	pulumi.Input

	ToStandardsControlArrayOutput() StandardsControlArrayOutput
	ToStandardsControlArrayOutputWithContext(context.Context) StandardsControlArrayOutput
}

type StandardsControlArray []StandardsControlInput

func (StandardsControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandardsControl)(nil)).Elem()
}

func (i StandardsControlArray) ToStandardsControlArrayOutput() StandardsControlArrayOutput {
	return i.ToStandardsControlArrayOutputWithContext(context.Background())
}

func (i StandardsControlArray) ToStandardsControlArrayOutputWithContext(ctx context.Context) StandardsControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardsControlArrayOutput)
}

// Provides details about an individual security control. For a list of ASH controls, see [controls reference](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-controls-reference.html) in the *User Guide*.
type StandardsControlOutput struct{ *pulumi.OutputState }

func (StandardsControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardsControl)(nil)).Elem()
}

func (o StandardsControlOutput) ToStandardsControlOutput() StandardsControlOutput {
	return o
}

func (o StandardsControlOutput) ToStandardsControlOutputWithContext(ctx context.Context) StandardsControlOutput {
	return o
}

// A user-defined reason for changing a control's enablement status in a specified standard. If you are disabling a control, then this property is required.
func (o StandardsControlOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardsControl) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the control.
func (o StandardsControlOutput) StandardsControlArn() pulumi.StringOutput {
	return o.ApplyT(func(v StandardsControl) string { return v.StandardsControlArn }).(pulumi.StringOutput)
}

type StandardsControlArrayOutput struct{ *pulumi.OutputState }

func (StandardsControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandardsControl)(nil)).Elem()
}

func (o StandardsControlArrayOutput) ToStandardsControlArrayOutput() StandardsControlArrayOutput {
	return o
}

func (o StandardsControlArrayOutput) ToStandardsControlArrayOutputWithContext(ctx context.Context) StandardsControlArrayOutput {
	return o
}

func (o StandardsControlArrayOutput) Index(i pulumi.IntInput) StandardsControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StandardsControl {
		return vs[0].([]StandardsControl)[vs[1].(int)]
	}).(StandardsControlOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleDateFilterInput)(nil)).Elem(), AutomationRuleDateFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleDateFilterArrayInput)(nil)).Elem(), AutomationRuleDateFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleDateRangeInput)(nil)).Elem(), AutomationRuleDateRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleDateRangePtrInput)(nil)).Elem(), AutomationRuleDateRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleMapFilterInput)(nil)).Elem(), AutomationRuleMapFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleMapFilterArrayInput)(nil)).Elem(), AutomationRuleMapFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleNoteUpdateInput)(nil)).Elem(), AutomationRuleNoteUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleNoteUpdatePtrInput)(nil)).Elem(), AutomationRuleNoteUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleNumberFilterInput)(nil)).Elem(), AutomationRuleNumberFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleNumberFilterArrayInput)(nil)).Elem(), AutomationRuleNumberFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleRelatedFindingInput)(nil)).Elem(), AutomationRuleRelatedFindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleRelatedFindingArrayInput)(nil)).Elem(), AutomationRuleRelatedFindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleSeverityUpdateInput)(nil)).Elem(), AutomationRuleSeverityUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleSeverityUpdatePtrInput)(nil)).Elem(), AutomationRuleSeverityUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleStringFilterInput)(nil)).Elem(), AutomationRuleStringFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleStringFilterArrayInput)(nil)).Elem(), AutomationRuleStringFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleWorkflowUpdateInput)(nil)).Elem(), AutomationRuleWorkflowUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleWorkflowUpdatePtrInput)(nil)).Elem(), AutomationRuleWorkflowUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRulesActionInput)(nil)).Elem(), AutomationRulesActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRulesActionArrayInput)(nil)).Elem(), AutomationRulesActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRulesFindingFieldsUpdateInput)(nil)).Elem(), AutomationRulesFindingFieldsUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRulesFindingFiltersInput)(nil)).Elem(), AutomationRulesFindingFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRulesFindingFiltersPtrInput)(nil)).Elem(), AutomationRulesFindingFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightAwsSecurityFindingFiltersInput)(nil)).Elem(), InsightAwsSecurityFindingFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightBooleanFilterInput)(nil)).Elem(), InsightBooleanFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightBooleanFilterArrayInput)(nil)).Elem(), InsightBooleanFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightDateFilterInput)(nil)).Elem(), InsightDateFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightDateFilterArrayInput)(nil)).Elem(), InsightDateFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightDateRangeInput)(nil)).Elem(), InsightDateRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightDateRangePtrInput)(nil)).Elem(), InsightDateRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightIpFilterInput)(nil)).Elem(), InsightIpFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightIpFilterArrayInput)(nil)).Elem(), InsightIpFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightMapFilterInput)(nil)).Elem(), InsightMapFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightMapFilterArrayInput)(nil)).Elem(), InsightMapFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightNumberFilterInput)(nil)).Elem(), InsightNumberFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightNumberFilterArrayInput)(nil)).Elem(), InsightNumberFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightStringFilterInput)(nil)).Elem(), InsightStringFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightStringFilterArrayInput)(nil)).Elem(), InsightStringFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardsControlInput)(nil)).Elem(), StandardsControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardsControlArrayInput)(nil)).Elem(), StandardsControlArray{})
	pulumi.RegisterOutputType(AutomationRuleDateFilterOutput{})
	pulumi.RegisterOutputType(AutomationRuleDateFilterArrayOutput{})
	pulumi.RegisterOutputType(AutomationRuleDateRangeOutput{})
	pulumi.RegisterOutputType(AutomationRuleDateRangePtrOutput{})
	pulumi.RegisterOutputType(AutomationRuleMapFilterOutput{})
	pulumi.RegisterOutputType(AutomationRuleMapFilterArrayOutput{})
	pulumi.RegisterOutputType(AutomationRuleNoteUpdateOutput{})
	pulumi.RegisterOutputType(AutomationRuleNoteUpdatePtrOutput{})
	pulumi.RegisterOutputType(AutomationRuleNumberFilterOutput{})
	pulumi.RegisterOutputType(AutomationRuleNumberFilterArrayOutput{})
	pulumi.RegisterOutputType(AutomationRuleRelatedFindingOutput{})
	pulumi.RegisterOutputType(AutomationRuleRelatedFindingArrayOutput{})
	pulumi.RegisterOutputType(AutomationRuleSeverityUpdateOutput{})
	pulumi.RegisterOutputType(AutomationRuleSeverityUpdatePtrOutput{})
	pulumi.RegisterOutputType(AutomationRuleStringFilterOutput{})
	pulumi.RegisterOutputType(AutomationRuleStringFilterArrayOutput{})
	pulumi.RegisterOutputType(AutomationRuleWorkflowUpdateOutput{})
	pulumi.RegisterOutputType(AutomationRuleWorkflowUpdatePtrOutput{})
	pulumi.RegisterOutputType(AutomationRulesActionOutput{})
	pulumi.RegisterOutputType(AutomationRulesActionArrayOutput{})
	pulumi.RegisterOutputType(AutomationRulesFindingFieldsUpdateOutput{})
	pulumi.RegisterOutputType(AutomationRulesFindingFiltersOutput{})
	pulumi.RegisterOutputType(AutomationRulesFindingFiltersPtrOutput{})
	pulumi.RegisterOutputType(InsightAwsSecurityFindingFiltersOutput{})
	pulumi.RegisterOutputType(InsightAwsSecurityFindingFiltersPtrOutput{})
	pulumi.RegisterOutputType(InsightBooleanFilterOutput{})
	pulumi.RegisterOutputType(InsightBooleanFilterArrayOutput{})
	pulumi.RegisterOutputType(InsightDateFilterOutput{})
	pulumi.RegisterOutputType(InsightDateFilterArrayOutput{})
	pulumi.RegisterOutputType(InsightDateRangeOutput{})
	pulumi.RegisterOutputType(InsightDateRangePtrOutput{})
	pulumi.RegisterOutputType(InsightIpFilterOutput{})
	pulumi.RegisterOutputType(InsightIpFilterArrayOutput{})
	pulumi.RegisterOutputType(InsightMapFilterOutput{})
	pulumi.RegisterOutputType(InsightMapFilterArrayOutput{})
	pulumi.RegisterOutputType(InsightNumberFilterOutput{})
	pulumi.RegisterOutputType(InsightNumberFilterArrayOutput{})
	pulumi.RegisterOutputType(InsightStringFilterOutput{})
	pulumi.RegisterOutputType(InsightStringFilterArrayOutput{})
	pulumi.RegisterOutputType(StandardsControlOutput{})
	pulumi.RegisterOutputType(StandardsControlArrayOutput{})
}
