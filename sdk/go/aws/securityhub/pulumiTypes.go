// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securityhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AutomationRuleDateFilter struct {
	// A date range for the date filter.
	DateRange *AutomationRuleDateRange `pulumi:"dateRange"`
	// A timestamp that provides the end date for the date filter.
	//
	// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
	//
	// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
	// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
	// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
	End *string `pulumi:"end"`
	// A timestamp that provides the start date for the date filter.
	//
	// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
	//
	// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
	// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
	// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
	Start *string `pulumi:"start"`
}

// AutomationRuleDateFilterInput is an input type that accepts AutomationRuleDateFilterArgs and AutomationRuleDateFilterOutput values.
// You can construct a concrete instance of `AutomationRuleDateFilterInput` via:
//
//	AutomationRuleDateFilterArgs{...}
type AutomationRuleDateFilterInput interface {
	pulumi.Input

	ToAutomationRuleDateFilterOutput() AutomationRuleDateFilterOutput
	ToAutomationRuleDateFilterOutputWithContext(context.Context) AutomationRuleDateFilterOutput
}

type AutomationRuleDateFilterArgs struct {
	// A date range for the date filter.
	DateRange AutomationRuleDateRangePtrInput `pulumi:"dateRange"`
	// A timestamp that provides the end date for the date filter.
	//
	// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
	//
	// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
	// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
	// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
	End pulumi.StringPtrInput `pulumi:"end"`
	// A timestamp that provides the start date for the date filter.
	//
	// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
	//
	// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
	// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
	// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
	Start pulumi.StringPtrInput `pulumi:"start"`
}

func (AutomationRuleDateFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleDateFilter)(nil)).Elem()
}

func (i AutomationRuleDateFilterArgs) ToAutomationRuleDateFilterOutput() AutomationRuleDateFilterOutput {
	return i.ToAutomationRuleDateFilterOutputWithContext(context.Background())
}

func (i AutomationRuleDateFilterArgs) ToAutomationRuleDateFilterOutputWithContext(ctx context.Context) AutomationRuleDateFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleDateFilterOutput)
}

// AutomationRuleDateFilterArrayInput is an input type that accepts AutomationRuleDateFilterArray and AutomationRuleDateFilterArrayOutput values.
// You can construct a concrete instance of `AutomationRuleDateFilterArrayInput` via:
//
//	AutomationRuleDateFilterArray{ AutomationRuleDateFilterArgs{...} }
type AutomationRuleDateFilterArrayInput interface {
	pulumi.Input

	ToAutomationRuleDateFilterArrayOutput() AutomationRuleDateFilterArrayOutput
	ToAutomationRuleDateFilterArrayOutputWithContext(context.Context) AutomationRuleDateFilterArrayOutput
}

type AutomationRuleDateFilterArray []AutomationRuleDateFilterInput

func (AutomationRuleDateFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleDateFilter)(nil)).Elem()
}

func (i AutomationRuleDateFilterArray) ToAutomationRuleDateFilterArrayOutput() AutomationRuleDateFilterArrayOutput {
	return i.ToAutomationRuleDateFilterArrayOutputWithContext(context.Background())
}

func (i AutomationRuleDateFilterArray) ToAutomationRuleDateFilterArrayOutputWithContext(ctx context.Context) AutomationRuleDateFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleDateFilterArrayOutput)
}

type AutomationRuleDateFilterOutput struct{ *pulumi.OutputState }

func (AutomationRuleDateFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleDateFilter)(nil)).Elem()
}

func (o AutomationRuleDateFilterOutput) ToAutomationRuleDateFilterOutput() AutomationRuleDateFilterOutput {
	return o
}

func (o AutomationRuleDateFilterOutput) ToAutomationRuleDateFilterOutputWithContext(ctx context.Context) AutomationRuleDateFilterOutput {
	return o
}

// A date range for the date filter.
func (o AutomationRuleDateFilterOutput) DateRange() AutomationRuleDateRangePtrOutput {
	return o.ApplyT(func(v AutomationRuleDateFilter) *AutomationRuleDateRange { return v.DateRange }).(AutomationRuleDateRangePtrOutput)
}

// A timestamp that provides the end date for the date filter.
//
// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
//
// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
func (o AutomationRuleDateFilterOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRuleDateFilter) *string { return v.End }).(pulumi.StringPtrOutput)
}

// A timestamp that provides the start date for the date filter.
//
// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
//
// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
func (o AutomationRuleDateFilterOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRuleDateFilter) *string { return v.Start }).(pulumi.StringPtrOutput)
}

type AutomationRuleDateFilterArrayOutput struct{ *pulumi.OutputState }

func (AutomationRuleDateFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleDateFilter)(nil)).Elem()
}

func (o AutomationRuleDateFilterArrayOutput) ToAutomationRuleDateFilterArrayOutput() AutomationRuleDateFilterArrayOutput {
	return o
}

func (o AutomationRuleDateFilterArrayOutput) ToAutomationRuleDateFilterArrayOutputWithContext(ctx context.Context) AutomationRuleDateFilterArrayOutput {
	return o
}

func (o AutomationRuleDateFilterArrayOutput) Index(i pulumi.IntInput) AutomationRuleDateFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRuleDateFilter {
		return vs[0].([]AutomationRuleDateFilter)[vs[1].(int)]
	}).(AutomationRuleDateFilterOutput)
}

type AutomationRuleDateRange struct {
	// A date range unit for the date filter.
	Unit AutomationRuleDateRangeUnit `pulumi:"unit"`
	// A date range value for the date filter.
	Value float64 `pulumi:"value"`
}

// AutomationRuleDateRangeInput is an input type that accepts AutomationRuleDateRangeArgs and AutomationRuleDateRangeOutput values.
// You can construct a concrete instance of `AutomationRuleDateRangeInput` via:
//
//	AutomationRuleDateRangeArgs{...}
type AutomationRuleDateRangeInput interface {
	pulumi.Input

	ToAutomationRuleDateRangeOutput() AutomationRuleDateRangeOutput
	ToAutomationRuleDateRangeOutputWithContext(context.Context) AutomationRuleDateRangeOutput
}

type AutomationRuleDateRangeArgs struct {
	// A date range unit for the date filter.
	Unit AutomationRuleDateRangeUnitInput `pulumi:"unit"`
	// A date range value for the date filter.
	Value pulumi.Float64Input `pulumi:"value"`
}

func (AutomationRuleDateRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleDateRange)(nil)).Elem()
}

func (i AutomationRuleDateRangeArgs) ToAutomationRuleDateRangeOutput() AutomationRuleDateRangeOutput {
	return i.ToAutomationRuleDateRangeOutputWithContext(context.Background())
}

func (i AutomationRuleDateRangeArgs) ToAutomationRuleDateRangeOutputWithContext(ctx context.Context) AutomationRuleDateRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleDateRangeOutput)
}

func (i AutomationRuleDateRangeArgs) ToAutomationRuleDateRangePtrOutput() AutomationRuleDateRangePtrOutput {
	return i.ToAutomationRuleDateRangePtrOutputWithContext(context.Background())
}

func (i AutomationRuleDateRangeArgs) ToAutomationRuleDateRangePtrOutputWithContext(ctx context.Context) AutomationRuleDateRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleDateRangeOutput).ToAutomationRuleDateRangePtrOutputWithContext(ctx)
}

// AutomationRuleDateRangePtrInput is an input type that accepts AutomationRuleDateRangeArgs, AutomationRuleDateRangePtr and AutomationRuleDateRangePtrOutput values.
// You can construct a concrete instance of `AutomationRuleDateRangePtrInput` via:
//
//	        AutomationRuleDateRangeArgs{...}
//
//	or:
//
//	        nil
type AutomationRuleDateRangePtrInput interface {
	pulumi.Input

	ToAutomationRuleDateRangePtrOutput() AutomationRuleDateRangePtrOutput
	ToAutomationRuleDateRangePtrOutputWithContext(context.Context) AutomationRuleDateRangePtrOutput
}

type automationRuleDateRangePtrType AutomationRuleDateRangeArgs

func AutomationRuleDateRangePtr(v *AutomationRuleDateRangeArgs) AutomationRuleDateRangePtrInput {
	return (*automationRuleDateRangePtrType)(v)
}

func (*automationRuleDateRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleDateRange)(nil)).Elem()
}

func (i *automationRuleDateRangePtrType) ToAutomationRuleDateRangePtrOutput() AutomationRuleDateRangePtrOutput {
	return i.ToAutomationRuleDateRangePtrOutputWithContext(context.Background())
}

func (i *automationRuleDateRangePtrType) ToAutomationRuleDateRangePtrOutputWithContext(ctx context.Context) AutomationRuleDateRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleDateRangePtrOutput)
}

type AutomationRuleDateRangeOutput struct{ *pulumi.OutputState }

func (AutomationRuleDateRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleDateRange)(nil)).Elem()
}

func (o AutomationRuleDateRangeOutput) ToAutomationRuleDateRangeOutput() AutomationRuleDateRangeOutput {
	return o
}

func (o AutomationRuleDateRangeOutput) ToAutomationRuleDateRangeOutputWithContext(ctx context.Context) AutomationRuleDateRangeOutput {
	return o
}

func (o AutomationRuleDateRangeOutput) ToAutomationRuleDateRangePtrOutput() AutomationRuleDateRangePtrOutput {
	return o.ToAutomationRuleDateRangePtrOutputWithContext(context.Background())
}

func (o AutomationRuleDateRangeOutput) ToAutomationRuleDateRangePtrOutputWithContext(ctx context.Context) AutomationRuleDateRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRuleDateRange) *AutomationRuleDateRange {
		return &v
	}).(AutomationRuleDateRangePtrOutput)
}

// A date range unit for the date filter.
func (o AutomationRuleDateRangeOutput) Unit() AutomationRuleDateRangeUnitOutput {
	return o.ApplyT(func(v AutomationRuleDateRange) AutomationRuleDateRangeUnit { return v.Unit }).(AutomationRuleDateRangeUnitOutput)
}

// A date range value for the date filter.
func (o AutomationRuleDateRangeOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v AutomationRuleDateRange) float64 { return v.Value }).(pulumi.Float64Output)
}

type AutomationRuleDateRangePtrOutput struct{ *pulumi.OutputState }

func (AutomationRuleDateRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleDateRange)(nil)).Elem()
}

func (o AutomationRuleDateRangePtrOutput) ToAutomationRuleDateRangePtrOutput() AutomationRuleDateRangePtrOutput {
	return o
}

func (o AutomationRuleDateRangePtrOutput) ToAutomationRuleDateRangePtrOutputWithContext(ctx context.Context) AutomationRuleDateRangePtrOutput {
	return o
}

func (o AutomationRuleDateRangePtrOutput) Elem() AutomationRuleDateRangeOutput {
	return o.ApplyT(func(v *AutomationRuleDateRange) AutomationRuleDateRange {
		if v != nil {
			return *v
		}
		var ret AutomationRuleDateRange
		return ret
	}).(AutomationRuleDateRangeOutput)
}

// A date range unit for the date filter.
func (o AutomationRuleDateRangePtrOutput) Unit() AutomationRuleDateRangeUnitPtrOutput {
	return o.ApplyT(func(v *AutomationRuleDateRange) *AutomationRuleDateRangeUnit {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(AutomationRuleDateRangeUnitPtrOutput)
}

// A date range value for the date filter.
func (o AutomationRuleDateRangePtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutomationRuleDateRange) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

type AutomationRuleMapFilter struct {
	// The condition to apply to the key value when filtering Security Hub findings with a map filter.
	//
	// To search for values that have the filter value, use one of the following comparison operators:
	//
	// - To search for values that include the filter value, use `CONTAINS` . For example, for the `ResourceTags` field, the filter `Department CONTAINS Security` matches findings that include the value `Security` for the `Department` tag. In the same example, a finding with a value of `Security team` for the `Department` tag is a match.
	// - To search for values that exactly match the filter value, use `EQUALS` . For example, for the `ResourceTags` field, the filter `Department EQUALS Security` matches findings that have the value `Security` for the `Department` tag.
	//
	// `CONTAINS` and `EQUALS` filters on the same field are joined by `OR` . A finding matches if it matches any one of those filters. For example, the filters `Department CONTAINS Security OR Department CONTAINS Finance` match a finding that includes either `Security` , `Finance` , or both values.
	//
	// To search for values that don't have the filter value, use one of the following comparison operators:
	//
	// - To search for values that exclude the filter value, use `NOT_CONTAINS` . For example, for the `ResourceTags` field, the filter `Department NOT_CONTAINS Finance` matches findings that exclude the value `Finance` for the `Department` tag.
	// - To search for values other than the filter value, use `NOT_EQUALS` . For example, for the `ResourceTags` field, the filter `Department NOT_EQUALS Finance` matches findings that don’t have the value `Finance` for the `Department` tag.
	//
	// `NOT_CONTAINS` and `NOT_EQUALS` filters on the same field are joined by `AND` . A finding matches only if it matches all of those filters. For example, the filters `Department NOT_CONTAINS Security AND Department NOT_CONTAINS Finance` match a finding that excludes both the `Security` and `Finance` values.
	//
	// `CONTAINS` filters can only be used with other `CONTAINS` filters. `NOT_CONTAINS` filters can only be used with other `NOT_CONTAINS` filters.
	//
	// You can’t have both a `CONTAINS` filter and a `NOT_CONTAINS` filter on the same field. Similarly, you can’t have both an `EQUALS` filter and a `NOT_EQUALS` filter on the same field. Combining filters in this way returns an error.
	//
	// `CONTAINS` and `NOT_CONTAINS` operators can be used only with automation rules. For more information, see [Automation rules](https://docs.aws.amazon.com/securityhub/latest/userguide/automation-rules.html) in the *AWS Security Hub User Guide* .
	Comparison AutomationRuleMapFilterComparison `pulumi:"comparison"`
	// The key of the map filter. For example, for `ResourceTags` , `Key` identifies the name of the tag. For `UserDefinedFields` , `Key` is the name of the field.
	Key string `pulumi:"key"`
	// The value for the key in the map filter. Filter values are case sensitive. For example, one of the values for a tag called `Department` might be `Security` . If you provide `security` as the filter value, then there's no match.
	Value string `pulumi:"value"`
}

// AutomationRuleMapFilterInput is an input type that accepts AutomationRuleMapFilterArgs and AutomationRuleMapFilterOutput values.
// You can construct a concrete instance of `AutomationRuleMapFilterInput` via:
//
//	AutomationRuleMapFilterArgs{...}
type AutomationRuleMapFilterInput interface {
	pulumi.Input

	ToAutomationRuleMapFilterOutput() AutomationRuleMapFilterOutput
	ToAutomationRuleMapFilterOutputWithContext(context.Context) AutomationRuleMapFilterOutput
}

type AutomationRuleMapFilterArgs struct {
	// The condition to apply to the key value when filtering Security Hub findings with a map filter.
	//
	// To search for values that have the filter value, use one of the following comparison operators:
	//
	// - To search for values that include the filter value, use `CONTAINS` . For example, for the `ResourceTags` field, the filter `Department CONTAINS Security` matches findings that include the value `Security` for the `Department` tag. In the same example, a finding with a value of `Security team` for the `Department` tag is a match.
	// - To search for values that exactly match the filter value, use `EQUALS` . For example, for the `ResourceTags` field, the filter `Department EQUALS Security` matches findings that have the value `Security` for the `Department` tag.
	//
	// `CONTAINS` and `EQUALS` filters on the same field are joined by `OR` . A finding matches if it matches any one of those filters. For example, the filters `Department CONTAINS Security OR Department CONTAINS Finance` match a finding that includes either `Security` , `Finance` , or both values.
	//
	// To search for values that don't have the filter value, use one of the following comparison operators:
	//
	// - To search for values that exclude the filter value, use `NOT_CONTAINS` . For example, for the `ResourceTags` field, the filter `Department NOT_CONTAINS Finance` matches findings that exclude the value `Finance` for the `Department` tag.
	// - To search for values other than the filter value, use `NOT_EQUALS` . For example, for the `ResourceTags` field, the filter `Department NOT_EQUALS Finance` matches findings that don’t have the value `Finance` for the `Department` tag.
	//
	// `NOT_CONTAINS` and `NOT_EQUALS` filters on the same field are joined by `AND` . A finding matches only if it matches all of those filters. For example, the filters `Department NOT_CONTAINS Security AND Department NOT_CONTAINS Finance` match a finding that excludes both the `Security` and `Finance` values.
	//
	// `CONTAINS` filters can only be used with other `CONTAINS` filters. `NOT_CONTAINS` filters can only be used with other `NOT_CONTAINS` filters.
	//
	// You can’t have both a `CONTAINS` filter and a `NOT_CONTAINS` filter on the same field. Similarly, you can’t have both an `EQUALS` filter and a `NOT_EQUALS` filter on the same field. Combining filters in this way returns an error.
	//
	// `CONTAINS` and `NOT_CONTAINS` operators can be used only with automation rules. For more information, see [Automation rules](https://docs.aws.amazon.com/securityhub/latest/userguide/automation-rules.html) in the *AWS Security Hub User Guide* .
	Comparison AutomationRuleMapFilterComparisonInput `pulumi:"comparison"`
	// The key of the map filter. For example, for `ResourceTags` , `Key` identifies the name of the tag. For `UserDefinedFields` , `Key` is the name of the field.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the key in the map filter. Filter values are case sensitive. For example, one of the values for a tag called `Department` might be `Security` . If you provide `security` as the filter value, then there's no match.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AutomationRuleMapFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleMapFilter)(nil)).Elem()
}

func (i AutomationRuleMapFilterArgs) ToAutomationRuleMapFilterOutput() AutomationRuleMapFilterOutput {
	return i.ToAutomationRuleMapFilterOutputWithContext(context.Background())
}

func (i AutomationRuleMapFilterArgs) ToAutomationRuleMapFilterOutputWithContext(ctx context.Context) AutomationRuleMapFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleMapFilterOutput)
}

// AutomationRuleMapFilterArrayInput is an input type that accepts AutomationRuleMapFilterArray and AutomationRuleMapFilterArrayOutput values.
// You can construct a concrete instance of `AutomationRuleMapFilterArrayInput` via:
//
//	AutomationRuleMapFilterArray{ AutomationRuleMapFilterArgs{...} }
type AutomationRuleMapFilterArrayInput interface {
	pulumi.Input

	ToAutomationRuleMapFilterArrayOutput() AutomationRuleMapFilterArrayOutput
	ToAutomationRuleMapFilterArrayOutputWithContext(context.Context) AutomationRuleMapFilterArrayOutput
}

type AutomationRuleMapFilterArray []AutomationRuleMapFilterInput

func (AutomationRuleMapFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleMapFilter)(nil)).Elem()
}

func (i AutomationRuleMapFilterArray) ToAutomationRuleMapFilterArrayOutput() AutomationRuleMapFilterArrayOutput {
	return i.ToAutomationRuleMapFilterArrayOutputWithContext(context.Background())
}

func (i AutomationRuleMapFilterArray) ToAutomationRuleMapFilterArrayOutputWithContext(ctx context.Context) AutomationRuleMapFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleMapFilterArrayOutput)
}

type AutomationRuleMapFilterOutput struct{ *pulumi.OutputState }

func (AutomationRuleMapFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleMapFilter)(nil)).Elem()
}

func (o AutomationRuleMapFilterOutput) ToAutomationRuleMapFilterOutput() AutomationRuleMapFilterOutput {
	return o
}

func (o AutomationRuleMapFilterOutput) ToAutomationRuleMapFilterOutputWithContext(ctx context.Context) AutomationRuleMapFilterOutput {
	return o
}

// The condition to apply to the key value when filtering Security Hub findings with a map filter.
//
// To search for values that have the filter value, use one of the following comparison operators:
//
// - To search for values that include the filter value, use `CONTAINS` . For example, for the `ResourceTags` field, the filter `Department CONTAINS Security` matches findings that include the value `Security` for the `Department` tag. In the same example, a finding with a value of `Security team` for the `Department` tag is a match.
// - To search for values that exactly match the filter value, use `EQUALS` . For example, for the `ResourceTags` field, the filter `Department EQUALS Security` matches findings that have the value `Security` for the `Department` tag.
//
// `CONTAINS` and `EQUALS` filters on the same field are joined by `OR` . A finding matches if it matches any one of those filters. For example, the filters `Department CONTAINS Security OR Department CONTAINS Finance` match a finding that includes either `Security` , `Finance` , or both values.
//
// To search for values that don't have the filter value, use one of the following comparison operators:
//
// - To search for values that exclude the filter value, use `NOT_CONTAINS` . For example, for the `ResourceTags` field, the filter `Department NOT_CONTAINS Finance` matches findings that exclude the value `Finance` for the `Department` tag.
// - To search for values other than the filter value, use `NOT_EQUALS` . For example, for the `ResourceTags` field, the filter `Department NOT_EQUALS Finance` matches findings that don’t have the value `Finance` for the `Department` tag.
//
// `NOT_CONTAINS` and `NOT_EQUALS` filters on the same field are joined by `AND` . A finding matches only if it matches all of those filters. For example, the filters `Department NOT_CONTAINS Security AND Department NOT_CONTAINS Finance` match a finding that excludes both the `Security` and `Finance` values.
//
// `CONTAINS` filters can only be used with other `CONTAINS` filters. `NOT_CONTAINS` filters can only be used with other `NOT_CONTAINS` filters.
//
// You can’t have both a `CONTAINS` filter and a `NOT_CONTAINS` filter on the same field. Similarly, you can’t have both an `EQUALS` filter and a `NOT_EQUALS` filter on the same field. Combining filters in this way returns an error.
//
// `CONTAINS` and `NOT_CONTAINS` operators can be used only with automation rules. For more information, see [Automation rules](https://docs.aws.amazon.com/securityhub/latest/userguide/automation-rules.html) in the *AWS Security Hub User Guide* .
func (o AutomationRuleMapFilterOutput) Comparison() AutomationRuleMapFilterComparisonOutput {
	return o.ApplyT(func(v AutomationRuleMapFilter) AutomationRuleMapFilterComparison { return v.Comparison }).(AutomationRuleMapFilterComparisonOutput)
}

// The key of the map filter. For example, for `ResourceTags` , `Key` identifies the name of the tag. For `UserDefinedFields` , `Key` is the name of the field.
func (o AutomationRuleMapFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleMapFilter) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the key in the map filter. Filter values are case sensitive. For example, one of the values for a tag called `Department` might be `Security` . If you provide `security` as the filter value, then there's no match.
func (o AutomationRuleMapFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleMapFilter) string { return v.Value }).(pulumi.StringOutput)
}

type AutomationRuleMapFilterArrayOutput struct{ *pulumi.OutputState }

func (AutomationRuleMapFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleMapFilter)(nil)).Elem()
}

func (o AutomationRuleMapFilterArrayOutput) ToAutomationRuleMapFilterArrayOutput() AutomationRuleMapFilterArrayOutput {
	return o
}

func (o AutomationRuleMapFilterArrayOutput) ToAutomationRuleMapFilterArrayOutputWithContext(ctx context.Context) AutomationRuleMapFilterArrayOutput {
	return o
}

func (o AutomationRuleMapFilterArrayOutput) Index(i pulumi.IntInput) AutomationRuleMapFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRuleMapFilter {
		return vs[0].([]AutomationRuleMapFilter)[vs[1].(int)]
	}).(AutomationRuleMapFilterOutput)
}

type AutomationRuleNoteUpdate struct {
	// The updated note text.
	Text string `pulumi:"text"`
	// The principal that updated the note.
	UpdatedBy string `pulumi:"updatedBy"`
}

// AutomationRuleNoteUpdateInput is an input type that accepts AutomationRuleNoteUpdateArgs and AutomationRuleNoteUpdateOutput values.
// You can construct a concrete instance of `AutomationRuleNoteUpdateInput` via:
//
//	AutomationRuleNoteUpdateArgs{...}
type AutomationRuleNoteUpdateInput interface {
	pulumi.Input

	ToAutomationRuleNoteUpdateOutput() AutomationRuleNoteUpdateOutput
	ToAutomationRuleNoteUpdateOutputWithContext(context.Context) AutomationRuleNoteUpdateOutput
}

type AutomationRuleNoteUpdateArgs struct {
	// The updated note text.
	Text pulumi.StringInput `pulumi:"text"`
	// The principal that updated the note.
	UpdatedBy pulumi.StringInput `pulumi:"updatedBy"`
}

func (AutomationRuleNoteUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleNoteUpdate)(nil)).Elem()
}

func (i AutomationRuleNoteUpdateArgs) ToAutomationRuleNoteUpdateOutput() AutomationRuleNoteUpdateOutput {
	return i.ToAutomationRuleNoteUpdateOutputWithContext(context.Background())
}

func (i AutomationRuleNoteUpdateArgs) ToAutomationRuleNoteUpdateOutputWithContext(ctx context.Context) AutomationRuleNoteUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleNoteUpdateOutput)
}

func (i AutomationRuleNoteUpdateArgs) ToAutomationRuleNoteUpdatePtrOutput() AutomationRuleNoteUpdatePtrOutput {
	return i.ToAutomationRuleNoteUpdatePtrOutputWithContext(context.Background())
}

func (i AutomationRuleNoteUpdateArgs) ToAutomationRuleNoteUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleNoteUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleNoteUpdateOutput).ToAutomationRuleNoteUpdatePtrOutputWithContext(ctx)
}

// AutomationRuleNoteUpdatePtrInput is an input type that accepts AutomationRuleNoteUpdateArgs, AutomationRuleNoteUpdatePtr and AutomationRuleNoteUpdatePtrOutput values.
// You can construct a concrete instance of `AutomationRuleNoteUpdatePtrInput` via:
//
//	        AutomationRuleNoteUpdateArgs{...}
//
//	or:
//
//	        nil
type AutomationRuleNoteUpdatePtrInput interface {
	pulumi.Input

	ToAutomationRuleNoteUpdatePtrOutput() AutomationRuleNoteUpdatePtrOutput
	ToAutomationRuleNoteUpdatePtrOutputWithContext(context.Context) AutomationRuleNoteUpdatePtrOutput
}

type automationRuleNoteUpdatePtrType AutomationRuleNoteUpdateArgs

func AutomationRuleNoteUpdatePtr(v *AutomationRuleNoteUpdateArgs) AutomationRuleNoteUpdatePtrInput {
	return (*automationRuleNoteUpdatePtrType)(v)
}

func (*automationRuleNoteUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleNoteUpdate)(nil)).Elem()
}

func (i *automationRuleNoteUpdatePtrType) ToAutomationRuleNoteUpdatePtrOutput() AutomationRuleNoteUpdatePtrOutput {
	return i.ToAutomationRuleNoteUpdatePtrOutputWithContext(context.Background())
}

func (i *automationRuleNoteUpdatePtrType) ToAutomationRuleNoteUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleNoteUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleNoteUpdatePtrOutput)
}

type AutomationRuleNoteUpdateOutput struct{ *pulumi.OutputState }

func (AutomationRuleNoteUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleNoteUpdate)(nil)).Elem()
}

func (o AutomationRuleNoteUpdateOutput) ToAutomationRuleNoteUpdateOutput() AutomationRuleNoteUpdateOutput {
	return o
}

func (o AutomationRuleNoteUpdateOutput) ToAutomationRuleNoteUpdateOutputWithContext(ctx context.Context) AutomationRuleNoteUpdateOutput {
	return o
}

func (o AutomationRuleNoteUpdateOutput) ToAutomationRuleNoteUpdatePtrOutput() AutomationRuleNoteUpdatePtrOutput {
	return o.ToAutomationRuleNoteUpdatePtrOutputWithContext(context.Background())
}

func (o AutomationRuleNoteUpdateOutput) ToAutomationRuleNoteUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleNoteUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRuleNoteUpdate) *AutomationRuleNoteUpdate {
		return &v
	}).(AutomationRuleNoteUpdatePtrOutput)
}

// The updated note text.
func (o AutomationRuleNoteUpdateOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleNoteUpdate) string { return v.Text }).(pulumi.StringOutput)
}

// The principal that updated the note.
func (o AutomationRuleNoteUpdateOutput) UpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleNoteUpdate) string { return v.UpdatedBy }).(pulumi.StringOutput)
}

type AutomationRuleNoteUpdatePtrOutput struct{ *pulumi.OutputState }

func (AutomationRuleNoteUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleNoteUpdate)(nil)).Elem()
}

func (o AutomationRuleNoteUpdatePtrOutput) ToAutomationRuleNoteUpdatePtrOutput() AutomationRuleNoteUpdatePtrOutput {
	return o
}

func (o AutomationRuleNoteUpdatePtrOutput) ToAutomationRuleNoteUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleNoteUpdatePtrOutput {
	return o
}

func (o AutomationRuleNoteUpdatePtrOutput) Elem() AutomationRuleNoteUpdateOutput {
	return o.ApplyT(func(v *AutomationRuleNoteUpdate) AutomationRuleNoteUpdate {
		if v != nil {
			return *v
		}
		var ret AutomationRuleNoteUpdate
		return ret
	}).(AutomationRuleNoteUpdateOutput)
}

// The updated note text.
func (o AutomationRuleNoteUpdatePtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRuleNoteUpdate) *string {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(pulumi.StringPtrOutput)
}

// The principal that updated the note.
func (o AutomationRuleNoteUpdatePtrOutput) UpdatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationRuleNoteUpdate) *string {
		if v == nil {
			return nil
		}
		return &v.UpdatedBy
	}).(pulumi.StringPtrOutput)
}

type AutomationRuleNumberFilter struct {
	// The equal-to condition to be applied to a single field when querying for findings.
	Eq *float64 `pulumi:"eq"`
	// The greater-than-equal condition to be applied to a single field when querying for findings.
	Gte *float64 `pulumi:"gte"`
	// The less-than-equal condition to be applied to a single field when querying for findings.
	Lte *float64 `pulumi:"lte"`
}

// AutomationRuleNumberFilterInput is an input type that accepts AutomationRuleNumberFilterArgs and AutomationRuleNumberFilterOutput values.
// You can construct a concrete instance of `AutomationRuleNumberFilterInput` via:
//
//	AutomationRuleNumberFilterArgs{...}
type AutomationRuleNumberFilterInput interface {
	pulumi.Input

	ToAutomationRuleNumberFilterOutput() AutomationRuleNumberFilterOutput
	ToAutomationRuleNumberFilterOutputWithContext(context.Context) AutomationRuleNumberFilterOutput
}

type AutomationRuleNumberFilterArgs struct {
	// The equal-to condition to be applied to a single field when querying for findings.
	Eq pulumi.Float64PtrInput `pulumi:"eq"`
	// The greater-than-equal condition to be applied to a single field when querying for findings.
	Gte pulumi.Float64PtrInput `pulumi:"gte"`
	// The less-than-equal condition to be applied to a single field when querying for findings.
	Lte pulumi.Float64PtrInput `pulumi:"lte"`
}

func (AutomationRuleNumberFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleNumberFilter)(nil)).Elem()
}

func (i AutomationRuleNumberFilterArgs) ToAutomationRuleNumberFilterOutput() AutomationRuleNumberFilterOutput {
	return i.ToAutomationRuleNumberFilterOutputWithContext(context.Background())
}

func (i AutomationRuleNumberFilterArgs) ToAutomationRuleNumberFilterOutputWithContext(ctx context.Context) AutomationRuleNumberFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleNumberFilterOutput)
}

// AutomationRuleNumberFilterArrayInput is an input type that accepts AutomationRuleNumberFilterArray and AutomationRuleNumberFilterArrayOutput values.
// You can construct a concrete instance of `AutomationRuleNumberFilterArrayInput` via:
//
//	AutomationRuleNumberFilterArray{ AutomationRuleNumberFilterArgs{...} }
type AutomationRuleNumberFilterArrayInput interface {
	pulumi.Input

	ToAutomationRuleNumberFilterArrayOutput() AutomationRuleNumberFilterArrayOutput
	ToAutomationRuleNumberFilterArrayOutputWithContext(context.Context) AutomationRuleNumberFilterArrayOutput
}

type AutomationRuleNumberFilterArray []AutomationRuleNumberFilterInput

func (AutomationRuleNumberFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleNumberFilter)(nil)).Elem()
}

func (i AutomationRuleNumberFilterArray) ToAutomationRuleNumberFilterArrayOutput() AutomationRuleNumberFilterArrayOutput {
	return i.ToAutomationRuleNumberFilterArrayOutputWithContext(context.Background())
}

func (i AutomationRuleNumberFilterArray) ToAutomationRuleNumberFilterArrayOutputWithContext(ctx context.Context) AutomationRuleNumberFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleNumberFilterArrayOutput)
}

type AutomationRuleNumberFilterOutput struct{ *pulumi.OutputState }

func (AutomationRuleNumberFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleNumberFilter)(nil)).Elem()
}

func (o AutomationRuleNumberFilterOutput) ToAutomationRuleNumberFilterOutput() AutomationRuleNumberFilterOutput {
	return o
}

func (o AutomationRuleNumberFilterOutput) ToAutomationRuleNumberFilterOutputWithContext(ctx context.Context) AutomationRuleNumberFilterOutput {
	return o
}

// The equal-to condition to be applied to a single field when querying for findings.
func (o AutomationRuleNumberFilterOutput) Eq() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutomationRuleNumberFilter) *float64 { return v.Eq }).(pulumi.Float64PtrOutput)
}

// The greater-than-equal condition to be applied to a single field when querying for findings.
func (o AutomationRuleNumberFilterOutput) Gte() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutomationRuleNumberFilter) *float64 { return v.Gte }).(pulumi.Float64PtrOutput)
}

// The less-than-equal condition to be applied to a single field when querying for findings.
func (o AutomationRuleNumberFilterOutput) Lte() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutomationRuleNumberFilter) *float64 { return v.Lte }).(pulumi.Float64PtrOutput)
}

type AutomationRuleNumberFilterArrayOutput struct{ *pulumi.OutputState }

func (AutomationRuleNumberFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleNumberFilter)(nil)).Elem()
}

func (o AutomationRuleNumberFilterArrayOutput) ToAutomationRuleNumberFilterArrayOutput() AutomationRuleNumberFilterArrayOutput {
	return o
}

func (o AutomationRuleNumberFilterArrayOutput) ToAutomationRuleNumberFilterArrayOutputWithContext(ctx context.Context) AutomationRuleNumberFilterArrayOutput {
	return o
}

func (o AutomationRuleNumberFilterArrayOutput) Index(i pulumi.IntInput) AutomationRuleNumberFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRuleNumberFilter {
		return vs[0].([]AutomationRuleNumberFilter)[vs[1].(int)]
	}).(AutomationRuleNumberFilterOutput)
}

// Provides details about a list of findings that the current finding relates to.
type AutomationRuleRelatedFinding struct {
	// The product-generated identifier for a related finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	Id string `pulumi:"id"`
	// The Amazon Resource Name (ARN) for the product that generated a related finding.
	ProductArn string `pulumi:"productArn"`
}

// AutomationRuleRelatedFindingInput is an input type that accepts AutomationRuleRelatedFindingArgs and AutomationRuleRelatedFindingOutput values.
// You can construct a concrete instance of `AutomationRuleRelatedFindingInput` via:
//
//	AutomationRuleRelatedFindingArgs{...}
type AutomationRuleRelatedFindingInput interface {
	pulumi.Input

	ToAutomationRuleRelatedFindingOutput() AutomationRuleRelatedFindingOutput
	ToAutomationRuleRelatedFindingOutputWithContext(context.Context) AutomationRuleRelatedFindingOutput
}

// Provides details about a list of findings that the current finding relates to.
type AutomationRuleRelatedFindingArgs struct {
	// The product-generated identifier for a related finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	Id pulumi.StringInput `pulumi:"id"`
	// The Amazon Resource Name (ARN) for the product that generated a related finding.
	ProductArn pulumi.StringInput `pulumi:"productArn"`
}

func (AutomationRuleRelatedFindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleRelatedFinding)(nil)).Elem()
}

func (i AutomationRuleRelatedFindingArgs) ToAutomationRuleRelatedFindingOutput() AutomationRuleRelatedFindingOutput {
	return i.ToAutomationRuleRelatedFindingOutputWithContext(context.Background())
}

func (i AutomationRuleRelatedFindingArgs) ToAutomationRuleRelatedFindingOutputWithContext(ctx context.Context) AutomationRuleRelatedFindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleRelatedFindingOutput)
}

// AutomationRuleRelatedFindingArrayInput is an input type that accepts AutomationRuleRelatedFindingArray and AutomationRuleRelatedFindingArrayOutput values.
// You can construct a concrete instance of `AutomationRuleRelatedFindingArrayInput` via:
//
//	AutomationRuleRelatedFindingArray{ AutomationRuleRelatedFindingArgs{...} }
type AutomationRuleRelatedFindingArrayInput interface {
	pulumi.Input

	ToAutomationRuleRelatedFindingArrayOutput() AutomationRuleRelatedFindingArrayOutput
	ToAutomationRuleRelatedFindingArrayOutputWithContext(context.Context) AutomationRuleRelatedFindingArrayOutput
}

type AutomationRuleRelatedFindingArray []AutomationRuleRelatedFindingInput

func (AutomationRuleRelatedFindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleRelatedFinding)(nil)).Elem()
}

func (i AutomationRuleRelatedFindingArray) ToAutomationRuleRelatedFindingArrayOutput() AutomationRuleRelatedFindingArrayOutput {
	return i.ToAutomationRuleRelatedFindingArrayOutputWithContext(context.Background())
}

func (i AutomationRuleRelatedFindingArray) ToAutomationRuleRelatedFindingArrayOutputWithContext(ctx context.Context) AutomationRuleRelatedFindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleRelatedFindingArrayOutput)
}

// Provides details about a list of findings that the current finding relates to.
type AutomationRuleRelatedFindingOutput struct{ *pulumi.OutputState }

func (AutomationRuleRelatedFindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleRelatedFinding)(nil)).Elem()
}

func (o AutomationRuleRelatedFindingOutput) ToAutomationRuleRelatedFindingOutput() AutomationRuleRelatedFindingOutput {
	return o
}

func (o AutomationRuleRelatedFindingOutput) ToAutomationRuleRelatedFindingOutputWithContext(ctx context.Context) AutomationRuleRelatedFindingOutput {
	return o
}

// The product-generated identifier for a related finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRuleRelatedFindingOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleRelatedFinding) string { return v.Id }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) for the product that generated a related finding.
func (o AutomationRuleRelatedFindingOutput) ProductArn() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleRelatedFinding) string { return v.ProductArn }).(pulumi.StringOutput)
}

type AutomationRuleRelatedFindingArrayOutput struct{ *pulumi.OutputState }

func (AutomationRuleRelatedFindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleRelatedFinding)(nil)).Elem()
}

func (o AutomationRuleRelatedFindingArrayOutput) ToAutomationRuleRelatedFindingArrayOutput() AutomationRuleRelatedFindingArrayOutput {
	return o
}

func (o AutomationRuleRelatedFindingArrayOutput) ToAutomationRuleRelatedFindingArrayOutputWithContext(ctx context.Context) AutomationRuleRelatedFindingArrayOutput {
	return o
}

func (o AutomationRuleRelatedFindingArrayOutput) Index(i pulumi.IntInput) AutomationRuleRelatedFindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRuleRelatedFinding {
		return vs[0].([]AutomationRuleRelatedFinding)[vs[1].(int)]
	}).(AutomationRuleRelatedFindingOutput)
}

type AutomationRuleSeverityUpdate struct {
	// The severity value of the finding. The allowed values are the following.
	//
	// - `INFORMATIONAL` - No issue was found.
	// - `LOW` - The issue does not require action on its own.
	// - `MEDIUM` - The issue must be addressed but not urgently.
	// - `HIGH` - The issue must be addressed as a priority.
	// - `CRITICAL` - The issue must be remediated immediately to avoid it escalating.
	Label *AutomationRuleSeverityUpdateLabel `pulumi:"label"`
	// The normalized severity for the finding. This attribute is to be deprecated in favor of `Label` .
	//
	// If you provide `Normalized` and do not provide `Label` , `Label` is set automatically as follows.
	//
	// - 0 - `INFORMATIONAL`
	// - 1–39 - `LOW`
	// - 40–69 - `MEDIUM`
	// - 70–89 - `HIGH`
	// - 90–100 - `CRITICAL`
	Normalized *int `pulumi:"normalized"`
	// The native severity as defined by the AWS service or integrated partner product that generated the finding.
	Product *float64 `pulumi:"product"`
}

// AutomationRuleSeverityUpdateInput is an input type that accepts AutomationRuleSeverityUpdateArgs and AutomationRuleSeverityUpdateOutput values.
// You can construct a concrete instance of `AutomationRuleSeverityUpdateInput` via:
//
//	AutomationRuleSeverityUpdateArgs{...}
type AutomationRuleSeverityUpdateInput interface {
	pulumi.Input

	ToAutomationRuleSeverityUpdateOutput() AutomationRuleSeverityUpdateOutput
	ToAutomationRuleSeverityUpdateOutputWithContext(context.Context) AutomationRuleSeverityUpdateOutput
}

type AutomationRuleSeverityUpdateArgs struct {
	// The severity value of the finding. The allowed values are the following.
	//
	// - `INFORMATIONAL` - No issue was found.
	// - `LOW` - The issue does not require action on its own.
	// - `MEDIUM` - The issue must be addressed but not urgently.
	// - `HIGH` - The issue must be addressed as a priority.
	// - `CRITICAL` - The issue must be remediated immediately to avoid it escalating.
	Label AutomationRuleSeverityUpdateLabelPtrInput `pulumi:"label"`
	// The normalized severity for the finding. This attribute is to be deprecated in favor of `Label` .
	//
	// If you provide `Normalized` and do not provide `Label` , `Label` is set automatically as follows.
	//
	// - 0 - `INFORMATIONAL`
	// - 1–39 - `LOW`
	// - 40–69 - `MEDIUM`
	// - 70–89 - `HIGH`
	// - 90–100 - `CRITICAL`
	Normalized pulumi.IntPtrInput `pulumi:"normalized"`
	// The native severity as defined by the AWS service or integrated partner product that generated the finding.
	Product pulumi.Float64PtrInput `pulumi:"product"`
}

func (AutomationRuleSeverityUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleSeverityUpdate)(nil)).Elem()
}

func (i AutomationRuleSeverityUpdateArgs) ToAutomationRuleSeverityUpdateOutput() AutomationRuleSeverityUpdateOutput {
	return i.ToAutomationRuleSeverityUpdateOutputWithContext(context.Background())
}

func (i AutomationRuleSeverityUpdateArgs) ToAutomationRuleSeverityUpdateOutputWithContext(ctx context.Context) AutomationRuleSeverityUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleSeverityUpdateOutput)
}

func (i AutomationRuleSeverityUpdateArgs) ToAutomationRuleSeverityUpdatePtrOutput() AutomationRuleSeverityUpdatePtrOutput {
	return i.ToAutomationRuleSeverityUpdatePtrOutputWithContext(context.Background())
}

func (i AutomationRuleSeverityUpdateArgs) ToAutomationRuleSeverityUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleSeverityUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleSeverityUpdateOutput).ToAutomationRuleSeverityUpdatePtrOutputWithContext(ctx)
}

// AutomationRuleSeverityUpdatePtrInput is an input type that accepts AutomationRuleSeverityUpdateArgs, AutomationRuleSeverityUpdatePtr and AutomationRuleSeverityUpdatePtrOutput values.
// You can construct a concrete instance of `AutomationRuleSeverityUpdatePtrInput` via:
//
//	        AutomationRuleSeverityUpdateArgs{...}
//
//	or:
//
//	        nil
type AutomationRuleSeverityUpdatePtrInput interface {
	pulumi.Input

	ToAutomationRuleSeverityUpdatePtrOutput() AutomationRuleSeverityUpdatePtrOutput
	ToAutomationRuleSeverityUpdatePtrOutputWithContext(context.Context) AutomationRuleSeverityUpdatePtrOutput
}

type automationRuleSeverityUpdatePtrType AutomationRuleSeverityUpdateArgs

func AutomationRuleSeverityUpdatePtr(v *AutomationRuleSeverityUpdateArgs) AutomationRuleSeverityUpdatePtrInput {
	return (*automationRuleSeverityUpdatePtrType)(v)
}

func (*automationRuleSeverityUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleSeverityUpdate)(nil)).Elem()
}

func (i *automationRuleSeverityUpdatePtrType) ToAutomationRuleSeverityUpdatePtrOutput() AutomationRuleSeverityUpdatePtrOutput {
	return i.ToAutomationRuleSeverityUpdatePtrOutputWithContext(context.Background())
}

func (i *automationRuleSeverityUpdatePtrType) ToAutomationRuleSeverityUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleSeverityUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleSeverityUpdatePtrOutput)
}

type AutomationRuleSeverityUpdateOutput struct{ *pulumi.OutputState }

func (AutomationRuleSeverityUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleSeverityUpdate)(nil)).Elem()
}

func (o AutomationRuleSeverityUpdateOutput) ToAutomationRuleSeverityUpdateOutput() AutomationRuleSeverityUpdateOutput {
	return o
}

func (o AutomationRuleSeverityUpdateOutput) ToAutomationRuleSeverityUpdateOutputWithContext(ctx context.Context) AutomationRuleSeverityUpdateOutput {
	return o
}

func (o AutomationRuleSeverityUpdateOutput) ToAutomationRuleSeverityUpdatePtrOutput() AutomationRuleSeverityUpdatePtrOutput {
	return o.ToAutomationRuleSeverityUpdatePtrOutputWithContext(context.Background())
}

func (o AutomationRuleSeverityUpdateOutput) ToAutomationRuleSeverityUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleSeverityUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRuleSeverityUpdate) *AutomationRuleSeverityUpdate {
		return &v
	}).(AutomationRuleSeverityUpdatePtrOutput)
}

// The severity value of the finding. The allowed values are the following.
//
// - `INFORMATIONAL` - No issue was found.
// - `LOW` - The issue does not require action on its own.
// - `MEDIUM` - The issue must be addressed but not urgently.
// - `HIGH` - The issue must be addressed as a priority.
// - `CRITICAL` - The issue must be remediated immediately to avoid it escalating.
func (o AutomationRuleSeverityUpdateOutput) Label() AutomationRuleSeverityUpdateLabelPtrOutput {
	return o.ApplyT(func(v AutomationRuleSeverityUpdate) *AutomationRuleSeverityUpdateLabel { return v.Label }).(AutomationRuleSeverityUpdateLabelPtrOutput)
}

// The normalized severity for the finding. This attribute is to be deprecated in favor of `Label` .
//
// If you provide `Normalized` and do not provide `Label` , `Label` is set automatically as follows.
//
// - 0 - `INFORMATIONAL`
// - 1–39 - `LOW`
// - 40–69 - `MEDIUM`
// - 70–89 - `HIGH`
// - 90–100 - `CRITICAL`
func (o AutomationRuleSeverityUpdateOutput) Normalized() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutomationRuleSeverityUpdate) *int { return v.Normalized }).(pulumi.IntPtrOutput)
}

// The native severity as defined by the AWS service or integrated partner product that generated the finding.
func (o AutomationRuleSeverityUpdateOutput) Product() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutomationRuleSeverityUpdate) *float64 { return v.Product }).(pulumi.Float64PtrOutput)
}

type AutomationRuleSeverityUpdatePtrOutput struct{ *pulumi.OutputState }

func (AutomationRuleSeverityUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleSeverityUpdate)(nil)).Elem()
}

func (o AutomationRuleSeverityUpdatePtrOutput) ToAutomationRuleSeverityUpdatePtrOutput() AutomationRuleSeverityUpdatePtrOutput {
	return o
}

func (o AutomationRuleSeverityUpdatePtrOutput) ToAutomationRuleSeverityUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleSeverityUpdatePtrOutput {
	return o
}

func (o AutomationRuleSeverityUpdatePtrOutput) Elem() AutomationRuleSeverityUpdateOutput {
	return o.ApplyT(func(v *AutomationRuleSeverityUpdate) AutomationRuleSeverityUpdate {
		if v != nil {
			return *v
		}
		var ret AutomationRuleSeverityUpdate
		return ret
	}).(AutomationRuleSeverityUpdateOutput)
}

// The severity value of the finding. The allowed values are the following.
//
// - `INFORMATIONAL` - No issue was found.
// - `LOW` - The issue does not require action on its own.
// - `MEDIUM` - The issue must be addressed but not urgently.
// - `HIGH` - The issue must be addressed as a priority.
// - `CRITICAL` - The issue must be remediated immediately to avoid it escalating.
func (o AutomationRuleSeverityUpdatePtrOutput) Label() AutomationRuleSeverityUpdateLabelPtrOutput {
	return o.ApplyT(func(v *AutomationRuleSeverityUpdate) *AutomationRuleSeverityUpdateLabel {
		if v == nil {
			return nil
		}
		return v.Label
	}).(AutomationRuleSeverityUpdateLabelPtrOutput)
}

// The normalized severity for the finding. This attribute is to be deprecated in favor of `Label` .
//
// If you provide `Normalized` and do not provide `Label` , `Label` is set automatically as follows.
//
// - 0 - `INFORMATIONAL`
// - 1–39 - `LOW`
// - 40–69 - `MEDIUM`
// - 70–89 - `HIGH`
// - 90–100 - `CRITICAL`
func (o AutomationRuleSeverityUpdatePtrOutput) Normalized() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutomationRuleSeverityUpdate) *int {
		if v == nil {
			return nil
		}
		return v.Normalized
	}).(pulumi.IntPtrOutput)
}

// The native severity as defined by the AWS service or integrated partner product that generated the finding.
func (o AutomationRuleSeverityUpdatePtrOutput) Product() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutomationRuleSeverityUpdate) *float64 {
		if v == nil {
			return nil
		}
		return v.Product
	}).(pulumi.Float64PtrOutput)
}

type AutomationRuleStringFilter struct {
	// The condition to apply to a string value when filtering Security Hub findings.
	//
	// To search for values that have the filter value, use one of the following comparison operators:
	//
	// - To search for values that include the filter value, use `CONTAINS` . For example, the filter `Title CONTAINS CloudFront` matches findings that have a `Title` that includes the string CloudFront.
	// - To search for values that exactly match the filter value, use `EQUALS` . For example, the filter `AwsAccountId EQUALS 123456789012` only matches findings that have an account ID of `123456789012` .
	// - To search for values that start with the filter value, use `PREFIX` . For example, the filter `ResourceRegion PREFIX us` matches findings that have a `ResourceRegion` that starts with `us` . A `ResourceRegion` that starts with a different value, such as `af` , `ap` , or `ca` , doesn't match.
	//
	// `CONTAINS` , `EQUALS` , and `PREFIX` filters on the same field are joined by `OR` . A finding matches if it matches any one of those filters. For example, the filters `Title CONTAINS CloudFront OR Title CONTAINS CloudWatch` match a finding that includes either `CloudFront` , `CloudWatch` , or both strings in the title.
	//
	// To search for values that don’t have the filter value, use one of the following comparison operators:
	//
	// - To search for values that exclude the filter value, use `NOT_CONTAINS` . For example, the filter `Title NOT_CONTAINS CloudFront` matches findings that have a `Title` that excludes the string CloudFront.
	// - To search for values other than the filter value, use `NOT_EQUALS` . For example, the filter `AwsAccountId NOT_EQUALS 123456789012` only matches findings that have an account ID other than `123456789012` .
	// - To search for values that don't start with the filter value, use `PREFIX_NOT_EQUALS` . For example, the filter `ResourceRegion PREFIX_NOT_EQUALS us` matches findings with a `ResourceRegion` that starts with a value other than `us` .
	//
	// `NOT_CONTAINS` , `NOT_EQUALS` , and `PREFIX_NOT_EQUALS` filters on the same field are joined by `AND` . A finding matches only if it matches all of those filters. For example, the filters `Title NOT_CONTAINS CloudFront AND Title NOT_CONTAINS CloudWatch` match a finding that excludes both `CloudFront` and `CloudWatch` in the title.
	//
	// You can’t have both a `CONTAINS` filter and a `NOT_CONTAINS` filter on the same field. Similarly, you can't provide both an `EQUALS` filter and a `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filter on the same field. Combining filters in this way returns an error. `CONTAINS` filters can only be used with other `CONTAINS` filters. `NOT_CONTAINS` filters can only be used with other `NOT_CONTAINS` filters.
	//
	// You can combine `PREFIX` filters with `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filters for the same field. Security Hub first processes the `PREFIX` filters, and then the `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filters.
	//
	// For example, for the following filters, Security Hub first identifies findings that have resource types that start with either `AwsIam` or `AwsEc2` . It then excludes findings that have a resource type of `AwsIamPolicy` and findings that have a resource type of `AwsEc2NetworkInterface` .
	//
	// - `ResourceType PREFIX AwsIam`
	// - `ResourceType PREFIX AwsEc2`
	// - `ResourceType NOT_EQUALS AwsIamPolicy`
	// - `ResourceType NOT_EQUALS AwsEc2NetworkInterface`
	//
	// `CONTAINS` and `NOT_CONTAINS` operators can be used only with automation rules. For more information, see [Automation rules](https://docs.aws.amazon.com/securityhub/latest/userguide/automation-rules.html) in the *AWS Security Hub User Guide* .
	Comparison AutomationRuleStringFilterComparison `pulumi:"comparison"`
	// The string filter value. Filter values are case sensitive. For example, the product name for control-based findings is `Security Hub` . If you provide `security hub` as the filter value, there's no match.
	Value string `pulumi:"value"`
}

// AutomationRuleStringFilterInput is an input type that accepts AutomationRuleStringFilterArgs and AutomationRuleStringFilterOutput values.
// You can construct a concrete instance of `AutomationRuleStringFilterInput` via:
//
//	AutomationRuleStringFilterArgs{...}
type AutomationRuleStringFilterInput interface {
	pulumi.Input

	ToAutomationRuleStringFilterOutput() AutomationRuleStringFilterOutput
	ToAutomationRuleStringFilterOutputWithContext(context.Context) AutomationRuleStringFilterOutput
}

type AutomationRuleStringFilterArgs struct {
	// The condition to apply to a string value when filtering Security Hub findings.
	//
	// To search for values that have the filter value, use one of the following comparison operators:
	//
	// - To search for values that include the filter value, use `CONTAINS` . For example, the filter `Title CONTAINS CloudFront` matches findings that have a `Title` that includes the string CloudFront.
	// - To search for values that exactly match the filter value, use `EQUALS` . For example, the filter `AwsAccountId EQUALS 123456789012` only matches findings that have an account ID of `123456789012` .
	// - To search for values that start with the filter value, use `PREFIX` . For example, the filter `ResourceRegion PREFIX us` matches findings that have a `ResourceRegion` that starts with `us` . A `ResourceRegion` that starts with a different value, such as `af` , `ap` , or `ca` , doesn't match.
	//
	// `CONTAINS` , `EQUALS` , and `PREFIX` filters on the same field are joined by `OR` . A finding matches if it matches any one of those filters. For example, the filters `Title CONTAINS CloudFront OR Title CONTAINS CloudWatch` match a finding that includes either `CloudFront` , `CloudWatch` , or both strings in the title.
	//
	// To search for values that don’t have the filter value, use one of the following comparison operators:
	//
	// - To search for values that exclude the filter value, use `NOT_CONTAINS` . For example, the filter `Title NOT_CONTAINS CloudFront` matches findings that have a `Title` that excludes the string CloudFront.
	// - To search for values other than the filter value, use `NOT_EQUALS` . For example, the filter `AwsAccountId NOT_EQUALS 123456789012` only matches findings that have an account ID other than `123456789012` .
	// - To search for values that don't start with the filter value, use `PREFIX_NOT_EQUALS` . For example, the filter `ResourceRegion PREFIX_NOT_EQUALS us` matches findings with a `ResourceRegion` that starts with a value other than `us` .
	//
	// `NOT_CONTAINS` , `NOT_EQUALS` , and `PREFIX_NOT_EQUALS` filters on the same field are joined by `AND` . A finding matches only if it matches all of those filters. For example, the filters `Title NOT_CONTAINS CloudFront AND Title NOT_CONTAINS CloudWatch` match a finding that excludes both `CloudFront` and `CloudWatch` in the title.
	//
	// You can’t have both a `CONTAINS` filter and a `NOT_CONTAINS` filter on the same field. Similarly, you can't provide both an `EQUALS` filter and a `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filter on the same field. Combining filters in this way returns an error. `CONTAINS` filters can only be used with other `CONTAINS` filters. `NOT_CONTAINS` filters can only be used with other `NOT_CONTAINS` filters.
	//
	// You can combine `PREFIX` filters with `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filters for the same field. Security Hub first processes the `PREFIX` filters, and then the `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filters.
	//
	// For example, for the following filters, Security Hub first identifies findings that have resource types that start with either `AwsIam` or `AwsEc2` . It then excludes findings that have a resource type of `AwsIamPolicy` and findings that have a resource type of `AwsEc2NetworkInterface` .
	//
	// - `ResourceType PREFIX AwsIam`
	// - `ResourceType PREFIX AwsEc2`
	// - `ResourceType NOT_EQUALS AwsIamPolicy`
	// - `ResourceType NOT_EQUALS AwsEc2NetworkInterface`
	//
	// `CONTAINS` and `NOT_CONTAINS` operators can be used only with automation rules. For more information, see [Automation rules](https://docs.aws.amazon.com/securityhub/latest/userguide/automation-rules.html) in the *AWS Security Hub User Guide* .
	Comparison AutomationRuleStringFilterComparisonInput `pulumi:"comparison"`
	// The string filter value. Filter values are case sensitive. For example, the product name for control-based findings is `Security Hub` . If you provide `security hub` as the filter value, there's no match.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AutomationRuleStringFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleStringFilter)(nil)).Elem()
}

func (i AutomationRuleStringFilterArgs) ToAutomationRuleStringFilterOutput() AutomationRuleStringFilterOutput {
	return i.ToAutomationRuleStringFilterOutputWithContext(context.Background())
}

func (i AutomationRuleStringFilterArgs) ToAutomationRuleStringFilterOutputWithContext(ctx context.Context) AutomationRuleStringFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleStringFilterOutput)
}

// AutomationRuleStringFilterArrayInput is an input type that accepts AutomationRuleStringFilterArray and AutomationRuleStringFilterArrayOutput values.
// You can construct a concrete instance of `AutomationRuleStringFilterArrayInput` via:
//
//	AutomationRuleStringFilterArray{ AutomationRuleStringFilterArgs{...} }
type AutomationRuleStringFilterArrayInput interface {
	pulumi.Input

	ToAutomationRuleStringFilterArrayOutput() AutomationRuleStringFilterArrayOutput
	ToAutomationRuleStringFilterArrayOutputWithContext(context.Context) AutomationRuleStringFilterArrayOutput
}

type AutomationRuleStringFilterArray []AutomationRuleStringFilterInput

func (AutomationRuleStringFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleStringFilter)(nil)).Elem()
}

func (i AutomationRuleStringFilterArray) ToAutomationRuleStringFilterArrayOutput() AutomationRuleStringFilterArrayOutput {
	return i.ToAutomationRuleStringFilterArrayOutputWithContext(context.Background())
}

func (i AutomationRuleStringFilterArray) ToAutomationRuleStringFilterArrayOutputWithContext(ctx context.Context) AutomationRuleStringFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleStringFilterArrayOutput)
}

type AutomationRuleStringFilterOutput struct{ *pulumi.OutputState }

func (AutomationRuleStringFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleStringFilter)(nil)).Elem()
}

func (o AutomationRuleStringFilterOutput) ToAutomationRuleStringFilterOutput() AutomationRuleStringFilterOutput {
	return o
}

func (o AutomationRuleStringFilterOutput) ToAutomationRuleStringFilterOutputWithContext(ctx context.Context) AutomationRuleStringFilterOutput {
	return o
}

// The condition to apply to a string value when filtering Security Hub findings.
//
// To search for values that have the filter value, use one of the following comparison operators:
//
// - To search for values that include the filter value, use `CONTAINS` . For example, the filter `Title CONTAINS CloudFront` matches findings that have a `Title` that includes the string CloudFront.
// - To search for values that exactly match the filter value, use `EQUALS` . For example, the filter `AwsAccountId EQUALS 123456789012` only matches findings that have an account ID of `123456789012` .
// - To search for values that start with the filter value, use `PREFIX` . For example, the filter `ResourceRegion PREFIX us` matches findings that have a `ResourceRegion` that starts with `us` . A `ResourceRegion` that starts with a different value, such as `af` , `ap` , or `ca` , doesn't match.
//
// `CONTAINS` , `EQUALS` , and `PREFIX` filters on the same field are joined by `OR` . A finding matches if it matches any one of those filters. For example, the filters `Title CONTAINS CloudFront OR Title CONTAINS CloudWatch` match a finding that includes either `CloudFront` , `CloudWatch` , or both strings in the title.
//
// To search for values that don’t have the filter value, use one of the following comparison operators:
//
// - To search for values that exclude the filter value, use `NOT_CONTAINS` . For example, the filter `Title NOT_CONTAINS CloudFront` matches findings that have a `Title` that excludes the string CloudFront.
// - To search for values other than the filter value, use `NOT_EQUALS` . For example, the filter `AwsAccountId NOT_EQUALS 123456789012` only matches findings that have an account ID other than `123456789012` .
// - To search for values that don't start with the filter value, use `PREFIX_NOT_EQUALS` . For example, the filter `ResourceRegion PREFIX_NOT_EQUALS us` matches findings with a `ResourceRegion` that starts with a value other than `us` .
//
// `NOT_CONTAINS` , `NOT_EQUALS` , and `PREFIX_NOT_EQUALS` filters on the same field are joined by `AND` . A finding matches only if it matches all of those filters. For example, the filters `Title NOT_CONTAINS CloudFront AND Title NOT_CONTAINS CloudWatch` match a finding that excludes both `CloudFront` and `CloudWatch` in the title.
//
// You can’t have both a `CONTAINS` filter and a `NOT_CONTAINS` filter on the same field. Similarly, you can't provide both an `EQUALS` filter and a `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filter on the same field. Combining filters in this way returns an error. `CONTAINS` filters can only be used with other `CONTAINS` filters. `NOT_CONTAINS` filters can only be used with other `NOT_CONTAINS` filters.
//
// You can combine `PREFIX` filters with `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filters for the same field. Security Hub first processes the `PREFIX` filters, and then the `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filters.
//
// For example, for the following filters, Security Hub first identifies findings that have resource types that start with either `AwsIam` or `AwsEc2` . It then excludes findings that have a resource type of `AwsIamPolicy` and findings that have a resource type of `AwsEc2NetworkInterface` .
//
// - `ResourceType PREFIX AwsIam`
// - `ResourceType PREFIX AwsEc2`
// - `ResourceType NOT_EQUALS AwsIamPolicy`
// - `ResourceType NOT_EQUALS AwsEc2NetworkInterface`
//
// `CONTAINS` and `NOT_CONTAINS` operators can be used only with automation rules. For more information, see [Automation rules](https://docs.aws.amazon.com/securityhub/latest/userguide/automation-rules.html) in the *AWS Security Hub User Guide* .
func (o AutomationRuleStringFilterOutput) Comparison() AutomationRuleStringFilterComparisonOutput {
	return o.ApplyT(func(v AutomationRuleStringFilter) AutomationRuleStringFilterComparison { return v.Comparison }).(AutomationRuleStringFilterComparisonOutput)
}

// The string filter value. Filter values are case sensitive. For example, the product name for control-based findings is `Security Hub` . If you provide `security hub` as the filter value, there's no match.
func (o AutomationRuleStringFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleStringFilter) string { return v.Value }).(pulumi.StringOutput)
}

type AutomationRuleStringFilterArrayOutput struct{ *pulumi.OutputState }

func (AutomationRuleStringFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleStringFilter)(nil)).Elem()
}

func (o AutomationRuleStringFilterArrayOutput) ToAutomationRuleStringFilterArrayOutput() AutomationRuleStringFilterArrayOutput {
	return o
}

func (o AutomationRuleStringFilterArrayOutput) ToAutomationRuleStringFilterArrayOutputWithContext(ctx context.Context) AutomationRuleStringFilterArrayOutput {
	return o
}

func (o AutomationRuleStringFilterArrayOutput) Index(i pulumi.IntInput) AutomationRuleStringFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRuleStringFilter {
		return vs[0].([]AutomationRuleStringFilter)[vs[1].(int)]
	}).(AutomationRuleStringFilterOutput)
}

type AutomationRuleWorkflowUpdate struct {
	// The status of the investigation into the finding. The workflow status is specific to an individual finding. It does not affect the generation of new findings. For example, setting the workflow status to `SUPPRESSED` or `RESOLVED` does not prevent a new finding for the same issue.
	//
	// The allowed values are the following.
	//
	// - `NEW` - The initial state of a finding, before it is reviewed.
	//
	// Security Hub also resets `WorkFlowStatus` from `NOTIFIED` or `RESOLVED` to `NEW` in the following cases:
	//
	// - The record state changes from `ARCHIVED` to `ACTIVE` .
	// - The compliance status changes from `PASSED` to either `WARNING` , `FAILED` , or `NOT_AVAILABLE` .
	// - `NOTIFIED` - Indicates that you notified the resource owner about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.
	// - `RESOLVED` - The finding was reviewed and remediated and is now considered resolved.
	// - `SUPPRESSED` - Indicates that you reviewed the finding and do not believe that any action is needed. The finding is no longer updated.
	Status AutomationRuleWorkflowUpdateStatus `pulumi:"status"`
}

// AutomationRuleWorkflowUpdateInput is an input type that accepts AutomationRuleWorkflowUpdateArgs and AutomationRuleWorkflowUpdateOutput values.
// You can construct a concrete instance of `AutomationRuleWorkflowUpdateInput` via:
//
//	AutomationRuleWorkflowUpdateArgs{...}
type AutomationRuleWorkflowUpdateInput interface {
	pulumi.Input

	ToAutomationRuleWorkflowUpdateOutput() AutomationRuleWorkflowUpdateOutput
	ToAutomationRuleWorkflowUpdateOutputWithContext(context.Context) AutomationRuleWorkflowUpdateOutput
}

type AutomationRuleWorkflowUpdateArgs struct {
	// The status of the investigation into the finding. The workflow status is specific to an individual finding. It does not affect the generation of new findings. For example, setting the workflow status to `SUPPRESSED` or `RESOLVED` does not prevent a new finding for the same issue.
	//
	// The allowed values are the following.
	//
	// - `NEW` - The initial state of a finding, before it is reviewed.
	//
	// Security Hub also resets `WorkFlowStatus` from `NOTIFIED` or `RESOLVED` to `NEW` in the following cases:
	//
	// - The record state changes from `ARCHIVED` to `ACTIVE` .
	// - The compliance status changes from `PASSED` to either `WARNING` , `FAILED` , or `NOT_AVAILABLE` .
	// - `NOTIFIED` - Indicates that you notified the resource owner about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.
	// - `RESOLVED` - The finding was reviewed and remediated and is now considered resolved.
	// - `SUPPRESSED` - Indicates that you reviewed the finding and do not believe that any action is needed. The finding is no longer updated.
	Status AutomationRuleWorkflowUpdateStatusInput `pulumi:"status"`
}

func (AutomationRuleWorkflowUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleWorkflowUpdate)(nil)).Elem()
}

func (i AutomationRuleWorkflowUpdateArgs) ToAutomationRuleWorkflowUpdateOutput() AutomationRuleWorkflowUpdateOutput {
	return i.ToAutomationRuleWorkflowUpdateOutputWithContext(context.Background())
}

func (i AutomationRuleWorkflowUpdateArgs) ToAutomationRuleWorkflowUpdateOutputWithContext(ctx context.Context) AutomationRuleWorkflowUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleWorkflowUpdateOutput)
}

func (i AutomationRuleWorkflowUpdateArgs) ToAutomationRuleWorkflowUpdatePtrOutput() AutomationRuleWorkflowUpdatePtrOutput {
	return i.ToAutomationRuleWorkflowUpdatePtrOutputWithContext(context.Background())
}

func (i AutomationRuleWorkflowUpdateArgs) ToAutomationRuleWorkflowUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleWorkflowUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleWorkflowUpdateOutput).ToAutomationRuleWorkflowUpdatePtrOutputWithContext(ctx)
}

// AutomationRuleWorkflowUpdatePtrInput is an input type that accepts AutomationRuleWorkflowUpdateArgs, AutomationRuleWorkflowUpdatePtr and AutomationRuleWorkflowUpdatePtrOutput values.
// You can construct a concrete instance of `AutomationRuleWorkflowUpdatePtrInput` via:
//
//	        AutomationRuleWorkflowUpdateArgs{...}
//
//	or:
//
//	        nil
type AutomationRuleWorkflowUpdatePtrInput interface {
	pulumi.Input

	ToAutomationRuleWorkflowUpdatePtrOutput() AutomationRuleWorkflowUpdatePtrOutput
	ToAutomationRuleWorkflowUpdatePtrOutputWithContext(context.Context) AutomationRuleWorkflowUpdatePtrOutput
}

type automationRuleWorkflowUpdatePtrType AutomationRuleWorkflowUpdateArgs

func AutomationRuleWorkflowUpdatePtr(v *AutomationRuleWorkflowUpdateArgs) AutomationRuleWorkflowUpdatePtrInput {
	return (*automationRuleWorkflowUpdatePtrType)(v)
}

func (*automationRuleWorkflowUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleWorkflowUpdate)(nil)).Elem()
}

func (i *automationRuleWorkflowUpdatePtrType) ToAutomationRuleWorkflowUpdatePtrOutput() AutomationRuleWorkflowUpdatePtrOutput {
	return i.ToAutomationRuleWorkflowUpdatePtrOutputWithContext(context.Background())
}

func (i *automationRuleWorkflowUpdatePtrType) ToAutomationRuleWorkflowUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleWorkflowUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleWorkflowUpdatePtrOutput)
}

type AutomationRuleWorkflowUpdateOutput struct{ *pulumi.OutputState }

func (AutomationRuleWorkflowUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleWorkflowUpdate)(nil)).Elem()
}

func (o AutomationRuleWorkflowUpdateOutput) ToAutomationRuleWorkflowUpdateOutput() AutomationRuleWorkflowUpdateOutput {
	return o
}

func (o AutomationRuleWorkflowUpdateOutput) ToAutomationRuleWorkflowUpdateOutputWithContext(ctx context.Context) AutomationRuleWorkflowUpdateOutput {
	return o
}

func (o AutomationRuleWorkflowUpdateOutput) ToAutomationRuleWorkflowUpdatePtrOutput() AutomationRuleWorkflowUpdatePtrOutput {
	return o.ToAutomationRuleWorkflowUpdatePtrOutputWithContext(context.Background())
}

func (o AutomationRuleWorkflowUpdateOutput) ToAutomationRuleWorkflowUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleWorkflowUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRuleWorkflowUpdate) *AutomationRuleWorkflowUpdate {
		return &v
	}).(AutomationRuleWorkflowUpdatePtrOutput)
}

// The status of the investigation into the finding. The workflow status is specific to an individual finding. It does not affect the generation of new findings. For example, setting the workflow status to `SUPPRESSED` or `RESOLVED` does not prevent a new finding for the same issue.
//
// The allowed values are the following.
//
// - `NEW` - The initial state of a finding, before it is reviewed.
//
// Security Hub also resets `WorkFlowStatus` from `NOTIFIED` or `RESOLVED` to `NEW` in the following cases:
//
// - The record state changes from `ARCHIVED` to `ACTIVE` .
// - The compliance status changes from `PASSED` to either `WARNING` , `FAILED` , or `NOT_AVAILABLE` .
// - `NOTIFIED` - Indicates that you notified the resource owner about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.
// - `RESOLVED` - The finding was reviewed and remediated and is now considered resolved.
// - `SUPPRESSED` - Indicates that you reviewed the finding and do not believe that any action is needed. The finding is no longer updated.
func (o AutomationRuleWorkflowUpdateOutput) Status() AutomationRuleWorkflowUpdateStatusOutput {
	return o.ApplyT(func(v AutomationRuleWorkflowUpdate) AutomationRuleWorkflowUpdateStatus { return v.Status }).(AutomationRuleWorkflowUpdateStatusOutput)
}

type AutomationRuleWorkflowUpdatePtrOutput struct{ *pulumi.OutputState }

func (AutomationRuleWorkflowUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRuleWorkflowUpdate)(nil)).Elem()
}

func (o AutomationRuleWorkflowUpdatePtrOutput) ToAutomationRuleWorkflowUpdatePtrOutput() AutomationRuleWorkflowUpdatePtrOutput {
	return o
}

func (o AutomationRuleWorkflowUpdatePtrOutput) ToAutomationRuleWorkflowUpdatePtrOutputWithContext(ctx context.Context) AutomationRuleWorkflowUpdatePtrOutput {
	return o
}

func (o AutomationRuleWorkflowUpdatePtrOutput) Elem() AutomationRuleWorkflowUpdateOutput {
	return o.ApplyT(func(v *AutomationRuleWorkflowUpdate) AutomationRuleWorkflowUpdate {
		if v != nil {
			return *v
		}
		var ret AutomationRuleWorkflowUpdate
		return ret
	}).(AutomationRuleWorkflowUpdateOutput)
}

// The status of the investigation into the finding. The workflow status is specific to an individual finding. It does not affect the generation of new findings. For example, setting the workflow status to `SUPPRESSED` or `RESOLVED` does not prevent a new finding for the same issue.
//
// The allowed values are the following.
//
// - `NEW` - The initial state of a finding, before it is reviewed.
//
// Security Hub also resets `WorkFlowStatus` from `NOTIFIED` or `RESOLVED` to `NEW` in the following cases:
//
// - The record state changes from `ARCHIVED` to `ACTIVE` .
// - The compliance status changes from `PASSED` to either `WARNING` , `FAILED` , or `NOT_AVAILABLE` .
// - `NOTIFIED` - Indicates that you notified the resource owner about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.
// - `RESOLVED` - The finding was reviewed and remediated and is now considered resolved.
// - `SUPPRESSED` - Indicates that you reviewed the finding and do not believe that any action is needed. The finding is no longer updated.
func (o AutomationRuleWorkflowUpdatePtrOutput) Status() AutomationRuleWorkflowUpdateStatusPtrOutput {
	return o.ApplyT(func(v *AutomationRuleWorkflowUpdate) *AutomationRuleWorkflowUpdateStatus {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(AutomationRuleWorkflowUpdateStatusPtrOutput)
}

type AutomationRulesAction struct {
	// Identifies the finding fields that the automation rule action updates when a finding matches the defined criteria.
	FindingFieldsUpdate AutomationRulesFindingFieldsUpdate `pulumi:"findingFieldsUpdate"`
	// Specifies that the rule action should update the `Types` finding field. The `Types` finding field classifies findings in the format of namespace/category/classifier. For more information, see [Types taxonomy for ASFF](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format-type-taxonomy.html) in the *AWS Security Hub User Guide* .
	Type AutomationRulesActionType `pulumi:"type"`
}

// AutomationRulesActionInput is an input type that accepts AutomationRulesActionArgs and AutomationRulesActionOutput values.
// You can construct a concrete instance of `AutomationRulesActionInput` via:
//
//	AutomationRulesActionArgs{...}
type AutomationRulesActionInput interface {
	pulumi.Input

	ToAutomationRulesActionOutput() AutomationRulesActionOutput
	ToAutomationRulesActionOutputWithContext(context.Context) AutomationRulesActionOutput
}

type AutomationRulesActionArgs struct {
	// Identifies the finding fields that the automation rule action updates when a finding matches the defined criteria.
	FindingFieldsUpdate AutomationRulesFindingFieldsUpdateInput `pulumi:"findingFieldsUpdate"`
	// Specifies that the rule action should update the `Types` finding field. The `Types` finding field classifies findings in the format of namespace/category/classifier. For more information, see [Types taxonomy for ASFF](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format-type-taxonomy.html) in the *AWS Security Hub User Guide* .
	Type AutomationRulesActionTypeInput `pulumi:"type"`
}

func (AutomationRulesActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulesAction)(nil)).Elem()
}

func (i AutomationRulesActionArgs) ToAutomationRulesActionOutput() AutomationRulesActionOutput {
	return i.ToAutomationRulesActionOutputWithContext(context.Background())
}

func (i AutomationRulesActionArgs) ToAutomationRulesActionOutputWithContext(ctx context.Context) AutomationRulesActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulesActionOutput)
}

// AutomationRulesActionArrayInput is an input type that accepts AutomationRulesActionArray and AutomationRulesActionArrayOutput values.
// You can construct a concrete instance of `AutomationRulesActionArrayInput` via:
//
//	AutomationRulesActionArray{ AutomationRulesActionArgs{...} }
type AutomationRulesActionArrayInput interface {
	pulumi.Input

	ToAutomationRulesActionArrayOutput() AutomationRulesActionArrayOutput
	ToAutomationRulesActionArrayOutputWithContext(context.Context) AutomationRulesActionArrayOutput
}

type AutomationRulesActionArray []AutomationRulesActionInput

func (AutomationRulesActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRulesAction)(nil)).Elem()
}

func (i AutomationRulesActionArray) ToAutomationRulesActionArrayOutput() AutomationRulesActionArrayOutput {
	return i.ToAutomationRulesActionArrayOutputWithContext(context.Background())
}

func (i AutomationRulesActionArray) ToAutomationRulesActionArrayOutputWithContext(ctx context.Context) AutomationRulesActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulesActionArrayOutput)
}

type AutomationRulesActionOutput struct{ *pulumi.OutputState }

func (AutomationRulesActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulesAction)(nil)).Elem()
}

func (o AutomationRulesActionOutput) ToAutomationRulesActionOutput() AutomationRulesActionOutput {
	return o
}

func (o AutomationRulesActionOutput) ToAutomationRulesActionOutputWithContext(ctx context.Context) AutomationRulesActionOutput {
	return o
}

// Identifies the finding fields that the automation rule action updates when a finding matches the defined criteria.
func (o AutomationRulesActionOutput) FindingFieldsUpdate() AutomationRulesFindingFieldsUpdateOutput {
	return o.ApplyT(func(v AutomationRulesAction) AutomationRulesFindingFieldsUpdate { return v.FindingFieldsUpdate }).(AutomationRulesFindingFieldsUpdateOutput)
}

// Specifies that the rule action should update the `Types` finding field. The `Types` finding field classifies findings in the format of namespace/category/classifier. For more information, see [Types taxonomy for ASFF](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format-type-taxonomy.html) in the *AWS Security Hub User Guide* .
func (o AutomationRulesActionOutput) Type() AutomationRulesActionTypeOutput {
	return o.ApplyT(func(v AutomationRulesAction) AutomationRulesActionType { return v.Type }).(AutomationRulesActionTypeOutput)
}

type AutomationRulesActionArrayOutput struct{ *pulumi.OutputState }

func (AutomationRulesActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRulesAction)(nil)).Elem()
}

func (o AutomationRulesActionArrayOutput) ToAutomationRulesActionArrayOutput() AutomationRulesActionArrayOutput {
	return o
}

func (o AutomationRulesActionArrayOutput) ToAutomationRulesActionArrayOutputWithContext(ctx context.Context) AutomationRulesActionArrayOutput {
	return o
}

func (o AutomationRulesActionArrayOutput) Index(i pulumi.IntInput) AutomationRulesActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRulesAction {
		return vs[0].([]AutomationRulesAction)[vs[1].(int)]
	}).(AutomationRulesActionOutput)
}

// The rule action will update the “Note“ field of a finding.
type AutomationRulesFindingFieldsUpdate struct {
	// The rule action updates the `Confidence` field of a finding.
	Confidence *int `pulumi:"confidence"`
	// The rule action updates the `Criticality` field of a finding.
	Criticality *int `pulumi:"criticality"`
	// The rule action will update the ``Note`` field of a finding.
	Note *AutomationRuleNoteUpdate `pulumi:"note"`
	// The rule action will update the ``RelatedFindings`` field of a finding.
	RelatedFindings []AutomationRuleRelatedFinding `pulumi:"relatedFindings"`
	// The rule action will update the ``Severity`` field of a finding.
	Severity *AutomationRuleSeverityUpdate `pulumi:"severity"`
	// The rule action updates the `Types` field of a finding.
	Types []string `pulumi:"types"`
	// The rule action updates the `UserDefinedFields` field of a finding.
	UserDefinedFields map[string]string `pulumi:"userDefinedFields"`
	// The rule action updates the `VerificationState` field of a finding.
	VerificationState *AutomationRulesFindingFieldsUpdateVerificationState `pulumi:"verificationState"`
	// The rule action will update the ``Workflow`` field of a finding.
	Workflow *AutomationRuleWorkflowUpdate `pulumi:"workflow"`
}

// AutomationRulesFindingFieldsUpdateInput is an input type that accepts AutomationRulesFindingFieldsUpdateArgs and AutomationRulesFindingFieldsUpdateOutput values.
// You can construct a concrete instance of `AutomationRulesFindingFieldsUpdateInput` via:
//
//	AutomationRulesFindingFieldsUpdateArgs{...}
type AutomationRulesFindingFieldsUpdateInput interface {
	pulumi.Input

	ToAutomationRulesFindingFieldsUpdateOutput() AutomationRulesFindingFieldsUpdateOutput
	ToAutomationRulesFindingFieldsUpdateOutputWithContext(context.Context) AutomationRulesFindingFieldsUpdateOutput
}

// The rule action will update the “Note“ field of a finding.
type AutomationRulesFindingFieldsUpdateArgs struct {
	// The rule action updates the `Confidence` field of a finding.
	Confidence pulumi.IntPtrInput `pulumi:"confidence"`
	// The rule action updates the `Criticality` field of a finding.
	Criticality pulumi.IntPtrInput `pulumi:"criticality"`
	// The rule action will update the ``Note`` field of a finding.
	Note AutomationRuleNoteUpdatePtrInput `pulumi:"note"`
	// The rule action will update the ``RelatedFindings`` field of a finding.
	RelatedFindings AutomationRuleRelatedFindingArrayInput `pulumi:"relatedFindings"`
	// The rule action will update the ``Severity`` field of a finding.
	Severity AutomationRuleSeverityUpdatePtrInput `pulumi:"severity"`
	// The rule action updates the `Types` field of a finding.
	Types pulumi.StringArrayInput `pulumi:"types"`
	// The rule action updates the `UserDefinedFields` field of a finding.
	UserDefinedFields pulumi.StringMapInput `pulumi:"userDefinedFields"`
	// The rule action updates the `VerificationState` field of a finding.
	VerificationState AutomationRulesFindingFieldsUpdateVerificationStatePtrInput `pulumi:"verificationState"`
	// The rule action will update the ``Workflow`` field of a finding.
	Workflow AutomationRuleWorkflowUpdatePtrInput `pulumi:"workflow"`
}

func (AutomationRulesFindingFieldsUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulesFindingFieldsUpdate)(nil)).Elem()
}

func (i AutomationRulesFindingFieldsUpdateArgs) ToAutomationRulesFindingFieldsUpdateOutput() AutomationRulesFindingFieldsUpdateOutput {
	return i.ToAutomationRulesFindingFieldsUpdateOutputWithContext(context.Background())
}

func (i AutomationRulesFindingFieldsUpdateArgs) ToAutomationRulesFindingFieldsUpdateOutputWithContext(ctx context.Context) AutomationRulesFindingFieldsUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulesFindingFieldsUpdateOutput)
}

// The rule action will update the “Note“ field of a finding.
type AutomationRulesFindingFieldsUpdateOutput struct{ *pulumi.OutputState }

func (AutomationRulesFindingFieldsUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulesFindingFieldsUpdate)(nil)).Elem()
}

func (o AutomationRulesFindingFieldsUpdateOutput) ToAutomationRulesFindingFieldsUpdateOutput() AutomationRulesFindingFieldsUpdateOutput {
	return o
}

func (o AutomationRulesFindingFieldsUpdateOutput) ToAutomationRulesFindingFieldsUpdateOutputWithContext(ctx context.Context) AutomationRulesFindingFieldsUpdateOutput {
	return o
}

// The rule action updates the `Confidence` field of a finding.
func (o AutomationRulesFindingFieldsUpdateOutput) Confidence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutomationRulesFindingFieldsUpdate) *int { return v.Confidence }).(pulumi.IntPtrOutput)
}

// The rule action updates the `Criticality` field of a finding.
func (o AutomationRulesFindingFieldsUpdateOutput) Criticality() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutomationRulesFindingFieldsUpdate) *int { return v.Criticality }).(pulumi.IntPtrOutput)
}

// The rule action will update the “Note“ field of a finding.
func (o AutomationRulesFindingFieldsUpdateOutput) Note() AutomationRuleNoteUpdatePtrOutput {
	return o.ApplyT(func(v AutomationRulesFindingFieldsUpdate) *AutomationRuleNoteUpdate { return v.Note }).(AutomationRuleNoteUpdatePtrOutput)
}

// The rule action will update the “RelatedFindings“ field of a finding.
func (o AutomationRulesFindingFieldsUpdateOutput) RelatedFindings() AutomationRuleRelatedFindingArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFieldsUpdate) []AutomationRuleRelatedFinding { return v.RelatedFindings }).(AutomationRuleRelatedFindingArrayOutput)
}

// The rule action will update the “Severity“ field of a finding.
func (o AutomationRulesFindingFieldsUpdateOutput) Severity() AutomationRuleSeverityUpdatePtrOutput {
	return o.ApplyT(func(v AutomationRulesFindingFieldsUpdate) *AutomationRuleSeverityUpdate { return v.Severity }).(AutomationRuleSeverityUpdatePtrOutput)
}

// The rule action updates the `Types` field of a finding.
func (o AutomationRulesFindingFieldsUpdateOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFieldsUpdate) []string { return v.Types }).(pulumi.StringArrayOutput)
}

// The rule action updates the `UserDefinedFields` field of a finding.
func (o AutomationRulesFindingFieldsUpdateOutput) UserDefinedFields() pulumi.StringMapOutput {
	return o.ApplyT(func(v AutomationRulesFindingFieldsUpdate) map[string]string { return v.UserDefinedFields }).(pulumi.StringMapOutput)
}

// The rule action updates the `VerificationState` field of a finding.
func (o AutomationRulesFindingFieldsUpdateOutput) VerificationState() AutomationRulesFindingFieldsUpdateVerificationStatePtrOutput {
	return o.ApplyT(func(v AutomationRulesFindingFieldsUpdate) *AutomationRulesFindingFieldsUpdateVerificationState {
		return v.VerificationState
	}).(AutomationRulesFindingFieldsUpdateVerificationStatePtrOutput)
}

// The rule action will update the “Workflow“ field of a finding.
func (o AutomationRulesFindingFieldsUpdateOutput) Workflow() AutomationRuleWorkflowUpdatePtrOutput {
	return o.ApplyT(func(v AutomationRulesFindingFieldsUpdate) *AutomationRuleWorkflowUpdate { return v.Workflow }).(AutomationRuleWorkflowUpdatePtrOutput)
}

type AutomationRulesFindingFilters struct {
	// A string filter for filtering AWS Security Hub findings.
	AwsAccountId []AutomationRuleStringFilter `pulumi:"awsAccountId"`
	// The name of the company for the product that generated the finding. For control-based findings, the company is AWS .
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	CompanyName []AutomationRuleStringFilter `pulumi:"companyName"`
	// The unique identifier of a standard in which a control is enabled. This field consists of the resource portion of the Amazon Resource Name (ARN) returned for a standard in the [DescribeStandards](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html) API response.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	ComplianceAssociatedStandardsId []AutomationRuleStringFilter `pulumi:"complianceAssociatedStandardsId"`
	// The security control ID for which a finding was generated. Security control IDs are the same across standards.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	ComplianceSecurityControlId []AutomationRuleStringFilter `pulumi:"complianceSecurityControlId"`
	// The result of a security check. This field is only used for findings generated from controls.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	ComplianceStatus []AutomationRuleStringFilter `pulumi:"complianceStatus"`
	// A number filter for querying findings.
	Confidence []AutomationRuleNumberFilter `pulumi:"confidence"`
	// A date filter for querying findings.
	CreatedAt []AutomationRuleDateFilter `pulumi:"createdAt"`
	// The level of importance that is assigned to the resources that are associated with a finding. `Criticality` is scored on a 0–100 basis, using a ratio scale that supports only full integers. A score of `0` means that the underlying resources have no criticality, and a score of `100` is reserved for the most critical resources. For more information, see [Criticality](https://docs.aws.amazon.com/securityhub/latest/userguide/asff-top-level-attributes.html#asff-criticality) in the *AWS Security Hub User Guide* .
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	Criticality []AutomationRuleNumberFilter `pulumi:"criticality"`
	// A finding's description.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	Description []AutomationRuleStringFilter `pulumi:"description"`
	// A timestamp that indicates when the potential security issue captured by a finding was first observed by the security findings product.
	//
	// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
	//
	// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
	// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
	// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	FirstObservedAt []AutomationRuleDateFilter `pulumi:"firstObservedAt"`
	// The identifier for the solution-specific component that generated a finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 100 items.
	GeneratorId []AutomationRuleStringFilter `pulumi:"generatorId"`
	// The product-specific identifier for a finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	Id []AutomationRuleStringFilter `pulumi:"id"`
	// A timestamp that indicates when the potential security issue captured by a finding was most recently observed by the security findings product.
	//
	// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
	//
	// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
	// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
	// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	LastObservedAt []AutomationRuleDateFilter `pulumi:"lastObservedAt"`
	// The text of a user-defined note that's added to a finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	NoteText []AutomationRuleStringFilter `pulumi:"noteText"`
	// The timestamp of when the note was updated.
	//
	// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
	//
	// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
	// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
	// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	NoteUpdatedAt []AutomationRuleDateFilter `pulumi:"noteUpdatedAt"`
	// The principal that created a note.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	NoteUpdatedBy []AutomationRuleStringFilter `pulumi:"noteUpdatedBy"`
	// The Amazon Resource Name (ARN) for a third-party product that generated a finding in Security Hub.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	ProductArn []AutomationRuleStringFilter `pulumi:"productArn"`
	// Provides the name of the product that generated the finding. For control-based findings, the product name is Security Hub.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	ProductName []AutomationRuleStringFilter `pulumi:"productName"`
	// Provides the current state of a finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	RecordState []AutomationRuleStringFilter `pulumi:"recordState"`
	// The product-generated identifier for a related finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	RelatedFindingsId []AutomationRuleStringFilter `pulumi:"relatedFindingsId"`
	// The ARN for the product that generated a related finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	RelatedFindingsProductArn []AutomationRuleStringFilter `pulumi:"relatedFindingsProductArn"`
	// A map filter for filtering AWS Security Hub findings. Each map filter provides the field to check for, the value to check for, and the comparison operator.
	ResourceDetailsOther []AutomationRuleMapFilter `pulumi:"resourceDetailsOther"`
	// The identifier for the given resource type. For AWS resources that are identified by Amazon Resource Names (ARNs), this is the ARN. For AWS resources that lack ARNs, this is the identifier as defined by the AWS service that created the resource. For non- AWS resources, this is a unique identifier that is associated with the resource.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 100 items.
	ResourceId []AutomationRuleStringFilter `pulumi:"resourceId"`
	// The partition in which the resource that the finding pertains to is located. A partition is a group of AWS Regions . Each AWS account is scoped to one partition.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	ResourcePartition []AutomationRuleStringFilter `pulumi:"resourcePartition"`
	// The AWS Region where the resource that a finding pertains to is located.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	ResourceRegion []AutomationRuleStringFilter `pulumi:"resourceRegion"`
	// A list of AWS tags associated with a resource at the time the finding was processed.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	ResourceTags []AutomationRuleMapFilter `pulumi:"resourceTags"`
	// A finding's title.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 100 items.
	ResourceType []AutomationRuleStringFilter `pulumi:"resourceType"`
	// The severity value of the finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	SeverityLabel []AutomationRuleStringFilter `pulumi:"severityLabel"`
	// Provides a URL that links to a page about the current finding in the finding product.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	SourceUrl []AutomationRuleStringFilter `pulumi:"sourceUrl"`
	// A finding's title.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 100 items.
	Title []AutomationRuleStringFilter `pulumi:"title"`
	// One or more finding types in the format of namespace/category/classifier that classify a finding. For a list of namespaces, classifiers, and categories, see [Types taxonomy for ASFF](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format-type-taxonomy.html) in the *AWS Security Hub User Guide* .
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	Type []AutomationRuleStringFilter `pulumi:"type"`
	// A timestamp that indicates when the finding record was most recently updated.
	//
	// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
	//
	// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
	// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
	// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	UpdatedAt []AutomationRuleDateFilter `pulumi:"updatedAt"`
	// A list of user-defined name and value string pairs added to a finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	UserDefinedFields []AutomationRuleMapFilter `pulumi:"userDefinedFields"`
	// Provides the veracity of a finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	VerificationState []AutomationRuleStringFilter `pulumi:"verificationState"`
	// Provides information about the status of the investigation into a finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	WorkflowStatus []AutomationRuleStringFilter `pulumi:"workflowStatus"`
}

// AutomationRulesFindingFiltersInput is an input type that accepts AutomationRulesFindingFiltersArgs and AutomationRulesFindingFiltersOutput values.
// You can construct a concrete instance of `AutomationRulesFindingFiltersInput` via:
//
//	AutomationRulesFindingFiltersArgs{...}
type AutomationRulesFindingFiltersInput interface {
	pulumi.Input

	ToAutomationRulesFindingFiltersOutput() AutomationRulesFindingFiltersOutput
	ToAutomationRulesFindingFiltersOutputWithContext(context.Context) AutomationRulesFindingFiltersOutput
}

type AutomationRulesFindingFiltersArgs struct {
	// A string filter for filtering AWS Security Hub findings.
	AwsAccountId AutomationRuleStringFilterArrayInput `pulumi:"awsAccountId"`
	// The name of the company for the product that generated the finding. For control-based findings, the company is AWS .
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	CompanyName AutomationRuleStringFilterArrayInput `pulumi:"companyName"`
	// The unique identifier of a standard in which a control is enabled. This field consists of the resource portion of the Amazon Resource Name (ARN) returned for a standard in the [DescribeStandards](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html) API response.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	ComplianceAssociatedStandardsId AutomationRuleStringFilterArrayInput `pulumi:"complianceAssociatedStandardsId"`
	// The security control ID for which a finding was generated. Security control IDs are the same across standards.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	ComplianceSecurityControlId AutomationRuleStringFilterArrayInput `pulumi:"complianceSecurityControlId"`
	// The result of a security check. This field is only used for findings generated from controls.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	ComplianceStatus AutomationRuleStringFilterArrayInput `pulumi:"complianceStatus"`
	// A number filter for querying findings.
	Confidence AutomationRuleNumberFilterArrayInput `pulumi:"confidence"`
	// A date filter for querying findings.
	CreatedAt AutomationRuleDateFilterArrayInput `pulumi:"createdAt"`
	// The level of importance that is assigned to the resources that are associated with a finding. `Criticality` is scored on a 0–100 basis, using a ratio scale that supports only full integers. A score of `0` means that the underlying resources have no criticality, and a score of `100` is reserved for the most critical resources. For more information, see [Criticality](https://docs.aws.amazon.com/securityhub/latest/userguide/asff-top-level-attributes.html#asff-criticality) in the *AWS Security Hub User Guide* .
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	Criticality AutomationRuleNumberFilterArrayInput `pulumi:"criticality"`
	// A finding's description.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	Description AutomationRuleStringFilterArrayInput `pulumi:"description"`
	// A timestamp that indicates when the potential security issue captured by a finding was first observed by the security findings product.
	//
	// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
	//
	// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
	// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
	// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	FirstObservedAt AutomationRuleDateFilterArrayInput `pulumi:"firstObservedAt"`
	// The identifier for the solution-specific component that generated a finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 100 items.
	GeneratorId AutomationRuleStringFilterArrayInput `pulumi:"generatorId"`
	// The product-specific identifier for a finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	Id AutomationRuleStringFilterArrayInput `pulumi:"id"`
	// A timestamp that indicates when the potential security issue captured by a finding was most recently observed by the security findings product.
	//
	// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
	//
	// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
	// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
	// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	LastObservedAt AutomationRuleDateFilterArrayInput `pulumi:"lastObservedAt"`
	// The text of a user-defined note that's added to a finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	NoteText AutomationRuleStringFilterArrayInput `pulumi:"noteText"`
	// The timestamp of when the note was updated.
	//
	// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
	//
	// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
	// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
	// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	NoteUpdatedAt AutomationRuleDateFilterArrayInput `pulumi:"noteUpdatedAt"`
	// The principal that created a note.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	NoteUpdatedBy AutomationRuleStringFilterArrayInput `pulumi:"noteUpdatedBy"`
	// The Amazon Resource Name (ARN) for a third-party product that generated a finding in Security Hub.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	ProductArn AutomationRuleStringFilterArrayInput `pulumi:"productArn"`
	// Provides the name of the product that generated the finding. For control-based findings, the product name is Security Hub.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	ProductName AutomationRuleStringFilterArrayInput `pulumi:"productName"`
	// Provides the current state of a finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	RecordState AutomationRuleStringFilterArrayInput `pulumi:"recordState"`
	// The product-generated identifier for a related finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	RelatedFindingsId AutomationRuleStringFilterArrayInput `pulumi:"relatedFindingsId"`
	// The ARN for the product that generated a related finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	RelatedFindingsProductArn AutomationRuleStringFilterArrayInput `pulumi:"relatedFindingsProductArn"`
	// A map filter for filtering AWS Security Hub findings. Each map filter provides the field to check for, the value to check for, and the comparison operator.
	ResourceDetailsOther AutomationRuleMapFilterArrayInput `pulumi:"resourceDetailsOther"`
	// The identifier for the given resource type. For AWS resources that are identified by Amazon Resource Names (ARNs), this is the ARN. For AWS resources that lack ARNs, this is the identifier as defined by the AWS service that created the resource. For non- AWS resources, this is a unique identifier that is associated with the resource.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 100 items.
	ResourceId AutomationRuleStringFilterArrayInput `pulumi:"resourceId"`
	// The partition in which the resource that the finding pertains to is located. A partition is a group of AWS Regions . Each AWS account is scoped to one partition.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	ResourcePartition AutomationRuleStringFilterArrayInput `pulumi:"resourcePartition"`
	// The AWS Region where the resource that a finding pertains to is located.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	ResourceRegion AutomationRuleStringFilterArrayInput `pulumi:"resourceRegion"`
	// A list of AWS tags associated with a resource at the time the finding was processed.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	ResourceTags AutomationRuleMapFilterArrayInput `pulumi:"resourceTags"`
	// A finding's title.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 100 items.
	ResourceType AutomationRuleStringFilterArrayInput `pulumi:"resourceType"`
	// The severity value of the finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	SeverityLabel AutomationRuleStringFilterArrayInput `pulumi:"severityLabel"`
	// Provides a URL that links to a page about the current finding in the finding product.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	SourceUrl AutomationRuleStringFilterArrayInput `pulumi:"sourceUrl"`
	// A finding's title.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 100 items.
	Title AutomationRuleStringFilterArrayInput `pulumi:"title"`
	// One or more finding types in the format of namespace/category/classifier that classify a finding. For a list of namespaces, classifiers, and categories, see [Types taxonomy for ASFF](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format-type-taxonomy.html) in the *AWS Security Hub User Guide* .
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	Type AutomationRuleStringFilterArrayInput `pulumi:"type"`
	// A timestamp that indicates when the finding record was most recently updated.
	//
	// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
	//
	// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
	// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
	// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	UpdatedAt AutomationRuleDateFilterArrayInput `pulumi:"updatedAt"`
	// A list of user-defined name and value string pairs added to a finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	UserDefinedFields AutomationRuleMapFilterArrayInput `pulumi:"userDefinedFields"`
	// Provides the veracity of a finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	VerificationState AutomationRuleStringFilterArrayInput `pulumi:"verificationState"`
	// Provides information about the status of the investigation into a finding.
	//
	// Array Members: Minimum number of 1 item. Maximum number of 20 items.
	WorkflowStatus AutomationRuleStringFilterArrayInput `pulumi:"workflowStatus"`
}

func (AutomationRulesFindingFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulesFindingFilters)(nil)).Elem()
}

func (i AutomationRulesFindingFiltersArgs) ToAutomationRulesFindingFiltersOutput() AutomationRulesFindingFiltersOutput {
	return i.ToAutomationRulesFindingFiltersOutputWithContext(context.Background())
}

func (i AutomationRulesFindingFiltersArgs) ToAutomationRulesFindingFiltersOutputWithContext(ctx context.Context) AutomationRulesFindingFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulesFindingFiltersOutput)
}

func (i AutomationRulesFindingFiltersArgs) ToAutomationRulesFindingFiltersPtrOutput() AutomationRulesFindingFiltersPtrOutput {
	return i.ToAutomationRulesFindingFiltersPtrOutputWithContext(context.Background())
}

func (i AutomationRulesFindingFiltersArgs) ToAutomationRulesFindingFiltersPtrOutputWithContext(ctx context.Context) AutomationRulesFindingFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulesFindingFiltersOutput).ToAutomationRulesFindingFiltersPtrOutputWithContext(ctx)
}

// AutomationRulesFindingFiltersPtrInput is an input type that accepts AutomationRulesFindingFiltersArgs, AutomationRulesFindingFiltersPtr and AutomationRulesFindingFiltersPtrOutput values.
// You can construct a concrete instance of `AutomationRulesFindingFiltersPtrInput` via:
//
//	        AutomationRulesFindingFiltersArgs{...}
//
//	or:
//
//	        nil
type AutomationRulesFindingFiltersPtrInput interface {
	pulumi.Input

	ToAutomationRulesFindingFiltersPtrOutput() AutomationRulesFindingFiltersPtrOutput
	ToAutomationRulesFindingFiltersPtrOutputWithContext(context.Context) AutomationRulesFindingFiltersPtrOutput
}

type automationRulesFindingFiltersPtrType AutomationRulesFindingFiltersArgs

func AutomationRulesFindingFiltersPtr(v *AutomationRulesFindingFiltersArgs) AutomationRulesFindingFiltersPtrInput {
	return (*automationRulesFindingFiltersPtrType)(v)
}

func (*automationRulesFindingFiltersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulesFindingFilters)(nil)).Elem()
}

func (i *automationRulesFindingFiltersPtrType) ToAutomationRulesFindingFiltersPtrOutput() AutomationRulesFindingFiltersPtrOutput {
	return i.ToAutomationRulesFindingFiltersPtrOutputWithContext(context.Background())
}

func (i *automationRulesFindingFiltersPtrType) ToAutomationRulesFindingFiltersPtrOutputWithContext(ctx context.Context) AutomationRulesFindingFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRulesFindingFiltersPtrOutput)
}

type AutomationRulesFindingFiltersOutput struct{ *pulumi.OutputState }

func (AutomationRulesFindingFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRulesFindingFilters)(nil)).Elem()
}

func (o AutomationRulesFindingFiltersOutput) ToAutomationRulesFindingFiltersOutput() AutomationRulesFindingFiltersOutput {
	return o
}

func (o AutomationRulesFindingFiltersOutput) ToAutomationRulesFindingFiltersOutputWithContext(ctx context.Context) AutomationRulesFindingFiltersOutput {
	return o
}

func (o AutomationRulesFindingFiltersOutput) ToAutomationRulesFindingFiltersPtrOutput() AutomationRulesFindingFiltersPtrOutput {
	return o.ToAutomationRulesFindingFiltersPtrOutputWithContext(context.Background())
}

func (o AutomationRulesFindingFiltersOutput) ToAutomationRulesFindingFiltersPtrOutputWithContext(ctx context.Context) AutomationRulesFindingFiltersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutomationRulesFindingFilters) *AutomationRulesFindingFilters {
		return &v
	}).(AutomationRulesFindingFiltersPtrOutput)
}

// A string filter for filtering AWS Security Hub findings.
func (o AutomationRulesFindingFiltersOutput) AwsAccountId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.AwsAccountId }).(AutomationRuleStringFilterArrayOutput)
}

// The name of the company for the product that generated the finding. For control-based findings, the company is AWS .
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) CompanyName() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.CompanyName }).(AutomationRuleStringFilterArrayOutput)
}

// The unique identifier of a standard in which a control is enabled. This field consists of the resource portion of the Amazon Resource Name (ARN) returned for a standard in the [DescribeStandards](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html) API response.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) ComplianceAssociatedStandardsId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		return v.ComplianceAssociatedStandardsId
	}).(AutomationRuleStringFilterArrayOutput)
}

// The security control ID for which a finding was generated. Security control IDs are the same across standards.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) ComplianceSecurityControlId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		return v.ComplianceSecurityControlId
	}).(AutomationRuleStringFilterArrayOutput)
}

// The result of a security check. This field is only used for findings generated from controls.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) ComplianceStatus() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.ComplianceStatus }).(AutomationRuleStringFilterArrayOutput)
}

// A number filter for querying findings.
func (o AutomationRulesFindingFiltersOutput) Confidence() AutomationRuleNumberFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleNumberFilter { return v.Confidence }).(AutomationRuleNumberFilterArrayOutput)
}

// A date filter for querying findings.
func (o AutomationRulesFindingFiltersOutput) CreatedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleDateFilter { return v.CreatedAt }).(AutomationRuleDateFilterArrayOutput)
}

// The level of importance that is assigned to the resources that are associated with a finding. `Criticality` is scored on a 0–100 basis, using a ratio scale that supports only full integers. A score of `0` means that the underlying resources have no criticality, and a score of `100` is reserved for the most critical resources. For more information, see [Criticality](https://docs.aws.amazon.com/securityhub/latest/userguide/asff-top-level-attributes.html#asff-criticality) in the *AWS Security Hub User Guide* .
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) Criticality() AutomationRuleNumberFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleNumberFilter { return v.Criticality }).(AutomationRuleNumberFilterArrayOutput)
}

// A finding's description.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) Description() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.Description }).(AutomationRuleStringFilterArrayOutput)
}

// A timestamp that indicates when the potential security issue captured by a finding was first observed by the security findings product.
//
// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
//
// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) FirstObservedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleDateFilter { return v.FirstObservedAt }).(AutomationRuleDateFilterArrayOutput)
}

// The identifier for the solution-specific component that generated a finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 100 items.
func (o AutomationRulesFindingFiltersOutput) GeneratorId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.GeneratorId }).(AutomationRuleStringFilterArrayOutput)
}

// The product-specific identifier for a finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) Id() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.Id }).(AutomationRuleStringFilterArrayOutput)
}

// A timestamp that indicates when the potential security issue captured by a finding was most recently observed by the security findings product.
//
// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
//
// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) LastObservedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleDateFilter { return v.LastObservedAt }).(AutomationRuleDateFilterArrayOutput)
}

// The text of a user-defined note that's added to a finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) NoteText() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.NoteText }).(AutomationRuleStringFilterArrayOutput)
}

// The timestamp of when the note was updated.
//
// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
//
// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) NoteUpdatedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleDateFilter { return v.NoteUpdatedAt }).(AutomationRuleDateFilterArrayOutput)
}

// The principal that created a note.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) NoteUpdatedBy() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.NoteUpdatedBy }).(AutomationRuleStringFilterArrayOutput)
}

// The Amazon Resource Name (ARN) for a third-party product that generated a finding in Security Hub.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) ProductArn() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.ProductArn }).(AutomationRuleStringFilterArrayOutput)
}

// Provides the name of the product that generated the finding. For control-based findings, the product name is Security Hub.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) ProductName() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.ProductName }).(AutomationRuleStringFilterArrayOutput)
}

// Provides the current state of a finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) RecordState() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.RecordState }).(AutomationRuleStringFilterArrayOutput)
}

// The product-generated identifier for a related finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) RelatedFindingsId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.RelatedFindingsId }).(AutomationRuleStringFilterArrayOutput)
}

// The ARN for the product that generated a related finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) RelatedFindingsProductArn() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.RelatedFindingsProductArn }).(AutomationRuleStringFilterArrayOutput)
}

// A map filter for filtering AWS Security Hub findings. Each map filter provides the field to check for, the value to check for, and the comparison operator.
func (o AutomationRulesFindingFiltersOutput) ResourceDetailsOther() AutomationRuleMapFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleMapFilter { return v.ResourceDetailsOther }).(AutomationRuleMapFilterArrayOutput)
}

// The identifier for the given resource type. For AWS resources that are identified by Amazon Resource Names (ARNs), this is the ARN. For AWS resources that lack ARNs, this is the identifier as defined by the AWS service that created the resource. For non- AWS resources, this is a unique identifier that is associated with the resource.
//
// Array Members: Minimum number of 1 item. Maximum number of 100 items.
func (o AutomationRulesFindingFiltersOutput) ResourceId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.ResourceId }).(AutomationRuleStringFilterArrayOutput)
}

// The partition in which the resource that the finding pertains to is located. A partition is a group of AWS Regions . Each AWS account is scoped to one partition.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) ResourcePartition() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.ResourcePartition }).(AutomationRuleStringFilterArrayOutput)
}

// The AWS Region where the resource that a finding pertains to is located.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) ResourceRegion() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.ResourceRegion }).(AutomationRuleStringFilterArrayOutput)
}

// A list of AWS tags associated with a resource at the time the finding was processed.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) ResourceTags() AutomationRuleMapFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleMapFilter { return v.ResourceTags }).(AutomationRuleMapFilterArrayOutput)
}

// A finding's title.
//
// Array Members: Minimum number of 1 item. Maximum number of 100 items.
func (o AutomationRulesFindingFiltersOutput) ResourceType() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.ResourceType }).(AutomationRuleStringFilterArrayOutput)
}

// The severity value of the finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) SeverityLabel() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.SeverityLabel }).(AutomationRuleStringFilterArrayOutput)
}

// Provides a URL that links to a page about the current finding in the finding product.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) SourceUrl() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.SourceUrl }).(AutomationRuleStringFilterArrayOutput)
}

// A finding's title.
//
// Array Members: Minimum number of 1 item. Maximum number of 100 items.
func (o AutomationRulesFindingFiltersOutput) Title() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.Title }).(AutomationRuleStringFilterArrayOutput)
}

// One or more finding types in the format of namespace/category/classifier that classify a finding. For a list of namespaces, classifiers, and categories, see [Types taxonomy for ASFF](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format-type-taxonomy.html) in the *AWS Security Hub User Guide* .
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) Type() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.Type }).(AutomationRuleStringFilterArrayOutput)
}

// A timestamp that indicates when the finding record was most recently updated.
//
// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
//
// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) UpdatedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleDateFilter { return v.UpdatedAt }).(AutomationRuleDateFilterArrayOutput)
}

// A list of user-defined name and value string pairs added to a finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) UserDefinedFields() AutomationRuleMapFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleMapFilter { return v.UserDefinedFields }).(AutomationRuleMapFilterArrayOutput)
}

// Provides the veracity of a finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) VerificationState() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.VerificationState }).(AutomationRuleStringFilterArrayOutput)
}

// Provides information about the status of the investigation into a finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersOutput) WorkflowStatus() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v AutomationRulesFindingFilters) []AutomationRuleStringFilter { return v.WorkflowStatus }).(AutomationRuleStringFilterArrayOutput)
}

type AutomationRulesFindingFiltersPtrOutput struct{ *pulumi.OutputState }

func (AutomationRulesFindingFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationRulesFindingFilters)(nil)).Elem()
}

func (o AutomationRulesFindingFiltersPtrOutput) ToAutomationRulesFindingFiltersPtrOutput() AutomationRulesFindingFiltersPtrOutput {
	return o
}

func (o AutomationRulesFindingFiltersPtrOutput) ToAutomationRulesFindingFiltersPtrOutputWithContext(ctx context.Context) AutomationRulesFindingFiltersPtrOutput {
	return o
}

func (o AutomationRulesFindingFiltersPtrOutput) Elem() AutomationRulesFindingFiltersOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) AutomationRulesFindingFilters {
		if v != nil {
			return *v
		}
		var ret AutomationRulesFindingFilters
		return ret
	}).(AutomationRulesFindingFiltersOutput)
}

// A string filter for filtering AWS Security Hub findings.
func (o AutomationRulesFindingFiltersPtrOutput) AwsAccountId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(AutomationRuleStringFilterArrayOutput)
}

// The name of the company for the product that generated the finding. For control-based findings, the company is AWS .
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) CompanyName() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.CompanyName
	}).(AutomationRuleStringFilterArrayOutput)
}

// The unique identifier of a standard in which a control is enabled. This field consists of the resource portion of the Amazon Resource Name (ARN) returned for a standard in the [DescribeStandards](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html) API response.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) ComplianceAssociatedStandardsId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.ComplianceAssociatedStandardsId
	}).(AutomationRuleStringFilterArrayOutput)
}

// The security control ID for which a finding was generated. Security control IDs are the same across standards.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) ComplianceSecurityControlId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.ComplianceSecurityControlId
	}).(AutomationRuleStringFilterArrayOutput)
}

// The result of a security check. This field is only used for findings generated from controls.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) ComplianceStatus() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.ComplianceStatus
	}).(AutomationRuleStringFilterArrayOutput)
}

// A number filter for querying findings.
func (o AutomationRulesFindingFiltersPtrOutput) Confidence() AutomationRuleNumberFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleNumberFilter {
		if v == nil {
			return nil
		}
		return v.Confidence
	}).(AutomationRuleNumberFilterArrayOutput)
}

// A date filter for querying findings.
func (o AutomationRulesFindingFiltersPtrOutput) CreatedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleDateFilter {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(AutomationRuleDateFilterArrayOutput)
}

// The level of importance that is assigned to the resources that are associated with a finding. `Criticality` is scored on a 0–100 basis, using a ratio scale that supports only full integers. A score of `0` means that the underlying resources have no criticality, and a score of `100` is reserved for the most critical resources. For more information, see [Criticality](https://docs.aws.amazon.com/securityhub/latest/userguide/asff-top-level-attributes.html#asff-criticality) in the *AWS Security Hub User Guide* .
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) Criticality() AutomationRuleNumberFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleNumberFilter {
		if v == nil {
			return nil
		}
		return v.Criticality
	}).(AutomationRuleNumberFilterArrayOutput)
}

// A finding's description.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) Description() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.Description
	}).(AutomationRuleStringFilterArrayOutput)
}

// A timestamp that indicates when the potential security issue captured by a finding was first observed by the security findings product.
//
// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
//
// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) FirstObservedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleDateFilter {
		if v == nil {
			return nil
		}
		return v.FirstObservedAt
	}).(AutomationRuleDateFilterArrayOutput)
}

// The identifier for the solution-specific component that generated a finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 100 items.
func (o AutomationRulesFindingFiltersPtrOutput) GeneratorId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.GeneratorId
	}).(AutomationRuleStringFilterArrayOutput)
}

// The product-specific identifier for a finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) Id() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.Id
	}).(AutomationRuleStringFilterArrayOutput)
}

// A timestamp that indicates when the potential security issue captured by a finding was most recently observed by the security findings product.
//
// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
//
// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) LastObservedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleDateFilter {
		if v == nil {
			return nil
		}
		return v.LastObservedAt
	}).(AutomationRuleDateFilterArrayOutput)
}

// The text of a user-defined note that's added to a finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) NoteText() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.NoteText
	}).(AutomationRuleStringFilterArrayOutput)
}

// The timestamp of when the note was updated.
//
// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
//
// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) NoteUpdatedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleDateFilter {
		if v == nil {
			return nil
		}
		return v.NoteUpdatedAt
	}).(AutomationRuleDateFilterArrayOutput)
}

// The principal that created a note.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) NoteUpdatedBy() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.NoteUpdatedBy
	}).(AutomationRuleStringFilterArrayOutput)
}

// The Amazon Resource Name (ARN) for a third-party product that generated a finding in Security Hub.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) ProductArn() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.ProductArn
	}).(AutomationRuleStringFilterArrayOutput)
}

// Provides the name of the product that generated the finding. For control-based findings, the product name is Security Hub.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) ProductName() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.ProductName
	}).(AutomationRuleStringFilterArrayOutput)
}

// Provides the current state of a finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) RecordState() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.RecordState
	}).(AutomationRuleStringFilterArrayOutput)
}

// The product-generated identifier for a related finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) RelatedFindingsId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.RelatedFindingsId
	}).(AutomationRuleStringFilterArrayOutput)
}

// The ARN for the product that generated a related finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) RelatedFindingsProductArn() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.RelatedFindingsProductArn
	}).(AutomationRuleStringFilterArrayOutput)
}

// A map filter for filtering AWS Security Hub findings. Each map filter provides the field to check for, the value to check for, and the comparison operator.
func (o AutomationRulesFindingFiltersPtrOutput) ResourceDetailsOther() AutomationRuleMapFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleMapFilter {
		if v == nil {
			return nil
		}
		return v.ResourceDetailsOther
	}).(AutomationRuleMapFilterArrayOutput)
}

// The identifier for the given resource type. For AWS resources that are identified by Amazon Resource Names (ARNs), this is the ARN. For AWS resources that lack ARNs, this is the identifier as defined by the AWS service that created the resource. For non- AWS resources, this is a unique identifier that is associated with the resource.
//
// Array Members: Minimum number of 1 item. Maximum number of 100 items.
func (o AutomationRulesFindingFiltersPtrOutput) ResourceId() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(AutomationRuleStringFilterArrayOutput)
}

// The partition in which the resource that the finding pertains to is located. A partition is a group of AWS Regions . Each AWS account is scoped to one partition.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) ResourcePartition() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourcePartition
	}).(AutomationRuleStringFilterArrayOutput)
}

// The AWS Region where the resource that a finding pertains to is located.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) ResourceRegion() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceRegion
	}).(AutomationRuleStringFilterArrayOutput)
}

// A list of AWS tags associated with a resource at the time the finding was processed.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) ResourceTags() AutomationRuleMapFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleMapFilter {
		if v == nil {
			return nil
		}
		return v.ResourceTags
	}).(AutomationRuleMapFilterArrayOutput)
}

// A finding's title.
//
// Array Members: Minimum number of 1 item. Maximum number of 100 items.
func (o AutomationRulesFindingFiltersPtrOutput) ResourceType() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceType
	}).(AutomationRuleStringFilterArrayOutput)
}

// The severity value of the finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) SeverityLabel() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.SeverityLabel
	}).(AutomationRuleStringFilterArrayOutput)
}

// Provides a URL that links to a page about the current finding in the finding product.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) SourceUrl() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.SourceUrl
	}).(AutomationRuleStringFilterArrayOutput)
}

// A finding's title.
//
// Array Members: Minimum number of 1 item. Maximum number of 100 items.
func (o AutomationRulesFindingFiltersPtrOutput) Title() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.Title
	}).(AutomationRuleStringFilterArrayOutput)
}

// One or more finding types in the format of namespace/category/classifier that classify a finding. For a list of namespaces, classifiers, and categories, see [Types taxonomy for ASFF](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format-type-taxonomy.html) in the *AWS Security Hub User Guide* .
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) Type() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.Type
	}).(AutomationRuleStringFilterArrayOutput)
}

// A timestamp that indicates when the finding record was most recently updated.
//
// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
//
// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) UpdatedAt() AutomationRuleDateFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleDateFilter {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(AutomationRuleDateFilterArrayOutput)
}

// A list of user-defined name and value string pairs added to a finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) UserDefinedFields() AutomationRuleMapFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleMapFilter {
		if v == nil {
			return nil
		}
		return v.UserDefinedFields
	}).(AutomationRuleMapFilterArrayOutput)
}

// Provides the veracity of a finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) VerificationState() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.VerificationState
	}).(AutomationRuleStringFilterArrayOutput)
}

// Provides information about the status of the investigation into a finding.
//
// Array Members: Minimum number of 1 item. Maximum number of 20 items.
func (o AutomationRulesFindingFiltersPtrOutput) WorkflowStatus() AutomationRuleStringFilterArrayOutput {
	return o.ApplyT(func(v *AutomationRulesFindingFilters) []AutomationRuleStringFilter {
		if v == nil {
			return nil
		}
		return v.WorkflowStatus
	}).(AutomationRuleStringFilterArrayOutput)
}

// A collection of filters that are applied to all active findings aggregated by AWS Security Hub.
type InsightAwsSecurityFindingFilters struct {
	// The AWS account ID in which a finding is generated.
	AwsAccountId []InsightStringFilter `pulumi:"awsAccountId"`
	// The name of the AWS account in which a finding is generated.
	AwsAccountName []InsightStringFilter `pulumi:"awsAccountName"`
	// The name of the findings provider (company) that owns the solution (product) that generates findings.
	CompanyName []InsightStringFilter `pulumi:"companyName"`
	// The unique identifier of a standard in which a control is enabled.
	ComplianceAssociatedStandardsId []InsightStringFilter `pulumi:"complianceAssociatedStandardsId"`
	// The unique identifier of a control across standards.
	ComplianceSecurityControlId []InsightStringFilter `pulumi:"complianceSecurityControlId"`
	// The name of a security control parameter.
	ComplianceSecurityControlParametersName []InsightStringFilter `pulumi:"complianceSecurityControlParametersName"`
	// The current value of a security control parameter.
	ComplianceSecurityControlParametersValue []InsightStringFilter `pulumi:"complianceSecurityControlParametersValue"`
	// Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard.
	ComplianceStatus []InsightStringFilter `pulumi:"complianceStatus"`
	// A finding's confidence.
	Confidence []InsightNumberFilter `pulumi:"confidence"`
	// An ISO8601-formatted timestamp that indicates when the security findings provider captured the potential security issue that a finding captured.
	CreatedAt []InsightDateFilter `pulumi:"createdAt"`
	// The level of importance assigned to the resources associated with the finding.
	Criticality []InsightNumberFilter `pulumi:"criticality"`
	// A finding's description.
	Description []InsightStringFilter `pulumi:"description"`
	// The finding provider value for the finding confidence.
	FindingProviderFieldsConfidence []InsightNumberFilter `pulumi:"findingProviderFieldsConfidence"`
	// The finding provider value for the level of importance assigned to the resources associated with the findings.
	FindingProviderFieldsCriticality []InsightNumberFilter `pulumi:"findingProviderFieldsCriticality"`
	// The finding identifier of a related finding that is identified by the finding provider.
	FindingProviderFieldsRelatedFindingsId []InsightStringFilter `pulumi:"findingProviderFieldsRelatedFindingsId"`
	// The ARN of the solution that generated a related finding that is identified by the finding provider.
	FindingProviderFieldsRelatedFindingsProductArn []InsightStringFilter `pulumi:"findingProviderFieldsRelatedFindingsProductArn"`
	// The finding provider value for the severity label.
	FindingProviderFieldsSeverityLabel []InsightStringFilter `pulumi:"findingProviderFieldsSeverityLabel"`
	// The finding provider's original value for the severity.
	FindingProviderFieldsSeverityOriginal []InsightStringFilter `pulumi:"findingProviderFieldsSeverityOriginal"`
	// One or more finding types that the finding provider assigned to the finding.
	FindingProviderFieldsTypes []InsightStringFilter `pulumi:"findingProviderFieldsTypes"`
	// An ISO8601-formatted timestamp that indicates when the security findings provider first observed the potential security issue that a finding captured.
	FirstObservedAt []InsightDateFilter `pulumi:"firstObservedAt"`
	// The identifier for the solution-specific component (a discrete unit of logic) that generated a finding.
	GeneratorId []InsightStringFilter `pulumi:"generatorId"`
	// The security findings provider-specific identifier for a finding.
	Id []InsightStringFilter `pulumi:"id"`
	// A keyword for a finding.
	Keyword []InsightKeywordFilter `pulumi:"keyword"`
	// An ISO8601-formatted timestamp that indicates when the security findings provider most recently observed the potential security issue that a finding captured.
	LastObservedAt []InsightDateFilter `pulumi:"lastObservedAt"`
	// The name of the malware that was observed.
	MalwareName []InsightStringFilter `pulumi:"malwareName"`
	// The filesystem path of the malware that was observed.
	MalwarePath []InsightStringFilter `pulumi:"malwarePath"`
	// The state of the malware that was observed.
	MalwareState []InsightStringFilter `pulumi:"malwareState"`
	// The type of the malware that was observed.
	MalwareType []InsightStringFilter `pulumi:"malwareType"`
	// The destination domain of network-related information about a finding.
	NetworkDestinationDomain []InsightStringFilter `pulumi:"networkDestinationDomain"`
	// The destination IPv4 address of network-related information about a finding.
	NetworkDestinationIpV4 []InsightIpFilter `pulumi:"networkDestinationIpV4"`
	// The destination IPv6 address of network-related information about a finding.
	NetworkDestinationIpV6 []InsightIpFilter `pulumi:"networkDestinationIpV6"`
	// The destination port of network-related information about a finding.
	NetworkDestinationPort []InsightNumberFilter `pulumi:"networkDestinationPort"`
	// Indicates the direction of network traffic associated with a finding.
	NetworkDirection []InsightStringFilter `pulumi:"networkDirection"`
	// The protocol of network-related information about a finding.
	NetworkProtocol []InsightStringFilter `pulumi:"networkProtocol"`
	// The source domain of network-related information about a finding.
	NetworkSourceDomain []InsightStringFilter `pulumi:"networkSourceDomain"`
	// The source IPv4 address of network-related information about a finding.
	NetworkSourceIpV4 []InsightIpFilter `pulumi:"networkSourceIpV4"`
	// The source IPv6 address of network-related information about a finding.
	NetworkSourceIpV6 []InsightIpFilter `pulumi:"networkSourceIpV6"`
	// The source media access control (MAC) address of network-related information about a finding.
	NetworkSourceMac []InsightStringFilter `pulumi:"networkSourceMac"`
	// The source port of network-related information about a finding.
	NetworkSourcePort []InsightNumberFilter `pulumi:"networkSourcePort"`
	// The text of a note.
	NoteText []InsightStringFilter `pulumi:"noteText"`
	// The timestamp of when the note was updated.
	NoteUpdatedAt []InsightDateFilter `pulumi:"noteUpdatedAt"`
	// The principal that created a note.
	NoteUpdatedBy []InsightStringFilter `pulumi:"noteUpdatedBy"`
	// A timestamp that identifies when the process was launched.
	ProcessLaunchedAt []InsightDateFilter `pulumi:"processLaunchedAt"`
	// The name of the process.
	ProcessName []InsightStringFilter `pulumi:"processName"`
	// The parent process ID.
	ProcessParentPid []InsightNumberFilter `pulumi:"processParentPid"`
	// The path to the process executable.
	ProcessPath []InsightStringFilter `pulumi:"processPath"`
	// The process ID.
	ProcessPid []InsightNumberFilter `pulumi:"processPid"`
	// A timestamp that identifies when the process was terminated.
	ProcessTerminatedAt []InsightDateFilter `pulumi:"processTerminatedAt"`
	// The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub.
	ProductArn []InsightStringFilter `pulumi:"productArn"`
	// A data type where security findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format.
	ProductFields []InsightMapFilter `pulumi:"productFields"`
	// The name of the solution (product) that generates findings.
	ProductName []InsightStringFilter `pulumi:"productName"`
	// The recommendation of what to do about the issue described in a finding.
	RecommendationText []InsightStringFilter `pulumi:"recommendationText"`
	// The updated record state for the finding.
	RecordState []InsightStringFilter `pulumi:"recordState"`
	// The Region from which the finding was generated.
	Region []InsightStringFilter `pulumi:"region"`
	// The solution-generated identifier for a related finding.
	RelatedFindingsId []InsightStringFilter `pulumi:"relatedFindingsId"`
	// The ARN of the solution that generated a related finding.
	RelatedFindingsProductArn []InsightStringFilter `pulumi:"relatedFindingsProductArn"`
	// The ARN of the application that is related to a finding.
	ResourceApplicationArn []InsightStringFilter `pulumi:"resourceApplicationArn"`
	// The name of the application that is related to a finding.
	ResourceApplicationName []InsightStringFilter `pulumi:"resourceApplicationName"`
	// The IAM profile ARN of the instance.
	ResourceAwsEc2InstanceIamInstanceProfileArn []InsightStringFilter `pulumi:"resourceAwsEc2InstanceIamInstanceProfileArn"`
	// The Amazon Machine Image (AMI) ID of the instance.
	ResourceAwsEc2InstanceImageId []InsightStringFilter `pulumi:"resourceAwsEc2InstanceImageId"`
	// The IPv4 addresses associated with the instance.
	ResourceAwsEc2InstanceIpV4Addresses []InsightIpFilter `pulumi:"resourceAwsEc2InstanceIpV4Addresses"`
	// The IPv6 addresses associated with the instance.
	ResourceAwsEc2InstanceIpV6Addresses []InsightIpFilter `pulumi:"resourceAwsEc2InstanceIpV6Addresses"`
	// The key name associated with the instance.
	ResourceAwsEc2InstanceKeyName []InsightStringFilter `pulumi:"resourceAwsEc2InstanceKeyName"`
	// The date and time the instance was launched.
	ResourceAwsEc2InstanceLaunchedAt []InsightDateFilter `pulumi:"resourceAwsEc2InstanceLaunchedAt"`
	// The identifier of the subnet that the instance was launched in.
	ResourceAwsEc2InstanceSubnetId []InsightStringFilter `pulumi:"resourceAwsEc2InstanceSubnetId"`
	// The instance type of the instance.
	ResourceAwsEc2InstanceType []InsightStringFilter `pulumi:"resourceAwsEc2InstanceType"`
	// The identifier of the VPC that the instance was launched in.
	ResourceAwsEc2InstanceVpcId []InsightStringFilter `pulumi:"resourceAwsEc2InstanceVpcId"`
	// The creation date/time of the IAM access key related to a finding.
	ResourceAwsIamAccessKeyCreatedAt []InsightDateFilter `pulumi:"resourceAwsIamAccessKeyCreatedAt"`
	// The name of the principal that is associated with an IAM access key.
	ResourceAwsIamAccessKeyPrincipalName []InsightStringFilter `pulumi:"resourceAwsIamAccessKeyPrincipalName"`
	// The status of the IAM access key related to a finding.
	ResourceAwsIamAccessKeyStatus []InsightStringFilter `pulumi:"resourceAwsIamAccessKeyStatus"`
	// The user associated with the IAM access key related to a finding.
	ResourceAwsIamAccessKeyUserName []InsightStringFilter `pulumi:"resourceAwsIamAccessKeyUserName"`
	// The name of an IAM user.
	ResourceAwsIamUserUserName []InsightStringFilter `pulumi:"resourceAwsIamUserUserName"`
	// The canonical user ID of the owner of the S3 bucket.
	ResourceAwsS3BucketOwnerId []InsightStringFilter `pulumi:"resourceAwsS3BucketOwnerId"`
	// The display name of the owner of the S3 bucket.
	ResourceAwsS3BucketOwnerName []InsightStringFilter `pulumi:"resourceAwsS3BucketOwnerName"`
	// The identifier of the image related to a finding.
	ResourceContainerImageId []InsightStringFilter `pulumi:"resourceContainerImageId"`
	// The name of the image related to a finding.
	ResourceContainerImageName []InsightStringFilter `pulumi:"resourceContainerImageName"`
	// A timestamp that identifies when the container was started.
	ResourceContainerLaunchedAt []InsightDateFilter `pulumi:"resourceContainerLaunchedAt"`
	// The name of the container related to a finding.
	ResourceContainerName []InsightStringFilter `pulumi:"resourceContainerName"`
	// The details of a resource that doesn't have a specific subfield for the resource type defined.
	ResourceDetailsOther []InsightMapFilter `pulumi:"resourceDetailsOther"`
	// The canonical identifier for the given resource type.
	ResourceId []InsightStringFilter `pulumi:"resourceId"`
	// The canonical AWS partition name that the Region is assigned to.
	ResourcePartition []InsightStringFilter `pulumi:"resourcePartition"`
	// The canonical AWS external Region name where this resource is located.
	ResourceRegion []InsightStringFilter `pulumi:"resourceRegion"`
	// A list of AWS tags associated with a resource at the time the finding was processed.
	ResourceTags []InsightMapFilter `pulumi:"resourceTags"`
	// Specifies the type of the resource that details are provided for.
	ResourceType []InsightStringFilter `pulumi:"resourceType"`
	// Indicates whether or not sample findings are included in the filter results.
	Sample []InsightBooleanFilter `pulumi:"sample"`
	// The label of a finding's severity.
	SeverityLabel []InsightStringFilter `pulumi:"severityLabel"`
	// The normalized severity of a finding.
	SeverityNormalized []InsightNumberFilter `pulumi:"severityNormalized"`
	// The native severity as defined by the security findings provider's solution that generated the finding.
	SeverityProduct []InsightNumberFilter `pulumi:"severityProduct"`
	// A URL that links to a page about the current finding in the security findings provider's solution.
	SourceUrl []InsightStringFilter `pulumi:"sourceUrl"`
	// The category of a threat intelligence indicator.
	ThreatIntelIndicatorCategory []InsightStringFilter `pulumi:"threatIntelIndicatorCategory"`
	// A timestamp that identifies the last observation of a threat intelligence indicator.
	ThreatIntelIndicatorLastObservedAt []InsightDateFilter `pulumi:"threatIntelIndicatorLastObservedAt"`
	// The source of the threat intelligence.
	ThreatIntelIndicatorSource []InsightStringFilter `pulumi:"threatIntelIndicatorSource"`
	// The URL for more details from the source of the threat intelligence.
	ThreatIntelIndicatorSourceUrl []InsightStringFilter `pulumi:"threatIntelIndicatorSourceUrl"`
	// The type of a threat intelligence indicator.
	ThreatIntelIndicatorType []InsightStringFilter `pulumi:"threatIntelIndicatorType"`
	// The value of a threat intelligence indicator.
	ThreatIntelIndicatorValue []InsightStringFilter `pulumi:"threatIntelIndicatorValue"`
	// A finding's title.
	Title []InsightStringFilter `pulumi:"title"`
	// A finding type in the format of namespace/category/classifier that classifies a finding.
	Type []InsightStringFilter `pulumi:"type"`
	// An ISO8601-formatted timestamp that indicates when the security findings provider last updated the finding record.
	UpdatedAt []InsightDateFilter `pulumi:"updatedAt"`
	// A list of name/value string pairs associated with the finding.
	UserDefinedFields []InsightMapFilter `pulumi:"userDefinedFields"`
	// The veracity of a finding.
	VerificationState []InsightStringFilter `pulumi:"verificationState"`
	// Indicates whether a software vulnerability in your environment has a known exploit.
	VulnerabilitiesExploitAvailable []InsightStringFilter `pulumi:"vulnerabilitiesExploitAvailable"`
	// Indicates whether a vulnerability is fixed in a newer version of the affected software packages.
	VulnerabilitiesFixAvailable []InsightStringFilter `pulumi:"vulnerabilitiesFixAvailable"`
	// The workflow state of a finding.
	WorkflowState []InsightStringFilter `pulumi:"workflowState"`
	// The status of the investigation into a finding.
	WorkflowStatus []InsightStringFilter `pulumi:"workflowStatus"`
}

// InsightAwsSecurityFindingFiltersInput is an input type that accepts InsightAwsSecurityFindingFiltersArgs and InsightAwsSecurityFindingFiltersOutput values.
// You can construct a concrete instance of `InsightAwsSecurityFindingFiltersInput` via:
//
//	InsightAwsSecurityFindingFiltersArgs{...}
type InsightAwsSecurityFindingFiltersInput interface {
	pulumi.Input

	ToInsightAwsSecurityFindingFiltersOutput() InsightAwsSecurityFindingFiltersOutput
	ToInsightAwsSecurityFindingFiltersOutputWithContext(context.Context) InsightAwsSecurityFindingFiltersOutput
}

// A collection of filters that are applied to all active findings aggregated by AWS Security Hub.
type InsightAwsSecurityFindingFiltersArgs struct {
	// The AWS account ID in which a finding is generated.
	AwsAccountId InsightStringFilterArrayInput `pulumi:"awsAccountId"`
	// The name of the AWS account in which a finding is generated.
	AwsAccountName InsightStringFilterArrayInput `pulumi:"awsAccountName"`
	// The name of the findings provider (company) that owns the solution (product) that generates findings.
	CompanyName InsightStringFilterArrayInput `pulumi:"companyName"`
	// The unique identifier of a standard in which a control is enabled.
	ComplianceAssociatedStandardsId InsightStringFilterArrayInput `pulumi:"complianceAssociatedStandardsId"`
	// The unique identifier of a control across standards.
	ComplianceSecurityControlId InsightStringFilterArrayInput `pulumi:"complianceSecurityControlId"`
	// The name of a security control parameter.
	ComplianceSecurityControlParametersName InsightStringFilterArrayInput `pulumi:"complianceSecurityControlParametersName"`
	// The current value of a security control parameter.
	ComplianceSecurityControlParametersValue InsightStringFilterArrayInput `pulumi:"complianceSecurityControlParametersValue"`
	// Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard.
	ComplianceStatus InsightStringFilterArrayInput `pulumi:"complianceStatus"`
	// A finding's confidence.
	Confidence InsightNumberFilterArrayInput `pulumi:"confidence"`
	// An ISO8601-formatted timestamp that indicates when the security findings provider captured the potential security issue that a finding captured.
	CreatedAt InsightDateFilterArrayInput `pulumi:"createdAt"`
	// The level of importance assigned to the resources associated with the finding.
	Criticality InsightNumberFilterArrayInput `pulumi:"criticality"`
	// A finding's description.
	Description InsightStringFilterArrayInput `pulumi:"description"`
	// The finding provider value for the finding confidence.
	FindingProviderFieldsConfidence InsightNumberFilterArrayInput `pulumi:"findingProviderFieldsConfidence"`
	// The finding provider value for the level of importance assigned to the resources associated with the findings.
	FindingProviderFieldsCriticality InsightNumberFilterArrayInput `pulumi:"findingProviderFieldsCriticality"`
	// The finding identifier of a related finding that is identified by the finding provider.
	FindingProviderFieldsRelatedFindingsId InsightStringFilterArrayInput `pulumi:"findingProviderFieldsRelatedFindingsId"`
	// The ARN of the solution that generated a related finding that is identified by the finding provider.
	FindingProviderFieldsRelatedFindingsProductArn InsightStringFilterArrayInput `pulumi:"findingProviderFieldsRelatedFindingsProductArn"`
	// The finding provider value for the severity label.
	FindingProviderFieldsSeverityLabel InsightStringFilterArrayInput `pulumi:"findingProviderFieldsSeverityLabel"`
	// The finding provider's original value for the severity.
	FindingProviderFieldsSeverityOriginal InsightStringFilterArrayInput `pulumi:"findingProviderFieldsSeverityOriginal"`
	// One or more finding types that the finding provider assigned to the finding.
	FindingProviderFieldsTypes InsightStringFilterArrayInput `pulumi:"findingProviderFieldsTypes"`
	// An ISO8601-formatted timestamp that indicates when the security findings provider first observed the potential security issue that a finding captured.
	FirstObservedAt InsightDateFilterArrayInput `pulumi:"firstObservedAt"`
	// The identifier for the solution-specific component (a discrete unit of logic) that generated a finding.
	GeneratorId InsightStringFilterArrayInput `pulumi:"generatorId"`
	// The security findings provider-specific identifier for a finding.
	Id InsightStringFilterArrayInput `pulumi:"id"`
	// A keyword for a finding.
	Keyword InsightKeywordFilterArrayInput `pulumi:"keyword"`
	// An ISO8601-formatted timestamp that indicates when the security findings provider most recently observed the potential security issue that a finding captured.
	LastObservedAt InsightDateFilterArrayInput `pulumi:"lastObservedAt"`
	// The name of the malware that was observed.
	MalwareName InsightStringFilterArrayInput `pulumi:"malwareName"`
	// The filesystem path of the malware that was observed.
	MalwarePath InsightStringFilterArrayInput `pulumi:"malwarePath"`
	// The state of the malware that was observed.
	MalwareState InsightStringFilterArrayInput `pulumi:"malwareState"`
	// The type of the malware that was observed.
	MalwareType InsightStringFilterArrayInput `pulumi:"malwareType"`
	// The destination domain of network-related information about a finding.
	NetworkDestinationDomain InsightStringFilterArrayInput `pulumi:"networkDestinationDomain"`
	// The destination IPv4 address of network-related information about a finding.
	NetworkDestinationIpV4 InsightIpFilterArrayInput `pulumi:"networkDestinationIpV4"`
	// The destination IPv6 address of network-related information about a finding.
	NetworkDestinationIpV6 InsightIpFilterArrayInput `pulumi:"networkDestinationIpV6"`
	// The destination port of network-related information about a finding.
	NetworkDestinationPort InsightNumberFilterArrayInput `pulumi:"networkDestinationPort"`
	// Indicates the direction of network traffic associated with a finding.
	NetworkDirection InsightStringFilterArrayInput `pulumi:"networkDirection"`
	// The protocol of network-related information about a finding.
	NetworkProtocol InsightStringFilterArrayInput `pulumi:"networkProtocol"`
	// The source domain of network-related information about a finding.
	NetworkSourceDomain InsightStringFilterArrayInput `pulumi:"networkSourceDomain"`
	// The source IPv4 address of network-related information about a finding.
	NetworkSourceIpV4 InsightIpFilterArrayInput `pulumi:"networkSourceIpV4"`
	// The source IPv6 address of network-related information about a finding.
	NetworkSourceIpV6 InsightIpFilterArrayInput `pulumi:"networkSourceIpV6"`
	// The source media access control (MAC) address of network-related information about a finding.
	NetworkSourceMac InsightStringFilterArrayInput `pulumi:"networkSourceMac"`
	// The source port of network-related information about a finding.
	NetworkSourcePort InsightNumberFilterArrayInput `pulumi:"networkSourcePort"`
	// The text of a note.
	NoteText InsightStringFilterArrayInput `pulumi:"noteText"`
	// The timestamp of when the note was updated.
	NoteUpdatedAt InsightDateFilterArrayInput `pulumi:"noteUpdatedAt"`
	// The principal that created a note.
	NoteUpdatedBy InsightStringFilterArrayInput `pulumi:"noteUpdatedBy"`
	// A timestamp that identifies when the process was launched.
	ProcessLaunchedAt InsightDateFilterArrayInput `pulumi:"processLaunchedAt"`
	// The name of the process.
	ProcessName InsightStringFilterArrayInput `pulumi:"processName"`
	// The parent process ID.
	ProcessParentPid InsightNumberFilterArrayInput `pulumi:"processParentPid"`
	// The path to the process executable.
	ProcessPath InsightStringFilterArrayInput `pulumi:"processPath"`
	// The process ID.
	ProcessPid InsightNumberFilterArrayInput `pulumi:"processPid"`
	// A timestamp that identifies when the process was terminated.
	ProcessTerminatedAt InsightDateFilterArrayInput `pulumi:"processTerminatedAt"`
	// The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub.
	ProductArn InsightStringFilterArrayInput `pulumi:"productArn"`
	// A data type where security findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format.
	ProductFields InsightMapFilterArrayInput `pulumi:"productFields"`
	// The name of the solution (product) that generates findings.
	ProductName InsightStringFilterArrayInput `pulumi:"productName"`
	// The recommendation of what to do about the issue described in a finding.
	RecommendationText InsightStringFilterArrayInput `pulumi:"recommendationText"`
	// The updated record state for the finding.
	RecordState InsightStringFilterArrayInput `pulumi:"recordState"`
	// The Region from which the finding was generated.
	Region InsightStringFilterArrayInput `pulumi:"region"`
	// The solution-generated identifier for a related finding.
	RelatedFindingsId InsightStringFilterArrayInput `pulumi:"relatedFindingsId"`
	// The ARN of the solution that generated a related finding.
	RelatedFindingsProductArn InsightStringFilterArrayInput `pulumi:"relatedFindingsProductArn"`
	// The ARN of the application that is related to a finding.
	ResourceApplicationArn InsightStringFilterArrayInput `pulumi:"resourceApplicationArn"`
	// The name of the application that is related to a finding.
	ResourceApplicationName InsightStringFilterArrayInput `pulumi:"resourceApplicationName"`
	// The IAM profile ARN of the instance.
	ResourceAwsEc2InstanceIamInstanceProfileArn InsightStringFilterArrayInput `pulumi:"resourceAwsEc2InstanceIamInstanceProfileArn"`
	// The Amazon Machine Image (AMI) ID of the instance.
	ResourceAwsEc2InstanceImageId InsightStringFilterArrayInput `pulumi:"resourceAwsEc2InstanceImageId"`
	// The IPv4 addresses associated with the instance.
	ResourceAwsEc2InstanceIpV4Addresses InsightIpFilterArrayInput `pulumi:"resourceAwsEc2InstanceIpV4Addresses"`
	// The IPv6 addresses associated with the instance.
	ResourceAwsEc2InstanceIpV6Addresses InsightIpFilterArrayInput `pulumi:"resourceAwsEc2InstanceIpV6Addresses"`
	// The key name associated with the instance.
	ResourceAwsEc2InstanceKeyName InsightStringFilterArrayInput `pulumi:"resourceAwsEc2InstanceKeyName"`
	// The date and time the instance was launched.
	ResourceAwsEc2InstanceLaunchedAt InsightDateFilterArrayInput `pulumi:"resourceAwsEc2InstanceLaunchedAt"`
	// The identifier of the subnet that the instance was launched in.
	ResourceAwsEc2InstanceSubnetId InsightStringFilterArrayInput `pulumi:"resourceAwsEc2InstanceSubnetId"`
	// The instance type of the instance.
	ResourceAwsEc2InstanceType InsightStringFilterArrayInput `pulumi:"resourceAwsEc2InstanceType"`
	// The identifier of the VPC that the instance was launched in.
	ResourceAwsEc2InstanceVpcId InsightStringFilterArrayInput `pulumi:"resourceAwsEc2InstanceVpcId"`
	// The creation date/time of the IAM access key related to a finding.
	ResourceAwsIamAccessKeyCreatedAt InsightDateFilterArrayInput `pulumi:"resourceAwsIamAccessKeyCreatedAt"`
	// The name of the principal that is associated with an IAM access key.
	ResourceAwsIamAccessKeyPrincipalName InsightStringFilterArrayInput `pulumi:"resourceAwsIamAccessKeyPrincipalName"`
	// The status of the IAM access key related to a finding.
	ResourceAwsIamAccessKeyStatus InsightStringFilterArrayInput `pulumi:"resourceAwsIamAccessKeyStatus"`
	// The user associated with the IAM access key related to a finding.
	ResourceAwsIamAccessKeyUserName InsightStringFilterArrayInput `pulumi:"resourceAwsIamAccessKeyUserName"`
	// The name of an IAM user.
	ResourceAwsIamUserUserName InsightStringFilterArrayInput `pulumi:"resourceAwsIamUserUserName"`
	// The canonical user ID of the owner of the S3 bucket.
	ResourceAwsS3BucketOwnerId InsightStringFilterArrayInput `pulumi:"resourceAwsS3BucketOwnerId"`
	// The display name of the owner of the S3 bucket.
	ResourceAwsS3BucketOwnerName InsightStringFilterArrayInput `pulumi:"resourceAwsS3BucketOwnerName"`
	// The identifier of the image related to a finding.
	ResourceContainerImageId InsightStringFilterArrayInput `pulumi:"resourceContainerImageId"`
	// The name of the image related to a finding.
	ResourceContainerImageName InsightStringFilterArrayInput `pulumi:"resourceContainerImageName"`
	// A timestamp that identifies when the container was started.
	ResourceContainerLaunchedAt InsightDateFilterArrayInput `pulumi:"resourceContainerLaunchedAt"`
	// The name of the container related to a finding.
	ResourceContainerName InsightStringFilterArrayInput `pulumi:"resourceContainerName"`
	// The details of a resource that doesn't have a specific subfield for the resource type defined.
	ResourceDetailsOther InsightMapFilterArrayInput `pulumi:"resourceDetailsOther"`
	// The canonical identifier for the given resource type.
	ResourceId InsightStringFilterArrayInput `pulumi:"resourceId"`
	// The canonical AWS partition name that the Region is assigned to.
	ResourcePartition InsightStringFilterArrayInput `pulumi:"resourcePartition"`
	// The canonical AWS external Region name where this resource is located.
	ResourceRegion InsightStringFilterArrayInput `pulumi:"resourceRegion"`
	// A list of AWS tags associated with a resource at the time the finding was processed.
	ResourceTags InsightMapFilterArrayInput `pulumi:"resourceTags"`
	// Specifies the type of the resource that details are provided for.
	ResourceType InsightStringFilterArrayInput `pulumi:"resourceType"`
	// Indicates whether or not sample findings are included in the filter results.
	Sample InsightBooleanFilterArrayInput `pulumi:"sample"`
	// The label of a finding's severity.
	SeverityLabel InsightStringFilterArrayInput `pulumi:"severityLabel"`
	// The normalized severity of a finding.
	SeverityNormalized InsightNumberFilterArrayInput `pulumi:"severityNormalized"`
	// The native severity as defined by the security findings provider's solution that generated the finding.
	SeverityProduct InsightNumberFilterArrayInput `pulumi:"severityProduct"`
	// A URL that links to a page about the current finding in the security findings provider's solution.
	SourceUrl InsightStringFilterArrayInput `pulumi:"sourceUrl"`
	// The category of a threat intelligence indicator.
	ThreatIntelIndicatorCategory InsightStringFilterArrayInput `pulumi:"threatIntelIndicatorCategory"`
	// A timestamp that identifies the last observation of a threat intelligence indicator.
	ThreatIntelIndicatorLastObservedAt InsightDateFilterArrayInput `pulumi:"threatIntelIndicatorLastObservedAt"`
	// The source of the threat intelligence.
	ThreatIntelIndicatorSource InsightStringFilterArrayInput `pulumi:"threatIntelIndicatorSource"`
	// The URL for more details from the source of the threat intelligence.
	ThreatIntelIndicatorSourceUrl InsightStringFilterArrayInput `pulumi:"threatIntelIndicatorSourceUrl"`
	// The type of a threat intelligence indicator.
	ThreatIntelIndicatorType InsightStringFilterArrayInput `pulumi:"threatIntelIndicatorType"`
	// The value of a threat intelligence indicator.
	ThreatIntelIndicatorValue InsightStringFilterArrayInput `pulumi:"threatIntelIndicatorValue"`
	// A finding's title.
	Title InsightStringFilterArrayInput `pulumi:"title"`
	// A finding type in the format of namespace/category/classifier that classifies a finding.
	Type InsightStringFilterArrayInput `pulumi:"type"`
	// An ISO8601-formatted timestamp that indicates when the security findings provider last updated the finding record.
	UpdatedAt InsightDateFilterArrayInput `pulumi:"updatedAt"`
	// A list of name/value string pairs associated with the finding.
	UserDefinedFields InsightMapFilterArrayInput `pulumi:"userDefinedFields"`
	// The veracity of a finding.
	VerificationState InsightStringFilterArrayInput `pulumi:"verificationState"`
	// Indicates whether a software vulnerability in your environment has a known exploit.
	VulnerabilitiesExploitAvailable InsightStringFilterArrayInput `pulumi:"vulnerabilitiesExploitAvailable"`
	// Indicates whether a vulnerability is fixed in a newer version of the affected software packages.
	VulnerabilitiesFixAvailable InsightStringFilterArrayInput `pulumi:"vulnerabilitiesFixAvailable"`
	// The workflow state of a finding.
	WorkflowState InsightStringFilterArrayInput `pulumi:"workflowState"`
	// The status of the investigation into a finding.
	WorkflowStatus InsightStringFilterArrayInput `pulumi:"workflowStatus"`
}

func (InsightAwsSecurityFindingFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightAwsSecurityFindingFilters)(nil)).Elem()
}

func (i InsightAwsSecurityFindingFiltersArgs) ToInsightAwsSecurityFindingFiltersOutput() InsightAwsSecurityFindingFiltersOutput {
	return i.ToInsightAwsSecurityFindingFiltersOutputWithContext(context.Background())
}

func (i InsightAwsSecurityFindingFiltersArgs) ToInsightAwsSecurityFindingFiltersOutputWithContext(ctx context.Context) InsightAwsSecurityFindingFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightAwsSecurityFindingFiltersOutput)
}

// A collection of filters that are applied to all active findings aggregated by AWS Security Hub.
type InsightAwsSecurityFindingFiltersOutput struct{ *pulumi.OutputState }

func (InsightAwsSecurityFindingFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightAwsSecurityFindingFilters)(nil)).Elem()
}

func (o InsightAwsSecurityFindingFiltersOutput) ToInsightAwsSecurityFindingFiltersOutput() InsightAwsSecurityFindingFiltersOutput {
	return o
}

func (o InsightAwsSecurityFindingFiltersOutput) ToInsightAwsSecurityFindingFiltersOutputWithContext(ctx context.Context) InsightAwsSecurityFindingFiltersOutput {
	return o
}

// The AWS account ID in which a finding is generated.
func (o InsightAwsSecurityFindingFiltersOutput) AwsAccountId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.AwsAccountId }).(InsightStringFilterArrayOutput)
}

// The name of the AWS account in which a finding is generated.
func (o InsightAwsSecurityFindingFiltersOutput) AwsAccountName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.AwsAccountName }).(InsightStringFilterArrayOutput)
}

// The name of the findings provider (company) that owns the solution (product) that generates findings.
func (o InsightAwsSecurityFindingFiltersOutput) CompanyName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.CompanyName }).(InsightStringFilterArrayOutput)
}

// The unique identifier of a standard in which a control is enabled.
func (o InsightAwsSecurityFindingFiltersOutput) ComplianceAssociatedStandardsId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.ComplianceAssociatedStandardsId
	}).(InsightStringFilterArrayOutput)
}

// The unique identifier of a control across standards.
func (o InsightAwsSecurityFindingFiltersOutput) ComplianceSecurityControlId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ComplianceSecurityControlId }).(InsightStringFilterArrayOutput)
}

// The name of a security control parameter.
func (o InsightAwsSecurityFindingFiltersOutput) ComplianceSecurityControlParametersName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.ComplianceSecurityControlParametersName
	}).(InsightStringFilterArrayOutput)
}

// The current value of a security control parameter.
func (o InsightAwsSecurityFindingFiltersOutput) ComplianceSecurityControlParametersValue() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.ComplianceSecurityControlParametersValue
	}).(InsightStringFilterArrayOutput)
}

// Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard.
func (o InsightAwsSecurityFindingFiltersOutput) ComplianceStatus() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ComplianceStatus }).(InsightStringFilterArrayOutput)
}

// A finding's confidence.
func (o InsightAwsSecurityFindingFiltersOutput) Confidence() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightNumberFilter { return v.Confidence }).(InsightNumberFilterArrayOutput)
}

// An ISO8601-formatted timestamp that indicates when the security findings provider captured the potential security issue that a finding captured.
func (o InsightAwsSecurityFindingFiltersOutput) CreatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter { return v.CreatedAt }).(InsightDateFilterArrayOutput)
}

// The level of importance assigned to the resources associated with the finding.
func (o InsightAwsSecurityFindingFiltersOutput) Criticality() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightNumberFilter { return v.Criticality }).(InsightNumberFilterArrayOutput)
}

// A finding's description.
func (o InsightAwsSecurityFindingFiltersOutput) Description() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.Description }).(InsightStringFilterArrayOutput)
}

// The finding provider value for the finding confidence.
func (o InsightAwsSecurityFindingFiltersOutput) FindingProviderFieldsConfidence() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		return v.FindingProviderFieldsConfidence
	}).(InsightNumberFilterArrayOutput)
}

// The finding provider value for the level of importance assigned to the resources associated with the findings.
func (o InsightAwsSecurityFindingFiltersOutput) FindingProviderFieldsCriticality() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		return v.FindingProviderFieldsCriticality
	}).(InsightNumberFilterArrayOutput)
}

// The finding identifier of a related finding that is identified by the finding provider.
func (o InsightAwsSecurityFindingFiltersOutput) FindingProviderFieldsRelatedFindingsId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.FindingProviderFieldsRelatedFindingsId
	}).(InsightStringFilterArrayOutput)
}

// The ARN of the solution that generated a related finding that is identified by the finding provider.
func (o InsightAwsSecurityFindingFiltersOutput) FindingProviderFieldsRelatedFindingsProductArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.FindingProviderFieldsRelatedFindingsProductArn
	}).(InsightStringFilterArrayOutput)
}

// The finding provider value for the severity label.
func (o InsightAwsSecurityFindingFiltersOutput) FindingProviderFieldsSeverityLabel() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.FindingProviderFieldsSeverityLabel
	}).(InsightStringFilterArrayOutput)
}

// The finding provider's original value for the severity.
func (o InsightAwsSecurityFindingFiltersOutput) FindingProviderFieldsSeverityOriginal() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.FindingProviderFieldsSeverityOriginal
	}).(InsightStringFilterArrayOutput)
}

// One or more finding types that the finding provider assigned to the finding.
func (o InsightAwsSecurityFindingFiltersOutput) FindingProviderFieldsTypes() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.FindingProviderFieldsTypes }).(InsightStringFilterArrayOutput)
}

// An ISO8601-formatted timestamp that indicates when the security findings provider first observed the potential security issue that a finding captured.
func (o InsightAwsSecurityFindingFiltersOutput) FirstObservedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter { return v.FirstObservedAt }).(InsightDateFilterArrayOutput)
}

// The identifier for the solution-specific component (a discrete unit of logic) that generated a finding.
func (o InsightAwsSecurityFindingFiltersOutput) GeneratorId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.GeneratorId }).(InsightStringFilterArrayOutput)
}

// The security findings provider-specific identifier for a finding.
func (o InsightAwsSecurityFindingFiltersOutput) Id() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.Id }).(InsightStringFilterArrayOutput)
}

// A keyword for a finding.
func (o InsightAwsSecurityFindingFiltersOutput) Keyword() InsightKeywordFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightKeywordFilter { return v.Keyword }).(InsightKeywordFilterArrayOutput)
}

// An ISO8601-formatted timestamp that indicates when the security findings provider most recently observed the potential security issue that a finding captured.
func (o InsightAwsSecurityFindingFiltersOutput) LastObservedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter { return v.LastObservedAt }).(InsightDateFilterArrayOutput)
}

// The name of the malware that was observed.
func (o InsightAwsSecurityFindingFiltersOutput) MalwareName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.MalwareName }).(InsightStringFilterArrayOutput)
}

// The filesystem path of the malware that was observed.
func (o InsightAwsSecurityFindingFiltersOutput) MalwarePath() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.MalwarePath }).(InsightStringFilterArrayOutput)
}

// The state of the malware that was observed.
func (o InsightAwsSecurityFindingFiltersOutput) MalwareState() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.MalwareState }).(InsightStringFilterArrayOutput)
}

// The type of the malware that was observed.
func (o InsightAwsSecurityFindingFiltersOutput) MalwareType() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.MalwareType }).(InsightStringFilterArrayOutput)
}

// The destination domain of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkDestinationDomain() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.NetworkDestinationDomain }).(InsightStringFilterArrayOutput)
}

// The destination IPv4 address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkDestinationIpV4() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightIpFilter { return v.NetworkDestinationIpV4 }).(InsightIpFilterArrayOutput)
}

// The destination IPv6 address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkDestinationIpV6() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightIpFilter { return v.NetworkDestinationIpV6 }).(InsightIpFilterArrayOutput)
}

// The destination port of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkDestinationPort() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightNumberFilter { return v.NetworkDestinationPort }).(InsightNumberFilterArrayOutput)
}

// Indicates the direction of network traffic associated with a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkDirection() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.NetworkDirection }).(InsightStringFilterArrayOutput)
}

// The protocol of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkProtocol() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.NetworkProtocol }).(InsightStringFilterArrayOutput)
}

// The source domain of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkSourceDomain() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.NetworkSourceDomain }).(InsightStringFilterArrayOutput)
}

// The source IPv4 address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkSourceIpV4() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightIpFilter { return v.NetworkSourceIpV4 }).(InsightIpFilterArrayOutput)
}

// The source IPv6 address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkSourceIpV6() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightIpFilter { return v.NetworkSourceIpV6 }).(InsightIpFilterArrayOutput)
}

// The source media access control (MAC) address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkSourceMac() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.NetworkSourceMac }).(InsightStringFilterArrayOutput)
}

// The source port of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersOutput) NetworkSourcePort() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightNumberFilter { return v.NetworkSourcePort }).(InsightNumberFilterArrayOutput)
}

// The text of a note.
func (o InsightAwsSecurityFindingFiltersOutput) NoteText() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.NoteText }).(InsightStringFilterArrayOutput)
}

// The timestamp of when the note was updated.
func (o InsightAwsSecurityFindingFiltersOutput) NoteUpdatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter { return v.NoteUpdatedAt }).(InsightDateFilterArrayOutput)
}

// The principal that created a note.
func (o InsightAwsSecurityFindingFiltersOutput) NoteUpdatedBy() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.NoteUpdatedBy }).(InsightStringFilterArrayOutput)
}

// A timestamp that identifies when the process was launched.
func (o InsightAwsSecurityFindingFiltersOutput) ProcessLaunchedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter { return v.ProcessLaunchedAt }).(InsightDateFilterArrayOutput)
}

// The name of the process.
func (o InsightAwsSecurityFindingFiltersOutput) ProcessName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ProcessName }).(InsightStringFilterArrayOutput)
}

// The parent process ID.
func (o InsightAwsSecurityFindingFiltersOutput) ProcessParentPid() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightNumberFilter { return v.ProcessParentPid }).(InsightNumberFilterArrayOutput)
}

// The path to the process executable.
func (o InsightAwsSecurityFindingFiltersOutput) ProcessPath() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ProcessPath }).(InsightStringFilterArrayOutput)
}

// The process ID.
func (o InsightAwsSecurityFindingFiltersOutput) ProcessPid() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightNumberFilter { return v.ProcessPid }).(InsightNumberFilterArrayOutput)
}

// A timestamp that identifies when the process was terminated.
func (o InsightAwsSecurityFindingFiltersOutput) ProcessTerminatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter { return v.ProcessTerminatedAt }).(InsightDateFilterArrayOutput)
}

// The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub.
func (o InsightAwsSecurityFindingFiltersOutput) ProductArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ProductArn }).(InsightStringFilterArrayOutput)
}

// A data type where security findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format.
func (o InsightAwsSecurityFindingFiltersOutput) ProductFields() InsightMapFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightMapFilter { return v.ProductFields }).(InsightMapFilterArrayOutput)
}

// The name of the solution (product) that generates findings.
func (o InsightAwsSecurityFindingFiltersOutput) ProductName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ProductName }).(InsightStringFilterArrayOutput)
}

// The recommendation of what to do about the issue described in a finding.
func (o InsightAwsSecurityFindingFiltersOutput) RecommendationText() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.RecommendationText }).(InsightStringFilterArrayOutput)
}

// The updated record state for the finding.
func (o InsightAwsSecurityFindingFiltersOutput) RecordState() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.RecordState }).(InsightStringFilterArrayOutput)
}

// The Region from which the finding was generated.
func (o InsightAwsSecurityFindingFiltersOutput) Region() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.Region }).(InsightStringFilterArrayOutput)
}

// The solution-generated identifier for a related finding.
func (o InsightAwsSecurityFindingFiltersOutput) RelatedFindingsId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.RelatedFindingsId }).(InsightStringFilterArrayOutput)
}

// The ARN of the solution that generated a related finding.
func (o InsightAwsSecurityFindingFiltersOutput) RelatedFindingsProductArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.RelatedFindingsProductArn }).(InsightStringFilterArrayOutput)
}

// The ARN of the application that is related to a finding.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceApplicationArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceApplicationArn }).(InsightStringFilterArrayOutput)
}

// The name of the application that is related to a finding.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceApplicationName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceApplicationName }).(InsightStringFilterArrayOutput)
}

// The IAM profile ARN of the instance.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsEc2InstanceIamInstanceProfileArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.ResourceAwsEc2InstanceIamInstanceProfileArn
	}).(InsightStringFilterArrayOutput)
}

// The Amazon Machine Image (AMI) ID of the instance.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsEc2InstanceImageId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceAwsEc2InstanceImageId }).(InsightStringFilterArrayOutput)
}

// The IPv4 addresses associated with the instance.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsEc2InstanceIpV4Addresses() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightIpFilter {
		return v.ResourceAwsEc2InstanceIpV4Addresses
	}).(InsightIpFilterArrayOutput)
}

// The IPv6 addresses associated with the instance.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsEc2InstanceIpV6Addresses() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightIpFilter {
		return v.ResourceAwsEc2InstanceIpV6Addresses
	}).(InsightIpFilterArrayOutput)
}

// The key name associated with the instance.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsEc2InstanceKeyName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceAwsEc2InstanceKeyName }).(InsightStringFilterArrayOutput)
}

// The date and time the instance was launched.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsEc2InstanceLaunchedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter {
		return v.ResourceAwsEc2InstanceLaunchedAt
	}).(InsightDateFilterArrayOutput)
}

// The identifier of the subnet that the instance was launched in.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsEc2InstanceSubnetId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.ResourceAwsEc2InstanceSubnetId
	}).(InsightStringFilterArrayOutput)
}

// The instance type of the instance.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsEc2InstanceType() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceAwsEc2InstanceType }).(InsightStringFilterArrayOutput)
}

// The identifier of the VPC that the instance was launched in.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsEc2InstanceVpcId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceAwsEc2InstanceVpcId }).(InsightStringFilterArrayOutput)
}

// The creation date/time of the IAM access key related to a finding.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsIamAccessKeyCreatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter {
		return v.ResourceAwsIamAccessKeyCreatedAt
	}).(InsightDateFilterArrayOutput)
}

// The name of the principal that is associated with an IAM access key.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsIamAccessKeyPrincipalName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.ResourceAwsIamAccessKeyPrincipalName
	}).(InsightStringFilterArrayOutput)
}

// The status of the IAM access key related to a finding.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsIamAccessKeyStatus() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceAwsIamAccessKeyStatus }).(InsightStringFilterArrayOutput)
}

// The user associated with the IAM access key related to a finding.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsIamAccessKeyUserName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.ResourceAwsIamAccessKeyUserName
	}).(InsightStringFilterArrayOutput)
}

// The name of an IAM user.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsIamUserUserName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceAwsIamUserUserName }).(InsightStringFilterArrayOutput)
}

// The canonical user ID of the owner of the S3 bucket.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsS3BucketOwnerId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceAwsS3BucketOwnerId }).(InsightStringFilterArrayOutput)
}

// The display name of the owner of the S3 bucket.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceAwsS3BucketOwnerName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceAwsS3BucketOwnerName }).(InsightStringFilterArrayOutput)
}

// The identifier of the image related to a finding.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceContainerImageId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceContainerImageId }).(InsightStringFilterArrayOutput)
}

// The name of the image related to a finding.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceContainerImageName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceContainerImageName }).(InsightStringFilterArrayOutput)
}

// A timestamp that identifies when the container was started.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceContainerLaunchedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter { return v.ResourceContainerLaunchedAt }).(InsightDateFilterArrayOutput)
}

// The name of the container related to a finding.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceContainerName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceContainerName }).(InsightStringFilterArrayOutput)
}

// The details of a resource that doesn't have a specific subfield for the resource type defined.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceDetailsOther() InsightMapFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightMapFilter { return v.ResourceDetailsOther }).(InsightMapFilterArrayOutput)
}

// The canonical identifier for the given resource type.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceId }).(InsightStringFilterArrayOutput)
}

// The canonical AWS partition name that the Region is assigned to.
func (o InsightAwsSecurityFindingFiltersOutput) ResourcePartition() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourcePartition }).(InsightStringFilterArrayOutput)
}

// The canonical AWS external Region name where this resource is located.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceRegion() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceRegion }).(InsightStringFilterArrayOutput)
}

// A list of AWS tags associated with a resource at the time the finding was processed.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceTags() InsightMapFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightMapFilter { return v.ResourceTags }).(InsightMapFilterArrayOutput)
}

// Specifies the type of the resource that details are provided for.
func (o InsightAwsSecurityFindingFiltersOutput) ResourceType() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ResourceType }).(InsightStringFilterArrayOutput)
}

// Indicates whether or not sample findings are included in the filter results.
func (o InsightAwsSecurityFindingFiltersOutput) Sample() InsightBooleanFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightBooleanFilter { return v.Sample }).(InsightBooleanFilterArrayOutput)
}

// The label of a finding's severity.
func (o InsightAwsSecurityFindingFiltersOutput) SeverityLabel() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.SeverityLabel }).(InsightStringFilterArrayOutput)
}

// The normalized severity of a finding.
func (o InsightAwsSecurityFindingFiltersOutput) SeverityNormalized() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightNumberFilter { return v.SeverityNormalized }).(InsightNumberFilterArrayOutput)
}

// The native severity as defined by the security findings provider's solution that generated the finding.
func (o InsightAwsSecurityFindingFiltersOutput) SeverityProduct() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightNumberFilter { return v.SeverityProduct }).(InsightNumberFilterArrayOutput)
}

// A URL that links to a page about the current finding in the security findings provider's solution.
func (o InsightAwsSecurityFindingFiltersOutput) SourceUrl() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.SourceUrl }).(InsightStringFilterArrayOutput)
}

// The category of a threat intelligence indicator.
func (o InsightAwsSecurityFindingFiltersOutput) ThreatIntelIndicatorCategory() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ThreatIntelIndicatorCategory }).(InsightStringFilterArrayOutput)
}

// A timestamp that identifies the last observation of a threat intelligence indicator.
func (o InsightAwsSecurityFindingFiltersOutput) ThreatIntelIndicatorLastObservedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter {
		return v.ThreatIntelIndicatorLastObservedAt
	}).(InsightDateFilterArrayOutput)
}

// The source of the threat intelligence.
func (o InsightAwsSecurityFindingFiltersOutput) ThreatIntelIndicatorSource() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ThreatIntelIndicatorSource }).(InsightStringFilterArrayOutput)
}

// The URL for more details from the source of the threat intelligence.
func (o InsightAwsSecurityFindingFiltersOutput) ThreatIntelIndicatorSourceUrl() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ThreatIntelIndicatorSourceUrl }).(InsightStringFilterArrayOutput)
}

// The type of a threat intelligence indicator.
func (o InsightAwsSecurityFindingFiltersOutput) ThreatIntelIndicatorType() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ThreatIntelIndicatorType }).(InsightStringFilterArrayOutput)
}

// The value of a threat intelligence indicator.
func (o InsightAwsSecurityFindingFiltersOutput) ThreatIntelIndicatorValue() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.ThreatIntelIndicatorValue }).(InsightStringFilterArrayOutput)
}

// A finding's title.
func (o InsightAwsSecurityFindingFiltersOutput) Title() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.Title }).(InsightStringFilterArrayOutput)
}

// A finding type in the format of namespace/category/classifier that classifies a finding.
func (o InsightAwsSecurityFindingFiltersOutput) Type() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.Type }).(InsightStringFilterArrayOutput)
}

// An ISO8601-formatted timestamp that indicates when the security findings provider last updated the finding record.
func (o InsightAwsSecurityFindingFiltersOutput) UpdatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightDateFilter { return v.UpdatedAt }).(InsightDateFilterArrayOutput)
}

// A list of name/value string pairs associated with the finding.
func (o InsightAwsSecurityFindingFiltersOutput) UserDefinedFields() InsightMapFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightMapFilter { return v.UserDefinedFields }).(InsightMapFilterArrayOutput)
}

// The veracity of a finding.
func (o InsightAwsSecurityFindingFiltersOutput) VerificationState() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.VerificationState }).(InsightStringFilterArrayOutput)
}

// Indicates whether a software vulnerability in your environment has a known exploit.
func (o InsightAwsSecurityFindingFiltersOutput) VulnerabilitiesExploitAvailable() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter {
		return v.VulnerabilitiesExploitAvailable
	}).(InsightStringFilterArrayOutput)
}

// Indicates whether a vulnerability is fixed in a newer version of the affected software packages.
func (o InsightAwsSecurityFindingFiltersOutput) VulnerabilitiesFixAvailable() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.VulnerabilitiesFixAvailable }).(InsightStringFilterArrayOutput)
}

// The workflow state of a finding.
func (o InsightAwsSecurityFindingFiltersOutput) WorkflowState() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.WorkflowState }).(InsightStringFilterArrayOutput)
}

// The status of the investigation into a finding.
func (o InsightAwsSecurityFindingFiltersOutput) WorkflowStatus() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v InsightAwsSecurityFindingFilters) []InsightStringFilter { return v.WorkflowStatus }).(InsightStringFilterArrayOutput)
}

type InsightAwsSecurityFindingFiltersPtrOutput struct{ *pulumi.OutputState }

func (InsightAwsSecurityFindingFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightAwsSecurityFindingFilters)(nil)).Elem()
}

func (o InsightAwsSecurityFindingFiltersPtrOutput) ToInsightAwsSecurityFindingFiltersPtrOutput() InsightAwsSecurityFindingFiltersPtrOutput {
	return o
}

func (o InsightAwsSecurityFindingFiltersPtrOutput) ToInsightAwsSecurityFindingFiltersPtrOutputWithContext(ctx context.Context) InsightAwsSecurityFindingFiltersPtrOutput {
	return o
}

func (o InsightAwsSecurityFindingFiltersPtrOutput) Elem() InsightAwsSecurityFindingFiltersOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) InsightAwsSecurityFindingFilters {
		if v != nil {
			return *v
		}
		var ret InsightAwsSecurityFindingFilters
		return ret
	}).(InsightAwsSecurityFindingFiltersOutput)
}

// The AWS account ID in which a finding is generated.
func (o InsightAwsSecurityFindingFiltersPtrOutput) AwsAccountId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(InsightStringFilterArrayOutput)
}

// The name of the AWS account in which a finding is generated.
func (o InsightAwsSecurityFindingFiltersPtrOutput) AwsAccountName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.AwsAccountName
	}).(InsightStringFilterArrayOutput)
}

// The name of the findings provider (company) that owns the solution (product) that generates findings.
func (o InsightAwsSecurityFindingFiltersPtrOutput) CompanyName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.CompanyName
	}).(InsightStringFilterArrayOutput)
}

// The unique identifier of a standard in which a control is enabled.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ComplianceAssociatedStandardsId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ComplianceAssociatedStandardsId
	}).(InsightStringFilterArrayOutput)
}

// The unique identifier of a control across standards.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ComplianceSecurityControlId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ComplianceSecurityControlId
	}).(InsightStringFilterArrayOutput)
}

// The name of a security control parameter.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ComplianceSecurityControlParametersName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ComplianceSecurityControlParametersName
	}).(InsightStringFilterArrayOutput)
}

// The current value of a security control parameter.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ComplianceSecurityControlParametersValue() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ComplianceSecurityControlParametersValue
	}).(InsightStringFilterArrayOutput)
}

// Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ComplianceStatus() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ComplianceStatus
	}).(InsightStringFilterArrayOutput)
}

// A finding's confidence.
func (o InsightAwsSecurityFindingFiltersPtrOutput) Confidence() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		if v == nil {
			return nil
		}
		return v.Confidence
	}).(InsightNumberFilterArrayOutput)
}

// An ISO8601-formatted timestamp that indicates when the security findings provider captured the potential security issue that a finding captured.
func (o InsightAwsSecurityFindingFiltersPtrOutput) CreatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(InsightDateFilterArrayOutput)
}

// The level of importance assigned to the resources associated with the finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) Criticality() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		if v == nil {
			return nil
		}
		return v.Criticality
	}).(InsightNumberFilterArrayOutput)
}

// A finding's description.
func (o InsightAwsSecurityFindingFiltersPtrOutput) Description() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.Description
	}).(InsightStringFilterArrayOutput)
}

// The finding provider value for the finding confidence.
func (o InsightAwsSecurityFindingFiltersPtrOutput) FindingProviderFieldsConfidence() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		if v == nil {
			return nil
		}
		return v.FindingProviderFieldsConfidence
	}).(InsightNumberFilterArrayOutput)
}

// The finding provider value for the level of importance assigned to the resources associated with the findings.
func (o InsightAwsSecurityFindingFiltersPtrOutput) FindingProviderFieldsCriticality() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		if v == nil {
			return nil
		}
		return v.FindingProviderFieldsCriticality
	}).(InsightNumberFilterArrayOutput)
}

// The finding identifier of a related finding that is identified by the finding provider.
func (o InsightAwsSecurityFindingFiltersPtrOutput) FindingProviderFieldsRelatedFindingsId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.FindingProviderFieldsRelatedFindingsId
	}).(InsightStringFilterArrayOutput)
}

// The ARN of the solution that generated a related finding that is identified by the finding provider.
func (o InsightAwsSecurityFindingFiltersPtrOutput) FindingProviderFieldsRelatedFindingsProductArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.FindingProviderFieldsRelatedFindingsProductArn
	}).(InsightStringFilterArrayOutput)
}

// The finding provider value for the severity label.
func (o InsightAwsSecurityFindingFiltersPtrOutput) FindingProviderFieldsSeverityLabel() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.FindingProviderFieldsSeverityLabel
	}).(InsightStringFilterArrayOutput)
}

// The finding provider's original value for the severity.
func (o InsightAwsSecurityFindingFiltersPtrOutput) FindingProviderFieldsSeverityOriginal() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.FindingProviderFieldsSeverityOriginal
	}).(InsightStringFilterArrayOutput)
}

// One or more finding types that the finding provider assigned to the finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) FindingProviderFieldsTypes() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.FindingProviderFieldsTypes
	}).(InsightStringFilterArrayOutput)
}

// An ISO8601-formatted timestamp that indicates when the security findings provider first observed the potential security issue that a finding captured.
func (o InsightAwsSecurityFindingFiltersPtrOutput) FirstObservedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.FirstObservedAt
	}).(InsightDateFilterArrayOutput)
}

// The identifier for the solution-specific component (a discrete unit of logic) that generated a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) GeneratorId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.GeneratorId
	}).(InsightStringFilterArrayOutput)
}

// The security findings provider-specific identifier for a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) Id() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.Id
	}).(InsightStringFilterArrayOutput)
}

// A keyword for a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) Keyword() InsightKeywordFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightKeywordFilter {
		if v == nil {
			return nil
		}
		return v.Keyword
	}).(InsightKeywordFilterArrayOutput)
}

// An ISO8601-formatted timestamp that indicates when the security findings provider most recently observed the potential security issue that a finding captured.
func (o InsightAwsSecurityFindingFiltersPtrOutput) LastObservedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.LastObservedAt
	}).(InsightDateFilterArrayOutput)
}

// The name of the malware that was observed.
func (o InsightAwsSecurityFindingFiltersPtrOutput) MalwareName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.MalwareName
	}).(InsightStringFilterArrayOutput)
}

// The filesystem path of the malware that was observed.
func (o InsightAwsSecurityFindingFiltersPtrOutput) MalwarePath() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.MalwarePath
	}).(InsightStringFilterArrayOutput)
}

// The state of the malware that was observed.
func (o InsightAwsSecurityFindingFiltersPtrOutput) MalwareState() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.MalwareState
	}).(InsightStringFilterArrayOutput)
}

// The type of the malware that was observed.
func (o InsightAwsSecurityFindingFiltersPtrOutput) MalwareType() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.MalwareType
	}).(InsightStringFilterArrayOutput)
}

// The destination domain of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkDestinationDomain() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.NetworkDestinationDomain
	}).(InsightStringFilterArrayOutput)
}

// The destination IPv4 address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkDestinationIpV4() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightIpFilter {
		if v == nil {
			return nil
		}
		return v.NetworkDestinationIpV4
	}).(InsightIpFilterArrayOutput)
}

// The destination IPv6 address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkDestinationIpV6() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightIpFilter {
		if v == nil {
			return nil
		}
		return v.NetworkDestinationIpV6
	}).(InsightIpFilterArrayOutput)
}

// The destination port of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkDestinationPort() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		if v == nil {
			return nil
		}
		return v.NetworkDestinationPort
	}).(InsightNumberFilterArrayOutput)
}

// Indicates the direction of network traffic associated with a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkDirection() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.NetworkDirection
	}).(InsightStringFilterArrayOutput)
}

// The protocol of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkProtocol() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.NetworkProtocol
	}).(InsightStringFilterArrayOutput)
}

// The source domain of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkSourceDomain() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.NetworkSourceDomain
	}).(InsightStringFilterArrayOutput)
}

// The source IPv4 address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkSourceIpV4() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightIpFilter {
		if v == nil {
			return nil
		}
		return v.NetworkSourceIpV4
	}).(InsightIpFilterArrayOutput)
}

// The source IPv6 address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkSourceIpV6() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightIpFilter {
		if v == nil {
			return nil
		}
		return v.NetworkSourceIpV6
	}).(InsightIpFilterArrayOutput)
}

// The source media access control (MAC) address of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkSourceMac() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.NetworkSourceMac
	}).(InsightStringFilterArrayOutput)
}

// The source port of network-related information about a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NetworkSourcePort() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		if v == nil {
			return nil
		}
		return v.NetworkSourcePort
	}).(InsightNumberFilterArrayOutput)
}

// The text of a note.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NoteText() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.NoteText
	}).(InsightStringFilterArrayOutput)
}

// The timestamp of when the note was updated.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NoteUpdatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.NoteUpdatedAt
	}).(InsightDateFilterArrayOutput)
}

// The principal that created a note.
func (o InsightAwsSecurityFindingFiltersPtrOutput) NoteUpdatedBy() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.NoteUpdatedBy
	}).(InsightStringFilterArrayOutput)
}

// A timestamp that identifies when the process was launched.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ProcessLaunchedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.ProcessLaunchedAt
	}).(InsightDateFilterArrayOutput)
}

// The name of the process.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ProcessName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ProcessName
	}).(InsightStringFilterArrayOutput)
}

// The parent process ID.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ProcessParentPid() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		if v == nil {
			return nil
		}
		return v.ProcessParentPid
	}).(InsightNumberFilterArrayOutput)
}

// The path to the process executable.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ProcessPath() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ProcessPath
	}).(InsightStringFilterArrayOutput)
}

// The process ID.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ProcessPid() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		if v == nil {
			return nil
		}
		return v.ProcessPid
	}).(InsightNumberFilterArrayOutput)
}

// A timestamp that identifies when the process was terminated.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ProcessTerminatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.ProcessTerminatedAt
	}).(InsightDateFilterArrayOutput)
}

// The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ProductArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ProductArn
	}).(InsightStringFilterArrayOutput)
}

// A data type where security findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ProductFields() InsightMapFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightMapFilter {
		if v == nil {
			return nil
		}
		return v.ProductFields
	}).(InsightMapFilterArrayOutput)
}

// The name of the solution (product) that generates findings.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ProductName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ProductName
	}).(InsightStringFilterArrayOutput)
}

// The recommendation of what to do about the issue described in a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) RecommendationText() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.RecommendationText
	}).(InsightStringFilterArrayOutput)
}

// The updated record state for the finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) RecordState() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.RecordState
	}).(InsightStringFilterArrayOutput)
}

// The Region from which the finding was generated.
func (o InsightAwsSecurityFindingFiltersPtrOutput) Region() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.Region
	}).(InsightStringFilterArrayOutput)
}

// The solution-generated identifier for a related finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) RelatedFindingsId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.RelatedFindingsId
	}).(InsightStringFilterArrayOutput)
}

// The ARN of the solution that generated a related finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) RelatedFindingsProductArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.RelatedFindingsProductArn
	}).(InsightStringFilterArrayOutput)
}

// The ARN of the application that is related to a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceApplicationArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceApplicationArn
	}).(InsightStringFilterArrayOutput)
}

// The name of the application that is related to a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceApplicationName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceApplicationName
	}).(InsightStringFilterArrayOutput)
}

// The IAM profile ARN of the instance.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsEc2InstanceIamInstanceProfileArn() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsEc2InstanceIamInstanceProfileArn
	}).(InsightStringFilterArrayOutput)
}

// The Amazon Machine Image (AMI) ID of the instance.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsEc2InstanceImageId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsEc2InstanceImageId
	}).(InsightStringFilterArrayOutput)
}

// The IPv4 addresses associated with the instance.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsEc2InstanceIpV4Addresses() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightIpFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsEc2InstanceIpV4Addresses
	}).(InsightIpFilterArrayOutput)
}

// The IPv6 addresses associated with the instance.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsEc2InstanceIpV6Addresses() InsightIpFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightIpFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsEc2InstanceIpV6Addresses
	}).(InsightIpFilterArrayOutput)
}

// The key name associated with the instance.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsEc2InstanceKeyName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsEc2InstanceKeyName
	}).(InsightStringFilterArrayOutput)
}

// The date and time the instance was launched.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsEc2InstanceLaunchedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsEc2InstanceLaunchedAt
	}).(InsightDateFilterArrayOutput)
}

// The identifier of the subnet that the instance was launched in.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsEc2InstanceSubnetId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsEc2InstanceSubnetId
	}).(InsightStringFilterArrayOutput)
}

// The instance type of the instance.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsEc2InstanceType() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsEc2InstanceType
	}).(InsightStringFilterArrayOutput)
}

// The identifier of the VPC that the instance was launched in.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsEc2InstanceVpcId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsEc2InstanceVpcId
	}).(InsightStringFilterArrayOutput)
}

// The creation date/time of the IAM access key related to a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsIamAccessKeyCreatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsIamAccessKeyCreatedAt
	}).(InsightDateFilterArrayOutput)
}

// The name of the principal that is associated with an IAM access key.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsIamAccessKeyPrincipalName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsIamAccessKeyPrincipalName
	}).(InsightStringFilterArrayOutput)
}

// The status of the IAM access key related to a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsIamAccessKeyStatus() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsIamAccessKeyStatus
	}).(InsightStringFilterArrayOutput)
}

// The user associated with the IAM access key related to a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsIamAccessKeyUserName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsIamAccessKeyUserName
	}).(InsightStringFilterArrayOutput)
}

// The name of an IAM user.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsIamUserUserName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsIamUserUserName
	}).(InsightStringFilterArrayOutput)
}

// The canonical user ID of the owner of the S3 bucket.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsS3BucketOwnerId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsS3BucketOwnerId
	}).(InsightStringFilterArrayOutput)
}

// The display name of the owner of the S3 bucket.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceAwsS3BucketOwnerName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceAwsS3BucketOwnerName
	}).(InsightStringFilterArrayOutput)
}

// The identifier of the image related to a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceContainerImageId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceContainerImageId
	}).(InsightStringFilterArrayOutput)
}

// The name of the image related to a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceContainerImageName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceContainerImageName
	}).(InsightStringFilterArrayOutput)
}

// A timestamp that identifies when the container was started.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceContainerLaunchedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.ResourceContainerLaunchedAt
	}).(InsightDateFilterArrayOutput)
}

// The name of the container related to a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceContainerName() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceContainerName
	}).(InsightStringFilterArrayOutput)
}

// The details of a resource that doesn't have a specific subfield for the resource type defined.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceDetailsOther() InsightMapFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightMapFilter {
		if v == nil {
			return nil
		}
		return v.ResourceDetailsOther
	}).(InsightMapFilterArrayOutput)
}

// The canonical identifier for the given resource type.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceId() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(InsightStringFilterArrayOutput)
}

// The canonical AWS partition name that the Region is assigned to.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourcePartition() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourcePartition
	}).(InsightStringFilterArrayOutput)
}

// The canonical AWS external Region name where this resource is located.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceRegion() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceRegion
	}).(InsightStringFilterArrayOutput)
}

// A list of AWS tags associated with a resource at the time the finding was processed.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceTags() InsightMapFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightMapFilter {
		if v == nil {
			return nil
		}
		return v.ResourceTags
	}).(InsightMapFilterArrayOutput)
}

// Specifies the type of the resource that details are provided for.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ResourceType() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ResourceType
	}).(InsightStringFilterArrayOutput)
}

// Indicates whether or not sample findings are included in the filter results.
func (o InsightAwsSecurityFindingFiltersPtrOutput) Sample() InsightBooleanFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightBooleanFilter {
		if v == nil {
			return nil
		}
		return v.Sample
	}).(InsightBooleanFilterArrayOutput)
}

// The label of a finding's severity.
func (o InsightAwsSecurityFindingFiltersPtrOutput) SeverityLabel() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.SeverityLabel
	}).(InsightStringFilterArrayOutput)
}

// The normalized severity of a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) SeverityNormalized() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		if v == nil {
			return nil
		}
		return v.SeverityNormalized
	}).(InsightNumberFilterArrayOutput)
}

// The native severity as defined by the security findings provider's solution that generated the finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) SeverityProduct() InsightNumberFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightNumberFilter {
		if v == nil {
			return nil
		}
		return v.SeverityProduct
	}).(InsightNumberFilterArrayOutput)
}

// A URL that links to a page about the current finding in the security findings provider's solution.
func (o InsightAwsSecurityFindingFiltersPtrOutput) SourceUrl() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.SourceUrl
	}).(InsightStringFilterArrayOutput)
}

// The category of a threat intelligence indicator.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ThreatIntelIndicatorCategory() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ThreatIntelIndicatorCategory
	}).(InsightStringFilterArrayOutput)
}

// A timestamp that identifies the last observation of a threat intelligence indicator.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ThreatIntelIndicatorLastObservedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.ThreatIntelIndicatorLastObservedAt
	}).(InsightDateFilterArrayOutput)
}

// The source of the threat intelligence.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ThreatIntelIndicatorSource() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ThreatIntelIndicatorSource
	}).(InsightStringFilterArrayOutput)
}

// The URL for more details from the source of the threat intelligence.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ThreatIntelIndicatorSourceUrl() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ThreatIntelIndicatorSourceUrl
	}).(InsightStringFilterArrayOutput)
}

// The type of a threat intelligence indicator.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ThreatIntelIndicatorType() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ThreatIntelIndicatorType
	}).(InsightStringFilterArrayOutput)
}

// The value of a threat intelligence indicator.
func (o InsightAwsSecurityFindingFiltersPtrOutput) ThreatIntelIndicatorValue() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.ThreatIntelIndicatorValue
	}).(InsightStringFilterArrayOutput)
}

// A finding's title.
func (o InsightAwsSecurityFindingFiltersPtrOutput) Title() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.Title
	}).(InsightStringFilterArrayOutput)
}

// A finding type in the format of namespace/category/classifier that classifies a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) Type() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.Type
	}).(InsightStringFilterArrayOutput)
}

// An ISO8601-formatted timestamp that indicates when the security findings provider last updated the finding record.
func (o InsightAwsSecurityFindingFiltersPtrOutput) UpdatedAt() InsightDateFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightDateFilter {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(InsightDateFilterArrayOutput)
}

// A list of name/value string pairs associated with the finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) UserDefinedFields() InsightMapFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightMapFilter {
		if v == nil {
			return nil
		}
		return v.UserDefinedFields
	}).(InsightMapFilterArrayOutput)
}

// The veracity of a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) VerificationState() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.VerificationState
	}).(InsightStringFilterArrayOutput)
}

// Indicates whether a software vulnerability in your environment has a known exploit.
func (o InsightAwsSecurityFindingFiltersPtrOutput) VulnerabilitiesExploitAvailable() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.VulnerabilitiesExploitAvailable
	}).(InsightStringFilterArrayOutput)
}

// Indicates whether a vulnerability is fixed in a newer version of the affected software packages.
func (o InsightAwsSecurityFindingFiltersPtrOutput) VulnerabilitiesFixAvailable() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.VulnerabilitiesFixAvailable
	}).(InsightStringFilterArrayOutput)
}

// The workflow state of a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) WorkflowState() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.WorkflowState
	}).(InsightStringFilterArrayOutput)
}

// The status of the investigation into a finding.
func (o InsightAwsSecurityFindingFiltersPtrOutput) WorkflowStatus() InsightStringFilterArrayOutput {
	return o.ApplyT(func(v *InsightAwsSecurityFindingFilters) []InsightStringFilter {
		if v == nil {
			return nil
		}
		return v.WorkflowStatus
	}).(InsightStringFilterArrayOutput)
}

// Boolean filter for querying findings.
type InsightBooleanFilter struct {
	// The value of the boolean.
	Value bool `pulumi:"value"`
}

// InsightBooleanFilterInput is an input type that accepts InsightBooleanFilterArgs and InsightBooleanFilterOutput values.
// You can construct a concrete instance of `InsightBooleanFilterInput` via:
//
//	InsightBooleanFilterArgs{...}
type InsightBooleanFilterInput interface {
	pulumi.Input

	ToInsightBooleanFilterOutput() InsightBooleanFilterOutput
	ToInsightBooleanFilterOutputWithContext(context.Context) InsightBooleanFilterOutput
}

// Boolean filter for querying findings.
type InsightBooleanFilterArgs struct {
	// The value of the boolean.
	Value pulumi.BoolInput `pulumi:"value"`
}

func (InsightBooleanFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightBooleanFilter)(nil)).Elem()
}

func (i InsightBooleanFilterArgs) ToInsightBooleanFilterOutput() InsightBooleanFilterOutput {
	return i.ToInsightBooleanFilterOutputWithContext(context.Background())
}

func (i InsightBooleanFilterArgs) ToInsightBooleanFilterOutputWithContext(ctx context.Context) InsightBooleanFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightBooleanFilterOutput)
}

// InsightBooleanFilterArrayInput is an input type that accepts InsightBooleanFilterArray and InsightBooleanFilterArrayOutput values.
// You can construct a concrete instance of `InsightBooleanFilterArrayInput` via:
//
//	InsightBooleanFilterArray{ InsightBooleanFilterArgs{...} }
type InsightBooleanFilterArrayInput interface {
	pulumi.Input

	ToInsightBooleanFilterArrayOutput() InsightBooleanFilterArrayOutput
	ToInsightBooleanFilterArrayOutputWithContext(context.Context) InsightBooleanFilterArrayOutput
}

type InsightBooleanFilterArray []InsightBooleanFilterInput

func (InsightBooleanFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightBooleanFilter)(nil)).Elem()
}

func (i InsightBooleanFilterArray) ToInsightBooleanFilterArrayOutput() InsightBooleanFilterArrayOutput {
	return i.ToInsightBooleanFilterArrayOutputWithContext(context.Background())
}

func (i InsightBooleanFilterArray) ToInsightBooleanFilterArrayOutputWithContext(ctx context.Context) InsightBooleanFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightBooleanFilterArrayOutput)
}

// Boolean filter for querying findings.
type InsightBooleanFilterOutput struct{ *pulumi.OutputState }

func (InsightBooleanFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightBooleanFilter)(nil)).Elem()
}

func (o InsightBooleanFilterOutput) ToInsightBooleanFilterOutput() InsightBooleanFilterOutput {
	return o
}

func (o InsightBooleanFilterOutput) ToInsightBooleanFilterOutputWithContext(ctx context.Context) InsightBooleanFilterOutput {
	return o
}

// The value of the boolean.
func (o InsightBooleanFilterOutput) Value() pulumi.BoolOutput {
	return o.ApplyT(func(v InsightBooleanFilter) bool { return v.Value }).(pulumi.BoolOutput)
}

type InsightBooleanFilterArrayOutput struct{ *pulumi.OutputState }

func (InsightBooleanFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightBooleanFilter)(nil)).Elem()
}

func (o InsightBooleanFilterArrayOutput) ToInsightBooleanFilterArrayOutput() InsightBooleanFilterArrayOutput {
	return o
}

func (o InsightBooleanFilterArrayOutput) ToInsightBooleanFilterArrayOutputWithContext(ctx context.Context) InsightBooleanFilterArrayOutput {
	return o
}

func (o InsightBooleanFilterArrayOutput) Index(i pulumi.IntInput) InsightBooleanFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightBooleanFilter {
		return vs[0].([]InsightBooleanFilter)[vs[1].(int)]
	}).(InsightBooleanFilterOutput)
}

// A date filter for querying findings.
type InsightDateFilter struct {
	// A date range for the date filter.
	DateRange *InsightDateRange `pulumi:"dateRange"`
	// A timestamp that provides the end date for the date filter.
	//
	// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
	//
	// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
	// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
	// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
	End *string `pulumi:"end"`
	// A timestamp that provides the start date for the date filter.
	//
	// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
	//
	// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
	// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
	// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
	Start *string `pulumi:"start"`
}

// InsightDateFilterInput is an input type that accepts InsightDateFilterArgs and InsightDateFilterOutput values.
// You can construct a concrete instance of `InsightDateFilterInput` via:
//
//	InsightDateFilterArgs{...}
type InsightDateFilterInput interface {
	pulumi.Input

	ToInsightDateFilterOutput() InsightDateFilterOutput
	ToInsightDateFilterOutputWithContext(context.Context) InsightDateFilterOutput
}

// A date filter for querying findings.
type InsightDateFilterArgs struct {
	// A date range for the date filter.
	DateRange InsightDateRangePtrInput `pulumi:"dateRange"`
	// A timestamp that provides the end date for the date filter.
	//
	// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
	//
	// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
	// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
	// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
	End pulumi.StringPtrInput `pulumi:"end"`
	// A timestamp that provides the start date for the date filter.
	//
	// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
	//
	// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
	// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
	// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
	// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
	Start pulumi.StringPtrInput `pulumi:"start"`
}

func (InsightDateFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightDateFilter)(nil)).Elem()
}

func (i InsightDateFilterArgs) ToInsightDateFilterOutput() InsightDateFilterOutput {
	return i.ToInsightDateFilterOutputWithContext(context.Background())
}

func (i InsightDateFilterArgs) ToInsightDateFilterOutputWithContext(ctx context.Context) InsightDateFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightDateFilterOutput)
}

// InsightDateFilterArrayInput is an input type that accepts InsightDateFilterArray and InsightDateFilterArrayOutput values.
// You can construct a concrete instance of `InsightDateFilterArrayInput` via:
//
//	InsightDateFilterArray{ InsightDateFilterArgs{...} }
type InsightDateFilterArrayInput interface {
	pulumi.Input

	ToInsightDateFilterArrayOutput() InsightDateFilterArrayOutput
	ToInsightDateFilterArrayOutputWithContext(context.Context) InsightDateFilterArrayOutput
}

type InsightDateFilterArray []InsightDateFilterInput

func (InsightDateFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightDateFilter)(nil)).Elem()
}

func (i InsightDateFilterArray) ToInsightDateFilterArrayOutput() InsightDateFilterArrayOutput {
	return i.ToInsightDateFilterArrayOutputWithContext(context.Background())
}

func (i InsightDateFilterArray) ToInsightDateFilterArrayOutputWithContext(ctx context.Context) InsightDateFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightDateFilterArrayOutput)
}

// A date filter for querying findings.
type InsightDateFilterOutput struct{ *pulumi.OutputState }

func (InsightDateFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightDateFilter)(nil)).Elem()
}

func (o InsightDateFilterOutput) ToInsightDateFilterOutput() InsightDateFilterOutput {
	return o
}

func (o InsightDateFilterOutput) ToInsightDateFilterOutputWithContext(ctx context.Context) InsightDateFilterOutput {
	return o
}

// A date range for the date filter.
func (o InsightDateFilterOutput) DateRange() InsightDateRangePtrOutput {
	return o.ApplyT(func(v InsightDateFilter) *InsightDateRange { return v.DateRange }).(InsightDateRangePtrOutput)
}

// A timestamp that provides the end date for the date filter.
//
// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
//
// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
func (o InsightDateFilterOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightDateFilter) *string { return v.End }).(pulumi.StringPtrOutput)
}

// A timestamp that provides the start date for the date filter.
//
// This field accepts only the specified formats. Timestamps can end with `Z` or `("+" / "-") time-hour [":" time-minute]` . The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
//
// - `YYYY-MM-DDTHH:MM:SSZ` (for example, `2019-01-31T23:00:00Z` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ` (for example, `2019-01-31T23:00:00.123456789Z` )
// - `YYYY-MM-DDTHH:MM:SS+HH:MM` (for example, `2024-01-04T15:25:10+17:59` )
// - `YYYY-MM-DDTHH:MM:SS-HHMM` (for example, `2024-01-04T15:25:10-1759` )
// - `YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM` (for example, `2024-01-04T15:25:10.123456789+17:59` )
func (o InsightDateFilterOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightDateFilter) *string { return v.Start }).(pulumi.StringPtrOutput)
}

type InsightDateFilterArrayOutput struct{ *pulumi.OutputState }

func (InsightDateFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightDateFilter)(nil)).Elem()
}

func (o InsightDateFilterArrayOutput) ToInsightDateFilterArrayOutput() InsightDateFilterArrayOutput {
	return o
}

func (o InsightDateFilterArrayOutput) ToInsightDateFilterArrayOutputWithContext(ctx context.Context) InsightDateFilterArrayOutput {
	return o
}

func (o InsightDateFilterArrayOutput) Index(i pulumi.IntInput) InsightDateFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightDateFilter {
		return vs[0].([]InsightDateFilter)[vs[1].(int)]
	}).(InsightDateFilterOutput)
}

// A date range for the date filter.
type InsightDateRange struct {
	// A date range unit for the date filter.
	Unit InsightDateRangeUnit `pulumi:"unit"`
	// A date range value for the date filter.
	Value float64 `pulumi:"value"`
}

// InsightDateRangeInput is an input type that accepts InsightDateRangeArgs and InsightDateRangeOutput values.
// You can construct a concrete instance of `InsightDateRangeInput` via:
//
//	InsightDateRangeArgs{...}
type InsightDateRangeInput interface {
	pulumi.Input

	ToInsightDateRangeOutput() InsightDateRangeOutput
	ToInsightDateRangeOutputWithContext(context.Context) InsightDateRangeOutput
}

// A date range for the date filter.
type InsightDateRangeArgs struct {
	// A date range unit for the date filter.
	Unit InsightDateRangeUnitInput `pulumi:"unit"`
	// A date range value for the date filter.
	Value pulumi.Float64Input `pulumi:"value"`
}

func (InsightDateRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightDateRange)(nil)).Elem()
}

func (i InsightDateRangeArgs) ToInsightDateRangeOutput() InsightDateRangeOutput {
	return i.ToInsightDateRangeOutputWithContext(context.Background())
}

func (i InsightDateRangeArgs) ToInsightDateRangeOutputWithContext(ctx context.Context) InsightDateRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightDateRangeOutput)
}

func (i InsightDateRangeArgs) ToInsightDateRangePtrOutput() InsightDateRangePtrOutput {
	return i.ToInsightDateRangePtrOutputWithContext(context.Background())
}

func (i InsightDateRangeArgs) ToInsightDateRangePtrOutputWithContext(ctx context.Context) InsightDateRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightDateRangeOutput).ToInsightDateRangePtrOutputWithContext(ctx)
}

// InsightDateRangePtrInput is an input type that accepts InsightDateRangeArgs, InsightDateRangePtr and InsightDateRangePtrOutput values.
// You can construct a concrete instance of `InsightDateRangePtrInput` via:
//
//	        InsightDateRangeArgs{...}
//
//	or:
//
//	        nil
type InsightDateRangePtrInput interface {
	pulumi.Input

	ToInsightDateRangePtrOutput() InsightDateRangePtrOutput
	ToInsightDateRangePtrOutputWithContext(context.Context) InsightDateRangePtrOutput
}

type insightDateRangePtrType InsightDateRangeArgs

func InsightDateRangePtr(v *InsightDateRangeArgs) InsightDateRangePtrInput {
	return (*insightDateRangePtrType)(v)
}

func (*insightDateRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightDateRange)(nil)).Elem()
}

func (i *insightDateRangePtrType) ToInsightDateRangePtrOutput() InsightDateRangePtrOutput {
	return i.ToInsightDateRangePtrOutputWithContext(context.Background())
}

func (i *insightDateRangePtrType) ToInsightDateRangePtrOutputWithContext(ctx context.Context) InsightDateRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightDateRangePtrOutput)
}

// A date range for the date filter.
type InsightDateRangeOutput struct{ *pulumi.OutputState }

func (InsightDateRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightDateRange)(nil)).Elem()
}

func (o InsightDateRangeOutput) ToInsightDateRangeOutput() InsightDateRangeOutput {
	return o
}

func (o InsightDateRangeOutput) ToInsightDateRangeOutputWithContext(ctx context.Context) InsightDateRangeOutput {
	return o
}

func (o InsightDateRangeOutput) ToInsightDateRangePtrOutput() InsightDateRangePtrOutput {
	return o.ToInsightDateRangePtrOutputWithContext(context.Background())
}

func (o InsightDateRangeOutput) ToInsightDateRangePtrOutputWithContext(ctx context.Context) InsightDateRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InsightDateRange) *InsightDateRange {
		return &v
	}).(InsightDateRangePtrOutput)
}

// A date range unit for the date filter.
func (o InsightDateRangeOutput) Unit() InsightDateRangeUnitOutput {
	return o.ApplyT(func(v InsightDateRange) InsightDateRangeUnit { return v.Unit }).(InsightDateRangeUnitOutput)
}

// A date range value for the date filter.
func (o InsightDateRangeOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v InsightDateRange) float64 { return v.Value }).(pulumi.Float64Output)
}

type InsightDateRangePtrOutput struct{ *pulumi.OutputState }

func (InsightDateRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightDateRange)(nil)).Elem()
}

func (o InsightDateRangePtrOutput) ToInsightDateRangePtrOutput() InsightDateRangePtrOutput {
	return o
}

func (o InsightDateRangePtrOutput) ToInsightDateRangePtrOutputWithContext(ctx context.Context) InsightDateRangePtrOutput {
	return o
}

func (o InsightDateRangePtrOutput) Elem() InsightDateRangeOutput {
	return o.ApplyT(func(v *InsightDateRange) InsightDateRange {
		if v != nil {
			return *v
		}
		var ret InsightDateRange
		return ret
	}).(InsightDateRangeOutput)
}

// A date range unit for the date filter.
func (o InsightDateRangePtrOutput) Unit() InsightDateRangeUnitPtrOutput {
	return o.ApplyT(func(v *InsightDateRange) *InsightDateRangeUnit {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(InsightDateRangeUnitPtrOutput)
}

// A date range value for the date filter.
func (o InsightDateRangePtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InsightDateRange) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

// The IP filter for querying findings.
type InsightIpFilter struct {
	// A finding's CIDR value.
	Cidr string `pulumi:"cidr"`
}

// InsightIpFilterInput is an input type that accepts InsightIpFilterArgs and InsightIpFilterOutput values.
// You can construct a concrete instance of `InsightIpFilterInput` via:
//
//	InsightIpFilterArgs{...}
type InsightIpFilterInput interface {
	pulumi.Input

	ToInsightIpFilterOutput() InsightIpFilterOutput
	ToInsightIpFilterOutputWithContext(context.Context) InsightIpFilterOutput
}

// The IP filter for querying findings.
type InsightIpFilterArgs struct {
	// A finding's CIDR value.
	Cidr pulumi.StringInput `pulumi:"cidr"`
}

func (InsightIpFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightIpFilter)(nil)).Elem()
}

func (i InsightIpFilterArgs) ToInsightIpFilterOutput() InsightIpFilterOutput {
	return i.ToInsightIpFilterOutputWithContext(context.Background())
}

func (i InsightIpFilterArgs) ToInsightIpFilterOutputWithContext(ctx context.Context) InsightIpFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightIpFilterOutput)
}

// InsightIpFilterArrayInput is an input type that accepts InsightIpFilterArray and InsightIpFilterArrayOutput values.
// You can construct a concrete instance of `InsightIpFilterArrayInput` via:
//
//	InsightIpFilterArray{ InsightIpFilterArgs{...} }
type InsightIpFilterArrayInput interface {
	pulumi.Input

	ToInsightIpFilterArrayOutput() InsightIpFilterArrayOutput
	ToInsightIpFilterArrayOutputWithContext(context.Context) InsightIpFilterArrayOutput
}

type InsightIpFilterArray []InsightIpFilterInput

func (InsightIpFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightIpFilter)(nil)).Elem()
}

func (i InsightIpFilterArray) ToInsightIpFilterArrayOutput() InsightIpFilterArrayOutput {
	return i.ToInsightIpFilterArrayOutputWithContext(context.Background())
}

func (i InsightIpFilterArray) ToInsightIpFilterArrayOutputWithContext(ctx context.Context) InsightIpFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightIpFilterArrayOutput)
}

// The IP filter for querying findings.
type InsightIpFilterOutput struct{ *pulumi.OutputState }

func (InsightIpFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightIpFilter)(nil)).Elem()
}

func (o InsightIpFilterOutput) ToInsightIpFilterOutput() InsightIpFilterOutput {
	return o
}

func (o InsightIpFilterOutput) ToInsightIpFilterOutputWithContext(ctx context.Context) InsightIpFilterOutput {
	return o
}

// A finding's CIDR value.
func (o InsightIpFilterOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v InsightIpFilter) string { return v.Cidr }).(pulumi.StringOutput)
}

type InsightIpFilterArrayOutput struct{ *pulumi.OutputState }

func (InsightIpFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightIpFilter)(nil)).Elem()
}

func (o InsightIpFilterArrayOutput) ToInsightIpFilterArrayOutput() InsightIpFilterArrayOutput {
	return o
}

func (o InsightIpFilterArrayOutput) ToInsightIpFilterArrayOutputWithContext(ctx context.Context) InsightIpFilterArrayOutput {
	return o
}

func (o InsightIpFilterArrayOutput) Index(i pulumi.IntInput) InsightIpFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightIpFilter {
		return vs[0].([]InsightIpFilter)[vs[1].(int)]
	}).(InsightIpFilterOutput)
}

// A keyword filter for querying findings.
type InsightKeywordFilter struct {
	// A value for the keyword.
	Value string `pulumi:"value"`
}

// InsightKeywordFilterInput is an input type that accepts InsightKeywordFilterArgs and InsightKeywordFilterOutput values.
// You can construct a concrete instance of `InsightKeywordFilterInput` via:
//
//	InsightKeywordFilterArgs{...}
type InsightKeywordFilterInput interface {
	pulumi.Input

	ToInsightKeywordFilterOutput() InsightKeywordFilterOutput
	ToInsightKeywordFilterOutputWithContext(context.Context) InsightKeywordFilterOutput
}

// A keyword filter for querying findings.
type InsightKeywordFilterArgs struct {
	// A value for the keyword.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InsightKeywordFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightKeywordFilter)(nil)).Elem()
}

func (i InsightKeywordFilterArgs) ToInsightKeywordFilterOutput() InsightKeywordFilterOutput {
	return i.ToInsightKeywordFilterOutputWithContext(context.Background())
}

func (i InsightKeywordFilterArgs) ToInsightKeywordFilterOutputWithContext(ctx context.Context) InsightKeywordFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightKeywordFilterOutput)
}

// InsightKeywordFilterArrayInput is an input type that accepts InsightKeywordFilterArray and InsightKeywordFilterArrayOutput values.
// You can construct a concrete instance of `InsightKeywordFilterArrayInput` via:
//
//	InsightKeywordFilterArray{ InsightKeywordFilterArgs{...} }
type InsightKeywordFilterArrayInput interface {
	pulumi.Input

	ToInsightKeywordFilterArrayOutput() InsightKeywordFilterArrayOutput
	ToInsightKeywordFilterArrayOutputWithContext(context.Context) InsightKeywordFilterArrayOutput
}

type InsightKeywordFilterArray []InsightKeywordFilterInput

func (InsightKeywordFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightKeywordFilter)(nil)).Elem()
}

func (i InsightKeywordFilterArray) ToInsightKeywordFilterArrayOutput() InsightKeywordFilterArrayOutput {
	return i.ToInsightKeywordFilterArrayOutputWithContext(context.Background())
}

func (i InsightKeywordFilterArray) ToInsightKeywordFilterArrayOutputWithContext(ctx context.Context) InsightKeywordFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightKeywordFilterArrayOutput)
}

// A keyword filter for querying findings.
type InsightKeywordFilterOutput struct{ *pulumi.OutputState }

func (InsightKeywordFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightKeywordFilter)(nil)).Elem()
}

func (o InsightKeywordFilterOutput) ToInsightKeywordFilterOutput() InsightKeywordFilterOutput {
	return o
}

func (o InsightKeywordFilterOutput) ToInsightKeywordFilterOutputWithContext(ctx context.Context) InsightKeywordFilterOutput {
	return o
}

// A value for the keyword.
func (o InsightKeywordFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InsightKeywordFilter) string { return v.Value }).(pulumi.StringOutput)
}

type InsightKeywordFilterArrayOutput struct{ *pulumi.OutputState }

func (InsightKeywordFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightKeywordFilter)(nil)).Elem()
}

func (o InsightKeywordFilterArrayOutput) ToInsightKeywordFilterArrayOutput() InsightKeywordFilterArrayOutput {
	return o
}

func (o InsightKeywordFilterArrayOutput) ToInsightKeywordFilterArrayOutputWithContext(ctx context.Context) InsightKeywordFilterArrayOutput {
	return o
}

func (o InsightKeywordFilterArrayOutput) Index(i pulumi.IntInput) InsightKeywordFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightKeywordFilter {
		return vs[0].([]InsightKeywordFilter)[vs[1].(int)]
	}).(InsightKeywordFilterOutput)
}

// A map filter for filtering AWS Security Hub findings.
type InsightMapFilter struct {
	// The condition to apply to the key value when filtering Security Hub findings with a map filter.
	Comparison InsightMapFilterComparison `pulumi:"comparison"`
	// The key of the map filter. For example, for `ResourceTags` , `Key` identifies the name of the tag. For `UserDefinedFields` , `Key` is the name of the field.
	Key string `pulumi:"key"`
	// The value for the key in the map filter. Filter values are case sensitive. For example, one of the values for a tag called `Department` might be `Security` . If you provide `security` as the filter value, then there's no match.
	Value string `pulumi:"value"`
}

// InsightMapFilterInput is an input type that accepts InsightMapFilterArgs and InsightMapFilterOutput values.
// You can construct a concrete instance of `InsightMapFilterInput` via:
//
//	InsightMapFilterArgs{...}
type InsightMapFilterInput interface {
	pulumi.Input

	ToInsightMapFilterOutput() InsightMapFilterOutput
	ToInsightMapFilterOutputWithContext(context.Context) InsightMapFilterOutput
}

// A map filter for filtering AWS Security Hub findings.
type InsightMapFilterArgs struct {
	// The condition to apply to the key value when filtering Security Hub findings with a map filter.
	Comparison InsightMapFilterComparisonInput `pulumi:"comparison"`
	// The key of the map filter. For example, for `ResourceTags` , `Key` identifies the name of the tag. For `UserDefinedFields` , `Key` is the name of the field.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the key in the map filter. Filter values are case sensitive. For example, one of the values for a tag called `Department` might be `Security` . If you provide `security` as the filter value, then there's no match.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InsightMapFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightMapFilter)(nil)).Elem()
}

func (i InsightMapFilterArgs) ToInsightMapFilterOutput() InsightMapFilterOutput {
	return i.ToInsightMapFilterOutputWithContext(context.Background())
}

func (i InsightMapFilterArgs) ToInsightMapFilterOutputWithContext(ctx context.Context) InsightMapFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightMapFilterOutput)
}

// InsightMapFilterArrayInput is an input type that accepts InsightMapFilterArray and InsightMapFilterArrayOutput values.
// You can construct a concrete instance of `InsightMapFilterArrayInput` via:
//
//	InsightMapFilterArray{ InsightMapFilterArgs{...} }
type InsightMapFilterArrayInput interface {
	pulumi.Input

	ToInsightMapFilterArrayOutput() InsightMapFilterArrayOutput
	ToInsightMapFilterArrayOutputWithContext(context.Context) InsightMapFilterArrayOutput
}

type InsightMapFilterArray []InsightMapFilterInput

func (InsightMapFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightMapFilter)(nil)).Elem()
}

func (i InsightMapFilterArray) ToInsightMapFilterArrayOutput() InsightMapFilterArrayOutput {
	return i.ToInsightMapFilterArrayOutputWithContext(context.Background())
}

func (i InsightMapFilterArray) ToInsightMapFilterArrayOutputWithContext(ctx context.Context) InsightMapFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightMapFilterArrayOutput)
}

// A map filter for filtering AWS Security Hub findings.
type InsightMapFilterOutput struct{ *pulumi.OutputState }

func (InsightMapFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightMapFilter)(nil)).Elem()
}

func (o InsightMapFilterOutput) ToInsightMapFilterOutput() InsightMapFilterOutput {
	return o
}

func (o InsightMapFilterOutput) ToInsightMapFilterOutputWithContext(ctx context.Context) InsightMapFilterOutput {
	return o
}

// The condition to apply to the key value when filtering Security Hub findings with a map filter.
func (o InsightMapFilterOutput) Comparison() InsightMapFilterComparisonOutput {
	return o.ApplyT(func(v InsightMapFilter) InsightMapFilterComparison { return v.Comparison }).(InsightMapFilterComparisonOutput)
}

// The key of the map filter. For example, for `ResourceTags` , `Key` identifies the name of the tag. For `UserDefinedFields` , `Key` is the name of the field.
func (o InsightMapFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InsightMapFilter) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the key in the map filter. Filter values are case sensitive. For example, one of the values for a tag called `Department` might be `Security` . If you provide `security` as the filter value, then there's no match.
func (o InsightMapFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InsightMapFilter) string { return v.Value }).(pulumi.StringOutput)
}

type InsightMapFilterArrayOutput struct{ *pulumi.OutputState }

func (InsightMapFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightMapFilter)(nil)).Elem()
}

func (o InsightMapFilterArrayOutput) ToInsightMapFilterArrayOutput() InsightMapFilterArrayOutput {
	return o
}

func (o InsightMapFilterArrayOutput) ToInsightMapFilterArrayOutputWithContext(ctx context.Context) InsightMapFilterArrayOutput {
	return o
}

func (o InsightMapFilterArrayOutput) Index(i pulumi.IntInput) InsightMapFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightMapFilter {
		return vs[0].([]InsightMapFilter)[vs[1].(int)]
	}).(InsightMapFilterOutput)
}

// A number filter for querying findings.
type InsightNumberFilter struct {
	// The equal-to condition to be applied to a single field when querying for findings.
	Eq *float64 `pulumi:"eq"`
	// The greater-than-equal condition to be applied to a single field when querying for findings.
	Gte *float64 `pulumi:"gte"`
	// The less-than-equal condition to be applied to a single field when querying for findings.
	Lte *float64 `pulumi:"lte"`
}

// InsightNumberFilterInput is an input type that accepts InsightNumberFilterArgs and InsightNumberFilterOutput values.
// You can construct a concrete instance of `InsightNumberFilterInput` via:
//
//	InsightNumberFilterArgs{...}
type InsightNumberFilterInput interface {
	pulumi.Input

	ToInsightNumberFilterOutput() InsightNumberFilterOutput
	ToInsightNumberFilterOutputWithContext(context.Context) InsightNumberFilterOutput
}

// A number filter for querying findings.
type InsightNumberFilterArgs struct {
	// The equal-to condition to be applied to a single field when querying for findings.
	Eq pulumi.Float64PtrInput `pulumi:"eq"`
	// The greater-than-equal condition to be applied to a single field when querying for findings.
	Gte pulumi.Float64PtrInput `pulumi:"gte"`
	// The less-than-equal condition to be applied to a single field when querying for findings.
	Lte pulumi.Float64PtrInput `pulumi:"lte"`
}

func (InsightNumberFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightNumberFilter)(nil)).Elem()
}

func (i InsightNumberFilterArgs) ToInsightNumberFilterOutput() InsightNumberFilterOutput {
	return i.ToInsightNumberFilterOutputWithContext(context.Background())
}

func (i InsightNumberFilterArgs) ToInsightNumberFilterOutputWithContext(ctx context.Context) InsightNumberFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightNumberFilterOutput)
}

// InsightNumberFilterArrayInput is an input type that accepts InsightNumberFilterArray and InsightNumberFilterArrayOutput values.
// You can construct a concrete instance of `InsightNumberFilterArrayInput` via:
//
//	InsightNumberFilterArray{ InsightNumberFilterArgs{...} }
type InsightNumberFilterArrayInput interface {
	pulumi.Input

	ToInsightNumberFilterArrayOutput() InsightNumberFilterArrayOutput
	ToInsightNumberFilterArrayOutputWithContext(context.Context) InsightNumberFilterArrayOutput
}

type InsightNumberFilterArray []InsightNumberFilterInput

func (InsightNumberFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightNumberFilter)(nil)).Elem()
}

func (i InsightNumberFilterArray) ToInsightNumberFilterArrayOutput() InsightNumberFilterArrayOutput {
	return i.ToInsightNumberFilterArrayOutputWithContext(context.Background())
}

func (i InsightNumberFilterArray) ToInsightNumberFilterArrayOutputWithContext(ctx context.Context) InsightNumberFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightNumberFilterArrayOutput)
}

// A number filter for querying findings.
type InsightNumberFilterOutput struct{ *pulumi.OutputState }

func (InsightNumberFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightNumberFilter)(nil)).Elem()
}

func (o InsightNumberFilterOutput) ToInsightNumberFilterOutput() InsightNumberFilterOutput {
	return o
}

func (o InsightNumberFilterOutput) ToInsightNumberFilterOutputWithContext(ctx context.Context) InsightNumberFilterOutput {
	return o
}

// The equal-to condition to be applied to a single field when querying for findings.
func (o InsightNumberFilterOutput) Eq() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InsightNumberFilter) *float64 { return v.Eq }).(pulumi.Float64PtrOutput)
}

// The greater-than-equal condition to be applied to a single field when querying for findings.
func (o InsightNumberFilterOutput) Gte() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InsightNumberFilter) *float64 { return v.Gte }).(pulumi.Float64PtrOutput)
}

// The less-than-equal condition to be applied to a single field when querying for findings.
func (o InsightNumberFilterOutput) Lte() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InsightNumberFilter) *float64 { return v.Lte }).(pulumi.Float64PtrOutput)
}

type InsightNumberFilterArrayOutput struct{ *pulumi.OutputState }

func (InsightNumberFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightNumberFilter)(nil)).Elem()
}

func (o InsightNumberFilterArrayOutput) ToInsightNumberFilterArrayOutput() InsightNumberFilterArrayOutput {
	return o
}

func (o InsightNumberFilterArrayOutput) ToInsightNumberFilterArrayOutputWithContext(ctx context.Context) InsightNumberFilterArrayOutput {
	return o
}

func (o InsightNumberFilterArrayOutput) Index(i pulumi.IntInput) InsightNumberFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightNumberFilter {
		return vs[0].([]InsightNumberFilter)[vs[1].(int)]
	}).(InsightNumberFilterOutput)
}

// A string filter for filtering AWS Security Hub findings.
type InsightStringFilter struct {
	// The condition to apply to a string value when filtering Security Hub findings.
	//
	// To search for values that have the filter value, use one of the following comparison operators:
	//
	// - To search for values that include the filter value, use `CONTAINS` . For example, the filter `Title CONTAINS CloudFront` matches findings that have a `Title` that includes the string CloudFront.
	// - To search for values that exactly match the filter value, use `EQUALS` . For example, the filter `AwsAccountId EQUALS 123456789012` only matches findings that have an account ID of `123456789012` .
	// - To search for values that start with the filter value, use `PREFIX` . For example, the filter `ResourceRegion PREFIX us` matches findings that have a `ResourceRegion` that starts with `us` . A `ResourceRegion` that starts with a different value, such as `af` , `ap` , or `ca` , doesn't match.
	//
	// `CONTAINS` , `EQUALS` , and `PREFIX` filters on the same field are joined by `OR` . A finding matches if it matches any one of those filters. For example, the filters `Title CONTAINS CloudFront OR Title CONTAINS CloudWatch` match a finding that includes either `CloudFront` , `CloudWatch` , or both strings in the title.
	//
	// To search for values that don’t have the filter value, use one of the following comparison operators:
	//
	// - To search for values that exclude the filter value, use `NOT_CONTAINS` . For example, the filter `Title NOT_CONTAINS CloudFront` matches findings that have a `Title` that excludes the string CloudFront.
	// - To search for values other than the filter value, use `NOT_EQUALS` . For example, the filter `AwsAccountId NOT_EQUALS 123456789012` only matches findings that have an account ID other than `123456789012` .
	// - To search for values that don't start with the filter value, use `PREFIX_NOT_EQUALS` . For example, the filter `ResourceRegion PREFIX_NOT_EQUALS us` matches findings with a `ResourceRegion` that starts with a value other than `us` .
	//
	// `NOT_CONTAINS` , `NOT_EQUALS` , and `PREFIX_NOT_EQUALS` filters on the same field are joined by `AND` . A finding matches only if it matches all of those filters. For example, the filters `Title NOT_CONTAINS CloudFront AND Title NOT_CONTAINS CloudWatch` match a finding that excludes both `CloudFront` and `CloudWatch` in the title.
	//
	// You can’t have both a `CONTAINS` filter and a `NOT_CONTAINS` filter on the same field. Similarly, you can't provide both an `EQUALS` filter and a `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filter on the same field. Combining filters in this way returns an error. `CONTAINS` filters can only be used with other `CONTAINS` filters. `NOT_CONTAINS` filters can only be used with other `NOT_CONTAINS` filters.
	//
	// You can combine `PREFIX` filters with `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filters for the same field. Security Hub first processes the `PREFIX` filters, and then the `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filters.
	//
	// For example, for the following filters, Security Hub first identifies findings that have resource types that start with either `AwsIam` or `AwsEc2` . It then excludes findings that have a resource type of `AwsIamPolicy` and findings that have a resource type of `AwsEc2NetworkInterface` .
	//
	// - `ResourceType PREFIX AwsIam`
	// - `ResourceType PREFIX AwsEc2`
	// - `ResourceType NOT_EQUALS AwsIamPolicy`
	// - `ResourceType NOT_EQUALS AwsEc2NetworkInterface`
	//
	// `CONTAINS` and `NOT_CONTAINS` operators can be used only with automation rules. For more information, see [Automation rules](https://docs.aws.amazon.com/securityhub/latest/userguide/automation-rules.html) in the *AWS Security Hub User Guide* .
	Comparison InsightStringFilterComparison `pulumi:"comparison"`
	// The string filter value. Filter values are case sensitive. For example, the product name for control-based findings is `Security Hub` . If you provide `security hub` as the filter value, there's no match.
	Value string `pulumi:"value"`
}

// InsightStringFilterInput is an input type that accepts InsightStringFilterArgs and InsightStringFilterOutput values.
// You can construct a concrete instance of `InsightStringFilterInput` via:
//
//	InsightStringFilterArgs{...}
type InsightStringFilterInput interface {
	pulumi.Input

	ToInsightStringFilterOutput() InsightStringFilterOutput
	ToInsightStringFilterOutputWithContext(context.Context) InsightStringFilterOutput
}

// A string filter for filtering AWS Security Hub findings.
type InsightStringFilterArgs struct {
	// The condition to apply to a string value when filtering Security Hub findings.
	//
	// To search for values that have the filter value, use one of the following comparison operators:
	//
	// - To search for values that include the filter value, use `CONTAINS` . For example, the filter `Title CONTAINS CloudFront` matches findings that have a `Title` that includes the string CloudFront.
	// - To search for values that exactly match the filter value, use `EQUALS` . For example, the filter `AwsAccountId EQUALS 123456789012` only matches findings that have an account ID of `123456789012` .
	// - To search for values that start with the filter value, use `PREFIX` . For example, the filter `ResourceRegion PREFIX us` matches findings that have a `ResourceRegion` that starts with `us` . A `ResourceRegion` that starts with a different value, such as `af` , `ap` , or `ca` , doesn't match.
	//
	// `CONTAINS` , `EQUALS` , and `PREFIX` filters on the same field are joined by `OR` . A finding matches if it matches any one of those filters. For example, the filters `Title CONTAINS CloudFront OR Title CONTAINS CloudWatch` match a finding that includes either `CloudFront` , `CloudWatch` , or both strings in the title.
	//
	// To search for values that don’t have the filter value, use one of the following comparison operators:
	//
	// - To search for values that exclude the filter value, use `NOT_CONTAINS` . For example, the filter `Title NOT_CONTAINS CloudFront` matches findings that have a `Title` that excludes the string CloudFront.
	// - To search for values other than the filter value, use `NOT_EQUALS` . For example, the filter `AwsAccountId NOT_EQUALS 123456789012` only matches findings that have an account ID other than `123456789012` .
	// - To search for values that don't start with the filter value, use `PREFIX_NOT_EQUALS` . For example, the filter `ResourceRegion PREFIX_NOT_EQUALS us` matches findings with a `ResourceRegion` that starts with a value other than `us` .
	//
	// `NOT_CONTAINS` , `NOT_EQUALS` , and `PREFIX_NOT_EQUALS` filters on the same field are joined by `AND` . A finding matches only if it matches all of those filters. For example, the filters `Title NOT_CONTAINS CloudFront AND Title NOT_CONTAINS CloudWatch` match a finding that excludes both `CloudFront` and `CloudWatch` in the title.
	//
	// You can’t have both a `CONTAINS` filter and a `NOT_CONTAINS` filter on the same field. Similarly, you can't provide both an `EQUALS` filter and a `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filter on the same field. Combining filters in this way returns an error. `CONTAINS` filters can only be used with other `CONTAINS` filters. `NOT_CONTAINS` filters can only be used with other `NOT_CONTAINS` filters.
	//
	// You can combine `PREFIX` filters with `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filters for the same field. Security Hub first processes the `PREFIX` filters, and then the `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filters.
	//
	// For example, for the following filters, Security Hub first identifies findings that have resource types that start with either `AwsIam` or `AwsEc2` . It then excludes findings that have a resource type of `AwsIamPolicy` and findings that have a resource type of `AwsEc2NetworkInterface` .
	//
	// - `ResourceType PREFIX AwsIam`
	// - `ResourceType PREFIX AwsEc2`
	// - `ResourceType NOT_EQUALS AwsIamPolicy`
	// - `ResourceType NOT_EQUALS AwsEc2NetworkInterface`
	//
	// `CONTAINS` and `NOT_CONTAINS` operators can be used only with automation rules. For more information, see [Automation rules](https://docs.aws.amazon.com/securityhub/latest/userguide/automation-rules.html) in the *AWS Security Hub User Guide* .
	Comparison InsightStringFilterComparisonInput `pulumi:"comparison"`
	// The string filter value. Filter values are case sensitive. For example, the product name for control-based findings is `Security Hub` . If you provide `security hub` as the filter value, there's no match.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InsightStringFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightStringFilter)(nil)).Elem()
}

func (i InsightStringFilterArgs) ToInsightStringFilterOutput() InsightStringFilterOutput {
	return i.ToInsightStringFilterOutputWithContext(context.Background())
}

func (i InsightStringFilterArgs) ToInsightStringFilterOutputWithContext(ctx context.Context) InsightStringFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightStringFilterOutput)
}

// InsightStringFilterArrayInput is an input type that accepts InsightStringFilterArray and InsightStringFilterArrayOutput values.
// You can construct a concrete instance of `InsightStringFilterArrayInput` via:
//
//	InsightStringFilterArray{ InsightStringFilterArgs{...} }
type InsightStringFilterArrayInput interface {
	pulumi.Input

	ToInsightStringFilterArrayOutput() InsightStringFilterArrayOutput
	ToInsightStringFilterArrayOutputWithContext(context.Context) InsightStringFilterArrayOutput
}

type InsightStringFilterArray []InsightStringFilterInput

func (InsightStringFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightStringFilter)(nil)).Elem()
}

func (i InsightStringFilterArray) ToInsightStringFilterArrayOutput() InsightStringFilterArrayOutput {
	return i.ToInsightStringFilterArrayOutputWithContext(context.Background())
}

func (i InsightStringFilterArray) ToInsightStringFilterArrayOutputWithContext(ctx context.Context) InsightStringFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightStringFilterArrayOutput)
}

// A string filter for filtering AWS Security Hub findings.
type InsightStringFilterOutput struct{ *pulumi.OutputState }

func (InsightStringFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightStringFilter)(nil)).Elem()
}

func (o InsightStringFilterOutput) ToInsightStringFilterOutput() InsightStringFilterOutput {
	return o
}

func (o InsightStringFilterOutput) ToInsightStringFilterOutputWithContext(ctx context.Context) InsightStringFilterOutput {
	return o
}

// The condition to apply to a string value when filtering Security Hub findings.
//
// To search for values that have the filter value, use one of the following comparison operators:
//
// - To search for values that include the filter value, use `CONTAINS` . For example, the filter `Title CONTAINS CloudFront` matches findings that have a `Title` that includes the string CloudFront.
// - To search for values that exactly match the filter value, use `EQUALS` . For example, the filter `AwsAccountId EQUALS 123456789012` only matches findings that have an account ID of `123456789012` .
// - To search for values that start with the filter value, use `PREFIX` . For example, the filter `ResourceRegion PREFIX us` matches findings that have a `ResourceRegion` that starts with `us` . A `ResourceRegion` that starts with a different value, such as `af` , `ap` , or `ca` , doesn't match.
//
// `CONTAINS` , `EQUALS` , and `PREFIX` filters on the same field are joined by `OR` . A finding matches if it matches any one of those filters. For example, the filters `Title CONTAINS CloudFront OR Title CONTAINS CloudWatch` match a finding that includes either `CloudFront` , `CloudWatch` , or both strings in the title.
//
// To search for values that don’t have the filter value, use one of the following comparison operators:
//
// - To search for values that exclude the filter value, use `NOT_CONTAINS` . For example, the filter `Title NOT_CONTAINS CloudFront` matches findings that have a `Title` that excludes the string CloudFront.
// - To search for values other than the filter value, use `NOT_EQUALS` . For example, the filter `AwsAccountId NOT_EQUALS 123456789012` only matches findings that have an account ID other than `123456789012` .
// - To search for values that don't start with the filter value, use `PREFIX_NOT_EQUALS` . For example, the filter `ResourceRegion PREFIX_NOT_EQUALS us` matches findings with a `ResourceRegion` that starts with a value other than `us` .
//
// `NOT_CONTAINS` , `NOT_EQUALS` , and `PREFIX_NOT_EQUALS` filters on the same field are joined by `AND` . A finding matches only if it matches all of those filters. For example, the filters `Title NOT_CONTAINS CloudFront AND Title NOT_CONTAINS CloudWatch` match a finding that excludes both `CloudFront` and `CloudWatch` in the title.
//
// You can’t have both a `CONTAINS` filter and a `NOT_CONTAINS` filter on the same field. Similarly, you can't provide both an `EQUALS` filter and a `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filter on the same field. Combining filters in this way returns an error. `CONTAINS` filters can only be used with other `CONTAINS` filters. `NOT_CONTAINS` filters can only be used with other `NOT_CONTAINS` filters.
//
// You can combine `PREFIX` filters with `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filters for the same field. Security Hub first processes the `PREFIX` filters, and then the `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filters.
//
// For example, for the following filters, Security Hub first identifies findings that have resource types that start with either `AwsIam` or `AwsEc2` . It then excludes findings that have a resource type of `AwsIamPolicy` and findings that have a resource type of `AwsEc2NetworkInterface` .
//
// - `ResourceType PREFIX AwsIam`
// - `ResourceType PREFIX AwsEc2`
// - `ResourceType NOT_EQUALS AwsIamPolicy`
// - `ResourceType NOT_EQUALS AwsEc2NetworkInterface`
//
// `CONTAINS` and `NOT_CONTAINS` operators can be used only with automation rules. For more information, see [Automation rules](https://docs.aws.amazon.com/securityhub/latest/userguide/automation-rules.html) in the *AWS Security Hub User Guide* .
func (o InsightStringFilterOutput) Comparison() InsightStringFilterComparisonOutput {
	return o.ApplyT(func(v InsightStringFilter) InsightStringFilterComparison { return v.Comparison }).(InsightStringFilterComparisonOutput)
}

// The string filter value. Filter values are case sensitive. For example, the product name for control-based findings is `Security Hub` . If you provide `security hub` as the filter value, there's no match.
func (o InsightStringFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InsightStringFilter) string { return v.Value }).(pulumi.StringOutput)
}

type InsightStringFilterArrayOutput struct{ *pulumi.OutputState }

func (InsightStringFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightStringFilter)(nil)).Elem()
}

func (o InsightStringFilterArrayOutput) ToInsightStringFilterArrayOutput() InsightStringFilterArrayOutput {
	return o
}

func (o InsightStringFilterArrayOutput) ToInsightStringFilterArrayOutputWithContext(ctx context.Context) InsightStringFilterArrayOutput {
	return o
}

func (o InsightStringFilterArrayOutput) Index(i pulumi.IntInput) InsightStringFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightStringFilter {
		return vs[0].([]InsightStringFilter)[vs[1].(int)]
	}).(InsightStringFilterOutput)
}

// Provides details about an individual security control. For a list of ASH controls, see [controls reference](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-controls-reference.html) in the *User Guide*.
type StandardsControl struct {
	// A user-defined reason for changing a control's enablement status in a specified standard. If you are disabling a control, then this property is required.
	Reason *string `pulumi:"reason"`
	// The Amazon Resource Name (ARN) of the control.
	StandardsControlArn string `pulumi:"standardsControlArn"`
}

// StandardsControlInput is an input type that accepts StandardsControlArgs and StandardsControlOutput values.
// You can construct a concrete instance of `StandardsControlInput` via:
//
//	StandardsControlArgs{...}
type StandardsControlInput interface {
	pulumi.Input

	ToStandardsControlOutput() StandardsControlOutput
	ToStandardsControlOutputWithContext(context.Context) StandardsControlOutput
}

// Provides details about an individual security control. For a list of ASH controls, see [controls reference](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-controls-reference.html) in the *User Guide*.
type StandardsControlArgs struct {
	// A user-defined reason for changing a control's enablement status in a specified standard. If you are disabling a control, then this property is required.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// The Amazon Resource Name (ARN) of the control.
	StandardsControlArn pulumi.StringInput `pulumi:"standardsControlArn"`
}

func (StandardsControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardsControl)(nil)).Elem()
}

func (i StandardsControlArgs) ToStandardsControlOutput() StandardsControlOutput {
	return i.ToStandardsControlOutputWithContext(context.Background())
}

func (i StandardsControlArgs) ToStandardsControlOutputWithContext(ctx context.Context) StandardsControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardsControlOutput)
}

// StandardsControlArrayInput is an input type that accepts StandardsControlArray and StandardsControlArrayOutput values.
// You can construct a concrete instance of `StandardsControlArrayInput` via:
//
//	StandardsControlArray{ StandardsControlArgs{...} }
type StandardsControlArrayInput interface {
	pulumi.Input

	ToStandardsControlArrayOutput() StandardsControlArrayOutput
	ToStandardsControlArrayOutputWithContext(context.Context) StandardsControlArrayOutput
}

type StandardsControlArray []StandardsControlInput

func (StandardsControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandardsControl)(nil)).Elem()
}

func (i StandardsControlArray) ToStandardsControlArrayOutput() StandardsControlArrayOutput {
	return i.ToStandardsControlArrayOutputWithContext(context.Background())
}

func (i StandardsControlArray) ToStandardsControlArrayOutputWithContext(ctx context.Context) StandardsControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardsControlArrayOutput)
}

// Provides details about an individual security control. For a list of ASH controls, see [controls reference](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-controls-reference.html) in the *User Guide*.
type StandardsControlOutput struct{ *pulumi.OutputState }

func (StandardsControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardsControl)(nil)).Elem()
}

func (o StandardsControlOutput) ToStandardsControlOutput() StandardsControlOutput {
	return o
}

func (o StandardsControlOutput) ToStandardsControlOutputWithContext(ctx context.Context) StandardsControlOutput {
	return o
}

// A user-defined reason for changing a control's enablement status in a specified standard. If you are disabling a control, then this property is required.
func (o StandardsControlOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardsControl) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the control.
func (o StandardsControlOutput) StandardsControlArn() pulumi.StringOutput {
	return o.ApplyT(func(v StandardsControl) string { return v.StandardsControlArn }).(pulumi.StringOutput)
}

type StandardsControlArrayOutput struct{ *pulumi.OutputState }

func (StandardsControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandardsControl)(nil)).Elem()
}

func (o StandardsControlArrayOutput) ToStandardsControlArrayOutput() StandardsControlArrayOutput {
	return o
}

func (o StandardsControlArrayOutput) ToStandardsControlArrayOutputWithContext(ctx context.Context) StandardsControlArrayOutput {
	return o
}

func (o StandardsControlArrayOutput) Index(i pulumi.IntInput) StandardsControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StandardsControl {
		return vs[0].([]StandardsControl)[vs[1].(int)]
	}).(StandardsControlOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleDateFilterInput)(nil)).Elem(), AutomationRuleDateFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleDateFilterArrayInput)(nil)).Elem(), AutomationRuleDateFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleDateRangeInput)(nil)).Elem(), AutomationRuleDateRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleDateRangePtrInput)(nil)).Elem(), AutomationRuleDateRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleMapFilterInput)(nil)).Elem(), AutomationRuleMapFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleMapFilterArrayInput)(nil)).Elem(), AutomationRuleMapFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleNoteUpdateInput)(nil)).Elem(), AutomationRuleNoteUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleNoteUpdatePtrInput)(nil)).Elem(), AutomationRuleNoteUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleNumberFilterInput)(nil)).Elem(), AutomationRuleNumberFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleNumberFilterArrayInput)(nil)).Elem(), AutomationRuleNumberFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleRelatedFindingInput)(nil)).Elem(), AutomationRuleRelatedFindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleRelatedFindingArrayInput)(nil)).Elem(), AutomationRuleRelatedFindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleSeverityUpdateInput)(nil)).Elem(), AutomationRuleSeverityUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleSeverityUpdatePtrInput)(nil)).Elem(), AutomationRuleSeverityUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleStringFilterInput)(nil)).Elem(), AutomationRuleStringFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleStringFilterArrayInput)(nil)).Elem(), AutomationRuleStringFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleWorkflowUpdateInput)(nil)).Elem(), AutomationRuleWorkflowUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleWorkflowUpdatePtrInput)(nil)).Elem(), AutomationRuleWorkflowUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRulesActionInput)(nil)).Elem(), AutomationRulesActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRulesActionArrayInput)(nil)).Elem(), AutomationRulesActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRulesFindingFieldsUpdateInput)(nil)).Elem(), AutomationRulesFindingFieldsUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRulesFindingFiltersInput)(nil)).Elem(), AutomationRulesFindingFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRulesFindingFiltersPtrInput)(nil)).Elem(), AutomationRulesFindingFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightAwsSecurityFindingFiltersInput)(nil)).Elem(), InsightAwsSecurityFindingFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightBooleanFilterInput)(nil)).Elem(), InsightBooleanFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightBooleanFilterArrayInput)(nil)).Elem(), InsightBooleanFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightDateFilterInput)(nil)).Elem(), InsightDateFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightDateFilterArrayInput)(nil)).Elem(), InsightDateFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightDateRangeInput)(nil)).Elem(), InsightDateRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightDateRangePtrInput)(nil)).Elem(), InsightDateRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightIpFilterInput)(nil)).Elem(), InsightIpFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightIpFilterArrayInput)(nil)).Elem(), InsightIpFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightKeywordFilterInput)(nil)).Elem(), InsightKeywordFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightKeywordFilterArrayInput)(nil)).Elem(), InsightKeywordFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightMapFilterInput)(nil)).Elem(), InsightMapFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightMapFilterArrayInput)(nil)).Elem(), InsightMapFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightNumberFilterInput)(nil)).Elem(), InsightNumberFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightNumberFilterArrayInput)(nil)).Elem(), InsightNumberFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightStringFilterInput)(nil)).Elem(), InsightStringFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InsightStringFilterArrayInput)(nil)).Elem(), InsightStringFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardsControlInput)(nil)).Elem(), StandardsControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardsControlArrayInput)(nil)).Elem(), StandardsControlArray{})
	pulumi.RegisterOutputType(AutomationRuleDateFilterOutput{})
	pulumi.RegisterOutputType(AutomationRuleDateFilterArrayOutput{})
	pulumi.RegisterOutputType(AutomationRuleDateRangeOutput{})
	pulumi.RegisterOutputType(AutomationRuleDateRangePtrOutput{})
	pulumi.RegisterOutputType(AutomationRuleMapFilterOutput{})
	pulumi.RegisterOutputType(AutomationRuleMapFilterArrayOutput{})
	pulumi.RegisterOutputType(AutomationRuleNoteUpdateOutput{})
	pulumi.RegisterOutputType(AutomationRuleNoteUpdatePtrOutput{})
	pulumi.RegisterOutputType(AutomationRuleNumberFilterOutput{})
	pulumi.RegisterOutputType(AutomationRuleNumberFilterArrayOutput{})
	pulumi.RegisterOutputType(AutomationRuleRelatedFindingOutput{})
	pulumi.RegisterOutputType(AutomationRuleRelatedFindingArrayOutput{})
	pulumi.RegisterOutputType(AutomationRuleSeverityUpdateOutput{})
	pulumi.RegisterOutputType(AutomationRuleSeverityUpdatePtrOutput{})
	pulumi.RegisterOutputType(AutomationRuleStringFilterOutput{})
	pulumi.RegisterOutputType(AutomationRuleStringFilterArrayOutput{})
	pulumi.RegisterOutputType(AutomationRuleWorkflowUpdateOutput{})
	pulumi.RegisterOutputType(AutomationRuleWorkflowUpdatePtrOutput{})
	pulumi.RegisterOutputType(AutomationRulesActionOutput{})
	pulumi.RegisterOutputType(AutomationRulesActionArrayOutput{})
	pulumi.RegisterOutputType(AutomationRulesFindingFieldsUpdateOutput{})
	pulumi.RegisterOutputType(AutomationRulesFindingFiltersOutput{})
	pulumi.RegisterOutputType(AutomationRulesFindingFiltersPtrOutput{})
	pulumi.RegisterOutputType(InsightAwsSecurityFindingFiltersOutput{})
	pulumi.RegisterOutputType(InsightAwsSecurityFindingFiltersPtrOutput{})
	pulumi.RegisterOutputType(InsightBooleanFilterOutput{})
	pulumi.RegisterOutputType(InsightBooleanFilterArrayOutput{})
	pulumi.RegisterOutputType(InsightDateFilterOutput{})
	pulumi.RegisterOutputType(InsightDateFilterArrayOutput{})
	pulumi.RegisterOutputType(InsightDateRangeOutput{})
	pulumi.RegisterOutputType(InsightDateRangePtrOutput{})
	pulumi.RegisterOutputType(InsightIpFilterOutput{})
	pulumi.RegisterOutputType(InsightIpFilterArrayOutput{})
	pulumi.RegisterOutputType(InsightKeywordFilterOutput{})
	pulumi.RegisterOutputType(InsightKeywordFilterArrayOutput{})
	pulumi.RegisterOutputType(InsightMapFilterOutput{})
	pulumi.RegisterOutputType(InsightMapFilterArrayOutput{})
	pulumi.RegisterOutputType(InsightNumberFilterOutput{})
	pulumi.RegisterOutputType(InsightNumberFilterArrayOutput{})
	pulumi.RegisterOutputType(InsightStringFilterOutput{})
	pulumi.RegisterOutputType(InsightStringFilterArrayOutput{})
	pulumi.RegisterOutputType(StandardsControlOutput{})
	pulumi.RegisterOutputType(StandardsControlArrayOutput{})
}
