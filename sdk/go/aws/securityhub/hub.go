// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securityhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::SecurityHub::Hub resource represents the implementation of the AWS Security Hub service in your account. One hub resource is created for each Region in which you enable Security Hub.
type Hub struct {
	pulumi.CustomResourceState

	// An ARN is automatically created for the customer.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Whether to automatically enable new controls when they are added to standards that are enabled
	AutoEnableControls pulumi.BoolPtrOutput `pulumi:"autoEnableControls"`
	// This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to SECURITY_CONTROL, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.  If the value for this field is set to STANDARD_CONTROL, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.
	ControlFindingGenerator pulumi.StringPtrOutput `pulumi:"controlFindingGenerator"`
	// Whether to enable the security standards that Security Hub has designated as automatically enabled.
	EnableDefaultStandards pulumi.BoolPtrOutput `pulumi:"enableDefaultStandards"`
	// The date and time when Security Hub was enabled in the account.
	SubscribedAt pulumi.StringOutput `pulumi:"subscribedAt"`
	Tags         HubTagsPtrOutput    `pulumi:"tags"`
}

// NewHub registers a new resource with the given unique name, arguments, and options.
func NewHub(ctx *pulumi.Context,
	name string, args *HubArgs, opts ...pulumi.ResourceOption) (*Hub, error) {
	if args == nil {
		args = &HubArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Hub
	err := ctx.RegisterResource("aws-native:securityhub:Hub", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHub gets an existing Hub resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHub(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HubState, opts ...pulumi.ResourceOption) (*Hub, error) {
	var resource Hub
	err := ctx.ReadResource("aws-native:securityhub:Hub", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Hub resources.
type hubState struct {
}

type HubState struct {
}

func (HubState) ElementType() reflect.Type {
	return reflect.TypeOf((*hubState)(nil)).Elem()
}

type hubArgs struct {
	// Whether to automatically enable new controls when they are added to standards that are enabled
	AutoEnableControls *bool `pulumi:"autoEnableControls"`
	// This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to SECURITY_CONTROL, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.  If the value for this field is set to STANDARD_CONTROL, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.
	ControlFindingGenerator *string `pulumi:"controlFindingGenerator"`
	// Whether to enable the security standards that Security Hub has designated as automatically enabled.
	EnableDefaultStandards *bool    `pulumi:"enableDefaultStandards"`
	Tags                   *HubTags `pulumi:"tags"`
}

// The set of arguments for constructing a Hub resource.
type HubArgs struct {
	// Whether to automatically enable new controls when they are added to standards that are enabled
	AutoEnableControls pulumi.BoolPtrInput
	// This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to SECURITY_CONTROL, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.  If the value for this field is set to STANDARD_CONTROL, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.
	ControlFindingGenerator pulumi.StringPtrInput
	// Whether to enable the security standards that Security Hub has designated as automatically enabled.
	EnableDefaultStandards pulumi.BoolPtrInput
	Tags                   HubTagsPtrInput
}

func (HubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hubArgs)(nil)).Elem()
}

type HubInput interface {
	pulumi.Input

	ToHubOutput() HubOutput
	ToHubOutputWithContext(ctx context.Context) HubOutput
}

func (*Hub) ElementType() reflect.Type {
	return reflect.TypeOf((**Hub)(nil)).Elem()
}

func (i *Hub) ToHubOutput() HubOutput {
	return i.ToHubOutputWithContext(context.Background())
}

func (i *Hub) ToHubOutputWithContext(ctx context.Context) HubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubOutput)
}

type HubOutput struct{ *pulumi.OutputState }

func (HubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Hub)(nil)).Elem()
}

func (o HubOutput) ToHubOutput() HubOutput {
	return o
}

func (o HubOutput) ToHubOutputWithContext(ctx context.Context) HubOutput {
	return o
}

// An ARN is automatically created for the customer.
func (o HubOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Whether to automatically enable new controls when they are added to standards that are enabled
func (o HubOutput) AutoEnableControls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Hub) pulumi.BoolPtrOutput { return v.AutoEnableControls }).(pulumi.BoolPtrOutput)
}

// This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to SECURITY_CONTROL, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.  If the value for this field is set to STANDARD_CONTROL, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.
func (o HubOutput) ControlFindingGenerator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringPtrOutput { return v.ControlFindingGenerator }).(pulumi.StringPtrOutput)
}

// Whether to enable the security standards that Security Hub has designated as automatically enabled.
func (o HubOutput) EnableDefaultStandards() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Hub) pulumi.BoolPtrOutput { return v.EnableDefaultStandards }).(pulumi.BoolPtrOutput)
}

// The date and time when Security Hub was enabled in the account.
func (o HubOutput) SubscribedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringOutput { return v.SubscribedAt }).(pulumi.StringOutput)
}

func (o HubOutput) Tags() HubTagsPtrOutput {
	return o.ApplyT(func(v *Hub) HubTagsPtrOutput { return v.Tags }).(HubTagsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HubInput)(nil)).Elem(), &Hub{})
	pulumi.RegisterOutputType(HubOutput{})
}
