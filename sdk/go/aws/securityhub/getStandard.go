// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securityhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::SecurityHub::Standard resource represents the implementation of an individual AWS Security Hub Standard in your account. It requires you have SecurityHub enabled before you can enable the Standard.
func LookupStandard(ctx *pulumi.Context, args *LookupStandardArgs, opts ...pulumi.InvokeOption) (*LookupStandardResult, error) {
	var rv LookupStandardResult
	err := ctx.Invoke("aws-native:securityhub:getStandard", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStandardArgs struct {
	// The ARN of the StandardsSubscription for the account ID, region, and Standard.
	StandardsSubscriptionArn string `pulumi:"standardsSubscriptionArn"`
}

type LookupStandardResult struct {
	// StandardsControls to disable from this Standard.
	DisabledStandardsControls []StandardsControl `pulumi:"disabledStandardsControls"`
	// The ARN of the StandardsSubscription for the account ID, region, and Standard.
	StandardsSubscriptionArn *string `pulumi:"standardsSubscriptionArn"`
}

func LookupStandardOutput(ctx *pulumi.Context, args LookupStandardOutputArgs, opts ...pulumi.InvokeOption) LookupStandardResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStandardResult, error) {
			args := v.(LookupStandardArgs)
			r, err := LookupStandard(ctx, &args, opts...)
			var s LookupStandardResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStandardResultOutput)
}

type LookupStandardOutputArgs struct {
	// The ARN of the StandardsSubscription for the account ID, region, and Standard.
	StandardsSubscriptionArn pulumi.StringInput `pulumi:"standardsSubscriptionArn"`
}

func (LookupStandardOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStandardArgs)(nil)).Elem()
}

type LookupStandardResultOutput struct{ *pulumi.OutputState }

func (LookupStandardResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStandardResult)(nil)).Elem()
}

func (o LookupStandardResultOutput) ToLookupStandardResultOutput() LookupStandardResultOutput {
	return o
}

func (o LookupStandardResultOutput) ToLookupStandardResultOutputWithContext(ctx context.Context) LookupStandardResultOutput {
	return o
}

// StandardsControls to disable from this Standard.
func (o LookupStandardResultOutput) DisabledStandardsControls() StandardsControlArrayOutput {
	return o.ApplyT(func(v LookupStandardResult) []StandardsControl { return v.DisabledStandardsControls }).(StandardsControlArrayOutput)
}

// The ARN of the StandardsSubscription for the account ID, region, and Standard.
func (o LookupStandardResultOutput) StandardsSubscriptionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStandardResult) *string { return v.StandardsSubscriptionArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStandardResultOutput{})
}
