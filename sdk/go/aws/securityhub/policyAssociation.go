// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securityhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::SecurityHub::PolicyAssociation resource represents the AWS Security Hub Central Configuration Policy associations in your Target. Only the AWS Security Hub delegated administrator can create the resouce from the home region.
type PolicyAssociation struct {
	pulumi.CustomResourceState

	// A unique identifier to indicates if the target has an association
	AssociationIdentifier pulumi.StringOutput `pulumi:"associationIdentifier"`
	// The current status of the association between the specified target and the configuration
	AssociationStatus PolicyAssociationAssociationStatusOutput `pulumi:"associationStatus"`
	// An explanation for a FAILED value for AssociationStatus
	AssociationStatusMessage pulumi.StringOutput `pulumi:"associationStatusMessage"`
	// Indicates whether the association between the specified target and the configuration was directly applied by the Security Hub delegated administrator or inherited from a parent
	AssociationType PolicyAssociationAssociationTypeOutput `pulumi:"associationType"`
	// The universally unique identifier (UUID) of the configuration policy or a value of SELF_MANAGED_SECURITY_HUB for a self-managed configuration
	ConfigurationPolicyId pulumi.StringOutput `pulumi:"configurationPolicyId"`
	// The identifier of the target account, organizational unit, or the root
	TargetId pulumi.StringOutput `pulumi:"targetId"`
	// Indicates whether the target is an AWS account, organizational unit, or the organization root
	TargetType PolicyAssociationTargetTypeOutput `pulumi:"targetType"`
	// The date and time, in UTC and ISO 8601 format, that the configuration policy association was last updated
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewPolicyAssociation registers a new resource with the given unique name, arguments, and options.
func NewPolicyAssociation(ctx *pulumi.Context,
	name string, args *PolicyAssociationArgs, opts ...pulumi.ResourceOption) (*PolicyAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigurationPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationPolicyId'")
	}
	if args.TargetId == nil {
		return nil, errors.New("invalid value for required argument 'TargetId'")
	}
	if args.TargetType == nil {
		return nil, errors.New("invalid value for required argument 'TargetType'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"targetId",
		"targetType",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyAssociation
	err := ctx.RegisterResource("aws-native:securityhub:PolicyAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyAssociation gets an existing PolicyAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyAssociationState, opts ...pulumi.ResourceOption) (*PolicyAssociation, error) {
	var resource PolicyAssociation
	err := ctx.ReadResource("aws-native:securityhub:PolicyAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyAssociation resources.
type policyAssociationState struct {
}

type PolicyAssociationState struct {
}

func (PolicyAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyAssociationState)(nil)).Elem()
}

type policyAssociationArgs struct {
	// The universally unique identifier (UUID) of the configuration policy or a value of SELF_MANAGED_SECURITY_HUB for a self-managed configuration
	ConfigurationPolicyId string `pulumi:"configurationPolicyId"`
	// The identifier of the target account, organizational unit, or the root
	TargetId string `pulumi:"targetId"`
	// Indicates whether the target is an AWS account, organizational unit, or the organization root
	TargetType PolicyAssociationTargetType `pulumi:"targetType"`
}

// The set of arguments for constructing a PolicyAssociation resource.
type PolicyAssociationArgs struct {
	// The universally unique identifier (UUID) of the configuration policy or a value of SELF_MANAGED_SECURITY_HUB for a self-managed configuration
	ConfigurationPolicyId pulumi.StringInput
	// The identifier of the target account, organizational unit, or the root
	TargetId pulumi.StringInput
	// Indicates whether the target is an AWS account, organizational unit, or the organization root
	TargetType PolicyAssociationTargetTypeInput
}

func (PolicyAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyAssociationArgs)(nil)).Elem()
}

type PolicyAssociationInput interface {
	pulumi.Input

	ToPolicyAssociationOutput() PolicyAssociationOutput
	ToPolicyAssociationOutputWithContext(ctx context.Context) PolicyAssociationOutput
}

func (*PolicyAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAssociation)(nil)).Elem()
}

func (i *PolicyAssociation) ToPolicyAssociationOutput() PolicyAssociationOutput {
	return i.ToPolicyAssociationOutputWithContext(context.Background())
}

func (i *PolicyAssociation) ToPolicyAssociationOutputWithContext(ctx context.Context) PolicyAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAssociationOutput)
}

type PolicyAssociationOutput struct{ *pulumi.OutputState }

func (PolicyAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAssociation)(nil)).Elem()
}

func (o PolicyAssociationOutput) ToPolicyAssociationOutput() PolicyAssociationOutput {
	return o
}

func (o PolicyAssociationOutput) ToPolicyAssociationOutputWithContext(ctx context.Context) PolicyAssociationOutput {
	return o
}

// A unique identifier to indicates if the target has an association
func (o PolicyAssociationOutput) AssociationIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAssociation) pulumi.StringOutput { return v.AssociationIdentifier }).(pulumi.StringOutput)
}

// The current status of the association between the specified target and the configuration
func (o PolicyAssociationOutput) AssociationStatus() PolicyAssociationAssociationStatusOutput {
	return o.ApplyT(func(v *PolicyAssociation) PolicyAssociationAssociationStatusOutput { return v.AssociationStatus }).(PolicyAssociationAssociationStatusOutput)
}

// An explanation for a FAILED value for AssociationStatus
func (o PolicyAssociationOutput) AssociationStatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAssociation) pulumi.StringOutput { return v.AssociationStatusMessage }).(pulumi.StringOutput)
}

// Indicates whether the association between the specified target and the configuration was directly applied by the Security Hub delegated administrator or inherited from a parent
func (o PolicyAssociationOutput) AssociationType() PolicyAssociationAssociationTypeOutput {
	return o.ApplyT(func(v *PolicyAssociation) PolicyAssociationAssociationTypeOutput { return v.AssociationType }).(PolicyAssociationAssociationTypeOutput)
}

// The universally unique identifier (UUID) of the configuration policy or a value of SELF_MANAGED_SECURITY_HUB for a self-managed configuration
func (o PolicyAssociationOutput) ConfigurationPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAssociation) pulumi.StringOutput { return v.ConfigurationPolicyId }).(pulumi.StringOutput)
}

// The identifier of the target account, organizational unit, or the root
func (o PolicyAssociationOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAssociation) pulumi.StringOutput { return v.TargetId }).(pulumi.StringOutput)
}

// Indicates whether the target is an AWS account, organizational unit, or the organization root
func (o PolicyAssociationOutput) TargetType() PolicyAssociationTargetTypeOutput {
	return o.ApplyT(func(v *PolicyAssociation) PolicyAssociationTargetTypeOutput { return v.TargetType }).(PolicyAssociationTargetTypeOutput)
}

// The date and time, in UTC and ISO 8601 format, that the configuration policy association was last updated
func (o PolicyAssociationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyAssociation) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyAssociationInput)(nil)).Elem(), &PolicyAssociation{})
	pulumi.RegisterOutputType(PolicyAssociationOutput{})
}
