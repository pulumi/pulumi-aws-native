// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securityhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::SecurityHub::AggregatorV2 resource represents the AWS Security Hub AggregatorV2 in your account. One aggregatorv2 resource is created for each account in non opt-in region in which you configure region linking mode.
func LookupAggregatorV2(ctx *pulumi.Context, args *LookupAggregatorV2Args, opts ...pulumi.InvokeOption) (*LookupAggregatorV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAggregatorV2Result
	err := ctx.Invoke("aws-native:securityhub:getAggregatorV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAggregatorV2Args struct {
	// The ARN of the AggregatorV2 being created and assigned as the unique identifier
	AggregatorV2Arn string `pulumi:"aggregatorV2Arn"`
}

type LookupAggregatorV2Result struct {
	// The aggregation Region of the AggregatorV2
	AggregationRegion *string `pulumi:"aggregationRegion"`
	// The ARN of the AggregatorV2 being created and assigned as the unique identifier
	AggregatorV2Arn *string `pulumi:"aggregatorV2Arn"`
	// The list of included Regions
	LinkedRegions []string `pulumi:"linkedRegions"`
	// Indicates to link a list of included Regions
	RegionLinkingMode *AggregatorV2RegionLinkingMode `pulumi:"regionLinkingMode"`
	Tags              map[string]string              `pulumi:"tags"`
}

func LookupAggregatorV2Output(ctx *pulumi.Context, args LookupAggregatorV2OutputArgs, opts ...pulumi.InvokeOption) LookupAggregatorV2ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAggregatorV2ResultOutput, error) {
			args := v.(LookupAggregatorV2Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:securityhub:getAggregatorV2", args, LookupAggregatorV2ResultOutput{}, options).(LookupAggregatorV2ResultOutput), nil
		}).(LookupAggregatorV2ResultOutput)
}

type LookupAggregatorV2OutputArgs struct {
	// The ARN of the AggregatorV2 being created and assigned as the unique identifier
	AggregatorV2Arn pulumi.StringInput `pulumi:"aggregatorV2Arn"`
}

func (LookupAggregatorV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAggregatorV2Args)(nil)).Elem()
}

type LookupAggregatorV2ResultOutput struct{ *pulumi.OutputState }

func (LookupAggregatorV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAggregatorV2Result)(nil)).Elem()
}

func (o LookupAggregatorV2ResultOutput) ToLookupAggregatorV2ResultOutput() LookupAggregatorV2ResultOutput {
	return o
}

func (o LookupAggregatorV2ResultOutput) ToLookupAggregatorV2ResultOutputWithContext(ctx context.Context) LookupAggregatorV2ResultOutput {
	return o
}

// The aggregation Region of the AggregatorV2
func (o LookupAggregatorV2ResultOutput) AggregationRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAggregatorV2Result) *string { return v.AggregationRegion }).(pulumi.StringPtrOutput)
}

// The ARN of the AggregatorV2 being created and assigned as the unique identifier
func (o LookupAggregatorV2ResultOutput) AggregatorV2Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAggregatorV2Result) *string { return v.AggregatorV2Arn }).(pulumi.StringPtrOutput)
}

// The list of included Regions
func (o LookupAggregatorV2ResultOutput) LinkedRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAggregatorV2Result) []string { return v.LinkedRegions }).(pulumi.StringArrayOutput)
}

// Indicates to link a list of included Regions
func (o LookupAggregatorV2ResultOutput) RegionLinkingMode() AggregatorV2RegionLinkingModePtrOutput {
	return o.ApplyT(func(v LookupAggregatorV2Result) *AggregatorV2RegionLinkingMode { return v.RegionLinkingMode }).(AggregatorV2RegionLinkingModePtrOutput)
}

func (o LookupAggregatorV2ResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAggregatorV2Result) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAggregatorV2ResultOutput{})
}
