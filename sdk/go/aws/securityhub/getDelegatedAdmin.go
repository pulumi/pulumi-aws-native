// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securityhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The “AWS::SecurityHub::DelegatedAdmin“ resource designates the delegated ASHlong administrator account for an organization. You must enable the integration between ASH and AOlong before you can designate a delegated ASH administrator. Only the management account for an organization can designate the delegated ASH administrator account. For more information, see [Designating the delegated administrator](https://docs.aws.amazon.com/securityhub/latest/userguide/designate-orgs-admin-account.html#designate-admin-instructions) in the *User Guide*.
//
//	To change the delegated administrator account, remove the current delegated administrator account, and then designate the new account.
//	To designate multiple delegated administrators in different organizations and AWS-Regions, we recommend using [mappings](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/mappings-section-structure.html).
//	Tags aren't supported for this resource.
func LookupDelegatedAdmin(ctx *pulumi.Context, args *LookupDelegatedAdminArgs, opts ...pulumi.InvokeOption) (*LookupDelegatedAdminResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDelegatedAdminResult
	err := ctx.Invoke("aws-native:securityhub:getDelegatedAdmin", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDelegatedAdminArgs struct {
	// The ID of the delegated Security Hub administrator account, in the format of `accountID/Region` .
	DelegatedAdminIdentifier string `pulumi:"delegatedAdminIdentifier"`
}

type LookupDelegatedAdminResult struct {
	// The ID of the delegated Security Hub administrator account, in the format of `accountID/Region` .
	DelegatedAdminIdentifier *string `pulumi:"delegatedAdminIdentifier"`
	// Whether the delegated Security Hub administrator is set for the organization.
	Status *DelegatedAdminStatus `pulumi:"status"`
}

func LookupDelegatedAdminOutput(ctx *pulumi.Context, args LookupDelegatedAdminOutputArgs, opts ...pulumi.InvokeOption) LookupDelegatedAdminResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDelegatedAdminResultOutput, error) {
			args := v.(LookupDelegatedAdminArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:securityhub:getDelegatedAdmin", args, LookupDelegatedAdminResultOutput{}, options).(LookupDelegatedAdminResultOutput), nil
		}).(LookupDelegatedAdminResultOutput)
}

type LookupDelegatedAdminOutputArgs struct {
	// The ID of the delegated Security Hub administrator account, in the format of `accountID/Region` .
	DelegatedAdminIdentifier pulumi.StringInput `pulumi:"delegatedAdminIdentifier"`
}

func (LookupDelegatedAdminOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDelegatedAdminArgs)(nil)).Elem()
}

type LookupDelegatedAdminResultOutput struct{ *pulumi.OutputState }

func (LookupDelegatedAdminResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDelegatedAdminResult)(nil)).Elem()
}

func (o LookupDelegatedAdminResultOutput) ToLookupDelegatedAdminResultOutput() LookupDelegatedAdminResultOutput {
	return o
}

func (o LookupDelegatedAdminResultOutput) ToLookupDelegatedAdminResultOutputWithContext(ctx context.Context) LookupDelegatedAdminResultOutput {
	return o
}

// The ID of the delegated Security Hub administrator account, in the format of `accountID/Region` .
func (o LookupDelegatedAdminResultOutput) DelegatedAdminIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDelegatedAdminResult) *string { return v.DelegatedAdminIdentifier }).(pulumi.StringPtrOutput)
}

// Whether the delegated Security Hub administrator is set for the organization.
func (o LookupDelegatedAdminResultOutput) Status() DelegatedAdminStatusPtrOutput {
	return o.ApplyT(func(v LookupDelegatedAdminResult) *DelegatedAdminStatus { return v.Status }).(DelegatedAdminStatusPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDelegatedAdminResultOutput{})
}
