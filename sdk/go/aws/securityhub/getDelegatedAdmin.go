// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securityhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::SecurityHub::DelegatedAdmin resource represents the AWS Security Hub delegated admin account in your organization. One delegated admin resource is allowed to create for the organization in each region in which you configure the AdminAccountId.
func LookupDelegatedAdmin(ctx *pulumi.Context, args *LookupDelegatedAdminArgs, opts ...pulumi.InvokeOption) (*LookupDelegatedAdminResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDelegatedAdminResult
	err := ctx.Invoke("aws-native:securityhub:getDelegatedAdmin", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDelegatedAdminArgs struct {
	// The identifier of the DelegatedAdmin being created and assigned as the unique identifier
	DelegatedAdminIdentifier string `pulumi:"delegatedAdminIdentifier"`
}

type LookupDelegatedAdminResult struct {
	// The identifier of the DelegatedAdmin being created and assigned as the unique identifier
	DelegatedAdminIdentifier *string `pulumi:"delegatedAdminIdentifier"`
	// The current status of the Security Hub administrator account. Indicates whether the account is currently enabled as a Security Hub administrator
	Status *DelegatedAdminStatus `pulumi:"status"`
}

func LookupDelegatedAdminOutput(ctx *pulumi.Context, args LookupDelegatedAdminOutputArgs, opts ...pulumi.InvokeOption) LookupDelegatedAdminResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDelegatedAdminResult, error) {
			args := v.(LookupDelegatedAdminArgs)
			r, err := LookupDelegatedAdmin(ctx, &args, opts...)
			var s LookupDelegatedAdminResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDelegatedAdminResultOutput)
}

type LookupDelegatedAdminOutputArgs struct {
	// The identifier of the DelegatedAdmin being created and assigned as the unique identifier
	DelegatedAdminIdentifier pulumi.StringInput `pulumi:"delegatedAdminIdentifier"`
}

func (LookupDelegatedAdminOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDelegatedAdminArgs)(nil)).Elem()
}

type LookupDelegatedAdminResultOutput struct{ *pulumi.OutputState }

func (LookupDelegatedAdminResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDelegatedAdminResult)(nil)).Elem()
}

func (o LookupDelegatedAdminResultOutput) ToLookupDelegatedAdminResultOutput() LookupDelegatedAdminResultOutput {
	return o
}

func (o LookupDelegatedAdminResultOutput) ToLookupDelegatedAdminResultOutputWithContext(ctx context.Context) LookupDelegatedAdminResultOutput {
	return o
}

// The identifier of the DelegatedAdmin being created and assigned as the unique identifier
func (o LookupDelegatedAdminResultOutput) DelegatedAdminIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDelegatedAdminResult) *string { return v.DelegatedAdminIdentifier }).(pulumi.StringPtrOutput)
}

// The current status of the Security Hub administrator account. Indicates whether the account is currently enabled as a Security Hub administrator
func (o LookupDelegatedAdminResultOutput) Status() DelegatedAdminStatusPtrOutput {
	return o.ApplyT(func(v LookupDelegatedAdminResult) *DelegatedAdminStatus { return v.Status }).(DelegatedAdminStatusPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDelegatedAdminResultOutput{})
}
