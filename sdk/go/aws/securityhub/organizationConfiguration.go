// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securityhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::SecurityHub::OrganizationConfiguration resource represents the configuration of your organization in Security Hub. Only the Security Hub administrator account can create Organization Configuration resource in each region and can opt-in to Central Configuration only in the aggregation region of FindingAggregator.
type OrganizationConfiguration struct {
	pulumi.CustomResourceState

	// Whether to automatically enable Security Hub in new member accounts when they join the organization.
	AutoEnable pulumi.BoolOutput `pulumi:"autoEnable"`
	// Whether to automatically enable Security Hub default standards in new member accounts when they join the organization.
	AutoEnableStandards OrganizationConfigurationAutoEnableStandardsPtrOutput `pulumi:"autoEnableStandards"`
	// Indicates whether the organization uses local or central configuration.
	ConfigurationType OrganizationConfigurationConfigurationTypePtrOutput `pulumi:"configurationType"`
	// Whether the maximum number of allowed member accounts are already associated with the Security Hub administrator account.
	MemberAccountLimitReached pulumi.BoolOutput `pulumi:"memberAccountLimitReached"`
	// The identifier of the OrganizationConfiguration being created and assigned as the unique identifier.
	OrganizationConfigurationIdentifier pulumi.StringOutput `pulumi:"organizationConfigurationIdentifier"`
	// Describes whether central configuration could be enabled as the ConfigurationType for the organization.
	Status OrganizationConfigurationStatusOutput `pulumi:"status"`
	// Provides an explanation if the value of Status is equal to FAILED when ConfigurationType is equal to CENTRAL.
	StatusMessage pulumi.StringOutput `pulumi:"statusMessage"`
}

// NewOrganizationConfiguration registers a new resource with the given unique name, arguments, and options.
func NewOrganizationConfiguration(ctx *pulumi.Context,
	name string, args *OrganizationConfigurationArgs, opts ...pulumi.ResourceOption) (*OrganizationConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutoEnable == nil {
		return nil, errors.New("invalid value for required argument 'AutoEnable'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationConfiguration
	err := ctx.RegisterResource("aws-native:securityhub:OrganizationConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationConfiguration gets an existing OrganizationConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationConfigurationState, opts ...pulumi.ResourceOption) (*OrganizationConfiguration, error) {
	var resource OrganizationConfiguration
	err := ctx.ReadResource("aws-native:securityhub:OrganizationConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationConfiguration resources.
type organizationConfigurationState struct {
}

type OrganizationConfigurationState struct {
}

func (OrganizationConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationConfigurationState)(nil)).Elem()
}

type organizationConfigurationArgs struct {
	// Whether to automatically enable Security Hub in new member accounts when they join the organization.
	AutoEnable bool `pulumi:"autoEnable"`
	// Whether to automatically enable Security Hub default standards in new member accounts when they join the organization.
	AutoEnableStandards *OrganizationConfigurationAutoEnableStandards `pulumi:"autoEnableStandards"`
	// Indicates whether the organization uses local or central configuration.
	ConfigurationType *OrganizationConfigurationConfigurationType `pulumi:"configurationType"`
}

// The set of arguments for constructing a OrganizationConfiguration resource.
type OrganizationConfigurationArgs struct {
	// Whether to automatically enable Security Hub in new member accounts when they join the organization.
	AutoEnable pulumi.BoolInput
	// Whether to automatically enable Security Hub default standards in new member accounts when they join the organization.
	AutoEnableStandards OrganizationConfigurationAutoEnableStandardsPtrInput
	// Indicates whether the organization uses local or central configuration.
	ConfigurationType OrganizationConfigurationConfigurationTypePtrInput
}

func (OrganizationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationConfigurationArgs)(nil)).Elem()
}

type OrganizationConfigurationInput interface {
	pulumi.Input

	ToOrganizationConfigurationOutput() OrganizationConfigurationOutput
	ToOrganizationConfigurationOutputWithContext(ctx context.Context) OrganizationConfigurationOutput
}

func (*OrganizationConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationConfiguration)(nil)).Elem()
}

func (i *OrganizationConfiguration) ToOrganizationConfigurationOutput() OrganizationConfigurationOutput {
	return i.ToOrganizationConfigurationOutputWithContext(context.Background())
}

func (i *OrganizationConfiguration) ToOrganizationConfigurationOutputWithContext(ctx context.Context) OrganizationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConfigurationOutput)
}

type OrganizationConfigurationOutput struct{ *pulumi.OutputState }

func (OrganizationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationConfiguration)(nil)).Elem()
}

func (o OrganizationConfigurationOutput) ToOrganizationConfigurationOutput() OrganizationConfigurationOutput {
	return o
}

func (o OrganizationConfigurationOutput) ToOrganizationConfigurationOutputWithContext(ctx context.Context) OrganizationConfigurationOutput {
	return o
}

// Whether to automatically enable Security Hub in new member accounts when they join the organization.
func (o OrganizationConfigurationOutput) AutoEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v *OrganizationConfiguration) pulumi.BoolOutput { return v.AutoEnable }).(pulumi.BoolOutput)
}

// Whether to automatically enable Security Hub default standards in new member accounts when they join the organization.
func (o OrganizationConfigurationOutput) AutoEnableStandards() OrganizationConfigurationAutoEnableStandardsPtrOutput {
	return o.ApplyT(func(v *OrganizationConfiguration) OrganizationConfigurationAutoEnableStandardsPtrOutput {
		return v.AutoEnableStandards
	}).(OrganizationConfigurationAutoEnableStandardsPtrOutput)
}

// Indicates whether the organization uses local or central configuration.
func (o OrganizationConfigurationOutput) ConfigurationType() OrganizationConfigurationConfigurationTypePtrOutput {
	return o.ApplyT(func(v *OrganizationConfiguration) OrganizationConfigurationConfigurationTypePtrOutput {
		return v.ConfigurationType
	}).(OrganizationConfigurationConfigurationTypePtrOutput)
}

// Whether the maximum number of allowed member accounts are already associated with the Security Hub administrator account.
func (o OrganizationConfigurationOutput) MemberAccountLimitReached() pulumi.BoolOutput {
	return o.ApplyT(func(v *OrganizationConfiguration) pulumi.BoolOutput { return v.MemberAccountLimitReached }).(pulumi.BoolOutput)
}

// The identifier of the OrganizationConfiguration being created and assigned as the unique identifier.
func (o OrganizationConfigurationOutput) OrganizationConfigurationIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationConfiguration) pulumi.StringOutput { return v.OrganizationConfigurationIdentifier }).(pulumi.StringOutput)
}

// Describes whether central configuration could be enabled as the ConfigurationType for the organization.
func (o OrganizationConfigurationOutput) Status() OrganizationConfigurationStatusOutput {
	return o.ApplyT(func(v *OrganizationConfiguration) OrganizationConfigurationStatusOutput { return v.Status }).(OrganizationConfigurationStatusOutput)
}

// Provides an explanation if the value of Status is equal to FAILED when ConfigurationType is equal to CENTRAL.
func (o OrganizationConfigurationOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationConfiguration) pulumi.StringOutput { return v.StatusMessage }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationConfigurationInput)(nil)).Elem(), &OrganizationConfiguration{})
	pulumi.RegisterOutputType(OrganizationConfigurationOutput{})
}
