// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::DMS::DataMigration.
func LookupDataMigration(ctx *pulumi.Context, args *LookupDataMigrationArgs, opts ...pulumi.InvokeOption) (*LookupDataMigrationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDataMigrationResult
	err := ctx.Invoke("aws-native:dms:getDataMigration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDataMigrationArgs struct {
	// The property describes an ARN of the data migration.
	DataMigrationArn string `pulumi:"dataMigrationArn"`
}

type LookupDataMigrationResult struct {
	// The property describes an ARN of the data migration.
	DataMigrationArn *string `pulumi:"dataMigrationArn"`
	// The property describes the create time of the data migration.
	DataMigrationCreateTime *string `pulumi:"dataMigrationCreateTime"`
	// The property describes a name to identify the data migration.
	DataMigrationName *string `pulumi:"dataMigrationName"`
	// The property describes the settings for the data migration.
	DataMigrationSettings *DataMigrationSettings `pulumi:"dataMigrationSettings"`
	// The property describes the type of migration.
	DataMigrationType *DataMigrationType `pulumi:"dataMigrationType"`
	// The property describes an identifier for the migration project. It is used for describing/deleting/modifying can be name/arn
	MigrationProjectIdentifier *string `pulumi:"migrationProjectIdentifier"`
	// The property describes Amazon Resource Name (ARN) of the service access role.
	ServiceAccessRoleArn *string `pulumi:"serviceAccessRoleArn"`
	// The property describes the settings for the data migration.
	SourceDataSettings []DataMigrationSourceDataSettings `pulumi:"sourceDataSettings"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupDataMigrationOutput(ctx *pulumi.Context, args LookupDataMigrationOutputArgs, opts ...pulumi.InvokeOption) LookupDataMigrationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDataMigrationResultOutput, error) {
			args := v.(LookupDataMigrationArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupDataMigrationResult
			secret, err := ctx.InvokePackageRaw("aws-native:dms:getDataMigration", args, &rv, "", opts...)
			if err != nil {
				return LookupDataMigrationResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupDataMigrationResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupDataMigrationResultOutput), nil
			}
			return output, nil
		}).(LookupDataMigrationResultOutput)
}

type LookupDataMigrationOutputArgs struct {
	// The property describes an ARN of the data migration.
	DataMigrationArn pulumi.StringInput `pulumi:"dataMigrationArn"`
}

func (LookupDataMigrationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataMigrationArgs)(nil)).Elem()
}

type LookupDataMigrationResultOutput struct{ *pulumi.OutputState }

func (LookupDataMigrationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataMigrationResult)(nil)).Elem()
}

func (o LookupDataMigrationResultOutput) ToLookupDataMigrationResultOutput() LookupDataMigrationResultOutput {
	return o
}

func (o LookupDataMigrationResultOutput) ToLookupDataMigrationResultOutputWithContext(ctx context.Context) LookupDataMigrationResultOutput {
	return o
}

// The property describes an ARN of the data migration.
func (o LookupDataMigrationResultOutput) DataMigrationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataMigrationResult) *string { return v.DataMigrationArn }).(pulumi.StringPtrOutput)
}

// The property describes the create time of the data migration.
func (o LookupDataMigrationResultOutput) DataMigrationCreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataMigrationResult) *string { return v.DataMigrationCreateTime }).(pulumi.StringPtrOutput)
}

// The property describes a name to identify the data migration.
func (o LookupDataMigrationResultOutput) DataMigrationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataMigrationResult) *string { return v.DataMigrationName }).(pulumi.StringPtrOutput)
}

// The property describes the settings for the data migration.
func (o LookupDataMigrationResultOutput) DataMigrationSettings() DataMigrationSettingsPtrOutput {
	return o.ApplyT(func(v LookupDataMigrationResult) *DataMigrationSettings { return v.DataMigrationSettings }).(DataMigrationSettingsPtrOutput)
}

// The property describes the type of migration.
func (o LookupDataMigrationResultOutput) DataMigrationType() DataMigrationTypePtrOutput {
	return o.ApplyT(func(v LookupDataMigrationResult) *DataMigrationType { return v.DataMigrationType }).(DataMigrationTypePtrOutput)
}

// The property describes an identifier for the migration project. It is used for describing/deleting/modifying can be name/arn
func (o LookupDataMigrationResultOutput) MigrationProjectIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataMigrationResult) *string { return v.MigrationProjectIdentifier }).(pulumi.StringPtrOutput)
}

// The property describes Amazon Resource Name (ARN) of the service access role.
func (o LookupDataMigrationResultOutput) ServiceAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataMigrationResult) *string { return v.ServiceAccessRoleArn }).(pulumi.StringPtrOutput)
}

// The property describes the settings for the data migration.
func (o LookupDataMigrationResultOutput) SourceDataSettings() DataMigrationSourceDataSettingsArrayOutput {
	return o.ApplyT(func(v LookupDataMigrationResult) []DataMigrationSourceDataSettings { return v.SourceDataSettings }).(DataMigrationSourceDataSettingsArrayOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupDataMigrationResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDataMigrationResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDataMigrationResultOutput{})
}
