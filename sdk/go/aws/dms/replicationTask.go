// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dms

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::DMS::ReplicationTask
//
// Deprecated: ReplicationTask is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type ReplicationTask struct {
	pulumi.CustomResourceState

	CdcStartPosition          pulumi.StringPtrOutput        `pulumi:"cdcStartPosition"`
	CdcStartTime              pulumi.Float64PtrOutput       `pulumi:"cdcStartTime"`
	CdcStopPosition           pulumi.StringPtrOutput        `pulumi:"cdcStopPosition"`
	MigrationType             pulumi.StringOutput           `pulumi:"migrationType"`
	ReplicationInstanceArn    pulumi.StringOutput           `pulumi:"replicationInstanceArn"`
	ReplicationTaskIdentifier pulumi.StringPtrOutput        `pulumi:"replicationTaskIdentifier"`
	ReplicationTaskSettings   pulumi.StringPtrOutput        `pulumi:"replicationTaskSettings"`
	ResourceIdentifier        pulumi.StringPtrOutput        `pulumi:"resourceIdentifier"`
	SourceEndpointArn         pulumi.StringOutput           `pulumi:"sourceEndpointArn"`
	TableMappings             pulumi.StringOutput           `pulumi:"tableMappings"`
	Tags                      ReplicationTaskTagArrayOutput `pulumi:"tags"`
	TargetEndpointArn         pulumi.StringOutput           `pulumi:"targetEndpointArn"`
	TaskData                  pulumi.StringPtrOutput        `pulumi:"taskData"`
}

// NewReplicationTask registers a new resource with the given unique name, arguments, and options.
func NewReplicationTask(ctx *pulumi.Context,
	name string, args *ReplicationTaskArgs, opts ...pulumi.ResourceOption) (*ReplicationTask, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MigrationType == nil {
		return nil, errors.New("invalid value for required argument 'MigrationType'")
	}
	if args.ReplicationInstanceArn == nil {
		return nil, errors.New("invalid value for required argument 'ReplicationInstanceArn'")
	}
	if args.SourceEndpointArn == nil {
		return nil, errors.New("invalid value for required argument 'SourceEndpointArn'")
	}
	if args.TableMappings == nil {
		return nil, errors.New("invalid value for required argument 'TableMappings'")
	}
	if args.TargetEndpointArn == nil {
		return nil, errors.New("invalid value for required argument 'TargetEndpointArn'")
	}
	var resource ReplicationTask
	err := ctx.RegisterResource("aws-native:dms:ReplicationTask", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReplicationTask gets an existing ReplicationTask resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReplicationTask(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReplicationTaskState, opts ...pulumi.ResourceOption) (*ReplicationTask, error) {
	var resource ReplicationTask
	err := ctx.ReadResource("aws-native:dms:ReplicationTask", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReplicationTask resources.
type replicationTaskState struct {
}

type ReplicationTaskState struct {
}

func (ReplicationTaskState) ElementType() reflect.Type {
	return reflect.TypeOf((*replicationTaskState)(nil)).Elem()
}

type replicationTaskArgs struct {
	CdcStartPosition          *string              `pulumi:"cdcStartPosition"`
	CdcStartTime              *float64             `pulumi:"cdcStartTime"`
	CdcStopPosition           *string              `pulumi:"cdcStopPosition"`
	MigrationType             string               `pulumi:"migrationType"`
	ReplicationInstanceArn    string               `pulumi:"replicationInstanceArn"`
	ReplicationTaskIdentifier *string              `pulumi:"replicationTaskIdentifier"`
	ReplicationTaskSettings   *string              `pulumi:"replicationTaskSettings"`
	ResourceIdentifier        *string              `pulumi:"resourceIdentifier"`
	SourceEndpointArn         string               `pulumi:"sourceEndpointArn"`
	TableMappings             string               `pulumi:"tableMappings"`
	Tags                      []ReplicationTaskTag `pulumi:"tags"`
	TargetEndpointArn         string               `pulumi:"targetEndpointArn"`
	TaskData                  *string              `pulumi:"taskData"`
}

// The set of arguments for constructing a ReplicationTask resource.
type ReplicationTaskArgs struct {
	CdcStartPosition          pulumi.StringPtrInput
	CdcStartTime              pulumi.Float64PtrInput
	CdcStopPosition           pulumi.StringPtrInput
	MigrationType             pulumi.StringInput
	ReplicationInstanceArn    pulumi.StringInput
	ReplicationTaskIdentifier pulumi.StringPtrInput
	ReplicationTaskSettings   pulumi.StringPtrInput
	ResourceIdentifier        pulumi.StringPtrInput
	SourceEndpointArn         pulumi.StringInput
	TableMappings             pulumi.StringInput
	Tags                      ReplicationTaskTagArrayInput
	TargetEndpointArn         pulumi.StringInput
	TaskData                  pulumi.StringPtrInput
}

func (ReplicationTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*replicationTaskArgs)(nil)).Elem()
}

type ReplicationTaskInput interface {
	pulumi.Input

	ToReplicationTaskOutput() ReplicationTaskOutput
	ToReplicationTaskOutputWithContext(ctx context.Context) ReplicationTaskOutput
}

func (*ReplicationTask) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationTask)(nil))
}

func (i *ReplicationTask) ToReplicationTaskOutput() ReplicationTaskOutput {
	return i.ToReplicationTaskOutputWithContext(context.Background())
}

func (i *ReplicationTask) ToReplicationTaskOutputWithContext(ctx context.Context) ReplicationTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationTaskOutput)
}

type ReplicationTaskOutput struct{ *pulumi.OutputState }

func (ReplicationTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationTask)(nil))
}

func (o ReplicationTaskOutput) ToReplicationTaskOutput() ReplicationTaskOutput {
	return o
}

func (o ReplicationTaskOutput) ToReplicationTaskOutputWithContext(ctx context.Context) ReplicationTaskOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationTaskInput)(nil)).Elem(), &ReplicationTask{})
	pulumi.RegisterOutputType(ReplicationTaskOutput{})
}
