// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::DMS::DataProvider
func LookupDataProvider(ctx *pulumi.Context, args *LookupDataProviderArgs, opts ...pulumi.InvokeOption) (*LookupDataProviderResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDataProviderResult
	err := ctx.Invoke("aws-native:dms:getDataProvider", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDataProviderArgs struct {
	// The data provider ARN.
	DataProviderArn string `pulumi:"dataProviderArn"`
}

type LookupDataProviderResult struct {
	// The data provider ARN.
	DataProviderArn *string `pulumi:"dataProviderArn"`
	// The data provider creation time.
	DataProviderCreationTime *string `pulumi:"dataProviderCreationTime"`
	// The property describes a name to identify the data provider.
	DataProviderName *string `pulumi:"dataProviderName"`
	// The optional description of the data provider.
	Description *string `pulumi:"description"`
	// The property describes a data engine for the data provider.
	Engine *DataProviderEngine `pulumi:"engine"`
	// The property identifies the exact type of settings for the data provider.
	Settings interface{} `pulumi:"settings"`
	// An array of key-value pairs to apply to this resource.
	Tags []DataProviderTag `pulumi:"tags"`
}

func LookupDataProviderOutput(ctx *pulumi.Context, args LookupDataProviderOutputArgs, opts ...pulumi.InvokeOption) LookupDataProviderResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDataProviderResult, error) {
			args := v.(LookupDataProviderArgs)
			r, err := LookupDataProvider(ctx, &args, opts...)
			var s LookupDataProviderResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDataProviderResultOutput)
}

type LookupDataProviderOutputArgs struct {
	// The data provider ARN.
	DataProviderArn pulumi.StringInput `pulumi:"dataProviderArn"`
}

func (LookupDataProviderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataProviderArgs)(nil)).Elem()
}

type LookupDataProviderResultOutput struct{ *pulumi.OutputState }

func (LookupDataProviderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataProviderResult)(nil)).Elem()
}

func (o LookupDataProviderResultOutput) ToLookupDataProviderResultOutput() LookupDataProviderResultOutput {
	return o
}

func (o LookupDataProviderResultOutput) ToLookupDataProviderResultOutputWithContext(ctx context.Context) LookupDataProviderResultOutput {
	return o
}

// The data provider ARN.
func (o LookupDataProviderResultOutput) DataProviderArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataProviderResult) *string { return v.DataProviderArn }).(pulumi.StringPtrOutput)
}

// The data provider creation time.
func (o LookupDataProviderResultOutput) DataProviderCreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataProviderResult) *string { return v.DataProviderCreationTime }).(pulumi.StringPtrOutput)
}

// The property describes a name to identify the data provider.
func (o LookupDataProviderResultOutput) DataProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataProviderResult) *string { return v.DataProviderName }).(pulumi.StringPtrOutput)
}

// The optional description of the data provider.
func (o LookupDataProviderResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataProviderResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The property describes a data engine for the data provider.
func (o LookupDataProviderResultOutput) Engine() DataProviderEnginePtrOutput {
	return o.ApplyT(func(v LookupDataProviderResult) *DataProviderEngine { return v.Engine }).(DataProviderEnginePtrOutput)
}

// The property identifies the exact type of settings for the data provider.
func (o LookupDataProviderResultOutput) Settings() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupDataProviderResult) interface{} { return v.Settings }).(pulumi.AnyOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupDataProviderResultOutput) Tags() DataProviderTagArrayOutput {
	return o.ApplyT(func(v LookupDataProviderResult) []DataProviderTag { return v.Tags }).(DataProviderTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDataProviderResultOutput{})
}
