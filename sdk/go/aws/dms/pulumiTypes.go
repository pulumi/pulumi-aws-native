// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DataMigrationSettings struct {
	// The property specifies whether to enable the CloudWatch log.
	CloudwatchLogsEnabled *bool `pulumi:"cloudwatchLogsEnabled"`
	// The number of parallel jobs that trigger parallel threads to unload the tables from the source, and then load them to the target.
	NumberOfJobs *int `pulumi:"numberOfJobs"`
	// The property specifies the rules of selecting objects for data migration.
	SelectionRules *string `pulumi:"selectionRules"`
}

// DataMigrationSettingsInput is an input type that accepts DataMigrationSettingsArgs and DataMigrationSettingsOutput values.
// You can construct a concrete instance of `DataMigrationSettingsInput` via:
//
//	DataMigrationSettingsArgs{...}
type DataMigrationSettingsInput interface {
	pulumi.Input

	ToDataMigrationSettingsOutput() DataMigrationSettingsOutput
	ToDataMigrationSettingsOutputWithContext(context.Context) DataMigrationSettingsOutput
}

type DataMigrationSettingsArgs struct {
	// The property specifies whether to enable the CloudWatch log.
	CloudwatchLogsEnabled pulumi.BoolPtrInput `pulumi:"cloudwatchLogsEnabled"`
	// The number of parallel jobs that trigger parallel threads to unload the tables from the source, and then load them to the target.
	NumberOfJobs pulumi.IntPtrInput `pulumi:"numberOfJobs"`
	// The property specifies the rules of selecting objects for data migration.
	SelectionRules pulumi.StringPtrInput `pulumi:"selectionRules"`
}

func (DataMigrationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataMigrationSettings)(nil)).Elem()
}

func (i DataMigrationSettingsArgs) ToDataMigrationSettingsOutput() DataMigrationSettingsOutput {
	return i.ToDataMigrationSettingsOutputWithContext(context.Background())
}

func (i DataMigrationSettingsArgs) ToDataMigrationSettingsOutputWithContext(ctx context.Context) DataMigrationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataMigrationSettingsOutput)
}

func (i DataMigrationSettingsArgs) ToDataMigrationSettingsPtrOutput() DataMigrationSettingsPtrOutput {
	return i.ToDataMigrationSettingsPtrOutputWithContext(context.Background())
}

func (i DataMigrationSettingsArgs) ToDataMigrationSettingsPtrOutputWithContext(ctx context.Context) DataMigrationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataMigrationSettingsOutput).ToDataMigrationSettingsPtrOutputWithContext(ctx)
}

// DataMigrationSettingsPtrInput is an input type that accepts DataMigrationSettingsArgs, DataMigrationSettingsPtr and DataMigrationSettingsPtrOutput values.
// You can construct a concrete instance of `DataMigrationSettingsPtrInput` via:
//
//	        DataMigrationSettingsArgs{...}
//
//	or:
//
//	        nil
type DataMigrationSettingsPtrInput interface {
	pulumi.Input

	ToDataMigrationSettingsPtrOutput() DataMigrationSettingsPtrOutput
	ToDataMigrationSettingsPtrOutputWithContext(context.Context) DataMigrationSettingsPtrOutput
}

type dataMigrationSettingsPtrType DataMigrationSettingsArgs

func DataMigrationSettingsPtr(v *DataMigrationSettingsArgs) DataMigrationSettingsPtrInput {
	return (*dataMigrationSettingsPtrType)(v)
}

func (*dataMigrationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataMigrationSettings)(nil)).Elem()
}

func (i *dataMigrationSettingsPtrType) ToDataMigrationSettingsPtrOutput() DataMigrationSettingsPtrOutput {
	return i.ToDataMigrationSettingsPtrOutputWithContext(context.Background())
}

func (i *dataMigrationSettingsPtrType) ToDataMigrationSettingsPtrOutputWithContext(ctx context.Context) DataMigrationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataMigrationSettingsPtrOutput)
}

type DataMigrationSettingsOutput struct{ *pulumi.OutputState }

func (DataMigrationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataMigrationSettings)(nil)).Elem()
}

func (o DataMigrationSettingsOutput) ToDataMigrationSettingsOutput() DataMigrationSettingsOutput {
	return o
}

func (o DataMigrationSettingsOutput) ToDataMigrationSettingsOutputWithContext(ctx context.Context) DataMigrationSettingsOutput {
	return o
}

func (o DataMigrationSettingsOutput) ToDataMigrationSettingsPtrOutput() DataMigrationSettingsPtrOutput {
	return o.ToDataMigrationSettingsPtrOutputWithContext(context.Background())
}

func (o DataMigrationSettingsOutput) ToDataMigrationSettingsPtrOutputWithContext(ctx context.Context) DataMigrationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataMigrationSettings) *DataMigrationSettings {
		return &v
	}).(DataMigrationSettingsPtrOutput)
}

// The property specifies whether to enable the CloudWatch log.
func (o DataMigrationSettingsOutput) CloudwatchLogsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataMigrationSettings) *bool { return v.CloudwatchLogsEnabled }).(pulumi.BoolPtrOutput)
}

// The number of parallel jobs that trigger parallel threads to unload the tables from the source, and then load them to the target.
func (o DataMigrationSettingsOutput) NumberOfJobs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataMigrationSettings) *int { return v.NumberOfJobs }).(pulumi.IntPtrOutput)
}

// The property specifies the rules of selecting objects for data migration.
func (o DataMigrationSettingsOutput) SelectionRules() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataMigrationSettings) *string { return v.SelectionRules }).(pulumi.StringPtrOutput)
}

type DataMigrationSettingsPtrOutput struct{ *pulumi.OutputState }

func (DataMigrationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataMigrationSettings)(nil)).Elem()
}

func (o DataMigrationSettingsPtrOutput) ToDataMigrationSettingsPtrOutput() DataMigrationSettingsPtrOutput {
	return o
}

func (o DataMigrationSettingsPtrOutput) ToDataMigrationSettingsPtrOutputWithContext(ctx context.Context) DataMigrationSettingsPtrOutput {
	return o
}

func (o DataMigrationSettingsPtrOutput) Elem() DataMigrationSettingsOutput {
	return o.ApplyT(func(v *DataMigrationSettings) DataMigrationSettings {
		if v != nil {
			return *v
		}
		var ret DataMigrationSettings
		return ret
	}).(DataMigrationSettingsOutput)
}

// The property specifies whether to enable the CloudWatch log.
func (o DataMigrationSettingsPtrOutput) CloudwatchLogsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataMigrationSettings) *bool {
		if v == nil {
			return nil
		}
		return v.CloudwatchLogsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The number of parallel jobs that trigger parallel threads to unload the tables from the source, and then load them to the target.
func (o DataMigrationSettingsPtrOutput) NumberOfJobs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataMigrationSettings) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfJobs
	}).(pulumi.IntPtrOutput)
}

// The property specifies the rules of selecting objects for data migration.
func (o DataMigrationSettingsPtrOutput) SelectionRules() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataMigrationSettings) *string {
		if v == nil {
			return nil
		}
		return v.SelectionRules
	}).(pulumi.StringPtrOutput)
}

type DataMigrationSourceDataSettings struct {
	// The property is a point in the database engine's log that defines a time where you can begin CDC.
	CdcStartPosition *string `pulumi:"cdcStartPosition"`
	// The property indicates the start time for a change data capture (CDC) operation. The value is server time in UTC format.
	CdcStartTime *string `pulumi:"cdcStartTime"`
	// The property indicates the stop time for a change data capture (CDC) operation. The value is server time in UTC format.
	CdcStopTime *string `pulumi:"cdcStopTime"`
	// The property sets the name of a previously created logical replication slot for a change data capture (CDC) load of the source instance.
	SlotName *string `pulumi:"slotName"`
}

// DataMigrationSourceDataSettingsInput is an input type that accepts DataMigrationSourceDataSettingsArgs and DataMigrationSourceDataSettingsOutput values.
// You can construct a concrete instance of `DataMigrationSourceDataSettingsInput` via:
//
//	DataMigrationSourceDataSettingsArgs{...}
type DataMigrationSourceDataSettingsInput interface {
	pulumi.Input

	ToDataMigrationSourceDataSettingsOutput() DataMigrationSourceDataSettingsOutput
	ToDataMigrationSourceDataSettingsOutputWithContext(context.Context) DataMigrationSourceDataSettingsOutput
}

type DataMigrationSourceDataSettingsArgs struct {
	// The property is a point in the database engine's log that defines a time where you can begin CDC.
	CdcStartPosition pulumi.StringPtrInput `pulumi:"cdcStartPosition"`
	// The property indicates the start time for a change data capture (CDC) operation. The value is server time in UTC format.
	CdcStartTime pulumi.StringPtrInput `pulumi:"cdcStartTime"`
	// The property indicates the stop time for a change data capture (CDC) operation. The value is server time in UTC format.
	CdcStopTime pulumi.StringPtrInput `pulumi:"cdcStopTime"`
	// The property sets the name of a previously created logical replication slot for a change data capture (CDC) load of the source instance.
	SlotName pulumi.StringPtrInput `pulumi:"slotName"`
}

func (DataMigrationSourceDataSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataMigrationSourceDataSettings)(nil)).Elem()
}

func (i DataMigrationSourceDataSettingsArgs) ToDataMigrationSourceDataSettingsOutput() DataMigrationSourceDataSettingsOutput {
	return i.ToDataMigrationSourceDataSettingsOutputWithContext(context.Background())
}

func (i DataMigrationSourceDataSettingsArgs) ToDataMigrationSourceDataSettingsOutputWithContext(ctx context.Context) DataMigrationSourceDataSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataMigrationSourceDataSettingsOutput)
}

// DataMigrationSourceDataSettingsArrayInput is an input type that accepts DataMigrationSourceDataSettingsArray and DataMigrationSourceDataSettingsArrayOutput values.
// You can construct a concrete instance of `DataMigrationSourceDataSettingsArrayInput` via:
//
//	DataMigrationSourceDataSettingsArray{ DataMigrationSourceDataSettingsArgs{...} }
type DataMigrationSourceDataSettingsArrayInput interface {
	pulumi.Input

	ToDataMigrationSourceDataSettingsArrayOutput() DataMigrationSourceDataSettingsArrayOutput
	ToDataMigrationSourceDataSettingsArrayOutputWithContext(context.Context) DataMigrationSourceDataSettingsArrayOutput
}

type DataMigrationSourceDataSettingsArray []DataMigrationSourceDataSettingsInput

func (DataMigrationSourceDataSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataMigrationSourceDataSettings)(nil)).Elem()
}

func (i DataMigrationSourceDataSettingsArray) ToDataMigrationSourceDataSettingsArrayOutput() DataMigrationSourceDataSettingsArrayOutput {
	return i.ToDataMigrationSourceDataSettingsArrayOutputWithContext(context.Background())
}

func (i DataMigrationSourceDataSettingsArray) ToDataMigrationSourceDataSettingsArrayOutputWithContext(ctx context.Context) DataMigrationSourceDataSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataMigrationSourceDataSettingsArrayOutput)
}

type DataMigrationSourceDataSettingsOutput struct{ *pulumi.OutputState }

func (DataMigrationSourceDataSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataMigrationSourceDataSettings)(nil)).Elem()
}

func (o DataMigrationSourceDataSettingsOutput) ToDataMigrationSourceDataSettingsOutput() DataMigrationSourceDataSettingsOutput {
	return o
}

func (o DataMigrationSourceDataSettingsOutput) ToDataMigrationSourceDataSettingsOutputWithContext(ctx context.Context) DataMigrationSourceDataSettingsOutput {
	return o
}

// The property is a point in the database engine's log that defines a time where you can begin CDC.
func (o DataMigrationSourceDataSettingsOutput) CdcStartPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataMigrationSourceDataSettings) *string { return v.CdcStartPosition }).(pulumi.StringPtrOutput)
}

// The property indicates the start time for a change data capture (CDC) operation. The value is server time in UTC format.
func (o DataMigrationSourceDataSettingsOutput) CdcStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataMigrationSourceDataSettings) *string { return v.CdcStartTime }).(pulumi.StringPtrOutput)
}

// The property indicates the stop time for a change data capture (CDC) operation. The value is server time in UTC format.
func (o DataMigrationSourceDataSettingsOutput) CdcStopTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataMigrationSourceDataSettings) *string { return v.CdcStopTime }).(pulumi.StringPtrOutput)
}

// The property sets the name of a previously created logical replication slot for a change data capture (CDC) load of the source instance.
func (o DataMigrationSourceDataSettingsOutput) SlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataMigrationSourceDataSettings) *string { return v.SlotName }).(pulumi.StringPtrOutput)
}

type DataMigrationSourceDataSettingsArrayOutput struct{ *pulumi.OutputState }

func (DataMigrationSourceDataSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataMigrationSourceDataSettings)(nil)).Elem()
}

func (o DataMigrationSourceDataSettingsArrayOutput) ToDataMigrationSourceDataSettingsArrayOutput() DataMigrationSourceDataSettingsArrayOutput {
	return o
}

func (o DataMigrationSourceDataSettingsArrayOutput) ToDataMigrationSourceDataSettingsArrayOutputWithContext(ctx context.Context) DataMigrationSourceDataSettingsArrayOutput {
	return o
}

func (o DataMigrationSourceDataSettingsArrayOutput) Index(i pulumi.IntInput) DataMigrationSourceDataSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataMigrationSourceDataSettings {
		return vs[0].([]DataMigrationSourceDataSettings)[vs[1].(int)]
	}).(DataMigrationSourceDataSettingsOutput)
}

// A key-value pair to associate with a resource.
type DataMigrationTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type DataProviderTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type InstanceProfileTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// It is an object that describes Source and Target DataProviders and credentials for connecting to databases that are used in MigrationProject
type MigrationProjectDataProviderDescriptor struct {
	// The Amazon Resource Name (ARN) of the data provider.
	DataProviderArn        *string `pulumi:"dataProviderArn"`
	DataProviderIdentifier *string `pulumi:"dataProviderIdentifier"`
	// The user-friendly name of the data provider.
	DataProviderName *string `pulumi:"dataProviderName"`
	// The ARN of the role used to access AWS Secrets Manager.
	SecretsManagerAccessRoleArn *string `pulumi:"secretsManagerAccessRoleArn"`
	// The identifier of the AWS Secrets Manager Secret used to store access credentials for the data provider.
	SecretsManagerSecretId *string `pulumi:"secretsManagerSecretId"`
}

// MigrationProjectDataProviderDescriptorInput is an input type that accepts MigrationProjectDataProviderDescriptorArgs and MigrationProjectDataProviderDescriptorOutput values.
// You can construct a concrete instance of `MigrationProjectDataProviderDescriptorInput` via:
//
//	MigrationProjectDataProviderDescriptorArgs{...}
type MigrationProjectDataProviderDescriptorInput interface {
	pulumi.Input

	ToMigrationProjectDataProviderDescriptorOutput() MigrationProjectDataProviderDescriptorOutput
	ToMigrationProjectDataProviderDescriptorOutputWithContext(context.Context) MigrationProjectDataProviderDescriptorOutput
}

// It is an object that describes Source and Target DataProviders and credentials for connecting to databases that are used in MigrationProject
type MigrationProjectDataProviderDescriptorArgs struct {
	// The Amazon Resource Name (ARN) of the data provider.
	DataProviderArn        pulumi.StringPtrInput `pulumi:"dataProviderArn"`
	DataProviderIdentifier pulumi.StringPtrInput `pulumi:"dataProviderIdentifier"`
	// The user-friendly name of the data provider.
	DataProviderName pulumi.StringPtrInput `pulumi:"dataProviderName"`
	// The ARN of the role used to access AWS Secrets Manager.
	SecretsManagerAccessRoleArn pulumi.StringPtrInput `pulumi:"secretsManagerAccessRoleArn"`
	// The identifier of the AWS Secrets Manager Secret used to store access credentials for the data provider.
	SecretsManagerSecretId pulumi.StringPtrInput `pulumi:"secretsManagerSecretId"`
}

func (MigrationProjectDataProviderDescriptorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationProjectDataProviderDescriptor)(nil)).Elem()
}

func (i MigrationProjectDataProviderDescriptorArgs) ToMigrationProjectDataProviderDescriptorOutput() MigrationProjectDataProviderDescriptorOutput {
	return i.ToMigrationProjectDataProviderDescriptorOutputWithContext(context.Background())
}

func (i MigrationProjectDataProviderDescriptorArgs) ToMigrationProjectDataProviderDescriptorOutputWithContext(ctx context.Context) MigrationProjectDataProviderDescriptorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationProjectDataProviderDescriptorOutput)
}

// MigrationProjectDataProviderDescriptorArrayInput is an input type that accepts MigrationProjectDataProviderDescriptorArray and MigrationProjectDataProviderDescriptorArrayOutput values.
// You can construct a concrete instance of `MigrationProjectDataProviderDescriptorArrayInput` via:
//
//	MigrationProjectDataProviderDescriptorArray{ MigrationProjectDataProviderDescriptorArgs{...} }
type MigrationProjectDataProviderDescriptorArrayInput interface {
	pulumi.Input

	ToMigrationProjectDataProviderDescriptorArrayOutput() MigrationProjectDataProviderDescriptorArrayOutput
	ToMigrationProjectDataProviderDescriptorArrayOutputWithContext(context.Context) MigrationProjectDataProviderDescriptorArrayOutput
}

type MigrationProjectDataProviderDescriptorArray []MigrationProjectDataProviderDescriptorInput

func (MigrationProjectDataProviderDescriptorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrationProjectDataProviderDescriptor)(nil)).Elem()
}

func (i MigrationProjectDataProviderDescriptorArray) ToMigrationProjectDataProviderDescriptorArrayOutput() MigrationProjectDataProviderDescriptorArrayOutput {
	return i.ToMigrationProjectDataProviderDescriptorArrayOutputWithContext(context.Background())
}

func (i MigrationProjectDataProviderDescriptorArray) ToMigrationProjectDataProviderDescriptorArrayOutputWithContext(ctx context.Context) MigrationProjectDataProviderDescriptorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationProjectDataProviderDescriptorArrayOutput)
}

// It is an object that describes Source and Target DataProviders and credentials for connecting to databases that are used in MigrationProject
type MigrationProjectDataProviderDescriptorOutput struct{ *pulumi.OutputState }

func (MigrationProjectDataProviderDescriptorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationProjectDataProviderDescriptor)(nil)).Elem()
}

func (o MigrationProjectDataProviderDescriptorOutput) ToMigrationProjectDataProviderDescriptorOutput() MigrationProjectDataProviderDescriptorOutput {
	return o
}

func (o MigrationProjectDataProviderDescriptorOutput) ToMigrationProjectDataProviderDescriptorOutputWithContext(ctx context.Context) MigrationProjectDataProviderDescriptorOutput {
	return o
}

// The Amazon Resource Name (ARN) of the data provider.
func (o MigrationProjectDataProviderDescriptorOutput) DataProviderArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationProjectDataProviderDescriptor) *string { return v.DataProviderArn }).(pulumi.StringPtrOutput)
}

func (o MigrationProjectDataProviderDescriptorOutput) DataProviderIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationProjectDataProviderDescriptor) *string { return v.DataProviderIdentifier }).(pulumi.StringPtrOutput)
}

// The user-friendly name of the data provider.
func (o MigrationProjectDataProviderDescriptorOutput) DataProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationProjectDataProviderDescriptor) *string { return v.DataProviderName }).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access AWS Secrets Manager.
func (o MigrationProjectDataProviderDescriptorOutput) SecretsManagerAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationProjectDataProviderDescriptor) *string { return v.SecretsManagerAccessRoleArn }).(pulumi.StringPtrOutput)
}

// The identifier of the AWS Secrets Manager Secret used to store access credentials for the data provider.
func (o MigrationProjectDataProviderDescriptorOutput) SecretsManagerSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationProjectDataProviderDescriptor) *string { return v.SecretsManagerSecretId }).(pulumi.StringPtrOutput)
}

type MigrationProjectDataProviderDescriptorArrayOutput struct{ *pulumi.OutputState }

func (MigrationProjectDataProviderDescriptorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrationProjectDataProviderDescriptor)(nil)).Elem()
}

func (o MigrationProjectDataProviderDescriptorArrayOutput) ToMigrationProjectDataProviderDescriptorArrayOutput() MigrationProjectDataProviderDescriptorArrayOutput {
	return o
}

func (o MigrationProjectDataProviderDescriptorArrayOutput) ToMigrationProjectDataProviderDescriptorArrayOutputWithContext(ctx context.Context) MigrationProjectDataProviderDescriptorArrayOutput {
	return o
}

func (o MigrationProjectDataProviderDescriptorArrayOutput) Index(i pulumi.IntInput) MigrationProjectDataProviderDescriptorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrationProjectDataProviderDescriptor {
		return vs[0].([]MigrationProjectDataProviderDescriptor)[vs[1].(int)]
	}).(MigrationProjectDataProviderDescriptorOutput)
}

// A key-value pair to associate with a resource.
type MigrationProjectTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, , and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, , and -.
	Value string `pulumi:"value"`
}

// Configuration parameters for provisioning a AWS DMS Serverless replication
type ReplicationConfigComputeConfig struct {
	// The Availability Zone where the AWS DMS Serverless replication using this configuration will run. The default value is a random, system-chosen Availability Zone in the configuration's AWS Region , for example, `"us-west-2"` . You can't set this parameter if the `MultiAZ` parameter is set to `true` .
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// A list of custom DNS name servers supported for the AWS DMS Serverless replication to access your source or target database. This list overrides the default name servers supported by the AWS DMS Serverless replication. You can specify a comma-separated list of internet addresses for up to four DNS name servers. For example: `"1.1.1.1,2.2.2.2,3.3.3.3,4.4.4.4"`
	DnsNameServers *string `pulumi:"dnsNameServers"`
	// An AWS Key Management Service ( AWS KMS ) key Amazon Resource Name (ARN) that is used to encrypt the data during AWS DMS Serverless replication.
	//
	// If you don't specify a value for the `KmsKeyId` parameter, AWS DMS uses your default encryption key.
	//
	// AWS KMS creates the default encryption key for your Amazon Web Services account. Your AWS account has a different default encryption key for each AWS Region .
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Specifies the maximum value of the AWS DMS capacity units (DCUs) for which a given AWS DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 1 DCU as the minimum value allowed. The list of valid DCU values includes 1, 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. So, the maximum value that you can specify for AWS DMS Serverless is 384. The `MaxCapacityUnits` parameter is the only DCU parameter you are required to specify.
	MaxCapacityUnits int `pulumi:"maxCapacityUnits"`
	// Specifies the minimum value of the AWS DMS capacity units (DCUs) for which a given AWS DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 1 DCU as the minimum value allowed. The list of valid DCU values includes 1, 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. So, the minimum DCU value that you can specify for AWS DMS Serverless is 1. If you don't set this value, AWS DMS sets this parameter to the minimum DCU value allowed, 1. If there is no current source activity, AWS DMS scales down your replication until it reaches the value specified in `MinCapacityUnits` .
	MinCapacityUnits *int `pulumi:"minCapacityUnits"`
	// Specifies whether the AWS DMS Serverless replication is a Multi-AZ deployment. You can't set the `AvailabilityZone` parameter if the `MultiAZ` parameter is set to `true` .
	MultiAz *bool `pulumi:"multiAz"`
	// The weekly time range during which system maintenance can occur for the AWS DMS Serverless replication, in Universal Coordinated Time (UTC). The format is `ddd:hh24:mi-ddd:hh24:mi` .
	//
	// The default is a 30-minute window selected at random from an 8-hour block of time per AWS Region . This maintenance occurs on a random day of the week. Valid values for days of the week include `Mon` , `Tue` , `Wed` , `Thu` , `Fri` , `Sat` , and `Sun` .
	//
	// Constraints include a minimum 30-minute window.
	PreferredMaintenanceWindow *string `pulumi:"preferredMaintenanceWindow"`
	// Specifies a subnet group identifier to associate with the AWS DMS Serverless replication.
	ReplicationSubnetGroupId *string `pulumi:"replicationSubnetGroupId"`
	// Specifies the virtual private cloud (VPC) security group to use with the AWS DMS Serverless replication. The VPC security group must work with the VPC containing the replication.
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
}

// ReplicationConfigComputeConfigInput is an input type that accepts ReplicationConfigComputeConfigArgs and ReplicationConfigComputeConfigOutput values.
// You can construct a concrete instance of `ReplicationConfigComputeConfigInput` via:
//
//	ReplicationConfigComputeConfigArgs{...}
type ReplicationConfigComputeConfigInput interface {
	pulumi.Input

	ToReplicationConfigComputeConfigOutput() ReplicationConfigComputeConfigOutput
	ToReplicationConfigComputeConfigOutputWithContext(context.Context) ReplicationConfigComputeConfigOutput
}

// Configuration parameters for provisioning a AWS DMS Serverless replication
type ReplicationConfigComputeConfigArgs struct {
	// The Availability Zone where the AWS DMS Serverless replication using this configuration will run. The default value is a random, system-chosen Availability Zone in the configuration's AWS Region , for example, `"us-west-2"` . You can't set this parameter if the `MultiAZ` parameter is set to `true` .
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// A list of custom DNS name servers supported for the AWS DMS Serverless replication to access your source or target database. This list overrides the default name servers supported by the AWS DMS Serverless replication. You can specify a comma-separated list of internet addresses for up to four DNS name servers. For example: `"1.1.1.1,2.2.2.2,3.3.3.3,4.4.4.4"`
	DnsNameServers pulumi.StringPtrInput `pulumi:"dnsNameServers"`
	// An AWS Key Management Service ( AWS KMS ) key Amazon Resource Name (ARN) that is used to encrypt the data during AWS DMS Serverless replication.
	//
	// If you don't specify a value for the `KmsKeyId` parameter, AWS DMS uses your default encryption key.
	//
	// AWS KMS creates the default encryption key for your Amazon Web Services account. Your AWS account has a different default encryption key for each AWS Region .
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// Specifies the maximum value of the AWS DMS capacity units (DCUs) for which a given AWS DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 1 DCU as the minimum value allowed. The list of valid DCU values includes 1, 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. So, the maximum value that you can specify for AWS DMS Serverless is 384. The `MaxCapacityUnits` parameter is the only DCU parameter you are required to specify.
	MaxCapacityUnits pulumi.IntInput `pulumi:"maxCapacityUnits"`
	// Specifies the minimum value of the AWS DMS capacity units (DCUs) for which a given AWS DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 1 DCU as the minimum value allowed. The list of valid DCU values includes 1, 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. So, the minimum DCU value that you can specify for AWS DMS Serverless is 1. If you don't set this value, AWS DMS sets this parameter to the minimum DCU value allowed, 1. If there is no current source activity, AWS DMS scales down your replication until it reaches the value specified in `MinCapacityUnits` .
	MinCapacityUnits pulumi.IntPtrInput `pulumi:"minCapacityUnits"`
	// Specifies whether the AWS DMS Serverless replication is a Multi-AZ deployment. You can't set the `AvailabilityZone` parameter if the `MultiAZ` parameter is set to `true` .
	MultiAz pulumi.BoolPtrInput `pulumi:"multiAz"`
	// The weekly time range during which system maintenance can occur for the AWS DMS Serverless replication, in Universal Coordinated Time (UTC). The format is `ddd:hh24:mi-ddd:hh24:mi` .
	//
	// The default is a 30-minute window selected at random from an 8-hour block of time per AWS Region . This maintenance occurs on a random day of the week. Valid values for days of the week include `Mon` , `Tue` , `Wed` , `Thu` , `Fri` , `Sat` , and `Sun` .
	//
	// Constraints include a minimum 30-minute window.
	PreferredMaintenanceWindow pulumi.StringPtrInput `pulumi:"preferredMaintenanceWindow"`
	// Specifies a subnet group identifier to associate with the AWS DMS Serverless replication.
	ReplicationSubnetGroupId pulumi.StringPtrInput `pulumi:"replicationSubnetGroupId"`
	// Specifies the virtual private cloud (VPC) security group to use with the AWS DMS Serverless replication. The VPC security group must work with the VPC containing the replication.
	VpcSecurityGroupIds pulumi.StringArrayInput `pulumi:"vpcSecurityGroupIds"`
}

func (ReplicationConfigComputeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationConfigComputeConfig)(nil)).Elem()
}

func (i ReplicationConfigComputeConfigArgs) ToReplicationConfigComputeConfigOutput() ReplicationConfigComputeConfigOutput {
	return i.ToReplicationConfigComputeConfigOutputWithContext(context.Background())
}

func (i ReplicationConfigComputeConfigArgs) ToReplicationConfigComputeConfigOutputWithContext(ctx context.Context) ReplicationConfigComputeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationConfigComputeConfigOutput)
}

// Configuration parameters for provisioning a AWS DMS Serverless replication
type ReplicationConfigComputeConfigOutput struct{ *pulumi.OutputState }

func (ReplicationConfigComputeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationConfigComputeConfig)(nil)).Elem()
}

func (o ReplicationConfigComputeConfigOutput) ToReplicationConfigComputeConfigOutput() ReplicationConfigComputeConfigOutput {
	return o
}

func (o ReplicationConfigComputeConfigOutput) ToReplicationConfigComputeConfigOutputWithContext(ctx context.Context) ReplicationConfigComputeConfigOutput {
	return o
}

// The Availability Zone where the AWS DMS Serverless replication using this configuration will run. The default value is a random, system-chosen Availability Zone in the configuration's AWS Region , for example, `"us-west-2"` . You can't set this parameter if the `MultiAZ` parameter is set to `true` .
func (o ReplicationConfigComputeConfigOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigComputeConfig) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// A list of custom DNS name servers supported for the AWS DMS Serverless replication to access your source or target database. This list overrides the default name servers supported by the AWS DMS Serverless replication. You can specify a comma-separated list of internet addresses for up to four DNS name servers. For example: `"1.1.1.1,2.2.2.2,3.3.3.3,4.4.4.4"`
func (o ReplicationConfigComputeConfigOutput) DnsNameServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigComputeConfig) *string { return v.DnsNameServers }).(pulumi.StringPtrOutput)
}

// An AWS Key Management Service ( AWS KMS ) key Amazon Resource Name (ARN) that is used to encrypt the data during AWS DMS Serverless replication.
//
// If you don't specify a value for the `KmsKeyId` parameter, AWS DMS uses your default encryption key.
//
// AWS KMS creates the default encryption key for your Amazon Web Services account. Your AWS account has a different default encryption key for each AWS Region .
func (o ReplicationConfigComputeConfigOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigComputeConfig) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// Specifies the maximum value of the AWS DMS capacity units (DCUs) for which a given AWS DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 1 DCU as the minimum value allowed. The list of valid DCU values includes 1, 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. So, the maximum value that you can specify for AWS DMS Serverless is 384. The `MaxCapacityUnits` parameter is the only DCU parameter you are required to specify.
func (o ReplicationConfigComputeConfigOutput) MaxCapacityUnits() pulumi.IntOutput {
	return o.ApplyT(func(v ReplicationConfigComputeConfig) int { return v.MaxCapacityUnits }).(pulumi.IntOutput)
}

// Specifies the minimum value of the AWS DMS capacity units (DCUs) for which a given AWS DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 1 DCU as the minimum value allowed. The list of valid DCU values includes 1, 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. So, the minimum DCU value that you can specify for AWS DMS Serverless is 1. If you don't set this value, AWS DMS sets this parameter to the minimum DCU value allowed, 1. If there is no current source activity, AWS DMS scales down your replication until it reaches the value specified in `MinCapacityUnits` .
func (o ReplicationConfigComputeConfigOutput) MinCapacityUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReplicationConfigComputeConfig) *int { return v.MinCapacityUnits }).(pulumi.IntPtrOutput)
}

// Specifies whether the AWS DMS Serverless replication is a Multi-AZ deployment. You can't set the `AvailabilityZone` parameter if the `MultiAZ` parameter is set to `true` .
func (o ReplicationConfigComputeConfigOutput) MultiAz() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ReplicationConfigComputeConfig) *bool { return v.MultiAz }).(pulumi.BoolPtrOutput)
}

// The weekly time range during which system maintenance can occur for the AWS DMS Serverless replication, in Universal Coordinated Time (UTC). The format is `ddd:hh24:mi-ddd:hh24:mi` .
//
// The default is a 30-minute window selected at random from an 8-hour block of time per AWS Region . This maintenance occurs on a random day of the week. Valid values for days of the week include `Mon` , `Tue` , `Wed` , `Thu` , `Fri` , `Sat` , and `Sun` .
//
// Constraints include a minimum 30-minute window.
func (o ReplicationConfigComputeConfigOutput) PreferredMaintenanceWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigComputeConfig) *string { return v.PreferredMaintenanceWindow }).(pulumi.StringPtrOutput)
}

// Specifies a subnet group identifier to associate with the AWS DMS Serverless replication.
func (o ReplicationConfigComputeConfigOutput) ReplicationSubnetGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigComputeConfig) *string { return v.ReplicationSubnetGroupId }).(pulumi.StringPtrOutput)
}

// Specifies the virtual private cloud (VPC) security group to use with the AWS DMS Serverless replication. The VPC security group must work with the VPC containing the replication.
func (o ReplicationConfigComputeConfigOutput) VpcSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationConfigComputeConfig) []string { return v.VpcSecurityGroupIds }).(pulumi.StringArrayOutput)
}

type ReplicationConfigComputeConfigPtrOutput struct{ *pulumi.OutputState }

func (ReplicationConfigComputeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationConfigComputeConfig)(nil)).Elem()
}

func (o ReplicationConfigComputeConfigPtrOutput) ToReplicationConfigComputeConfigPtrOutput() ReplicationConfigComputeConfigPtrOutput {
	return o
}

func (o ReplicationConfigComputeConfigPtrOutput) ToReplicationConfigComputeConfigPtrOutputWithContext(ctx context.Context) ReplicationConfigComputeConfigPtrOutput {
	return o
}

func (o ReplicationConfigComputeConfigPtrOutput) Elem() ReplicationConfigComputeConfigOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) ReplicationConfigComputeConfig {
		if v != nil {
			return *v
		}
		var ret ReplicationConfigComputeConfig
		return ret
	}).(ReplicationConfigComputeConfigOutput)
}

// The Availability Zone where the AWS DMS Serverless replication using this configuration will run. The default value is a random, system-chosen Availability Zone in the configuration's AWS Region , for example, `"us-west-2"` . You can't set this parameter if the `MultiAZ` parameter is set to `true` .
func (o ReplicationConfigComputeConfigPtrOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// A list of custom DNS name servers supported for the AWS DMS Serverless replication to access your source or target database. This list overrides the default name servers supported by the AWS DMS Serverless replication. You can specify a comma-separated list of internet addresses for up to four DNS name servers. For example: `"1.1.1.1,2.2.2.2,3.3.3.3,4.4.4.4"`
func (o ReplicationConfigComputeConfigPtrOutput) DnsNameServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) *string {
		if v == nil {
			return nil
		}
		return v.DnsNameServers
	}).(pulumi.StringPtrOutput)
}

// An AWS Key Management Service ( AWS KMS ) key Amazon Resource Name (ARN) that is used to encrypt the data during AWS DMS Serverless replication.
//
// If you don't specify a value for the `KmsKeyId` parameter, AWS DMS uses your default encryption key.
//
// AWS KMS creates the default encryption key for your Amazon Web Services account. Your AWS account has a different default encryption key for each AWS Region .
func (o ReplicationConfigComputeConfigPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// Specifies the maximum value of the AWS DMS capacity units (DCUs) for which a given AWS DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 1 DCU as the minimum value allowed. The list of valid DCU values includes 1, 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. So, the maximum value that you can specify for AWS DMS Serverless is 384. The `MaxCapacityUnits` parameter is the only DCU parameter you are required to specify.
func (o ReplicationConfigComputeConfigPtrOutput) MaxCapacityUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) *int {
		if v == nil {
			return nil
		}
		return &v.MaxCapacityUnits
	}).(pulumi.IntPtrOutput)
}

// Specifies the minimum value of the AWS DMS capacity units (DCUs) for which a given AWS DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 1 DCU as the minimum value allowed. The list of valid DCU values includes 1, 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. So, the minimum DCU value that you can specify for AWS DMS Serverless is 1. If you don't set this value, AWS DMS sets this parameter to the minimum DCU value allowed, 1. If there is no current source activity, AWS DMS scales down your replication until it reaches the value specified in `MinCapacityUnits` .
func (o ReplicationConfigComputeConfigPtrOutput) MinCapacityUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) *int {
		if v == nil {
			return nil
		}
		return v.MinCapacityUnits
	}).(pulumi.IntPtrOutput)
}

// Specifies whether the AWS DMS Serverless replication is a Multi-AZ deployment. You can't set the `AvailabilityZone` parameter if the `MultiAZ` parameter is set to `true` .
func (o ReplicationConfigComputeConfigPtrOutput) MultiAz() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.MultiAz
	}).(pulumi.BoolPtrOutput)
}

// The weekly time range during which system maintenance can occur for the AWS DMS Serverless replication, in Universal Coordinated Time (UTC). The format is `ddd:hh24:mi-ddd:hh24:mi` .
//
// The default is a 30-minute window selected at random from an 8-hour block of time per AWS Region . This maintenance occurs on a random day of the week. Valid values for days of the week include `Mon` , `Tue` , `Wed` , `Thu` , `Fri` , `Sat` , and `Sun` .
//
// Constraints include a minimum 30-minute window.
func (o ReplicationConfigComputeConfigPtrOutput) PreferredMaintenanceWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) *string {
		if v == nil {
			return nil
		}
		return v.PreferredMaintenanceWindow
	}).(pulumi.StringPtrOutput)
}

// Specifies a subnet group identifier to associate with the AWS DMS Serverless replication.
func (o ReplicationConfigComputeConfigPtrOutput) ReplicationSubnetGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) *string {
		if v == nil {
			return nil
		}
		return v.ReplicationSubnetGroupId
	}).(pulumi.StringPtrOutput)
}

// Specifies the virtual private cloud (VPC) security group to use with the AWS DMS Serverless replication. The VPC security group must work with the VPC containing the replication.
func (o ReplicationConfigComputeConfigPtrOutput) VpcSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) []string {
		if v == nil {
			return nil
		}
		return v.VpcSecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
//
//	resource.</p>
type ReplicationConfigTag struct {
	// <p>Tag key.</p>
	Key string `pulumi:"key"`
	// <p>Tag value.</p>
	Value string `pulumi:"value"`
}

// The property describes schema conversion application attributes for the migration project.
type SchemaConversionApplicationAttributesProperties struct {
	S3BucketPath    *string `pulumi:"s3BucketPath"`
	S3BucketRoleArn *string `pulumi:"s3BucketRoleArn"`
}

// SchemaConversionApplicationAttributesPropertiesInput is an input type that accepts SchemaConversionApplicationAttributesPropertiesArgs and SchemaConversionApplicationAttributesPropertiesOutput values.
// You can construct a concrete instance of `SchemaConversionApplicationAttributesPropertiesInput` via:
//
//	SchemaConversionApplicationAttributesPropertiesArgs{...}
type SchemaConversionApplicationAttributesPropertiesInput interface {
	pulumi.Input

	ToSchemaConversionApplicationAttributesPropertiesOutput() SchemaConversionApplicationAttributesPropertiesOutput
	ToSchemaConversionApplicationAttributesPropertiesOutputWithContext(context.Context) SchemaConversionApplicationAttributesPropertiesOutput
}

// The property describes schema conversion application attributes for the migration project.
type SchemaConversionApplicationAttributesPropertiesArgs struct {
	S3BucketPath    pulumi.StringPtrInput `pulumi:"s3BucketPath"`
	S3BucketRoleArn pulumi.StringPtrInput `pulumi:"s3BucketRoleArn"`
}

func (SchemaConversionApplicationAttributesPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaConversionApplicationAttributesProperties)(nil)).Elem()
}

func (i SchemaConversionApplicationAttributesPropertiesArgs) ToSchemaConversionApplicationAttributesPropertiesOutput() SchemaConversionApplicationAttributesPropertiesOutput {
	return i.ToSchemaConversionApplicationAttributesPropertiesOutputWithContext(context.Background())
}

func (i SchemaConversionApplicationAttributesPropertiesArgs) ToSchemaConversionApplicationAttributesPropertiesOutputWithContext(ctx context.Context) SchemaConversionApplicationAttributesPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaConversionApplicationAttributesPropertiesOutput)
}

func (i SchemaConversionApplicationAttributesPropertiesArgs) ToSchemaConversionApplicationAttributesPropertiesPtrOutput() SchemaConversionApplicationAttributesPropertiesPtrOutput {
	return i.ToSchemaConversionApplicationAttributesPropertiesPtrOutputWithContext(context.Background())
}

func (i SchemaConversionApplicationAttributesPropertiesArgs) ToSchemaConversionApplicationAttributesPropertiesPtrOutputWithContext(ctx context.Context) SchemaConversionApplicationAttributesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaConversionApplicationAttributesPropertiesOutput).ToSchemaConversionApplicationAttributesPropertiesPtrOutputWithContext(ctx)
}

// SchemaConversionApplicationAttributesPropertiesPtrInput is an input type that accepts SchemaConversionApplicationAttributesPropertiesArgs, SchemaConversionApplicationAttributesPropertiesPtr and SchemaConversionApplicationAttributesPropertiesPtrOutput values.
// You can construct a concrete instance of `SchemaConversionApplicationAttributesPropertiesPtrInput` via:
//
//	        SchemaConversionApplicationAttributesPropertiesArgs{...}
//
//	or:
//
//	        nil
type SchemaConversionApplicationAttributesPropertiesPtrInput interface {
	pulumi.Input

	ToSchemaConversionApplicationAttributesPropertiesPtrOutput() SchemaConversionApplicationAttributesPropertiesPtrOutput
	ToSchemaConversionApplicationAttributesPropertiesPtrOutputWithContext(context.Context) SchemaConversionApplicationAttributesPropertiesPtrOutput
}

type schemaConversionApplicationAttributesPropertiesPtrType SchemaConversionApplicationAttributesPropertiesArgs

func SchemaConversionApplicationAttributesPropertiesPtr(v *SchemaConversionApplicationAttributesPropertiesArgs) SchemaConversionApplicationAttributesPropertiesPtrInput {
	return (*schemaConversionApplicationAttributesPropertiesPtrType)(v)
}

func (*schemaConversionApplicationAttributesPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaConversionApplicationAttributesProperties)(nil)).Elem()
}

func (i *schemaConversionApplicationAttributesPropertiesPtrType) ToSchemaConversionApplicationAttributesPropertiesPtrOutput() SchemaConversionApplicationAttributesPropertiesPtrOutput {
	return i.ToSchemaConversionApplicationAttributesPropertiesPtrOutputWithContext(context.Background())
}

func (i *schemaConversionApplicationAttributesPropertiesPtrType) ToSchemaConversionApplicationAttributesPropertiesPtrOutputWithContext(ctx context.Context) SchemaConversionApplicationAttributesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaConversionApplicationAttributesPropertiesPtrOutput)
}

// The property describes schema conversion application attributes for the migration project.
type SchemaConversionApplicationAttributesPropertiesOutput struct{ *pulumi.OutputState }

func (SchemaConversionApplicationAttributesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaConversionApplicationAttributesProperties)(nil)).Elem()
}

func (o SchemaConversionApplicationAttributesPropertiesOutput) ToSchemaConversionApplicationAttributesPropertiesOutput() SchemaConversionApplicationAttributesPropertiesOutput {
	return o
}

func (o SchemaConversionApplicationAttributesPropertiesOutput) ToSchemaConversionApplicationAttributesPropertiesOutputWithContext(ctx context.Context) SchemaConversionApplicationAttributesPropertiesOutput {
	return o
}

func (o SchemaConversionApplicationAttributesPropertiesOutput) ToSchemaConversionApplicationAttributesPropertiesPtrOutput() SchemaConversionApplicationAttributesPropertiesPtrOutput {
	return o.ToSchemaConversionApplicationAttributesPropertiesPtrOutputWithContext(context.Background())
}

func (o SchemaConversionApplicationAttributesPropertiesOutput) ToSchemaConversionApplicationAttributesPropertiesPtrOutputWithContext(ctx context.Context) SchemaConversionApplicationAttributesPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaConversionApplicationAttributesProperties) *SchemaConversionApplicationAttributesProperties {
		return &v
	}).(SchemaConversionApplicationAttributesPropertiesPtrOutput)
}

func (o SchemaConversionApplicationAttributesPropertiesOutput) S3BucketPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaConversionApplicationAttributesProperties) *string { return v.S3BucketPath }).(pulumi.StringPtrOutput)
}

func (o SchemaConversionApplicationAttributesPropertiesOutput) S3BucketRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaConversionApplicationAttributesProperties) *string { return v.S3BucketRoleArn }).(pulumi.StringPtrOutput)
}

type SchemaConversionApplicationAttributesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SchemaConversionApplicationAttributesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaConversionApplicationAttributesProperties)(nil)).Elem()
}

func (o SchemaConversionApplicationAttributesPropertiesPtrOutput) ToSchemaConversionApplicationAttributesPropertiesPtrOutput() SchemaConversionApplicationAttributesPropertiesPtrOutput {
	return o
}

func (o SchemaConversionApplicationAttributesPropertiesPtrOutput) ToSchemaConversionApplicationAttributesPropertiesPtrOutputWithContext(ctx context.Context) SchemaConversionApplicationAttributesPropertiesPtrOutput {
	return o
}

func (o SchemaConversionApplicationAttributesPropertiesPtrOutput) Elem() SchemaConversionApplicationAttributesPropertiesOutput {
	return o.ApplyT(func(v *SchemaConversionApplicationAttributesProperties) SchemaConversionApplicationAttributesProperties {
		if v != nil {
			return *v
		}
		var ret SchemaConversionApplicationAttributesProperties
		return ret
	}).(SchemaConversionApplicationAttributesPropertiesOutput)
}

func (o SchemaConversionApplicationAttributesPropertiesPtrOutput) S3BucketPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaConversionApplicationAttributesProperties) *string {
		if v == nil {
			return nil
		}
		return v.S3BucketPath
	}).(pulumi.StringPtrOutput)
}

func (o SchemaConversionApplicationAttributesPropertiesPtrOutput) S3BucketRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaConversionApplicationAttributesProperties) *string {
		if v == nil {
			return nil
		}
		return v.S3BucketRoleArn
	}).(pulumi.StringPtrOutput)
}

// The property identifies the exact type of settings for the data provider.
type SettingsProperties struct {
	// DocDbSettings property identifier.
	DocDbSettings *SettingsPropertiesDocDbSettingsProperties `pulumi:"docDbSettings"`
	// IbmDb2LuwSettings property identifier.
	IbmDb2LuwSettings *SettingsPropertiesIbmDb2LuwSettingsProperties `pulumi:"ibmDb2LuwSettings"`
	// IbmDb2zOsSettings property identifier.
	IbmDb2zOsSettings *SettingsPropertiesIbmDb2zOsSettingsProperties `pulumi:"ibmDb2zOsSettings"`
	// MariaDbSettings property identifier.
	MariaDbSettings *SettingsPropertiesMariaDbSettingsProperties `pulumi:"mariaDbSettings"`
	// MicrosoftSqlServerSettings property identifier.
	MicrosoftSqlServerSettings *SettingsPropertiesMicrosoftSqlServerSettingsProperties `pulumi:"microsoftSqlServerSettings"`
	// MongoDbSettings property identifier.
	MongoDbSettings *SettingsPropertiesMongoDbSettingsProperties `pulumi:"mongoDbSettings"`
	// MySqlSettings property identifier.
	MySqlSettings *SettingsPropertiesMySqlSettingsProperties `pulumi:"mySqlSettings"`
	// OracleSettings property identifier.
	OracleSettings *SettingsPropertiesOracleSettingsProperties `pulumi:"oracleSettings"`
	// PostgreSqlSettings property identifier.
	PostgreSqlSettings *SettingsPropertiesPostgreSqlSettingsProperties `pulumi:"postgreSqlSettings"`
	// RedshiftSettings property identifier.
	RedshiftSettings *SettingsPropertiesRedshiftSettingsProperties `pulumi:"redshiftSettings"`
}

// SettingsPropertiesInput is an input type that accepts SettingsPropertiesArgs and SettingsPropertiesOutput values.
// You can construct a concrete instance of `SettingsPropertiesInput` via:
//
//	SettingsPropertiesArgs{...}
type SettingsPropertiesInput interface {
	pulumi.Input

	ToSettingsPropertiesOutput() SettingsPropertiesOutput
	ToSettingsPropertiesOutputWithContext(context.Context) SettingsPropertiesOutput
}

// The property identifies the exact type of settings for the data provider.
type SettingsPropertiesArgs struct {
	// DocDbSettings property identifier.
	DocDbSettings SettingsPropertiesDocDbSettingsPropertiesPtrInput `pulumi:"docDbSettings"`
	// IbmDb2LuwSettings property identifier.
	IbmDb2LuwSettings SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrInput `pulumi:"ibmDb2LuwSettings"`
	// IbmDb2zOsSettings property identifier.
	IbmDb2zOsSettings SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrInput `pulumi:"ibmDb2zOsSettings"`
	// MariaDbSettings property identifier.
	MariaDbSettings SettingsPropertiesMariaDbSettingsPropertiesPtrInput `pulumi:"mariaDbSettings"`
	// MicrosoftSqlServerSettings property identifier.
	MicrosoftSqlServerSettings SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrInput `pulumi:"microsoftSqlServerSettings"`
	// MongoDbSettings property identifier.
	MongoDbSettings SettingsPropertiesMongoDbSettingsPropertiesPtrInput `pulumi:"mongoDbSettings"`
	// MySqlSettings property identifier.
	MySqlSettings SettingsPropertiesMySqlSettingsPropertiesPtrInput `pulumi:"mySqlSettings"`
	// OracleSettings property identifier.
	OracleSettings SettingsPropertiesOracleSettingsPropertiesPtrInput `pulumi:"oracleSettings"`
	// PostgreSqlSettings property identifier.
	PostgreSqlSettings SettingsPropertiesPostgreSqlSettingsPropertiesPtrInput `pulumi:"postgreSqlSettings"`
	// RedshiftSettings property identifier.
	RedshiftSettings SettingsPropertiesRedshiftSettingsPropertiesPtrInput `pulumi:"redshiftSettings"`
}

func (SettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsProperties)(nil)).Elem()
}

func (i SettingsPropertiesArgs) ToSettingsPropertiesOutput() SettingsPropertiesOutput {
	return i.ToSettingsPropertiesOutputWithContext(context.Background())
}

func (i SettingsPropertiesArgs) ToSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesOutput)
}

func (i SettingsPropertiesArgs) ToSettingsPropertiesPtrOutput() SettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i SettingsPropertiesArgs) ToSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesOutput).ToSettingsPropertiesPtrOutputWithContext(ctx)
}

// SettingsPropertiesPtrInput is an input type that accepts SettingsPropertiesArgs, SettingsPropertiesPtr and SettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `SettingsPropertiesPtrInput` via:
//
//	        SettingsPropertiesArgs{...}
//
//	or:
//
//	        nil
type SettingsPropertiesPtrInput interface {
	pulumi.Input

	ToSettingsPropertiesPtrOutput() SettingsPropertiesPtrOutput
	ToSettingsPropertiesPtrOutputWithContext(context.Context) SettingsPropertiesPtrOutput
}

type settingsPropertiesPtrType SettingsPropertiesArgs

func SettingsPropertiesPtr(v *SettingsPropertiesArgs) SettingsPropertiesPtrInput {
	return (*settingsPropertiesPtrType)(v)
}

func (*settingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsProperties)(nil)).Elem()
}

func (i *settingsPropertiesPtrType) ToSettingsPropertiesPtrOutput() SettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *settingsPropertiesPtrType) ToSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesPtrOutput)
}

// The property identifies the exact type of settings for the data provider.
type SettingsPropertiesOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesOutput) ToSettingsPropertiesOutput() SettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesOutput) ToSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesOutput) ToSettingsPropertiesPtrOutput() SettingsPropertiesPtrOutput {
	return o.ToSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o SettingsPropertiesOutput) ToSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsProperties) *SettingsProperties {
		return &v
	}).(SettingsPropertiesPtrOutput)
}

// DocDbSettings property identifier.
func (o SettingsPropertiesOutput) DocDbSettings() SettingsPropertiesDocDbSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v SettingsProperties) *SettingsPropertiesDocDbSettingsProperties { return v.DocDbSettings }).(SettingsPropertiesDocDbSettingsPropertiesPtrOutput)
}

// IbmDb2LuwSettings property identifier.
func (o SettingsPropertiesOutput) IbmDb2LuwSettings() SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v SettingsProperties) *SettingsPropertiesIbmDb2LuwSettingsProperties { return v.IbmDb2LuwSettings }).(SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput)
}

// IbmDb2zOsSettings property identifier.
func (o SettingsPropertiesOutput) IbmDb2zOsSettings() SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v SettingsProperties) *SettingsPropertiesIbmDb2zOsSettingsProperties { return v.IbmDb2zOsSettings }).(SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput)
}

// MariaDbSettings property identifier.
func (o SettingsPropertiesOutput) MariaDbSettings() SettingsPropertiesMariaDbSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v SettingsProperties) *SettingsPropertiesMariaDbSettingsProperties { return v.MariaDbSettings }).(SettingsPropertiesMariaDbSettingsPropertiesPtrOutput)
}

// MicrosoftSqlServerSettings property identifier.
func (o SettingsPropertiesOutput) MicrosoftSqlServerSettings() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v SettingsProperties) *SettingsPropertiesMicrosoftSqlServerSettingsProperties {
		return v.MicrosoftSqlServerSettings
	}).(SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput)
}

// MongoDbSettings property identifier.
func (o SettingsPropertiesOutput) MongoDbSettings() SettingsPropertiesMongoDbSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v SettingsProperties) *SettingsPropertiesMongoDbSettingsProperties { return v.MongoDbSettings }).(SettingsPropertiesMongoDbSettingsPropertiesPtrOutput)
}

// MySqlSettings property identifier.
func (o SettingsPropertiesOutput) MySqlSettings() SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v SettingsProperties) *SettingsPropertiesMySqlSettingsProperties { return v.MySqlSettings }).(SettingsPropertiesMySqlSettingsPropertiesPtrOutput)
}

// OracleSettings property identifier.
func (o SettingsPropertiesOutput) OracleSettings() SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v SettingsProperties) *SettingsPropertiesOracleSettingsProperties { return v.OracleSettings }).(SettingsPropertiesOracleSettingsPropertiesPtrOutput)
}

// PostgreSqlSettings property identifier.
func (o SettingsPropertiesOutput) PostgreSqlSettings() SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v SettingsProperties) *SettingsPropertiesPostgreSqlSettingsProperties {
		return v.PostgreSqlSettings
	}).(SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput)
}

// RedshiftSettings property identifier.
func (o SettingsPropertiesOutput) RedshiftSettings() SettingsPropertiesRedshiftSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v SettingsProperties) *SettingsPropertiesRedshiftSettingsProperties { return v.RedshiftSettings }).(SettingsPropertiesRedshiftSettingsPropertiesPtrOutput)
}

type SettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesPtrOutput) ToSettingsPropertiesPtrOutput() SettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesPtrOutput) ToSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesPtrOutput) Elem() SettingsPropertiesOutput {
	return o.ApplyT(func(v *SettingsProperties) SettingsProperties {
		if v != nil {
			return *v
		}
		var ret SettingsProperties
		return ret
	}).(SettingsPropertiesOutput)
}

// DocDbSettings property identifier.
func (o SettingsPropertiesPtrOutput) DocDbSettings() SettingsPropertiesDocDbSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v *SettingsProperties) *SettingsPropertiesDocDbSettingsProperties {
		if v == nil {
			return nil
		}
		return v.DocDbSettings
	}).(SettingsPropertiesDocDbSettingsPropertiesPtrOutput)
}

// IbmDb2LuwSettings property identifier.
func (o SettingsPropertiesPtrOutput) IbmDb2LuwSettings() SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v *SettingsProperties) *SettingsPropertiesIbmDb2LuwSettingsProperties {
		if v == nil {
			return nil
		}
		return v.IbmDb2LuwSettings
	}).(SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput)
}

// IbmDb2zOsSettings property identifier.
func (o SettingsPropertiesPtrOutput) IbmDb2zOsSettings() SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v *SettingsProperties) *SettingsPropertiesIbmDb2zOsSettingsProperties {
		if v == nil {
			return nil
		}
		return v.IbmDb2zOsSettings
	}).(SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput)
}

// MariaDbSettings property identifier.
func (o SettingsPropertiesPtrOutput) MariaDbSettings() SettingsPropertiesMariaDbSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v *SettingsProperties) *SettingsPropertiesMariaDbSettingsProperties {
		if v == nil {
			return nil
		}
		return v.MariaDbSettings
	}).(SettingsPropertiesMariaDbSettingsPropertiesPtrOutput)
}

// MicrosoftSqlServerSettings property identifier.
func (o SettingsPropertiesPtrOutput) MicrosoftSqlServerSettings() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v *SettingsProperties) *SettingsPropertiesMicrosoftSqlServerSettingsProperties {
		if v == nil {
			return nil
		}
		return v.MicrosoftSqlServerSettings
	}).(SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput)
}

// MongoDbSettings property identifier.
func (o SettingsPropertiesPtrOutput) MongoDbSettings() SettingsPropertiesMongoDbSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v *SettingsProperties) *SettingsPropertiesMongoDbSettingsProperties {
		if v == nil {
			return nil
		}
		return v.MongoDbSettings
	}).(SettingsPropertiesMongoDbSettingsPropertiesPtrOutput)
}

// MySqlSettings property identifier.
func (o SettingsPropertiesPtrOutput) MySqlSettings() SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v *SettingsProperties) *SettingsPropertiesMySqlSettingsProperties {
		if v == nil {
			return nil
		}
		return v.MySqlSettings
	}).(SettingsPropertiesMySqlSettingsPropertiesPtrOutput)
}

// OracleSettings property identifier.
func (o SettingsPropertiesPtrOutput) OracleSettings() SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v *SettingsProperties) *SettingsPropertiesOracleSettingsProperties {
		if v == nil {
			return nil
		}
		return v.OracleSettings
	}).(SettingsPropertiesOracleSettingsPropertiesPtrOutput)
}

// PostgreSqlSettings property identifier.
func (o SettingsPropertiesPtrOutput) PostgreSqlSettings() SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v *SettingsProperties) *SettingsPropertiesPostgreSqlSettingsProperties {
		if v == nil {
			return nil
		}
		return v.PostgreSqlSettings
	}).(SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput)
}

// RedshiftSettings property identifier.
func (o SettingsPropertiesPtrOutput) RedshiftSettings() SettingsPropertiesRedshiftSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v *SettingsProperties) *SettingsPropertiesRedshiftSettingsProperties {
		if v == nil {
			return nil
		}
		return v.RedshiftSettings
	}).(SettingsPropertiesRedshiftSettingsPropertiesPtrOutput)
}

// DocDbSettings property identifier.
type SettingsPropertiesDocDbSettingsProperties struct {
	CertificateArn *string                          `pulumi:"certificateArn"`
	DatabaseName   string                           `pulumi:"databaseName"`
	Port           int                              `pulumi:"port"`
	ServerName     string                           `pulumi:"serverName"`
	SslMode        *DataProviderMongoDbSslModeValue `pulumi:"sslMode"`
}

// SettingsPropertiesDocDbSettingsPropertiesInput is an input type that accepts SettingsPropertiesDocDbSettingsPropertiesArgs and SettingsPropertiesDocDbSettingsPropertiesOutput values.
// You can construct a concrete instance of `SettingsPropertiesDocDbSettingsPropertiesInput` via:
//
//	SettingsPropertiesDocDbSettingsPropertiesArgs{...}
type SettingsPropertiesDocDbSettingsPropertiesInput interface {
	pulumi.Input

	ToSettingsPropertiesDocDbSettingsPropertiesOutput() SettingsPropertiesDocDbSettingsPropertiesOutput
	ToSettingsPropertiesDocDbSettingsPropertiesOutputWithContext(context.Context) SettingsPropertiesDocDbSettingsPropertiesOutput
}

// DocDbSettings property identifier.
type SettingsPropertiesDocDbSettingsPropertiesArgs struct {
	CertificateArn pulumi.StringPtrInput                   `pulumi:"certificateArn"`
	DatabaseName   pulumi.StringInput                      `pulumi:"databaseName"`
	Port           pulumi.IntInput                         `pulumi:"port"`
	ServerName     pulumi.StringInput                      `pulumi:"serverName"`
	SslMode        DataProviderMongoDbSslModeValuePtrInput `pulumi:"sslMode"`
}

func (SettingsPropertiesDocDbSettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesDocDbSettingsProperties)(nil)).Elem()
}

func (i SettingsPropertiesDocDbSettingsPropertiesArgs) ToSettingsPropertiesDocDbSettingsPropertiesOutput() SettingsPropertiesDocDbSettingsPropertiesOutput {
	return i.ToSettingsPropertiesDocDbSettingsPropertiesOutputWithContext(context.Background())
}

func (i SettingsPropertiesDocDbSettingsPropertiesArgs) ToSettingsPropertiesDocDbSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesDocDbSettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesDocDbSettingsPropertiesOutput)
}

func (i SettingsPropertiesDocDbSettingsPropertiesArgs) ToSettingsPropertiesDocDbSettingsPropertiesPtrOutput() SettingsPropertiesDocDbSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesDocDbSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i SettingsPropertiesDocDbSettingsPropertiesArgs) ToSettingsPropertiesDocDbSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesDocDbSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesDocDbSettingsPropertiesOutput).ToSettingsPropertiesDocDbSettingsPropertiesPtrOutputWithContext(ctx)
}

// SettingsPropertiesDocDbSettingsPropertiesPtrInput is an input type that accepts SettingsPropertiesDocDbSettingsPropertiesArgs, SettingsPropertiesDocDbSettingsPropertiesPtr and SettingsPropertiesDocDbSettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `SettingsPropertiesDocDbSettingsPropertiesPtrInput` via:
//
//	        SettingsPropertiesDocDbSettingsPropertiesArgs{...}
//
//	or:
//
//	        nil
type SettingsPropertiesDocDbSettingsPropertiesPtrInput interface {
	pulumi.Input

	ToSettingsPropertiesDocDbSettingsPropertiesPtrOutput() SettingsPropertiesDocDbSettingsPropertiesPtrOutput
	ToSettingsPropertiesDocDbSettingsPropertiesPtrOutputWithContext(context.Context) SettingsPropertiesDocDbSettingsPropertiesPtrOutput
}

type settingsPropertiesDocDbSettingsPropertiesPtrType SettingsPropertiesDocDbSettingsPropertiesArgs

func SettingsPropertiesDocDbSettingsPropertiesPtr(v *SettingsPropertiesDocDbSettingsPropertiesArgs) SettingsPropertiesDocDbSettingsPropertiesPtrInput {
	return (*settingsPropertiesDocDbSettingsPropertiesPtrType)(v)
}

func (*settingsPropertiesDocDbSettingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesDocDbSettingsProperties)(nil)).Elem()
}

func (i *settingsPropertiesDocDbSettingsPropertiesPtrType) ToSettingsPropertiesDocDbSettingsPropertiesPtrOutput() SettingsPropertiesDocDbSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesDocDbSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *settingsPropertiesDocDbSettingsPropertiesPtrType) ToSettingsPropertiesDocDbSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesDocDbSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesDocDbSettingsPropertiesPtrOutput)
}

// DocDbSettings property identifier.
type SettingsPropertiesDocDbSettingsPropertiesOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesDocDbSettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesDocDbSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesDocDbSettingsPropertiesOutput) ToSettingsPropertiesDocDbSettingsPropertiesOutput() SettingsPropertiesDocDbSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesDocDbSettingsPropertiesOutput) ToSettingsPropertiesDocDbSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesDocDbSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesDocDbSettingsPropertiesOutput) ToSettingsPropertiesDocDbSettingsPropertiesPtrOutput() SettingsPropertiesDocDbSettingsPropertiesPtrOutput {
	return o.ToSettingsPropertiesDocDbSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o SettingsPropertiesDocDbSettingsPropertiesOutput) ToSettingsPropertiesDocDbSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesDocDbSettingsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsPropertiesDocDbSettingsProperties) *SettingsPropertiesDocDbSettingsProperties {
		return &v
	}).(SettingsPropertiesDocDbSettingsPropertiesPtrOutput)
}

func (o SettingsPropertiesDocDbSettingsPropertiesOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesDocDbSettingsProperties) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesDocDbSettingsPropertiesOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesDocDbSettingsProperties) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesDocDbSettingsPropertiesOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v SettingsPropertiesDocDbSettingsProperties) int { return v.Port }).(pulumi.IntOutput)
}

func (o SettingsPropertiesDocDbSettingsPropertiesOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesDocDbSettingsProperties) string { return v.ServerName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesDocDbSettingsPropertiesOutput) SslMode() DataProviderMongoDbSslModeValuePtrOutput {
	return o.ApplyT(func(v SettingsPropertiesDocDbSettingsProperties) *DataProviderMongoDbSslModeValue { return v.SslMode }).(DataProviderMongoDbSslModeValuePtrOutput)
}

type SettingsPropertiesDocDbSettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesDocDbSettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesDocDbSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesDocDbSettingsPropertiesPtrOutput) ToSettingsPropertiesDocDbSettingsPropertiesPtrOutput() SettingsPropertiesDocDbSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesDocDbSettingsPropertiesPtrOutput) ToSettingsPropertiesDocDbSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesDocDbSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesDocDbSettingsPropertiesPtrOutput) Elem() SettingsPropertiesDocDbSettingsPropertiesOutput {
	return o.ApplyT(func(v *SettingsPropertiesDocDbSettingsProperties) SettingsPropertiesDocDbSettingsProperties {
		if v != nil {
			return *v
		}
		var ret SettingsPropertiesDocDbSettingsProperties
		return ret
	}).(SettingsPropertiesDocDbSettingsPropertiesOutput)
}

func (o SettingsPropertiesDocDbSettingsPropertiesPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesDocDbSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesDocDbSettingsPropertiesPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesDocDbSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesDocDbSettingsPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesDocDbSettingsProperties) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o SettingsPropertiesDocDbSettingsPropertiesPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesDocDbSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesDocDbSettingsPropertiesPtrOutput) SslMode() DataProviderMongoDbSslModeValuePtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesDocDbSettingsProperties) *DataProviderMongoDbSslModeValue {
		if v == nil {
			return nil
		}
		return v.SslMode
	}).(DataProviderMongoDbSslModeValuePtrOutput)
}

// IbmDb2LuwSettings property identifier.
type SettingsPropertiesIbmDb2LuwSettingsProperties struct {
	CertificateArn *string                     `pulumi:"certificateArn"`
	DatabaseName   string                      `pulumi:"databaseName"`
	Port           int                         `pulumi:"port"`
	ServerName     string                      `pulumi:"serverName"`
	SslMode        DataProviderDb2SslModeValue `pulumi:"sslMode"`
}

// SettingsPropertiesIbmDb2LuwSettingsPropertiesInput is an input type that accepts SettingsPropertiesIbmDb2LuwSettingsPropertiesArgs and SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput values.
// You can construct a concrete instance of `SettingsPropertiesIbmDb2LuwSettingsPropertiesInput` via:
//
//	SettingsPropertiesIbmDb2LuwSettingsPropertiesArgs{...}
type SettingsPropertiesIbmDb2LuwSettingsPropertiesInput interface {
	pulumi.Input

	ToSettingsPropertiesIbmDb2LuwSettingsPropertiesOutput() SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput
	ToSettingsPropertiesIbmDb2LuwSettingsPropertiesOutputWithContext(context.Context) SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput
}

// IbmDb2LuwSettings property identifier.
type SettingsPropertiesIbmDb2LuwSettingsPropertiesArgs struct {
	CertificateArn pulumi.StringPtrInput            `pulumi:"certificateArn"`
	DatabaseName   pulumi.StringInput               `pulumi:"databaseName"`
	Port           pulumi.IntInput                  `pulumi:"port"`
	ServerName     pulumi.StringInput               `pulumi:"serverName"`
	SslMode        DataProviderDb2SslModeValueInput `pulumi:"sslMode"`
}

func (SettingsPropertiesIbmDb2LuwSettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesIbmDb2LuwSettingsProperties)(nil)).Elem()
}

func (i SettingsPropertiesIbmDb2LuwSettingsPropertiesArgs) ToSettingsPropertiesIbmDb2LuwSettingsPropertiesOutput() SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput {
	return i.ToSettingsPropertiesIbmDb2LuwSettingsPropertiesOutputWithContext(context.Background())
}

func (i SettingsPropertiesIbmDb2LuwSettingsPropertiesArgs) ToSettingsPropertiesIbmDb2LuwSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput)
}

func (i SettingsPropertiesIbmDb2LuwSettingsPropertiesArgs) ToSettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput() SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i SettingsPropertiesIbmDb2LuwSettingsPropertiesArgs) ToSettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput).ToSettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutputWithContext(ctx)
}

// SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrInput is an input type that accepts SettingsPropertiesIbmDb2LuwSettingsPropertiesArgs, SettingsPropertiesIbmDb2LuwSettingsPropertiesPtr and SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrInput` via:
//
//	        SettingsPropertiesIbmDb2LuwSettingsPropertiesArgs{...}
//
//	or:
//
//	        nil
type SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrInput interface {
	pulumi.Input

	ToSettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput() SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput
	ToSettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutputWithContext(context.Context) SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput
}

type settingsPropertiesIbmDb2LuwSettingsPropertiesPtrType SettingsPropertiesIbmDb2LuwSettingsPropertiesArgs

func SettingsPropertiesIbmDb2LuwSettingsPropertiesPtr(v *SettingsPropertiesIbmDb2LuwSettingsPropertiesArgs) SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrInput {
	return (*settingsPropertiesIbmDb2LuwSettingsPropertiesPtrType)(v)
}

func (*settingsPropertiesIbmDb2LuwSettingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesIbmDb2LuwSettingsProperties)(nil)).Elem()
}

func (i *settingsPropertiesIbmDb2LuwSettingsPropertiesPtrType) ToSettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput() SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *settingsPropertiesIbmDb2LuwSettingsPropertiesPtrType) ToSettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput)
}

// IbmDb2LuwSettings property identifier.
type SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesIbmDb2LuwSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput) ToSettingsPropertiesIbmDb2LuwSettingsPropertiesOutput() SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput) ToSettingsPropertiesIbmDb2LuwSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput) ToSettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput() SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput {
	return o.ToSettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput) ToSettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsPropertiesIbmDb2LuwSettingsProperties) *SettingsPropertiesIbmDb2LuwSettingsProperties {
		return &v
	}).(SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput)
}

func (o SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesIbmDb2LuwSettingsProperties) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesIbmDb2LuwSettingsProperties) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v SettingsPropertiesIbmDb2LuwSettingsProperties) int { return v.Port }).(pulumi.IntOutput)
}

func (o SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesIbmDb2LuwSettingsProperties) string { return v.ServerName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput) SslMode() DataProviderDb2SslModeValueOutput {
	return o.ApplyT(func(v SettingsPropertiesIbmDb2LuwSettingsProperties) DataProviderDb2SslModeValue { return v.SslMode }).(DataProviderDb2SslModeValueOutput)
}

type SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesIbmDb2LuwSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput) ToSettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput() SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput) ToSettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput) Elem() SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput {
	return o.ApplyT(func(v *SettingsPropertiesIbmDb2LuwSettingsProperties) SettingsPropertiesIbmDb2LuwSettingsProperties {
		if v != nil {
			return *v
		}
		var ret SettingsPropertiesIbmDb2LuwSettingsProperties
		return ret
	}).(SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput)
}

func (o SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesIbmDb2LuwSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesIbmDb2LuwSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesIbmDb2LuwSettingsProperties) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesIbmDb2LuwSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput) SslMode() DataProviderDb2SslModeValuePtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesIbmDb2LuwSettingsProperties) *DataProviderDb2SslModeValue {
		if v == nil {
			return nil
		}
		return &v.SslMode
	}).(DataProviderDb2SslModeValuePtrOutput)
}

// IbmDb2zOsSettings property identifier.
type SettingsPropertiesIbmDb2zOsSettingsProperties struct {
	CertificateArn *string                     `pulumi:"certificateArn"`
	DatabaseName   string                      `pulumi:"databaseName"`
	Port           int                         `pulumi:"port"`
	ServerName     string                      `pulumi:"serverName"`
	SslMode        DataProviderDb2SslModeValue `pulumi:"sslMode"`
}

// SettingsPropertiesIbmDb2zOsSettingsPropertiesInput is an input type that accepts SettingsPropertiesIbmDb2zOsSettingsPropertiesArgs and SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput values.
// You can construct a concrete instance of `SettingsPropertiesIbmDb2zOsSettingsPropertiesInput` via:
//
//	SettingsPropertiesIbmDb2zOsSettingsPropertiesArgs{...}
type SettingsPropertiesIbmDb2zOsSettingsPropertiesInput interface {
	pulumi.Input

	ToSettingsPropertiesIbmDb2zOsSettingsPropertiesOutput() SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput
	ToSettingsPropertiesIbmDb2zOsSettingsPropertiesOutputWithContext(context.Context) SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput
}

// IbmDb2zOsSettings property identifier.
type SettingsPropertiesIbmDb2zOsSettingsPropertiesArgs struct {
	CertificateArn pulumi.StringPtrInput            `pulumi:"certificateArn"`
	DatabaseName   pulumi.StringInput               `pulumi:"databaseName"`
	Port           pulumi.IntInput                  `pulumi:"port"`
	ServerName     pulumi.StringInput               `pulumi:"serverName"`
	SslMode        DataProviderDb2SslModeValueInput `pulumi:"sslMode"`
}

func (SettingsPropertiesIbmDb2zOsSettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesIbmDb2zOsSettingsProperties)(nil)).Elem()
}

func (i SettingsPropertiesIbmDb2zOsSettingsPropertiesArgs) ToSettingsPropertiesIbmDb2zOsSettingsPropertiesOutput() SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput {
	return i.ToSettingsPropertiesIbmDb2zOsSettingsPropertiesOutputWithContext(context.Background())
}

func (i SettingsPropertiesIbmDb2zOsSettingsPropertiesArgs) ToSettingsPropertiesIbmDb2zOsSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput)
}

func (i SettingsPropertiesIbmDb2zOsSettingsPropertiesArgs) ToSettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput() SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i SettingsPropertiesIbmDb2zOsSettingsPropertiesArgs) ToSettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput).ToSettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutputWithContext(ctx)
}

// SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrInput is an input type that accepts SettingsPropertiesIbmDb2zOsSettingsPropertiesArgs, SettingsPropertiesIbmDb2zOsSettingsPropertiesPtr and SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrInput` via:
//
//	        SettingsPropertiesIbmDb2zOsSettingsPropertiesArgs{...}
//
//	or:
//
//	        nil
type SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrInput interface {
	pulumi.Input

	ToSettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput() SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput
	ToSettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutputWithContext(context.Context) SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput
}

type settingsPropertiesIbmDb2zOsSettingsPropertiesPtrType SettingsPropertiesIbmDb2zOsSettingsPropertiesArgs

func SettingsPropertiesIbmDb2zOsSettingsPropertiesPtr(v *SettingsPropertiesIbmDb2zOsSettingsPropertiesArgs) SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrInput {
	return (*settingsPropertiesIbmDb2zOsSettingsPropertiesPtrType)(v)
}

func (*settingsPropertiesIbmDb2zOsSettingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesIbmDb2zOsSettingsProperties)(nil)).Elem()
}

func (i *settingsPropertiesIbmDb2zOsSettingsPropertiesPtrType) ToSettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput() SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *settingsPropertiesIbmDb2zOsSettingsPropertiesPtrType) ToSettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput)
}

// IbmDb2zOsSettings property identifier.
type SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesIbmDb2zOsSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput) ToSettingsPropertiesIbmDb2zOsSettingsPropertiesOutput() SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput) ToSettingsPropertiesIbmDb2zOsSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput) ToSettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput() SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput {
	return o.ToSettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput) ToSettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsPropertiesIbmDb2zOsSettingsProperties) *SettingsPropertiesIbmDb2zOsSettingsProperties {
		return &v
	}).(SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput)
}

func (o SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesIbmDb2zOsSettingsProperties) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesIbmDb2zOsSettingsProperties) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v SettingsPropertiesIbmDb2zOsSettingsProperties) int { return v.Port }).(pulumi.IntOutput)
}

func (o SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesIbmDb2zOsSettingsProperties) string { return v.ServerName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput) SslMode() DataProviderDb2SslModeValueOutput {
	return o.ApplyT(func(v SettingsPropertiesIbmDb2zOsSettingsProperties) DataProviderDb2SslModeValue { return v.SslMode }).(DataProviderDb2SslModeValueOutput)
}

type SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesIbmDb2zOsSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput) ToSettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput() SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput) ToSettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput) Elem() SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput {
	return o.ApplyT(func(v *SettingsPropertiesIbmDb2zOsSettingsProperties) SettingsPropertiesIbmDb2zOsSettingsProperties {
		if v != nil {
			return *v
		}
		var ret SettingsPropertiesIbmDb2zOsSettingsProperties
		return ret
	}).(SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput)
}

func (o SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesIbmDb2zOsSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesIbmDb2zOsSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesIbmDb2zOsSettingsProperties) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesIbmDb2zOsSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput) SslMode() DataProviderDb2SslModeValuePtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesIbmDb2zOsSettingsProperties) *DataProviderDb2SslModeValue {
		if v == nil {
			return nil
		}
		return &v.SslMode
	}).(DataProviderDb2SslModeValuePtrOutput)
}

// MariaDbSettings property identifier.
type SettingsPropertiesMariaDbSettingsProperties struct {
	CertificateArn *string                     `pulumi:"certificateArn"`
	Port           int                         `pulumi:"port"`
	ServerName     string                      `pulumi:"serverName"`
	SslMode        DataProviderDmsSslModeValue `pulumi:"sslMode"`
}

// SettingsPropertiesMariaDbSettingsPropertiesInput is an input type that accepts SettingsPropertiesMariaDbSettingsPropertiesArgs and SettingsPropertiesMariaDbSettingsPropertiesOutput values.
// You can construct a concrete instance of `SettingsPropertiesMariaDbSettingsPropertiesInput` via:
//
//	SettingsPropertiesMariaDbSettingsPropertiesArgs{...}
type SettingsPropertiesMariaDbSettingsPropertiesInput interface {
	pulumi.Input

	ToSettingsPropertiesMariaDbSettingsPropertiesOutput() SettingsPropertiesMariaDbSettingsPropertiesOutput
	ToSettingsPropertiesMariaDbSettingsPropertiesOutputWithContext(context.Context) SettingsPropertiesMariaDbSettingsPropertiesOutput
}

// MariaDbSettings property identifier.
type SettingsPropertiesMariaDbSettingsPropertiesArgs struct {
	CertificateArn pulumi.StringPtrInput            `pulumi:"certificateArn"`
	Port           pulumi.IntInput                  `pulumi:"port"`
	ServerName     pulumi.StringInput               `pulumi:"serverName"`
	SslMode        DataProviderDmsSslModeValueInput `pulumi:"sslMode"`
}

func (SettingsPropertiesMariaDbSettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesMariaDbSettingsProperties)(nil)).Elem()
}

func (i SettingsPropertiesMariaDbSettingsPropertiesArgs) ToSettingsPropertiesMariaDbSettingsPropertiesOutput() SettingsPropertiesMariaDbSettingsPropertiesOutput {
	return i.ToSettingsPropertiesMariaDbSettingsPropertiesOutputWithContext(context.Background())
}

func (i SettingsPropertiesMariaDbSettingsPropertiesArgs) ToSettingsPropertiesMariaDbSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesMariaDbSettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesMariaDbSettingsPropertiesOutput)
}

func (i SettingsPropertiesMariaDbSettingsPropertiesArgs) ToSettingsPropertiesMariaDbSettingsPropertiesPtrOutput() SettingsPropertiesMariaDbSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesMariaDbSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i SettingsPropertiesMariaDbSettingsPropertiesArgs) ToSettingsPropertiesMariaDbSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMariaDbSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesMariaDbSettingsPropertiesOutput).ToSettingsPropertiesMariaDbSettingsPropertiesPtrOutputWithContext(ctx)
}

// SettingsPropertiesMariaDbSettingsPropertiesPtrInput is an input type that accepts SettingsPropertiesMariaDbSettingsPropertiesArgs, SettingsPropertiesMariaDbSettingsPropertiesPtr and SettingsPropertiesMariaDbSettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `SettingsPropertiesMariaDbSettingsPropertiesPtrInput` via:
//
//	        SettingsPropertiesMariaDbSettingsPropertiesArgs{...}
//
//	or:
//
//	        nil
type SettingsPropertiesMariaDbSettingsPropertiesPtrInput interface {
	pulumi.Input

	ToSettingsPropertiesMariaDbSettingsPropertiesPtrOutput() SettingsPropertiesMariaDbSettingsPropertiesPtrOutput
	ToSettingsPropertiesMariaDbSettingsPropertiesPtrOutputWithContext(context.Context) SettingsPropertiesMariaDbSettingsPropertiesPtrOutput
}

type settingsPropertiesMariaDbSettingsPropertiesPtrType SettingsPropertiesMariaDbSettingsPropertiesArgs

func SettingsPropertiesMariaDbSettingsPropertiesPtr(v *SettingsPropertiesMariaDbSettingsPropertiesArgs) SettingsPropertiesMariaDbSettingsPropertiesPtrInput {
	return (*settingsPropertiesMariaDbSettingsPropertiesPtrType)(v)
}

func (*settingsPropertiesMariaDbSettingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesMariaDbSettingsProperties)(nil)).Elem()
}

func (i *settingsPropertiesMariaDbSettingsPropertiesPtrType) ToSettingsPropertiesMariaDbSettingsPropertiesPtrOutput() SettingsPropertiesMariaDbSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesMariaDbSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *settingsPropertiesMariaDbSettingsPropertiesPtrType) ToSettingsPropertiesMariaDbSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMariaDbSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesMariaDbSettingsPropertiesPtrOutput)
}

// MariaDbSettings property identifier.
type SettingsPropertiesMariaDbSettingsPropertiesOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesMariaDbSettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesMariaDbSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesMariaDbSettingsPropertiesOutput) ToSettingsPropertiesMariaDbSettingsPropertiesOutput() SettingsPropertiesMariaDbSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesMariaDbSettingsPropertiesOutput) ToSettingsPropertiesMariaDbSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesMariaDbSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesMariaDbSettingsPropertiesOutput) ToSettingsPropertiesMariaDbSettingsPropertiesPtrOutput() SettingsPropertiesMariaDbSettingsPropertiesPtrOutput {
	return o.ToSettingsPropertiesMariaDbSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o SettingsPropertiesMariaDbSettingsPropertiesOutput) ToSettingsPropertiesMariaDbSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMariaDbSettingsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsPropertiesMariaDbSettingsProperties) *SettingsPropertiesMariaDbSettingsProperties {
		return &v
	}).(SettingsPropertiesMariaDbSettingsPropertiesPtrOutput)
}

func (o SettingsPropertiesMariaDbSettingsPropertiesOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesMariaDbSettingsProperties) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMariaDbSettingsPropertiesOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v SettingsPropertiesMariaDbSettingsProperties) int { return v.Port }).(pulumi.IntOutput)
}

func (o SettingsPropertiesMariaDbSettingsPropertiesOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesMariaDbSettingsProperties) string { return v.ServerName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesMariaDbSettingsPropertiesOutput) SslMode() DataProviderDmsSslModeValueOutput {
	return o.ApplyT(func(v SettingsPropertiesMariaDbSettingsProperties) DataProviderDmsSslModeValue { return v.SslMode }).(DataProviderDmsSslModeValueOutput)
}

type SettingsPropertiesMariaDbSettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesMariaDbSettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesMariaDbSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesMariaDbSettingsPropertiesPtrOutput) ToSettingsPropertiesMariaDbSettingsPropertiesPtrOutput() SettingsPropertiesMariaDbSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesMariaDbSettingsPropertiesPtrOutput) ToSettingsPropertiesMariaDbSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMariaDbSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesMariaDbSettingsPropertiesPtrOutput) Elem() SettingsPropertiesMariaDbSettingsPropertiesOutput {
	return o.ApplyT(func(v *SettingsPropertiesMariaDbSettingsProperties) SettingsPropertiesMariaDbSettingsProperties {
		if v != nil {
			return *v
		}
		var ret SettingsPropertiesMariaDbSettingsProperties
		return ret
	}).(SettingsPropertiesMariaDbSettingsPropertiesOutput)
}

func (o SettingsPropertiesMariaDbSettingsPropertiesPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMariaDbSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMariaDbSettingsPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMariaDbSettingsProperties) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o SettingsPropertiesMariaDbSettingsPropertiesPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMariaDbSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMariaDbSettingsPropertiesPtrOutput) SslMode() DataProviderDmsSslModeValuePtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMariaDbSettingsProperties) *DataProviderDmsSslModeValue {
		if v == nil {
			return nil
		}
		return &v.SslMode
	}).(DataProviderDmsSslModeValuePtrOutput)
}

// MicrosoftSqlServerSettings property identifier.
type SettingsPropertiesMicrosoftSqlServerSettingsProperties struct {
	CertificateArn *string                     `pulumi:"certificateArn"`
	DatabaseName   string                      `pulumi:"databaseName"`
	Port           int                         `pulumi:"port"`
	ServerName     string                      `pulumi:"serverName"`
	SslMode        DataProviderDmsSslModeValue `pulumi:"sslMode"`
}

// SettingsPropertiesMicrosoftSqlServerSettingsPropertiesInput is an input type that accepts SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs and SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput values.
// You can construct a concrete instance of `SettingsPropertiesMicrosoftSqlServerSettingsPropertiesInput` via:
//
//	SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs{...}
type SettingsPropertiesMicrosoftSqlServerSettingsPropertiesInput interface {
	pulumi.Input

	ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput
	ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutputWithContext(context.Context) SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput
}

// MicrosoftSqlServerSettings property identifier.
type SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs struct {
	CertificateArn pulumi.StringPtrInput            `pulumi:"certificateArn"`
	DatabaseName   pulumi.StringInput               `pulumi:"databaseName"`
	Port           pulumi.IntInput                  `pulumi:"port"`
	ServerName     pulumi.StringInput               `pulumi:"serverName"`
	SslMode        DataProviderDmsSslModeValueInput `pulumi:"sslMode"`
}

func (SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesMicrosoftSqlServerSettingsProperties)(nil)).Elem()
}

func (i SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput {
	return i.ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutputWithContext(context.Background())
}

func (i SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput)
}

func (i SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput).ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutputWithContext(ctx)
}

// SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrInput is an input type that accepts SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs, SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtr and SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrInput` via:
//
//	        SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs{...}
//
//	or:
//
//	        nil
type SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrInput interface {
	pulumi.Input

	ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput
	ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutputWithContext(context.Context) SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput
}

type settingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrType SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs

func SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtr(v *SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs) SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrInput {
	return (*settingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrType)(v)
}

func (*settingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesMicrosoftSqlServerSettingsProperties)(nil)).Elem()
}

func (i *settingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrType) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *settingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrType) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput)
}

// MicrosoftSqlServerSettings property identifier.
type SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesMicrosoftSqlServerSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return o.ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsPropertiesMicrosoftSqlServerSettingsProperties) *SettingsPropertiesMicrosoftSqlServerSettingsProperties {
		return &v
	}).(SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesMicrosoftSqlServerSettingsProperties) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesMicrosoftSqlServerSettingsProperties) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v SettingsPropertiesMicrosoftSqlServerSettingsProperties) int { return v.Port }).(pulumi.IntOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesMicrosoftSqlServerSettingsProperties) string { return v.ServerName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) SslMode() DataProviderDmsSslModeValueOutput {
	return o.ApplyT(func(v SettingsPropertiesMicrosoftSqlServerSettingsProperties) DataProviderDmsSslModeValue {
		return v.SslMode
	}).(DataProviderDmsSslModeValueOutput)
}

type SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesMicrosoftSqlServerSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput) Elem() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput {
	return o.ApplyT(func(v *SettingsPropertiesMicrosoftSqlServerSettingsProperties) SettingsPropertiesMicrosoftSqlServerSettingsProperties {
		if v != nil {
			return *v
		}
		var ret SettingsPropertiesMicrosoftSqlServerSettingsProperties
		return ret
	}).(SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMicrosoftSqlServerSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMicrosoftSqlServerSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMicrosoftSqlServerSettingsProperties) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMicrosoftSqlServerSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput) SslMode() DataProviderDmsSslModeValuePtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMicrosoftSqlServerSettingsProperties) *DataProviderDmsSslModeValue {
		if v == nil {
			return nil
		}
		return &v.SslMode
	}).(DataProviderDmsSslModeValuePtrOutput)
}

// MongoDbSettings property identifier.
type SettingsPropertiesMongoDbSettingsProperties struct {
	AuthMechanism  *DataProviderMongoDbAuthMechanism `pulumi:"authMechanism"`
	AuthSource     *string                           `pulumi:"authSource"`
	AuthType       *DataProviderMongoDbAuthType      `pulumi:"authType"`
	CertificateArn *string                           `pulumi:"certificateArn"`
	DatabaseName   *string                           `pulumi:"databaseName"`
	Port           int                               `pulumi:"port"`
	ServerName     string                            `pulumi:"serverName"`
	SslMode        *DataProviderMongoDbSslModeValue  `pulumi:"sslMode"`
}

// SettingsPropertiesMongoDbSettingsPropertiesInput is an input type that accepts SettingsPropertiesMongoDbSettingsPropertiesArgs and SettingsPropertiesMongoDbSettingsPropertiesOutput values.
// You can construct a concrete instance of `SettingsPropertiesMongoDbSettingsPropertiesInput` via:
//
//	SettingsPropertiesMongoDbSettingsPropertiesArgs{...}
type SettingsPropertiesMongoDbSettingsPropertiesInput interface {
	pulumi.Input

	ToSettingsPropertiesMongoDbSettingsPropertiesOutput() SettingsPropertiesMongoDbSettingsPropertiesOutput
	ToSettingsPropertiesMongoDbSettingsPropertiesOutputWithContext(context.Context) SettingsPropertiesMongoDbSettingsPropertiesOutput
}

// MongoDbSettings property identifier.
type SettingsPropertiesMongoDbSettingsPropertiesArgs struct {
	AuthMechanism  DataProviderMongoDbAuthMechanismPtrInput `pulumi:"authMechanism"`
	AuthSource     pulumi.StringPtrInput                    `pulumi:"authSource"`
	AuthType       DataProviderMongoDbAuthTypePtrInput      `pulumi:"authType"`
	CertificateArn pulumi.StringPtrInput                    `pulumi:"certificateArn"`
	DatabaseName   pulumi.StringPtrInput                    `pulumi:"databaseName"`
	Port           pulumi.IntInput                          `pulumi:"port"`
	ServerName     pulumi.StringInput                       `pulumi:"serverName"`
	SslMode        DataProviderMongoDbSslModeValuePtrInput  `pulumi:"sslMode"`
}

func (SettingsPropertiesMongoDbSettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesMongoDbSettingsProperties)(nil)).Elem()
}

func (i SettingsPropertiesMongoDbSettingsPropertiesArgs) ToSettingsPropertiesMongoDbSettingsPropertiesOutput() SettingsPropertiesMongoDbSettingsPropertiesOutput {
	return i.ToSettingsPropertiesMongoDbSettingsPropertiesOutputWithContext(context.Background())
}

func (i SettingsPropertiesMongoDbSettingsPropertiesArgs) ToSettingsPropertiesMongoDbSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesMongoDbSettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesMongoDbSettingsPropertiesOutput)
}

func (i SettingsPropertiesMongoDbSettingsPropertiesArgs) ToSettingsPropertiesMongoDbSettingsPropertiesPtrOutput() SettingsPropertiesMongoDbSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesMongoDbSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i SettingsPropertiesMongoDbSettingsPropertiesArgs) ToSettingsPropertiesMongoDbSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMongoDbSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesMongoDbSettingsPropertiesOutput).ToSettingsPropertiesMongoDbSettingsPropertiesPtrOutputWithContext(ctx)
}

// SettingsPropertiesMongoDbSettingsPropertiesPtrInput is an input type that accepts SettingsPropertiesMongoDbSettingsPropertiesArgs, SettingsPropertiesMongoDbSettingsPropertiesPtr and SettingsPropertiesMongoDbSettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `SettingsPropertiesMongoDbSettingsPropertiesPtrInput` via:
//
//	        SettingsPropertiesMongoDbSettingsPropertiesArgs{...}
//
//	or:
//
//	        nil
type SettingsPropertiesMongoDbSettingsPropertiesPtrInput interface {
	pulumi.Input

	ToSettingsPropertiesMongoDbSettingsPropertiesPtrOutput() SettingsPropertiesMongoDbSettingsPropertiesPtrOutput
	ToSettingsPropertiesMongoDbSettingsPropertiesPtrOutputWithContext(context.Context) SettingsPropertiesMongoDbSettingsPropertiesPtrOutput
}

type settingsPropertiesMongoDbSettingsPropertiesPtrType SettingsPropertiesMongoDbSettingsPropertiesArgs

func SettingsPropertiesMongoDbSettingsPropertiesPtr(v *SettingsPropertiesMongoDbSettingsPropertiesArgs) SettingsPropertiesMongoDbSettingsPropertiesPtrInput {
	return (*settingsPropertiesMongoDbSettingsPropertiesPtrType)(v)
}

func (*settingsPropertiesMongoDbSettingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesMongoDbSettingsProperties)(nil)).Elem()
}

func (i *settingsPropertiesMongoDbSettingsPropertiesPtrType) ToSettingsPropertiesMongoDbSettingsPropertiesPtrOutput() SettingsPropertiesMongoDbSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesMongoDbSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *settingsPropertiesMongoDbSettingsPropertiesPtrType) ToSettingsPropertiesMongoDbSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMongoDbSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesMongoDbSettingsPropertiesPtrOutput)
}

// MongoDbSettings property identifier.
type SettingsPropertiesMongoDbSettingsPropertiesOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesMongoDbSettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesMongoDbSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesMongoDbSettingsPropertiesOutput) ToSettingsPropertiesMongoDbSettingsPropertiesOutput() SettingsPropertiesMongoDbSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesMongoDbSettingsPropertiesOutput) ToSettingsPropertiesMongoDbSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesMongoDbSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesMongoDbSettingsPropertiesOutput) ToSettingsPropertiesMongoDbSettingsPropertiesPtrOutput() SettingsPropertiesMongoDbSettingsPropertiesPtrOutput {
	return o.ToSettingsPropertiesMongoDbSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o SettingsPropertiesMongoDbSettingsPropertiesOutput) ToSettingsPropertiesMongoDbSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMongoDbSettingsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsPropertiesMongoDbSettingsProperties) *SettingsPropertiesMongoDbSettingsProperties {
		return &v
	}).(SettingsPropertiesMongoDbSettingsPropertiesPtrOutput)
}

func (o SettingsPropertiesMongoDbSettingsPropertiesOutput) AuthMechanism() DataProviderMongoDbAuthMechanismPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesMongoDbSettingsProperties) *DataProviderMongoDbAuthMechanism {
		return v.AuthMechanism
	}).(DataProviderMongoDbAuthMechanismPtrOutput)
}

func (o SettingsPropertiesMongoDbSettingsPropertiesOutput) AuthSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesMongoDbSettingsProperties) *string { return v.AuthSource }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMongoDbSettingsPropertiesOutput) AuthType() DataProviderMongoDbAuthTypePtrOutput {
	return o.ApplyT(func(v SettingsPropertiesMongoDbSettingsProperties) *DataProviderMongoDbAuthType { return v.AuthType }).(DataProviderMongoDbAuthTypePtrOutput)
}

func (o SettingsPropertiesMongoDbSettingsPropertiesOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesMongoDbSettingsProperties) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMongoDbSettingsPropertiesOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesMongoDbSettingsProperties) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMongoDbSettingsPropertiesOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v SettingsPropertiesMongoDbSettingsProperties) int { return v.Port }).(pulumi.IntOutput)
}

func (o SettingsPropertiesMongoDbSettingsPropertiesOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesMongoDbSettingsProperties) string { return v.ServerName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesMongoDbSettingsPropertiesOutput) SslMode() DataProviderMongoDbSslModeValuePtrOutput {
	return o.ApplyT(func(v SettingsPropertiesMongoDbSettingsProperties) *DataProviderMongoDbSslModeValue { return v.SslMode }).(DataProviderMongoDbSslModeValuePtrOutput)
}

type SettingsPropertiesMongoDbSettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesMongoDbSettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesMongoDbSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesMongoDbSettingsPropertiesPtrOutput) ToSettingsPropertiesMongoDbSettingsPropertiesPtrOutput() SettingsPropertiesMongoDbSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesMongoDbSettingsPropertiesPtrOutput) ToSettingsPropertiesMongoDbSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMongoDbSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesMongoDbSettingsPropertiesPtrOutput) Elem() SettingsPropertiesMongoDbSettingsPropertiesOutput {
	return o.ApplyT(func(v *SettingsPropertiesMongoDbSettingsProperties) SettingsPropertiesMongoDbSettingsProperties {
		if v != nil {
			return *v
		}
		var ret SettingsPropertiesMongoDbSettingsProperties
		return ret
	}).(SettingsPropertiesMongoDbSettingsPropertiesOutput)
}

func (o SettingsPropertiesMongoDbSettingsPropertiesPtrOutput) AuthMechanism() DataProviderMongoDbAuthMechanismPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMongoDbSettingsProperties) *DataProviderMongoDbAuthMechanism {
		if v == nil {
			return nil
		}
		return v.AuthMechanism
	}).(DataProviderMongoDbAuthMechanismPtrOutput)
}

func (o SettingsPropertiesMongoDbSettingsPropertiesPtrOutput) AuthSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMongoDbSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.AuthSource
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMongoDbSettingsPropertiesPtrOutput) AuthType() DataProviderMongoDbAuthTypePtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMongoDbSettingsProperties) *DataProviderMongoDbAuthType {
		if v == nil {
			return nil
		}
		return v.AuthType
	}).(DataProviderMongoDbAuthTypePtrOutput)
}

func (o SettingsPropertiesMongoDbSettingsPropertiesPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMongoDbSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMongoDbSettingsPropertiesPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMongoDbSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMongoDbSettingsPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMongoDbSettingsProperties) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o SettingsPropertiesMongoDbSettingsPropertiesPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMongoDbSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMongoDbSettingsPropertiesPtrOutput) SslMode() DataProviderMongoDbSslModeValuePtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMongoDbSettingsProperties) *DataProviderMongoDbSslModeValue {
		if v == nil {
			return nil
		}
		return v.SslMode
	}).(DataProviderMongoDbSslModeValuePtrOutput)
}

// MySqlSettings property identifier.
type SettingsPropertiesMySqlSettingsProperties struct {
	CertificateArn *string                     `pulumi:"certificateArn"`
	Port           int                         `pulumi:"port"`
	ServerName     string                      `pulumi:"serverName"`
	SslMode        DataProviderDmsSslModeValue `pulumi:"sslMode"`
}

// SettingsPropertiesMySqlSettingsPropertiesInput is an input type that accepts SettingsPropertiesMySqlSettingsPropertiesArgs and SettingsPropertiesMySqlSettingsPropertiesOutput values.
// You can construct a concrete instance of `SettingsPropertiesMySqlSettingsPropertiesInput` via:
//
//	SettingsPropertiesMySqlSettingsPropertiesArgs{...}
type SettingsPropertiesMySqlSettingsPropertiesInput interface {
	pulumi.Input

	ToSettingsPropertiesMySqlSettingsPropertiesOutput() SettingsPropertiesMySqlSettingsPropertiesOutput
	ToSettingsPropertiesMySqlSettingsPropertiesOutputWithContext(context.Context) SettingsPropertiesMySqlSettingsPropertiesOutput
}

// MySqlSettings property identifier.
type SettingsPropertiesMySqlSettingsPropertiesArgs struct {
	CertificateArn pulumi.StringPtrInput            `pulumi:"certificateArn"`
	Port           pulumi.IntInput                  `pulumi:"port"`
	ServerName     pulumi.StringInput               `pulumi:"serverName"`
	SslMode        DataProviderDmsSslModeValueInput `pulumi:"sslMode"`
}

func (SettingsPropertiesMySqlSettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesMySqlSettingsProperties)(nil)).Elem()
}

func (i SettingsPropertiesMySqlSettingsPropertiesArgs) ToSettingsPropertiesMySqlSettingsPropertiesOutput() SettingsPropertiesMySqlSettingsPropertiesOutput {
	return i.ToSettingsPropertiesMySqlSettingsPropertiesOutputWithContext(context.Background())
}

func (i SettingsPropertiesMySqlSettingsPropertiesArgs) ToSettingsPropertiesMySqlSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesMySqlSettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesMySqlSettingsPropertiesOutput)
}

func (i SettingsPropertiesMySqlSettingsPropertiesArgs) ToSettingsPropertiesMySqlSettingsPropertiesPtrOutput() SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesMySqlSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i SettingsPropertiesMySqlSettingsPropertiesArgs) ToSettingsPropertiesMySqlSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesMySqlSettingsPropertiesOutput).ToSettingsPropertiesMySqlSettingsPropertiesPtrOutputWithContext(ctx)
}

// SettingsPropertiesMySqlSettingsPropertiesPtrInput is an input type that accepts SettingsPropertiesMySqlSettingsPropertiesArgs, SettingsPropertiesMySqlSettingsPropertiesPtr and SettingsPropertiesMySqlSettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `SettingsPropertiesMySqlSettingsPropertiesPtrInput` via:
//
//	        SettingsPropertiesMySqlSettingsPropertiesArgs{...}
//
//	or:
//
//	        nil
type SettingsPropertiesMySqlSettingsPropertiesPtrInput interface {
	pulumi.Input

	ToSettingsPropertiesMySqlSettingsPropertiesPtrOutput() SettingsPropertiesMySqlSettingsPropertiesPtrOutput
	ToSettingsPropertiesMySqlSettingsPropertiesPtrOutputWithContext(context.Context) SettingsPropertiesMySqlSettingsPropertiesPtrOutput
}

type settingsPropertiesMySqlSettingsPropertiesPtrType SettingsPropertiesMySqlSettingsPropertiesArgs

func SettingsPropertiesMySqlSettingsPropertiesPtr(v *SettingsPropertiesMySqlSettingsPropertiesArgs) SettingsPropertiesMySqlSettingsPropertiesPtrInput {
	return (*settingsPropertiesMySqlSettingsPropertiesPtrType)(v)
}

func (*settingsPropertiesMySqlSettingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesMySqlSettingsProperties)(nil)).Elem()
}

func (i *settingsPropertiesMySqlSettingsPropertiesPtrType) ToSettingsPropertiesMySqlSettingsPropertiesPtrOutput() SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesMySqlSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *settingsPropertiesMySqlSettingsPropertiesPtrType) ToSettingsPropertiesMySqlSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesMySqlSettingsPropertiesPtrOutput)
}

// MySqlSettings property identifier.
type SettingsPropertiesMySqlSettingsPropertiesOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesMySqlSettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesMySqlSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesMySqlSettingsPropertiesOutput) ToSettingsPropertiesMySqlSettingsPropertiesOutput() SettingsPropertiesMySqlSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesMySqlSettingsPropertiesOutput) ToSettingsPropertiesMySqlSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesMySqlSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesMySqlSettingsPropertiesOutput) ToSettingsPropertiesMySqlSettingsPropertiesPtrOutput() SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return o.ToSettingsPropertiesMySqlSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o SettingsPropertiesMySqlSettingsPropertiesOutput) ToSettingsPropertiesMySqlSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsPropertiesMySqlSettingsProperties) *SettingsPropertiesMySqlSettingsProperties {
		return &v
	}).(SettingsPropertiesMySqlSettingsPropertiesPtrOutput)
}

func (o SettingsPropertiesMySqlSettingsPropertiesOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesMySqlSettingsProperties) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMySqlSettingsPropertiesOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v SettingsPropertiesMySqlSettingsProperties) int { return v.Port }).(pulumi.IntOutput)
}

func (o SettingsPropertiesMySqlSettingsPropertiesOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesMySqlSettingsProperties) string { return v.ServerName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesMySqlSettingsPropertiesOutput) SslMode() DataProviderDmsSslModeValueOutput {
	return o.ApplyT(func(v SettingsPropertiesMySqlSettingsProperties) DataProviderDmsSslModeValue { return v.SslMode }).(DataProviderDmsSslModeValueOutput)
}

type SettingsPropertiesMySqlSettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesMySqlSettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesMySqlSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesMySqlSettingsPropertiesPtrOutput) ToSettingsPropertiesMySqlSettingsPropertiesPtrOutput() SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesMySqlSettingsPropertiesPtrOutput) ToSettingsPropertiesMySqlSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesMySqlSettingsPropertiesPtrOutput) Elem() SettingsPropertiesMySqlSettingsPropertiesOutput {
	return o.ApplyT(func(v *SettingsPropertiesMySqlSettingsProperties) SettingsPropertiesMySqlSettingsProperties {
		if v != nil {
			return *v
		}
		var ret SettingsPropertiesMySqlSettingsProperties
		return ret
	}).(SettingsPropertiesMySqlSettingsPropertiesOutput)
}

func (o SettingsPropertiesMySqlSettingsPropertiesPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMySqlSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMySqlSettingsPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMySqlSettingsProperties) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o SettingsPropertiesMySqlSettingsPropertiesPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMySqlSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMySqlSettingsPropertiesPtrOutput) SslMode() DataProviderDmsSslModeValuePtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMySqlSettingsProperties) *DataProviderDmsSslModeValue {
		if v == nil {
			return nil
		}
		return &v.SslMode
	}).(DataProviderDmsSslModeValuePtrOutput)
}

// OracleSettings property identifier.
type SettingsPropertiesOracleSettingsProperties struct {
	AsmServer                                       *string                     `pulumi:"asmServer"`
	CertificateArn                                  *string                     `pulumi:"certificateArn"`
	DatabaseName                                    string                      `pulumi:"databaseName"`
	Port                                            int                         `pulumi:"port"`
	SecretsManagerOracleAsmAccessRoleArn            *string                     `pulumi:"secretsManagerOracleAsmAccessRoleArn"`
	SecretsManagerOracleAsmSecretId                 *string                     `pulumi:"secretsManagerOracleAsmSecretId"`
	SecretsManagerSecurityDbEncryptionAccessRoleArn *string                     `pulumi:"secretsManagerSecurityDbEncryptionAccessRoleArn"`
	SecretsManagerSecurityDbEncryptionSecretId      *string                     `pulumi:"secretsManagerSecurityDbEncryptionSecretId"`
	ServerName                                      string                      `pulumi:"serverName"`
	SslMode                                         DataProviderDmsSslModeValue `pulumi:"sslMode"`
}

// SettingsPropertiesOracleSettingsPropertiesInput is an input type that accepts SettingsPropertiesOracleSettingsPropertiesArgs and SettingsPropertiesOracleSettingsPropertiesOutput values.
// You can construct a concrete instance of `SettingsPropertiesOracleSettingsPropertiesInput` via:
//
//	SettingsPropertiesOracleSettingsPropertiesArgs{...}
type SettingsPropertiesOracleSettingsPropertiesInput interface {
	pulumi.Input

	ToSettingsPropertiesOracleSettingsPropertiesOutput() SettingsPropertiesOracleSettingsPropertiesOutput
	ToSettingsPropertiesOracleSettingsPropertiesOutputWithContext(context.Context) SettingsPropertiesOracleSettingsPropertiesOutput
}

// OracleSettings property identifier.
type SettingsPropertiesOracleSettingsPropertiesArgs struct {
	AsmServer                                       pulumi.StringPtrInput            `pulumi:"asmServer"`
	CertificateArn                                  pulumi.StringPtrInput            `pulumi:"certificateArn"`
	DatabaseName                                    pulumi.StringInput               `pulumi:"databaseName"`
	Port                                            pulumi.IntInput                  `pulumi:"port"`
	SecretsManagerOracleAsmAccessRoleArn            pulumi.StringPtrInput            `pulumi:"secretsManagerOracleAsmAccessRoleArn"`
	SecretsManagerOracleAsmSecretId                 pulumi.StringPtrInput            `pulumi:"secretsManagerOracleAsmSecretId"`
	SecretsManagerSecurityDbEncryptionAccessRoleArn pulumi.StringPtrInput            `pulumi:"secretsManagerSecurityDbEncryptionAccessRoleArn"`
	SecretsManagerSecurityDbEncryptionSecretId      pulumi.StringPtrInput            `pulumi:"secretsManagerSecurityDbEncryptionSecretId"`
	ServerName                                      pulumi.StringInput               `pulumi:"serverName"`
	SslMode                                         DataProviderDmsSslModeValueInput `pulumi:"sslMode"`
}

func (SettingsPropertiesOracleSettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesOracleSettingsProperties)(nil)).Elem()
}

func (i SettingsPropertiesOracleSettingsPropertiesArgs) ToSettingsPropertiesOracleSettingsPropertiesOutput() SettingsPropertiesOracleSettingsPropertiesOutput {
	return i.ToSettingsPropertiesOracleSettingsPropertiesOutputWithContext(context.Background())
}

func (i SettingsPropertiesOracleSettingsPropertiesArgs) ToSettingsPropertiesOracleSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesOracleSettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesOracleSettingsPropertiesOutput)
}

func (i SettingsPropertiesOracleSettingsPropertiesArgs) ToSettingsPropertiesOracleSettingsPropertiesPtrOutput() SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesOracleSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i SettingsPropertiesOracleSettingsPropertiesArgs) ToSettingsPropertiesOracleSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesOracleSettingsPropertiesOutput).ToSettingsPropertiesOracleSettingsPropertiesPtrOutputWithContext(ctx)
}

// SettingsPropertiesOracleSettingsPropertiesPtrInput is an input type that accepts SettingsPropertiesOracleSettingsPropertiesArgs, SettingsPropertiesOracleSettingsPropertiesPtr and SettingsPropertiesOracleSettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `SettingsPropertiesOracleSettingsPropertiesPtrInput` via:
//
//	        SettingsPropertiesOracleSettingsPropertiesArgs{...}
//
//	or:
//
//	        nil
type SettingsPropertiesOracleSettingsPropertiesPtrInput interface {
	pulumi.Input

	ToSettingsPropertiesOracleSettingsPropertiesPtrOutput() SettingsPropertiesOracleSettingsPropertiesPtrOutput
	ToSettingsPropertiesOracleSettingsPropertiesPtrOutputWithContext(context.Context) SettingsPropertiesOracleSettingsPropertiesPtrOutput
}

type settingsPropertiesOracleSettingsPropertiesPtrType SettingsPropertiesOracleSettingsPropertiesArgs

func SettingsPropertiesOracleSettingsPropertiesPtr(v *SettingsPropertiesOracleSettingsPropertiesArgs) SettingsPropertiesOracleSettingsPropertiesPtrInput {
	return (*settingsPropertiesOracleSettingsPropertiesPtrType)(v)
}

func (*settingsPropertiesOracleSettingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesOracleSettingsProperties)(nil)).Elem()
}

func (i *settingsPropertiesOracleSettingsPropertiesPtrType) ToSettingsPropertiesOracleSettingsPropertiesPtrOutput() SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesOracleSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *settingsPropertiesOracleSettingsPropertiesPtrType) ToSettingsPropertiesOracleSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesOracleSettingsPropertiesPtrOutput)
}

// OracleSettings property identifier.
type SettingsPropertiesOracleSettingsPropertiesOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesOracleSettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesOracleSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) ToSettingsPropertiesOracleSettingsPropertiesOutput() SettingsPropertiesOracleSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) ToSettingsPropertiesOracleSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesOracleSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) ToSettingsPropertiesOracleSettingsPropertiesPtrOutput() SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return o.ToSettingsPropertiesOracleSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) ToSettingsPropertiesOracleSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsPropertiesOracleSettingsProperties) *SettingsPropertiesOracleSettingsProperties {
		return &v
	}).(SettingsPropertiesOracleSettingsPropertiesPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) AsmServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) *string { return v.AsmServer }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) int { return v.Port }).(pulumi.IntOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) SecretsManagerOracleAsmAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) *string {
		return v.SecretsManagerOracleAsmAccessRoleArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) SecretsManagerOracleAsmSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) *string { return v.SecretsManagerOracleAsmSecretId }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) SecretsManagerSecurityDbEncryptionAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) *string {
		return v.SecretsManagerSecurityDbEncryptionAccessRoleArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) SecretsManagerSecurityDbEncryptionSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) *string {
		return v.SecretsManagerSecurityDbEncryptionSecretId
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) string { return v.ServerName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) SslMode() DataProviderDmsSslModeValueOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) DataProviderDmsSslModeValue { return v.SslMode }).(DataProviderDmsSslModeValueOutput)
}

type SettingsPropertiesOracleSettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesOracleSettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesOracleSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) ToSettingsPropertiesOracleSettingsPropertiesPtrOutput() SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) ToSettingsPropertiesOracleSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) Elem() SettingsPropertiesOracleSettingsPropertiesOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) SettingsPropertiesOracleSettingsProperties {
		if v != nil {
			return *v
		}
		var ret SettingsPropertiesOracleSettingsProperties
		return ret
	}).(SettingsPropertiesOracleSettingsPropertiesOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) AsmServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.AsmServer
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) SecretsManagerOracleAsmAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.SecretsManagerOracleAsmAccessRoleArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) SecretsManagerOracleAsmSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.SecretsManagerOracleAsmSecretId
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) SecretsManagerSecurityDbEncryptionAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.SecretsManagerSecurityDbEncryptionAccessRoleArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) SecretsManagerSecurityDbEncryptionSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.SecretsManagerSecurityDbEncryptionSecretId
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) SslMode() DataProviderDmsSslModeValuePtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *DataProviderDmsSslModeValue {
		if v == nil {
			return nil
		}
		return &v.SslMode
	}).(DataProviderDmsSslModeValuePtrOutput)
}

// PostgreSqlSettings property identifier.
type SettingsPropertiesPostgreSqlSettingsProperties struct {
	CertificateArn *string                     `pulumi:"certificateArn"`
	DatabaseName   string                      `pulumi:"databaseName"`
	Port           int                         `pulumi:"port"`
	ServerName     string                      `pulumi:"serverName"`
	SslMode        DataProviderDmsSslModeValue `pulumi:"sslMode"`
}

// SettingsPropertiesPostgreSqlSettingsPropertiesInput is an input type that accepts SettingsPropertiesPostgreSqlSettingsPropertiesArgs and SettingsPropertiesPostgreSqlSettingsPropertiesOutput values.
// You can construct a concrete instance of `SettingsPropertiesPostgreSqlSettingsPropertiesInput` via:
//
//	SettingsPropertiesPostgreSqlSettingsPropertiesArgs{...}
type SettingsPropertiesPostgreSqlSettingsPropertiesInput interface {
	pulumi.Input

	ToSettingsPropertiesPostgreSqlSettingsPropertiesOutput() SettingsPropertiesPostgreSqlSettingsPropertiesOutput
	ToSettingsPropertiesPostgreSqlSettingsPropertiesOutputWithContext(context.Context) SettingsPropertiesPostgreSqlSettingsPropertiesOutput
}

// PostgreSqlSettings property identifier.
type SettingsPropertiesPostgreSqlSettingsPropertiesArgs struct {
	CertificateArn pulumi.StringPtrInput            `pulumi:"certificateArn"`
	DatabaseName   pulumi.StringInput               `pulumi:"databaseName"`
	Port           pulumi.IntInput                  `pulumi:"port"`
	ServerName     pulumi.StringInput               `pulumi:"serverName"`
	SslMode        DataProviderDmsSslModeValueInput `pulumi:"sslMode"`
}

func (SettingsPropertiesPostgreSqlSettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesPostgreSqlSettingsProperties)(nil)).Elem()
}

func (i SettingsPropertiesPostgreSqlSettingsPropertiesArgs) ToSettingsPropertiesPostgreSqlSettingsPropertiesOutput() SettingsPropertiesPostgreSqlSettingsPropertiesOutput {
	return i.ToSettingsPropertiesPostgreSqlSettingsPropertiesOutputWithContext(context.Background())
}

func (i SettingsPropertiesPostgreSqlSettingsPropertiesArgs) ToSettingsPropertiesPostgreSqlSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesPostgreSqlSettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesPostgreSqlSettingsPropertiesOutput)
}

func (i SettingsPropertiesPostgreSqlSettingsPropertiesArgs) ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput() SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i SettingsPropertiesPostgreSqlSettingsPropertiesArgs) ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesPostgreSqlSettingsPropertiesOutput).ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutputWithContext(ctx)
}

// SettingsPropertiesPostgreSqlSettingsPropertiesPtrInput is an input type that accepts SettingsPropertiesPostgreSqlSettingsPropertiesArgs, SettingsPropertiesPostgreSqlSettingsPropertiesPtr and SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `SettingsPropertiesPostgreSqlSettingsPropertiesPtrInput` via:
//
//	        SettingsPropertiesPostgreSqlSettingsPropertiesArgs{...}
//
//	or:
//
//	        nil
type SettingsPropertiesPostgreSqlSettingsPropertiesPtrInput interface {
	pulumi.Input

	ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput() SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput
	ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutputWithContext(context.Context) SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput
}

type settingsPropertiesPostgreSqlSettingsPropertiesPtrType SettingsPropertiesPostgreSqlSettingsPropertiesArgs

func SettingsPropertiesPostgreSqlSettingsPropertiesPtr(v *SettingsPropertiesPostgreSqlSettingsPropertiesArgs) SettingsPropertiesPostgreSqlSettingsPropertiesPtrInput {
	return (*settingsPropertiesPostgreSqlSettingsPropertiesPtrType)(v)
}

func (*settingsPropertiesPostgreSqlSettingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesPostgreSqlSettingsProperties)(nil)).Elem()
}

func (i *settingsPropertiesPostgreSqlSettingsPropertiesPtrType) ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput() SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *settingsPropertiesPostgreSqlSettingsPropertiesPtrType) ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput)
}

// PostgreSqlSettings property identifier.
type SettingsPropertiesPostgreSqlSettingsPropertiesOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesPostgreSqlSettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesPostgreSqlSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesOutput) ToSettingsPropertiesPostgreSqlSettingsPropertiesOutput() SettingsPropertiesPostgreSqlSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesOutput) ToSettingsPropertiesPostgreSqlSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesPostgreSqlSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesOutput) ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput() SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return o.ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesOutput) ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsPropertiesPostgreSqlSettingsProperties) *SettingsPropertiesPostgreSqlSettingsProperties {
		return &v
	}).(SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesPostgreSqlSettingsProperties) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesPostgreSqlSettingsProperties) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v SettingsPropertiesPostgreSqlSettingsProperties) int { return v.Port }).(pulumi.IntOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesPostgreSqlSettingsProperties) string { return v.ServerName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesOutput) SslMode() DataProviderDmsSslModeValueOutput {
	return o.ApplyT(func(v SettingsPropertiesPostgreSqlSettingsProperties) DataProviderDmsSslModeValue { return v.SslMode }).(DataProviderDmsSslModeValueOutput)
}

type SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesPostgreSqlSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput) ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput() SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput) ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput) Elem() SettingsPropertiesPostgreSqlSettingsPropertiesOutput {
	return o.ApplyT(func(v *SettingsPropertiesPostgreSqlSettingsProperties) SettingsPropertiesPostgreSqlSettingsProperties {
		if v != nil {
			return *v
		}
		var ret SettingsPropertiesPostgreSqlSettingsProperties
		return ret
	}).(SettingsPropertiesPostgreSqlSettingsPropertiesOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesPostgreSqlSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesPostgreSqlSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesPostgreSqlSettingsProperties) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesPostgreSqlSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput) SslMode() DataProviderDmsSslModeValuePtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesPostgreSqlSettingsProperties) *DataProviderDmsSslModeValue {
		if v == nil {
			return nil
		}
		return &v.SslMode
	}).(DataProviderDmsSslModeValuePtrOutput)
}

// RedshiftSettings property identifier.
type SettingsPropertiesRedshiftSettingsProperties struct {
	DatabaseName string `pulumi:"databaseName"`
	Port         int    `pulumi:"port"`
	ServerName   string `pulumi:"serverName"`
}

// SettingsPropertiesRedshiftSettingsPropertiesInput is an input type that accepts SettingsPropertiesRedshiftSettingsPropertiesArgs and SettingsPropertiesRedshiftSettingsPropertiesOutput values.
// You can construct a concrete instance of `SettingsPropertiesRedshiftSettingsPropertiesInput` via:
//
//	SettingsPropertiesRedshiftSettingsPropertiesArgs{...}
type SettingsPropertiesRedshiftSettingsPropertiesInput interface {
	pulumi.Input

	ToSettingsPropertiesRedshiftSettingsPropertiesOutput() SettingsPropertiesRedshiftSettingsPropertiesOutput
	ToSettingsPropertiesRedshiftSettingsPropertiesOutputWithContext(context.Context) SettingsPropertiesRedshiftSettingsPropertiesOutput
}

// RedshiftSettings property identifier.
type SettingsPropertiesRedshiftSettingsPropertiesArgs struct {
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	Port         pulumi.IntInput    `pulumi:"port"`
	ServerName   pulumi.StringInput `pulumi:"serverName"`
}

func (SettingsPropertiesRedshiftSettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesRedshiftSettingsProperties)(nil)).Elem()
}

func (i SettingsPropertiesRedshiftSettingsPropertiesArgs) ToSettingsPropertiesRedshiftSettingsPropertiesOutput() SettingsPropertiesRedshiftSettingsPropertiesOutput {
	return i.ToSettingsPropertiesRedshiftSettingsPropertiesOutputWithContext(context.Background())
}

func (i SettingsPropertiesRedshiftSettingsPropertiesArgs) ToSettingsPropertiesRedshiftSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesRedshiftSettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesRedshiftSettingsPropertiesOutput)
}

func (i SettingsPropertiesRedshiftSettingsPropertiesArgs) ToSettingsPropertiesRedshiftSettingsPropertiesPtrOutput() SettingsPropertiesRedshiftSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesRedshiftSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i SettingsPropertiesRedshiftSettingsPropertiesArgs) ToSettingsPropertiesRedshiftSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesRedshiftSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesRedshiftSettingsPropertiesOutput).ToSettingsPropertiesRedshiftSettingsPropertiesPtrOutputWithContext(ctx)
}

// SettingsPropertiesRedshiftSettingsPropertiesPtrInput is an input type that accepts SettingsPropertiesRedshiftSettingsPropertiesArgs, SettingsPropertiesRedshiftSettingsPropertiesPtr and SettingsPropertiesRedshiftSettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `SettingsPropertiesRedshiftSettingsPropertiesPtrInput` via:
//
//	        SettingsPropertiesRedshiftSettingsPropertiesArgs{...}
//
//	or:
//
//	        nil
type SettingsPropertiesRedshiftSettingsPropertiesPtrInput interface {
	pulumi.Input

	ToSettingsPropertiesRedshiftSettingsPropertiesPtrOutput() SettingsPropertiesRedshiftSettingsPropertiesPtrOutput
	ToSettingsPropertiesRedshiftSettingsPropertiesPtrOutputWithContext(context.Context) SettingsPropertiesRedshiftSettingsPropertiesPtrOutput
}

type settingsPropertiesRedshiftSettingsPropertiesPtrType SettingsPropertiesRedshiftSettingsPropertiesArgs

func SettingsPropertiesRedshiftSettingsPropertiesPtr(v *SettingsPropertiesRedshiftSettingsPropertiesArgs) SettingsPropertiesRedshiftSettingsPropertiesPtrInput {
	return (*settingsPropertiesRedshiftSettingsPropertiesPtrType)(v)
}

func (*settingsPropertiesRedshiftSettingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesRedshiftSettingsProperties)(nil)).Elem()
}

func (i *settingsPropertiesRedshiftSettingsPropertiesPtrType) ToSettingsPropertiesRedshiftSettingsPropertiesPtrOutput() SettingsPropertiesRedshiftSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesRedshiftSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *settingsPropertiesRedshiftSettingsPropertiesPtrType) ToSettingsPropertiesRedshiftSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesRedshiftSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesRedshiftSettingsPropertiesPtrOutput)
}

// RedshiftSettings property identifier.
type SettingsPropertiesRedshiftSettingsPropertiesOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesRedshiftSettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesRedshiftSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesRedshiftSettingsPropertiesOutput) ToSettingsPropertiesRedshiftSettingsPropertiesOutput() SettingsPropertiesRedshiftSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesRedshiftSettingsPropertiesOutput) ToSettingsPropertiesRedshiftSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesRedshiftSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesRedshiftSettingsPropertiesOutput) ToSettingsPropertiesRedshiftSettingsPropertiesPtrOutput() SettingsPropertiesRedshiftSettingsPropertiesPtrOutput {
	return o.ToSettingsPropertiesRedshiftSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o SettingsPropertiesRedshiftSettingsPropertiesOutput) ToSettingsPropertiesRedshiftSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesRedshiftSettingsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsPropertiesRedshiftSettingsProperties) *SettingsPropertiesRedshiftSettingsProperties {
		return &v
	}).(SettingsPropertiesRedshiftSettingsPropertiesPtrOutput)
}

func (o SettingsPropertiesRedshiftSettingsPropertiesOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesRedshiftSettingsProperties) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesRedshiftSettingsPropertiesOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v SettingsPropertiesRedshiftSettingsProperties) int { return v.Port }).(pulumi.IntOutput)
}

func (o SettingsPropertiesRedshiftSettingsPropertiesOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesRedshiftSettingsProperties) string { return v.ServerName }).(pulumi.StringOutput)
}

type SettingsPropertiesRedshiftSettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesRedshiftSettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesRedshiftSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesRedshiftSettingsPropertiesPtrOutput) ToSettingsPropertiesRedshiftSettingsPropertiesPtrOutput() SettingsPropertiesRedshiftSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesRedshiftSettingsPropertiesPtrOutput) ToSettingsPropertiesRedshiftSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesRedshiftSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesRedshiftSettingsPropertiesPtrOutput) Elem() SettingsPropertiesRedshiftSettingsPropertiesOutput {
	return o.ApplyT(func(v *SettingsPropertiesRedshiftSettingsProperties) SettingsPropertiesRedshiftSettingsProperties {
		if v != nil {
			return *v
		}
		var ret SettingsPropertiesRedshiftSettingsProperties
		return ret
	}).(SettingsPropertiesRedshiftSettingsPropertiesOutput)
}

func (o SettingsPropertiesRedshiftSettingsPropertiesPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesRedshiftSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesRedshiftSettingsPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesRedshiftSettingsProperties) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o SettingsPropertiesRedshiftSettingsPropertiesPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesRedshiftSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataMigrationSettingsInput)(nil)).Elem(), DataMigrationSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataMigrationSettingsPtrInput)(nil)).Elem(), DataMigrationSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataMigrationSourceDataSettingsInput)(nil)).Elem(), DataMigrationSourceDataSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataMigrationSourceDataSettingsArrayInput)(nil)).Elem(), DataMigrationSourceDataSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationProjectDataProviderDescriptorInput)(nil)).Elem(), MigrationProjectDataProviderDescriptorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationProjectDataProviderDescriptorArrayInput)(nil)).Elem(), MigrationProjectDataProviderDescriptorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationConfigComputeConfigInput)(nil)).Elem(), ReplicationConfigComputeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaConversionApplicationAttributesPropertiesInput)(nil)).Elem(), SchemaConversionApplicationAttributesPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaConversionApplicationAttributesPropertiesPtrInput)(nil)).Elem(), SchemaConversionApplicationAttributesPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesInput)(nil)).Elem(), SettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesPtrInput)(nil)).Elem(), SettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesDocDbSettingsPropertiesInput)(nil)).Elem(), SettingsPropertiesDocDbSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesDocDbSettingsPropertiesPtrInput)(nil)).Elem(), SettingsPropertiesDocDbSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesIbmDb2LuwSettingsPropertiesInput)(nil)).Elem(), SettingsPropertiesIbmDb2LuwSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrInput)(nil)).Elem(), SettingsPropertiesIbmDb2LuwSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesIbmDb2zOsSettingsPropertiesInput)(nil)).Elem(), SettingsPropertiesIbmDb2zOsSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrInput)(nil)).Elem(), SettingsPropertiesIbmDb2zOsSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesMariaDbSettingsPropertiesInput)(nil)).Elem(), SettingsPropertiesMariaDbSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesMariaDbSettingsPropertiesPtrInput)(nil)).Elem(), SettingsPropertiesMariaDbSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesMicrosoftSqlServerSettingsPropertiesInput)(nil)).Elem(), SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrInput)(nil)).Elem(), SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesMongoDbSettingsPropertiesInput)(nil)).Elem(), SettingsPropertiesMongoDbSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesMongoDbSettingsPropertiesPtrInput)(nil)).Elem(), SettingsPropertiesMongoDbSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesMySqlSettingsPropertiesInput)(nil)).Elem(), SettingsPropertiesMySqlSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesMySqlSettingsPropertiesPtrInput)(nil)).Elem(), SettingsPropertiesMySqlSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesOracleSettingsPropertiesInput)(nil)).Elem(), SettingsPropertiesOracleSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesOracleSettingsPropertiesPtrInput)(nil)).Elem(), SettingsPropertiesOracleSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesPostgreSqlSettingsPropertiesInput)(nil)).Elem(), SettingsPropertiesPostgreSqlSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesPostgreSqlSettingsPropertiesPtrInput)(nil)).Elem(), SettingsPropertiesPostgreSqlSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesRedshiftSettingsPropertiesInput)(nil)).Elem(), SettingsPropertiesRedshiftSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesRedshiftSettingsPropertiesPtrInput)(nil)).Elem(), SettingsPropertiesRedshiftSettingsPropertiesArgs{})
	pulumi.RegisterOutputType(DataMigrationSettingsOutput{})
	pulumi.RegisterOutputType(DataMigrationSettingsPtrOutput{})
	pulumi.RegisterOutputType(DataMigrationSourceDataSettingsOutput{})
	pulumi.RegisterOutputType(DataMigrationSourceDataSettingsArrayOutput{})
	pulumi.RegisterOutputType(MigrationProjectDataProviderDescriptorOutput{})
	pulumi.RegisterOutputType(MigrationProjectDataProviderDescriptorArrayOutput{})
	pulumi.RegisterOutputType(ReplicationConfigComputeConfigOutput{})
	pulumi.RegisterOutputType(ReplicationConfigComputeConfigPtrOutput{})
	pulumi.RegisterOutputType(SchemaConversionApplicationAttributesPropertiesOutput{})
	pulumi.RegisterOutputType(SchemaConversionApplicationAttributesPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesDocDbSettingsPropertiesOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesDocDbSettingsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesIbmDb2LuwSettingsPropertiesOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesIbmDb2LuwSettingsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesIbmDb2zOsSettingsPropertiesOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesIbmDb2zOsSettingsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesMariaDbSettingsPropertiesOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesMariaDbSettingsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesMongoDbSettingsPropertiesOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesMongoDbSettingsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesMySqlSettingsPropertiesOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesMySqlSettingsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesOracleSettingsPropertiesOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesOracleSettingsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesPostgreSqlSettingsPropertiesOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesRedshiftSettingsPropertiesOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesRedshiftSettingsPropertiesPtrOutput{})
}
