// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// A key-value pair to associate with a resource.
type DataProviderTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type InstanceProfileTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// It is an object that describes Source and Target DataProviders and credentials for connecting to databases that are used in MigrationProject
type MigrationProjectDataProviderDescriptor struct {
	// The Amazon Resource Name (ARN) of the data provider.
	DataProviderArn        *string `pulumi:"dataProviderArn"`
	DataProviderIdentifier *string `pulumi:"dataProviderIdentifier"`
	// The user-friendly name of the data provider.
	DataProviderName *string `pulumi:"dataProviderName"`
	// The ARN of the role used to access AWS Secrets Manager.
	SecretsManagerAccessRoleArn *string `pulumi:"secretsManagerAccessRoleArn"`
	// The identifier of the AWS Secrets Manager Secret used to store access credentials for the data provider.
	SecretsManagerSecretId *string `pulumi:"secretsManagerSecretId"`
}

// MigrationProjectDataProviderDescriptorInput is an input type that accepts MigrationProjectDataProviderDescriptorArgs and MigrationProjectDataProviderDescriptorOutput values.
// You can construct a concrete instance of `MigrationProjectDataProviderDescriptorInput` via:
//
//	MigrationProjectDataProviderDescriptorArgs{...}
type MigrationProjectDataProviderDescriptorInput interface {
	pulumi.Input

	ToMigrationProjectDataProviderDescriptorOutput() MigrationProjectDataProviderDescriptorOutput
	ToMigrationProjectDataProviderDescriptorOutputWithContext(context.Context) MigrationProjectDataProviderDescriptorOutput
}

// It is an object that describes Source and Target DataProviders and credentials for connecting to databases that are used in MigrationProject
type MigrationProjectDataProviderDescriptorArgs struct {
	// The Amazon Resource Name (ARN) of the data provider.
	DataProviderArn        pulumi.StringPtrInput `pulumi:"dataProviderArn"`
	DataProviderIdentifier pulumi.StringPtrInput `pulumi:"dataProviderIdentifier"`
	// The user-friendly name of the data provider.
	DataProviderName pulumi.StringPtrInput `pulumi:"dataProviderName"`
	// The ARN of the role used to access AWS Secrets Manager.
	SecretsManagerAccessRoleArn pulumi.StringPtrInput `pulumi:"secretsManagerAccessRoleArn"`
	// The identifier of the AWS Secrets Manager Secret used to store access credentials for the data provider.
	SecretsManagerSecretId pulumi.StringPtrInput `pulumi:"secretsManagerSecretId"`
}

func (MigrationProjectDataProviderDescriptorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationProjectDataProviderDescriptor)(nil)).Elem()
}

func (i MigrationProjectDataProviderDescriptorArgs) ToMigrationProjectDataProviderDescriptorOutput() MigrationProjectDataProviderDescriptorOutput {
	return i.ToMigrationProjectDataProviderDescriptorOutputWithContext(context.Background())
}

func (i MigrationProjectDataProviderDescriptorArgs) ToMigrationProjectDataProviderDescriptorOutputWithContext(ctx context.Context) MigrationProjectDataProviderDescriptorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationProjectDataProviderDescriptorOutput)
}

// MigrationProjectDataProviderDescriptorArrayInput is an input type that accepts MigrationProjectDataProviderDescriptorArray and MigrationProjectDataProviderDescriptorArrayOutput values.
// You can construct a concrete instance of `MigrationProjectDataProviderDescriptorArrayInput` via:
//
//	MigrationProjectDataProviderDescriptorArray{ MigrationProjectDataProviderDescriptorArgs{...} }
type MigrationProjectDataProviderDescriptorArrayInput interface {
	pulumi.Input

	ToMigrationProjectDataProviderDescriptorArrayOutput() MigrationProjectDataProviderDescriptorArrayOutput
	ToMigrationProjectDataProviderDescriptorArrayOutputWithContext(context.Context) MigrationProjectDataProviderDescriptorArrayOutput
}

type MigrationProjectDataProviderDescriptorArray []MigrationProjectDataProviderDescriptorInput

func (MigrationProjectDataProviderDescriptorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrationProjectDataProviderDescriptor)(nil)).Elem()
}

func (i MigrationProjectDataProviderDescriptorArray) ToMigrationProjectDataProviderDescriptorArrayOutput() MigrationProjectDataProviderDescriptorArrayOutput {
	return i.ToMigrationProjectDataProviderDescriptorArrayOutputWithContext(context.Background())
}

func (i MigrationProjectDataProviderDescriptorArray) ToMigrationProjectDataProviderDescriptorArrayOutputWithContext(ctx context.Context) MigrationProjectDataProviderDescriptorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationProjectDataProviderDescriptorArrayOutput)
}

// It is an object that describes Source and Target DataProviders and credentials for connecting to databases that are used in MigrationProject
type MigrationProjectDataProviderDescriptorOutput struct{ *pulumi.OutputState }

func (MigrationProjectDataProviderDescriptorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationProjectDataProviderDescriptor)(nil)).Elem()
}

func (o MigrationProjectDataProviderDescriptorOutput) ToMigrationProjectDataProviderDescriptorOutput() MigrationProjectDataProviderDescriptorOutput {
	return o
}

func (o MigrationProjectDataProviderDescriptorOutput) ToMigrationProjectDataProviderDescriptorOutputWithContext(ctx context.Context) MigrationProjectDataProviderDescriptorOutput {
	return o
}

// The Amazon Resource Name (ARN) of the data provider.
func (o MigrationProjectDataProviderDescriptorOutput) DataProviderArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationProjectDataProviderDescriptor) *string { return v.DataProviderArn }).(pulumi.StringPtrOutput)
}

func (o MigrationProjectDataProviderDescriptorOutput) DataProviderIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationProjectDataProviderDescriptor) *string { return v.DataProviderIdentifier }).(pulumi.StringPtrOutput)
}

// The user-friendly name of the data provider.
func (o MigrationProjectDataProviderDescriptorOutput) DataProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationProjectDataProviderDescriptor) *string { return v.DataProviderName }).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access AWS Secrets Manager.
func (o MigrationProjectDataProviderDescriptorOutput) SecretsManagerAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationProjectDataProviderDescriptor) *string { return v.SecretsManagerAccessRoleArn }).(pulumi.StringPtrOutput)
}

// The identifier of the AWS Secrets Manager Secret used to store access credentials for the data provider.
func (o MigrationProjectDataProviderDescriptorOutput) SecretsManagerSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationProjectDataProviderDescriptor) *string { return v.SecretsManagerSecretId }).(pulumi.StringPtrOutput)
}

type MigrationProjectDataProviderDescriptorArrayOutput struct{ *pulumi.OutputState }

func (MigrationProjectDataProviderDescriptorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrationProjectDataProviderDescriptor)(nil)).Elem()
}

func (o MigrationProjectDataProviderDescriptorArrayOutput) ToMigrationProjectDataProviderDescriptorArrayOutput() MigrationProjectDataProviderDescriptorArrayOutput {
	return o
}

func (o MigrationProjectDataProviderDescriptorArrayOutput) ToMigrationProjectDataProviderDescriptorArrayOutputWithContext(ctx context.Context) MigrationProjectDataProviderDescriptorArrayOutput {
	return o
}

func (o MigrationProjectDataProviderDescriptorArrayOutput) Index(i pulumi.IntInput) MigrationProjectDataProviderDescriptorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrationProjectDataProviderDescriptor {
		return vs[0].([]MigrationProjectDataProviderDescriptor)[vs[1].(int)]
	}).(MigrationProjectDataProviderDescriptorOutput)
}

// A key-value pair to associate with a resource.
type MigrationProjectTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, , and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, , and -.
	Value string `pulumi:"value"`
}

// Configuration parameters for provisioning a AWS DMS Serverless replication
type ReplicationConfigComputeConfig struct {
	// The Availability Zone where the AWS DMS Serverless replication using this configuration will run. The default value is a random, system-chosen Availability Zone in the configuration's AWS Region , for example, `"us-west-2"` . You can't set this parameter if the `MultiAZ` parameter is set to `true` .
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// A list of custom DNS name servers supported for the AWS DMS Serverless replication to access your source or target database. This list overrides the default name servers supported by the AWS DMS Serverless replication. You can specify a comma-separated list of internet addresses for up to four DNS name servers. For example: `"1.1.1.1,2.2.2.2,3.3.3.3,4.4.4.4"`
	DnsNameServers *string `pulumi:"dnsNameServers"`
	// An AWS Key Management Service ( AWS KMS ) key Amazon Resource Name (ARN) that is used to encrypt the data during AWS DMS Serverless replication.
	//
	// If you don't specify a value for the `KmsKeyId` parameter, AWS DMS uses your default encryption key.
	//
	// AWS KMS creates the default encryption key for your Amazon Web Services account. Your AWS account has a different default encryption key for each AWS Region .
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Specifies the maximum value of the AWS DMS capacity units (DCUs) for which a given AWS DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 1 DCU as the minimum value allowed. The list of valid DCU values includes 1, 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. So, the maximum value that you can specify for AWS DMS Serverless is 384. The `MaxCapacityUnits` parameter is the only DCU parameter you are required to specify.
	MaxCapacityUnits int `pulumi:"maxCapacityUnits"`
	// Specifies the minimum value of the AWS DMS capacity units (DCUs) for which a given AWS DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 1 DCU as the minimum value allowed. The list of valid DCU values includes 1, 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. So, the minimum DCU value that you can specify for AWS DMS Serverless is 1. If you don't set this value, AWS DMS sets this parameter to the minimum DCU value allowed, 1. If there is no current source activity, AWS DMS scales down your replication until it reaches the value specified in `MinCapacityUnits` .
	MinCapacityUnits *int `pulumi:"minCapacityUnits"`
	// Specifies whether the AWS DMS Serverless replication is a Multi-AZ deployment. You can't set the `AvailabilityZone` parameter if the `MultiAZ` parameter is set to `true` .
	MultiAz *bool `pulumi:"multiAz"`
	// The weekly time range during which system maintenance can occur for the AWS DMS Serverless replication, in Universal Coordinated Time (UTC). The format is `ddd:hh24:mi-ddd:hh24:mi` .
	//
	// The default is a 30-minute window selected at random from an 8-hour block of time per AWS Region . This maintenance occurs on a random day of the week. Valid values for days of the week include `Mon` , `Tue` , `Wed` , `Thu` , `Fri` , `Sat` , and `Sun` .
	//
	// Constraints include a minimum 30-minute window.
	PreferredMaintenanceWindow *string `pulumi:"preferredMaintenanceWindow"`
	// Specifies a subnet group identifier to associate with the AWS DMS Serverless replication.
	ReplicationSubnetGroupId *string `pulumi:"replicationSubnetGroupId"`
	// Specifies the virtual private cloud (VPC) security group to use with the AWS DMS Serverless replication. The VPC security group must work with the VPC containing the replication.
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
}

// ReplicationConfigComputeConfigInput is an input type that accepts ReplicationConfigComputeConfigArgs and ReplicationConfigComputeConfigOutput values.
// You can construct a concrete instance of `ReplicationConfigComputeConfigInput` via:
//
//	ReplicationConfigComputeConfigArgs{...}
type ReplicationConfigComputeConfigInput interface {
	pulumi.Input

	ToReplicationConfigComputeConfigOutput() ReplicationConfigComputeConfigOutput
	ToReplicationConfigComputeConfigOutputWithContext(context.Context) ReplicationConfigComputeConfigOutput
}

// Configuration parameters for provisioning a AWS DMS Serverless replication
type ReplicationConfigComputeConfigArgs struct {
	// The Availability Zone where the AWS DMS Serverless replication using this configuration will run. The default value is a random, system-chosen Availability Zone in the configuration's AWS Region , for example, `"us-west-2"` . You can't set this parameter if the `MultiAZ` parameter is set to `true` .
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// A list of custom DNS name servers supported for the AWS DMS Serverless replication to access your source or target database. This list overrides the default name servers supported by the AWS DMS Serverless replication. You can specify a comma-separated list of internet addresses for up to four DNS name servers. For example: `"1.1.1.1,2.2.2.2,3.3.3.3,4.4.4.4"`
	DnsNameServers pulumi.StringPtrInput `pulumi:"dnsNameServers"`
	// An AWS Key Management Service ( AWS KMS ) key Amazon Resource Name (ARN) that is used to encrypt the data during AWS DMS Serverless replication.
	//
	// If you don't specify a value for the `KmsKeyId` parameter, AWS DMS uses your default encryption key.
	//
	// AWS KMS creates the default encryption key for your Amazon Web Services account. Your AWS account has a different default encryption key for each AWS Region .
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// Specifies the maximum value of the AWS DMS capacity units (DCUs) for which a given AWS DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 1 DCU as the minimum value allowed. The list of valid DCU values includes 1, 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. So, the maximum value that you can specify for AWS DMS Serverless is 384. The `MaxCapacityUnits` parameter is the only DCU parameter you are required to specify.
	MaxCapacityUnits pulumi.IntInput `pulumi:"maxCapacityUnits"`
	// Specifies the minimum value of the AWS DMS capacity units (DCUs) for which a given AWS DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 1 DCU as the minimum value allowed. The list of valid DCU values includes 1, 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. So, the minimum DCU value that you can specify for AWS DMS Serverless is 1. If you don't set this value, AWS DMS sets this parameter to the minimum DCU value allowed, 1. If there is no current source activity, AWS DMS scales down your replication until it reaches the value specified in `MinCapacityUnits` .
	MinCapacityUnits pulumi.IntPtrInput `pulumi:"minCapacityUnits"`
	// Specifies whether the AWS DMS Serverless replication is a Multi-AZ deployment. You can't set the `AvailabilityZone` parameter if the `MultiAZ` parameter is set to `true` .
	MultiAz pulumi.BoolPtrInput `pulumi:"multiAz"`
	// The weekly time range during which system maintenance can occur for the AWS DMS Serverless replication, in Universal Coordinated Time (UTC). The format is `ddd:hh24:mi-ddd:hh24:mi` .
	//
	// The default is a 30-minute window selected at random from an 8-hour block of time per AWS Region . This maintenance occurs on a random day of the week. Valid values for days of the week include `Mon` , `Tue` , `Wed` , `Thu` , `Fri` , `Sat` , and `Sun` .
	//
	// Constraints include a minimum 30-minute window.
	PreferredMaintenanceWindow pulumi.StringPtrInput `pulumi:"preferredMaintenanceWindow"`
	// Specifies a subnet group identifier to associate with the AWS DMS Serverless replication.
	ReplicationSubnetGroupId pulumi.StringPtrInput `pulumi:"replicationSubnetGroupId"`
	// Specifies the virtual private cloud (VPC) security group to use with the AWS DMS Serverless replication. The VPC security group must work with the VPC containing the replication.
	VpcSecurityGroupIds pulumi.StringArrayInput `pulumi:"vpcSecurityGroupIds"`
}

func (ReplicationConfigComputeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationConfigComputeConfig)(nil)).Elem()
}

func (i ReplicationConfigComputeConfigArgs) ToReplicationConfigComputeConfigOutput() ReplicationConfigComputeConfigOutput {
	return i.ToReplicationConfigComputeConfigOutputWithContext(context.Background())
}

func (i ReplicationConfigComputeConfigArgs) ToReplicationConfigComputeConfigOutputWithContext(ctx context.Context) ReplicationConfigComputeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationConfigComputeConfigOutput)
}

func (i ReplicationConfigComputeConfigArgs) ToReplicationConfigComputeConfigPtrOutput() ReplicationConfigComputeConfigPtrOutput {
	return i.ToReplicationConfigComputeConfigPtrOutputWithContext(context.Background())
}

func (i ReplicationConfigComputeConfigArgs) ToReplicationConfigComputeConfigPtrOutputWithContext(ctx context.Context) ReplicationConfigComputeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationConfigComputeConfigOutput).ToReplicationConfigComputeConfigPtrOutputWithContext(ctx)
}

// ReplicationConfigComputeConfigPtrInput is an input type that accepts ReplicationConfigComputeConfigArgs, ReplicationConfigComputeConfigPtr and ReplicationConfigComputeConfigPtrOutput values.
// You can construct a concrete instance of `ReplicationConfigComputeConfigPtrInput` via:
//
//	        ReplicationConfigComputeConfigArgs{...}
//
//	or:
//
//	        nil
type ReplicationConfigComputeConfigPtrInput interface {
	pulumi.Input

	ToReplicationConfigComputeConfigPtrOutput() ReplicationConfigComputeConfigPtrOutput
	ToReplicationConfigComputeConfigPtrOutputWithContext(context.Context) ReplicationConfigComputeConfigPtrOutput
}

type replicationConfigComputeConfigPtrType ReplicationConfigComputeConfigArgs

func ReplicationConfigComputeConfigPtr(v *ReplicationConfigComputeConfigArgs) ReplicationConfigComputeConfigPtrInput {
	return (*replicationConfigComputeConfigPtrType)(v)
}

func (*replicationConfigComputeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationConfigComputeConfig)(nil)).Elem()
}

func (i *replicationConfigComputeConfigPtrType) ToReplicationConfigComputeConfigPtrOutput() ReplicationConfigComputeConfigPtrOutput {
	return i.ToReplicationConfigComputeConfigPtrOutputWithContext(context.Background())
}

func (i *replicationConfigComputeConfigPtrType) ToReplicationConfigComputeConfigPtrOutputWithContext(ctx context.Context) ReplicationConfigComputeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationConfigComputeConfigPtrOutput)
}

// Configuration parameters for provisioning a AWS DMS Serverless replication
type ReplicationConfigComputeConfigOutput struct{ *pulumi.OutputState }

func (ReplicationConfigComputeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationConfigComputeConfig)(nil)).Elem()
}

func (o ReplicationConfigComputeConfigOutput) ToReplicationConfigComputeConfigOutput() ReplicationConfigComputeConfigOutput {
	return o
}

func (o ReplicationConfigComputeConfigOutput) ToReplicationConfigComputeConfigOutputWithContext(ctx context.Context) ReplicationConfigComputeConfigOutput {
	return o
}

func (o ReplicationConfigComputeConfigOutput) ToReplicationConfigComputeConfigPtrOutput() ReplicationConfigComputeConfigPtrOutput {
	return o.ToReplicationConfigComputeConfigPtrOutputWithContext(context.Background())
}

func (o ReplicationConfigComputeConfigOutput) ToReplicationConfigComputeConfigPtrOutputWithContext(ctx context.Context) ReplicationConfigComputeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationConfigComputeConfig) *ReplicationConfigComputeConfig {
		return &v
	}).(ReplicationConfigComputeConfigPtrOutput)
}

// The Availability Zone where the AWS DMS Serverless replication using this configuration will run. The default value is a random, system-chosen Availability Zone in the configuration's AWS Region , for example, `"us-west-2"` . You can't set this parameter if the `MultiAZ` parameter is set to `true` .
func (o ReplicationConfigComputeConfigOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigComputeConfig) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// A list of custom DNS name servers supported for the AWS DMS Serverless replication to access your source or target database. This list overrides the default name servers supported by the AWS DMS Serverless replication. You can specify a comma-separated list of internet addresses for up to four DNS name servers. For example: `"1.1.1.1,2.2.2.2,3.3.3.3,4.4.4.4"`
func (o ReplicationConfigComputeConfigOutput) DnsNameServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigComputeConfig) *string { return v.DnsNameServers }).(pulumi.StringPtrOutput)
}

// An AWS Key Management Service ( AWS KMS ) key Amazon Resource Name (ARN) that is used to encrypt the data during AWS DMS Serverless replication.
//
// If you don't specify a value for the `KmsKeyId` parameter, AWS DMS uses your default encryption key.
//
// AWS KMS creates the default encryption key for your Amazon Web Services account. Your AWS account has a different default encryption key for each AWS Region .
func (o ReplicationConfigComputeConfigOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigComputeConfig) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// Specifies the maximum value of the AWS DMS capacity units (DCUs) for which a given AWS DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 1 DCU as the minimum value allowed. The list of valid DCU values includes 1, 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. So, the maximum value that you can specify for AWS DMS Serverless is 384. The `MaxCapacityUnits` parameter is the only DCU parameter you are required to specify.
func (o ReplicationConfigComputeConfigOutput) MaxCapacityUnits() pulumi.IntOutput {
	return o.ApplyT(func(v ReplicationConfigComputeConfig) int { return v.MaxCapacityUnits }).(pulumi.IntOutput)
}

// Specifies the minimum value of the AWS DMS capacity units (DCUs) for which a given AWS DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 1 DCU as the minimum value allowed. The list of valid DCU values includes 1, 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. So, the minimum DCU value that you can specify for AWS DMS Serverless is 1. If you don't set this value, AWS DMS sets this parameter to the minimum DCU value allowed, 1. If there is no current source activity, AWS DMS scales down your replication until it reaches the value specified in `MinCapacityUnits` .
func (o ReplicationConfigComputeConfigOutput) MinCapacityUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReplicationConfigComputeConfig) *int { return v.MinCapacityUnits }).(pulumi.IntPtrOutput)
}

// Specifies whether the AWS DMS Serverless replication is a Multi-AZ deployment. You can't set the `AvailabilityZone` parameter if the `MultiAZ` parameter is set to `true` .
func (o ReplicationConfigComputeConfigOutput) MultiAz() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ReplicationConfigComputeConfig) *bool { return v.MultiAz }).(pulumi.BoolPtrOutput)
}

// The weekly time range during which system maintenance can occur for the AWS DMS Serverless replication, in Universal Coordinated Time (UTC). The format is `ddd:hh24:mi-ddd:hh24:mi` .
//
// The default is a 30-minute window selected at random from an 8-hour block of time per AWS Region . This maintenance occurs on a random day of the week. Valid values for days of the week include `Mon` , `Tue` , `Wed` , `Thu` , `Fri` , `Sat` , and `Sun` .
//
// Constraints include a minimum 30-minute window.
func (o ReplicationConfigComputeConfigOutput) PreferredMaintenanceWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigComputeConfig) *string { return v.PreferredMaintenanceWindow }).(pulumi.StringPtrOutput)
}

// Specifies a subnet group identifier to associate with the AWS DMS Serverless replication.
func (o ReplicationConfigComputeConfigOutput) ReplicationSubnetGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigComputeConfig) *string { return v.ReplicationSubnetGroupId }).(pulumi.StringPtrOutput)
}

// Specifies the virtual private cloud (VPC) security group to use with the AWS DMS Serverless replication. The VPC security group must work with the VPC containing the replication.
func (o ReplicationConfigComputeConfigOutput) VpcSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationConfigComputeConfig) []string { return v.VpcSecurityGroupIds }).(pulumi.StringArrayOutput)
}

type ReplicationConfigComputeConfigPtrOutput struct{ *pulumi.OutputState }

func (ReplicationConfigComputeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationConfigComputeConfig)(nil)).Elem()
}

func (o ReplicationConfigComputeConfigPtrOutput) ToReplicationConfigComputeConfigPtrOutput() ReplicationConfigComputeConfigPtrOutput {
	return o
}

func (o ReplicationConfigComputeConfigPtrOutput) ToReplicationConfigComputeConfigPtrOutputWithContext(ctx context.Context) ReplicationConfigComputeConfigPtrOutput {
	return o
}

func (o ReplicationConfigComputeConfigPtrOutput) Elem() ReplicationConfigComputeConfigOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) ReplicationConfigComputeConfig {
		if v != nil {
			return *v
		}
		var ret ReplicationConfigComputeConfig
		return ret
	}).(ReplicationConfigComputeConfigOutput)
}

// The Availability Zone where the AWS DMS Serverless replication using this configuration will run. The default value is a random, system-chosen Availability Zone in the configuration's AWS Region , for example, `"us-west-2"` . You can't set this parameter if the `MultiAZ` parameter is set to `true` .
func (o ReplicationConfigComputeConfigPtrOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// A list of custom DNS name servers supported for the AWS DMS Serverless replication to access your source or target database. This list overrides the default name servers supported by the AWS DMS Serverless replication. You can specify a comma-separated list of internet addresses for up to four DNS name servers. For example: `"1.1.1.1,2.2.2.2,3.3.3.3,4.4.4.4"`
func (o ReplicationConfigComputeConfigPtrOutput) DnsNameServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) *string {
		if v == nil {
			return nil
		}
		return v.DnsNameServers
	}).(pulumi.StringPtrOutput)
}

// An AWS Key Management Service ( AWS KMS ) key Amazon Resource Name (ARN) that is used to encrypt the data during AWS DMS Serverless replication.
//
// If you don't specify a value for the `KmsKeyId` parameter, AWS DMS uses your default encryption key.
//
// AWS KMS creates the default encryption key for your Amazon Web Services account. Your AWS account has a different default encryption key for each AWS Region .
func (o ReplicationConfigComputeConfigPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// Specifies the maximum value of the AWS DMS capacity units (DCUs) for which a given AWS DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 1 DCU as the minimum value allowed. The list of valid DCU values includes 1, 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. So, the maximum value that you can specify for AWS DMS Serverless is 384. The `MaxCapacityUnits` parameter is the only DCU parameter you are required to specify.
func (o ReplicationConfigComputeConfigPtrOutput) MaxCapacityUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) *int {
		if v == nil {
			return nil
		}
		return &v.MaxCapacityUnits
	}).(pulumi.IntPtrOutput)
}

// Specifies the minimum value of the AWS DMS capacity units (DCUs) for which a given AWS DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 1 DCU as the minimum value allowed. The list of valid DCU values includes 1, 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. So, the minimum DCU value that you can specify for AWS DMS Serverless is 1. If you don't set this value, AWS DMS sets this parameter to the minimum DCU value allowed, 1. If there is no current source activity, AWS DMS scales down your replication until it reaches the value specified in `MinCapacityUnits` .
func (o ReplicationConfigComputeConfigPtrOutput) MinCapacityUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) *int {
		if v == nil {
			return nil
		}
		return v.MinCapacityUnits
	}).(pulumi.IntPtrOutput)
}

// Specifies whether the AWS DMS Serverless replication is a Multi-AZ deployment. You can't set the `AvailabilityZone` parameter if the `MultiAZ` parameter is set to `true` .
func (o ReplicationConfigComputeConfigPtrOutput) MultiAz() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.MultiAz
	}).(pulumi.BoolPtrOutput)
}

// The weekly time range during which system maintenance can occur for the AWS DMS Serverless replication, in Universal Coordinated Time (UTC). The format is `ddd:hh24:mi-ddd:hh24:mi` .
//
// The default is a 30-minute window selected at random from an 8-hour block of time per AWS Region . This maintenance occurs on a random day of the week. Valid values for days of the week include `Mon` , `Tue` , `Wed` , `Thu` , `Fri` , `Sat` , and `Sun` .
//
// Constraints include a minimum 30-minute window.
func (o ReplicationConfigComputeConfigPtrOutput) PreferredMaintenanceWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) *string {
		if v == nil {
			return nil
		}
		return v.PreferredMaintenanceWindow
	}).(pulumi.StringPtrOutput)
}

// Specifies a subnet group identifier to associate with the AWS DMS Serverless replication.
func (o ReplicationConfigComputeConfigPtrOutput) ReplicationSubnetGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) *string {
		if v == nil {
			return nil
		}
		return v.ReplicationSubnetGroupId
	}).(pulumi.StringPtrOutput)
}

// Specifies the virtual private cloud (VPC) security group to use with the AWS DMS Serverless replication. The VPC security group must work with the VPC containing the replication.
func (o ReplicationConfigComputeConfigPtrOutput) VpcSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReplicationConfigComputeConfig) []string {
		if v == nil {
			return nil
		}
		return v.VpcSecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
//
//	resource.</p>
type ReplicationConfigTag struct {
	// <p>Tag key.</p>
	Key string `pulumi:"key"`
	// <p>Tag value.</p>
	Value string `pulumi:"value"`
}

// The property describes schema conversion application attributes for the migration project.
type SchemaConversionApplicationAttributesProperties struct {
	S3BucketPath    *string `pulumi:"s3BucketPath"`
	S3BucketRoleArn *string `pulumi:"s3BucketRoleArn"`
}

// SchemaConversionApplicationAttributesPropertiesInput is an input type that accepts SchemaConversionApplicationAttributesPropertiesArgs and SchemaConversionApplicationAttributesPropertiesOutput values.
// You can construct a concrete instance of `SchemaConversionApplicationAttributesPropertiesInput` via:
//
//	SchemaConversionApplicationAttributesPropertiesArgs{...}
type SchemaConversionApplicationAttributesPropertiesInput interface {
	pulumi.Input

	ToSchemaConversionApplicationAttributesPropertiesOutput() SchemaConversionApplicationAttributesPropertiesOutput
	ToSchemaConversionApplicationAttributesPropertiesOutputWithContext(context.Context) SchemaConversionApplicationAttributesPropertiesOutput
}

// The property describes schema conversion application attributes for the migration project.
type SchemaConversionApplicationAttributesPropertiesArgs struct {
	S3BucketPath    pulumi.StringPtrInput `pulumi:"s3BucketPath"`
	S3BucketRoleArn pulumi.StringPtrInput `pulumi:"s3BucketRoleArn"`
}

func (SchemaConversionApplicationAttributesPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaConversionApplicationAttributesProperties)(nil)).Elem()
}

func (i SchemaConversionApplicationAttributesPropertiesArgs) ToSchemaConversionApplicationAttributesPropertiesOutput() SchemaConversionApplicationAttributesPropertiesOutput {
	return i.ToSchemaConversionApplicationAttributesPropertiesOutputWithContext(context.Background())
}

func (i SchemaConversionApplicationAttributesPropertiesArgs) ToSchemaConversionApplicationAttributesPropertiesOutputWithContext(ctx context.Context) SchemaConversionApplicationAttributesPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaConversionApplicationAttributesPropertiesOutput)
}

func (i SchemaConversionApplicationAttributesPropertiesArgs) ToSchemaConversionApplicationAttributesPropertiesPtrOutput() SchemaConversionApplicationAttributesPropertiesPtrOutput {
	return i.ToSchemaConversionApplicationAttributesPropertiesPtrOutputWithContext(context.Background())
}

func (i SchemaConversionApplicationAttributesPropertiesArgs) ToSchemaConversionApplicationAttributesPropertiesPtrOutputWithContext(ctx context.Context) SchemaConversionApplicationAttributesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaConversionApplicationAttributesPropertiesOutput).ToSchemaConversionApplicationAttributesPropertiesPtrOutputWithContext(ctx)
}

// SchemaConversionApplicationAttributesPropertiesPtrInput is an input type that accepts SchemaConversionApplicationAttributesPropertiesArgs, SchemaConversionApplicationAttributesPropertiesPtr and SchemaConversionApplicationAttributesPropertiesPtrOutput values.
// You can construct a concrete instance of `SchemaConversionApplicationAttributesPropertiesPtrInput` via:
//
//	        SchemaConversionApplicationAttributesPropertiesArgs{...}
//
//	or:
//
//	        nil
type SchemaConversionApplicationAttributesPropertiesPtrInput interface {
	pulumi.Input

	ToSchemaConversionApplicationAttributesPropertiesPtrOutput() SchemaConversionApplicationAttributesPropertiesPtrOutput
	ToSchemaConversionApplicationAttributesPropertiesPtrOutputWithContext(context.Context) SchemaConversionApplicationAttributesPropertiesPtrOutput
}

type schemaConversionApplicationAttributesPropertiesPtrType SchemaConversionApplicationAttributesPropertiesArgs

func SchemaConversionApplicationAttributesPropertiesPtr(v *SchemaConversionApplicationAttributesPropertiesArgs) SchemaConversionApplicationAttributesPropertiesPtrInput {
	return (*schemaConversionApplicationAttributesPropertiesPtrType)(v)
}

func (*schemaConversionApplicationAttributesPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaConversionApplicationAttributesProperties)(nil)).Elem()
}

func (i *schemaConversionApplicationAttributesPropertiesPtrType) ToSchemaConversionApplicationAttributesPropertiesPtrOutput() SchemaConversionApplicationAttributesPropertiesPtrOutput {
	return i.ToSchemaConversionApplicationAttributesPropertiesPtrOutputWithContext(context.Background())
}

func (i *schemaConversionApplicationAttributesPropertiesPtrType) ToSchemaConversionApplicationAttributesPropertiesPtrOutputWithContext(ctx context.Context) SchemaConversionApplicationAttributesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaConversionApplicationAttributesPropertiesPtrOutput)
}

// The property describes schema conversion application attributes for the migration project.
type SchemaConversionApplicationAttributesPropertiesOutput struct{ *pulumi.OutputState }

func (SchemaConversionApplicationAttributesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaConversionApplicationAttributesProperties)(nil)).Elem()
}

func (o SchemaConversionApplicationAttributesPropertiesOutput) ToSchemaConversionApplicationAttributesPropertiesOutput() SchemaConversionApplicationAttributesPropertiesOutput {
	return o
}

func (o SchemaConversionApplicationAttributesPropertiesOutput) ToSchemaConversionApplicationAttributesPropertiesOutputWithContext(ctx context.Context) SchemaConversionApplicationAttributesPropertiesOutput {
	return o
}

func (o SchemaConversionApplicationAttributesPropertiesOutput) ToSchemaConversionApplicationAttributesPropertiesPtrOutput() SchemaConversionApplicationAttributesPropertiesPtrOutput {
	return o.ToSchemaConversionApplicationAttributesPropertiesPtrOutputWithContext(context.Background())
}

func (o SchemaConversionApplicationAttributesPropertiesOutput) ToSchemaConversionApplicationAttributesPropertiesPtrOutputWithContext(ctx context.Context) SchemaConversionApplicationAttributesPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaConversionApplicationAttributesProperties) *SchemaConversionApplicationAttributesProperties {
		return &v
	}).(SchemaConversionApplicationAttributesPropertiesPtrOutput)
}

func (o SchemaConversionApplicationAttributesPropertiesOutput) S3BucketPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaConversionApplicationAttributesProperties) *string { return v.S3BucketPath }).(pulumi.StringPtrOutput)
}

func (o SchemaConversionApplicationAttributesPropertiesOutput) S3BucketRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaConversionApplicationAttributesProperties) *string { return v.S3BucketRoleArn }).(pulumi.StringPtrOutput)
}

type SchemaConversionApplicationAttributesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SchemaConversionApplicationAttributesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaConversionApplicationAttributesProperties)(nil)).Elem()
}

func (o SchemaConversionApplicationAttributesPropertiesPtrOutput) ToSchemaConversionApplicationAttributesPropertiesPtrOutput() SchemaConversionApplicationAttributesPropertiesPtrOutput {
	return o
}

func (o SchemaConversionApplicationAttributesPropertiesPtrOutput) ToSchemaConversionApplicationAttributesPropertiesPtrOutputWithContext(ctx context.Context) SchemaConversionApplicationAttributesPropertiesPtrOutput {
	return o
}

func (o SchemaConversionApplicationAttributesPropertiesPtrOutput) Elem() SchemaConversionApplicationAttributesPropertiesOutput {
	return o.ApplyT(func(v *SchemaConversionApplicationAttributesProperties) SchemaConversionApplicationAttributesProperties {
		if v != nil {
			return *v
		}
		var ret SchemaConversionApplicationAttributesProperties
		return ret
	}).(SchemaConversionApplicationAttributesPropertiesOutput)
}

func (o SchemaConversionApplicationAttributesPropertiesPtrOutput) S3BucketPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaConversionApplicationAttributesProperties) *string {
		if v == nil {
			return nil
		}
		return v.S3BucketPath
	}).(pulumi.StringPtrOutput)
}

func (o SchemaConversionApplicationAttributesPropertiesPtrOutput) S3BucketRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaConversionApplicationAttributesProperties) *string {
		if v == nil {
			return nil
		}
		return v.S3BucketRoleArn
	}).(pulumi.StringPtrOutput)
}

// The property identifies the exact type of settings for the data provider.
type SettingsProperties struct {
	// MicrosoftSqlServerSettings property identifier.
	MicrosoftSqlServerSettings *SettingsPropertiesMicrosoftSqlServerSettingsProperties `pulumi:"microsoftSqlServerSettings"`
	// MySqlSettings property identifier.
	MySqlSettings *SettingsPropertiesMySqlSettingsProperties `pulumi:"mySqlSettings"`
	// OracleSettings property identifier.
	OracleSettings *SettingsPropertiesOracleSettingsProperties `pulumi:"oracleSettings"`
	// PostgreSqlSettings property identifier.
	PostgreSqlSettings *SettingsPropertiesPostgreSqlSettingsProperties `pulumi:"postgreSqlSettings"`
}

// SettingsPropertiesInput is an input type that accepts SettingsPropertiesArgs and SettingsPropertiesOutput values.
// You can construct a concrete instance of `SettingsPropertiesInput` via:
//
//	SettingsPropertiesArgs{...}
type SettingsPropertiesInput interface {
	pulumi.Input

	ToSettingsPropertiesOutput() SettingsPropertiesOutput
	ToSettingsPropertiesOutputWithContext(context.Context) SettingsPropertiesOutput
}

// The property identifies the exact type of settings for the data provider.
type SettingsPropertiesArgs struct {
	// MicrosoftSqlServerSettings property identifier.
	MicrosoftSqlServerSettings SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrInput `pulumi:"microsoftSqlServerSettings"`
	// MySqlSettings property identifier.
	MySqlSettings SettingsPropertiesMySqlSettingsPropertiesPtrInput `pulumi:"mySqlSettings"`
	// OracleSettings property identifier.
	OracleSettings SettingsPropertiesOracleSettingsPropertiesPtrInput `pulumi:"oracleSettings"`
	// PostgreSqlSettings property identifier.
	PostgreSqlSettings SettingsPropertiesPostgreSqlSettingsPropertiesPtrInput `pulumi:"postgreSqlSettings"`
}

func (SettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsProperties)(nil)).Elem()
}

func (i SettingsPropertiesArgs) ToSettingsPropertiesOutput() SettingsPropertiesOutput {
	return i.ToSettingsPropertiesOutputWithContext(context.Background())
}

func (i SettingsPropertiesArgs) ToSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesOutput)
}

func (i SettingsPropertiesArgs) ToSettingsPropertiesPtrOutput() SettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i SettingsPropertiesArgs) ToSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesOutput).ToSettingsPropertiesPtrOutputWithContext(ctx)
}

// SettingsPropertiesPtrInput is an input type that accepts SettingsPropertiesArgs, SettingsPropertiesPtr and SettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `SettingsPropertiesPtrInput` via:
//
//	        SettingsPropertiesArgs{...}
//
//	or:
//
//	        nil
type SettingsPropertiesPtrInput interface {
	pulumi.Input

	ToSettingsPropertiesPtrOutput() SettingsPropertiesPtrOutput
	ToSettingsPropertiesPtrOutputWithContext(context.Context) SettingsPropertiesPtrOutput
}

type settingsPropertiesPtrType SettingsPropertiesArgs

func SettingsPropertiesPtr(v *SettingsPropertiesArgs) SettingsPropertiesPtrInput {
	return (*settingsPropertiesPtrType)(v)
}

func (*settingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsProperties)(nil)).Elem()
}

func (i *settingsPropertiesPtrType) ToSettingsPropertiesPtrOutput() SettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *settingsPropertiesPtrType) ToSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesPtrOutput)
}

// The property identifies the exact type of settings for the data provider.
type SettingsPropertiesOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesOutput) ToSettingsPropertiesOutput() SettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesOutput) ToSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesOutput) ToSettingsPropertiesPtrOutput() SettingsPropertiesPtrOutput {
	return o.ToSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o SettingsPropertiesOutput) ToSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsProperties) *SettingsProperties {
		return &v
	}).(SettingsPropertiesPtrOutput)
}

// MicrosoftSqlServerSettings property identifier.
func (o SettingsPropertiesOutput) MicrosoftSqlServerSettings() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v SettingsProperties) *SettingsPropertiesMicrosoftSqlServerSettingsProperties {
		return v.MicrosoftSqlServerSettings
	}).(SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput)
}

// MySqlSettings property identifier.
func (o SettingsPropertiesOutput) MySqlSettings() SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v SettingsProperties) *SettingsPropertiesMySqlSettingsProperties { return v.MySqlSettings }).(SettingsPropertiesMySqlSettingsPropertiesPtrOutput)
}

// OracleSettings property identifier.
func (o SettingsPropertiesOutput) OracleSettings() SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v SettingsProperties) *SettingsPropertiesOracleSettingsProperties { return v.OracleSettings }).(SettingsPropertiesOracleSettingsPropertiesPtrOutput)
}

// PostgreSqlSettings property identifier.
func (o SettingsPropertiesOutput) PostgreSqlSettings() SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v SettingsProperties) *SettingsPropertiesPostgreSqlSettingsProperties {
		return v.PostgreSqlSettings
	}).(SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput)
}

type SettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesPtrOutput) ToSettingsPropertiesPtrOutput() SettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesPtrOutput) ToSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesPtrOutput) Elem() SettingsPropertiesOutput {
	return o.ApplyT(func(v *SettingsProperties) SettingsProperties {
		if v != nil {
			return *v
		}
		var ret SettingsProperties
		return ret
	}).(SettingsPropertiesOutput)
}

// MicrosoftSqlServerSettings property identifier.
func (o SettingsPropertiesPtrOutput) MicrosoftSqlServerSettings() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v *SettingsProperties) *SettingsPropertiesMicrosoftSqlServerSettingsProperties {
		if v == nil {
			return nil
		}
		return v.MicrosoftSqlServerSettings
	}).(SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput)
}

// MySqlSettings property identifier.
func (o SettingsPropertiesPtrOutput) MySqlSettings() SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v *SettingsProperties) *SettingsPropertiesMySqlSettingsProperties {
		if v == nil {
			return nil
		}
		return v.MySqlSettings
	}).(SettingsPropertiesMySqlSettingsPropertiesPtrOutput)
}

// OracleSettings property identifier.
func (o SettingsPropertiesPtrOutput) OracleSettings() SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v *SettingsProperties) *SettingsPropertiesOracleSettingsProperties {
		if v == nil {
			return nil
		}
		return v.OracleSettings
	}).(SettingsPropertiesOracleSettingsPropertiesPtrOutput)
}

// PostgreSqlSettings property identifier.
func (o SettingsPropertiesPtrOutput) PostgreSqlSettings() SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return o.ApplyT(func(v *SettingsProperties) *SettingsPropertiesPostgreSqlSettingsProperties {
		if v == nil {
			return nil
		}
		return v.PostgreSqlSettings
	}).(SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput)
}

// MicrosoftSqlServerSettings property identifier.
type SettingsPropertiesMicrosoftSqlServerSettingsProperties struct {
	CertificateArn *string                     `pulumi:"certificateArn"`
	DatabaseName   string                      `pulumi:"databaseName"`
	Port           int                         `pulumi:"port"`
	ServerName     string                      `pulumi:"serverName"`
	SslMode        DataProviderDmsSslModeValue `pulumi:"sslMode"`
}

// SettingsPropertiesMicrosoftSqlServerSettingsPropertiesInput is an input type that accepts SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs and SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput values.
// You can construct a concrete instance of `SettingsPropertiesMicrosoftSqlServerSettingsPropertiesInput` via:
//
//	SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs{...}
type SettingsPropertiesMicrosoftSqlServerSettingsPropertiesInput interface {
	pulumi.Input

	ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput
	ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutputWithContext(context.Context) SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput
}

// MicrosoftSqlServerSettings property identifier.
type SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs struct {
	CertificateArn pulumi.StringPtrInput            `pulumi:"certificateArn"`
	DatabaseName   pulumi.StringInput               `pulumi:"databaseName"`
	Port           pulumi.IntInput                  `pulumi:"port"`
	ServerName     pulumi.StringInput               `pulumi:"serverName"`
	SslMode        DataProviderDmsSslModeValueInput `pulumi:"sslMode"`
}

func (SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesMicrosoftSqlServerSettingsProperties)(nil)).Elem()
}

func (i SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput {
	return i.ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutputWithContext(context.Background())
}

func (i SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput)
}

func (i SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput).ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutputWithContext(ctx)
}

// SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrInput is an input type that accepts SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs, SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtr and SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrInput` via:
//
//	        SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs{...}
//
//	or:
//
//	        nil
type SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrInput interface {
	pulumi.Input

	ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput
	ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutputWithContext(context.Context) SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput
}

type settingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrType SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs

func SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtr(v *SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs) SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrInput {
	return (*settingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrType)(v)
}

func (*settingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesMicrosoftSqlServerSettingsProperties)(nil)).Elem()
}

func (i *settingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrType) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *settingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrType) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput)
}

// MicrosoftSqlServerSettings property identifier.
type SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesMicrosoftSqlServerSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return o.ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsPropertiesMicrosoftSqlServerSettingsProperties) *SettingsPropertiesMicrosoftSqlServerSettingsProperties {
		return &v
	}).(SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesMicrosoftSqlServerSettingsProperties) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesMicrosoftSqlServerSettingsProperties) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v SettingsPropertiesMicrosoftSqlServerSettingsProperties) int { return v.Port }).(pulumi.IntOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesMicrosoftSqlServerSettingsProperties) string { return v.ServerName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput) SslMode() DataProviderDmsSslModeValueOutput {
	return o.ApplyT(func(v SettingsPropertiesMicrosoftSqlServerSettingsProperties) DataProviderDmsSslModeValue {
		return v.SslMode
	}).(DataProviderDmsSslModeValueOutput)
}

type SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesMicrosoftSqlServerSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput) ToSettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput) Elem() SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput {
	return o.ApplyT(func(v *SettingsPropertiesMicrosoftSqlServerSettingsProperties) SettingsPropertiesMicrosoftSqlServerSettingsProperties {
		if v != nil {
			return *v
		}
		var ret SettingsPropertiesMicrosoftSqlServerSettingsProperties
		return ret
	}).(SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMicrosoftSqlServerSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMicrosoftSqlServerSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMicrosoftSqlServerSettingsProperties) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMicrosoftSqlServerSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput) SslMode() DataProviderDmsSslModeValuePtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMicrosoftSqlServerSettingsProperties) *DataProviderDmsSslModeValue {
		if v == nil {
			return nil
		}
		return &v.SslMode
	}).(DataProviderDmsSslModeValuePtrOutput)
}

// MySqlSettings property identifier.
type SettingsPropertiesMySqlSettingsProperties struct {
	CertificateArn *string                     `pulumi:"certificateArn"`
	Port           int                         `pulumi:"port"`
	ServerName     string                      `pulumi:"serverName"`
	SslMode        DataProviderDmsSslModeValue `pulumi:"sslMode"`
}

// SettingsPropertiesMySqlSettingsPropertiesInput is an input type that accepts SettingsPropertiesMySqlSettingsPropertiesArgs and SettingsPropertiesMySqlSettingsPropertiesOutput values.
// You can construct a concrete instance of `SettingsPropertiesMySqlSettingsPropertiesInput` via:
//
//	SettingsPropertiesMySqlSettingsPropertiesArgs{...}
type SettingsPropertiesMySqlSettingsPropertiesInput interface {
	pulumi.Input

	ToSettingsPropertiesMySqlSettingsPropertiesOutput() SettingsPropertiesMySqlSettingsPropertiesOutput
	ToSettingsPropertiesMySqlSettingsPropertiesOutputWithContext(context.Context) SettingsPropertiesMySqlSettingsPropertiesOutput
}

// MySqlSettings property identifier.
type SettingsPropertiesMySqlSettingsPropertiesArgs struct {
	CertificateArn pulumi.StringPtrInput            `pulumi:"certificateArn"`
	Port           pulumi.IntInput                  `pulumi:"port"`
	ServerName     pulumi.StringInput               `pulumi:"serverName"`
	SslMode        DataProviderDmsSslModeValueInput `pulumi:"sslMode"`
}

func (SettingsPropertiesMySqlSettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesMySqlSettingsProperties)(nil)).Elem()
}

func (i SettingsPropertiesMySqlSettingsPropertiesArgs) ToSettingsPropertiesMySqlSettingsPropertiesOutput() SettingsPropertiesMySqlSettingsPropertiesOutput {
	return i.ToSettingsPropertiesMySqlSettingsPropertiesOutputWithContext(context.Background())
}

func (i SettingsPropertiesMySqlSettingsPropertiesArgs) ToSettingsPropertiesMySqlSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesMySqlSettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesMySqlSettingsPropertiesOutput)
}

func (i SettingsPropertiesMySqlSettingsPropertiesArgs) ToSettingsPropertiesMySqlSettingsPropertiesPtrOutput() SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesMySqlSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i SettingsPropertiesMySqlSettingsPropertiesArgs) ToSettingsPropertiesMySqlSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesMySqlSettingsPropertiesOutput).ToSettingsPropertiesMySqlSettingsPropertiesPtrOutputWithContext(ctx)
}

// SettingsPropertiesMySqlSettingsPropertiesPtrInput is an input type that accepts SettingsPropertiesMySqlSettingsPropertiesArgs, SettingsPropertiesMySqlSettingsPropertiesPtr and SettingsPropertiesMySqlSettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `SettingsPropertiesMySqlSettingsPropertiesPtrInput` via:
//
//	        SettingsPropertiesMySqlSettingsPropertiesArgs{...}
//
//	or:
//
//	        nil
type SettingsPropertiesMySqlSettingsPropertiesPtrInput interface {
	pulumi.Input

	ToSettingsPropertiesMySqlSettingsPropertiesPtrOutput() SettingsPropertiesMySqlSettingsPropertiesPtrOutput
	ToSettingsPropertiesMySqlSettingsPropertiesPtrOutputWithContext(context.Context) SettingsPropertiesMySqlSettingsPropertiesPtrOutput
}

type settingsPropertiesMySqlSettingsPropertiesPtrType SettingsPropertiesMySqlSettingsPropertiesArgs

func SettingsPropertiesMySqlSettingsPropertiesPtr(v *SettingsPropertiesMySqlSettingsPropertiesArgs) SettingsPropertiesMySqlSettingsPropertiesPtrInput {
	return (*settingsPropertiesMySqlSettingsPropertiesPtrType)(v)
}

func (*settingsPropertiesMySqlSettingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesMySqlSettingsProperties)(nil)).Elem()
}

func (i *settingsPropertiesMySqlSettingsPropertiesPtrType) ToSettingsPropertiesMySqlSettingsPropertiesPtrOutput() SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesMySqlSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *settingsPropertiesMySqlSettingsPropertiesPtrType) ToSettingsPropertiesMySqlSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesMySqlSettingsPropertiesPtrOutput)
}

// MySqlSettings property identifier.
type SettingsPropertiesMySqlSettingsPropertiesOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesMySqlSettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesMySqlSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesMySqlSettingsPropertiesOutput) ToSettingsPropertiesMySqlSettingsPropertiesOutput() SettingsPropertiesMySqlSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesMySqlSettingsPropertiesOutput) ToSettingsPropertiesMySqlSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesMySqlSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesMySqlSettingsPropertiesOutput) ToSettingsPropertiesMySqlSettingsPropertiesPtrOutput() SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return o.ToSettingsPropertiesMySqlSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o SettingsPropertiesMySqlSettingsPropertiesOutput) ToSettingsPropertiesMySqlSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsPropertiesMySqlSettingsProperties) *SettingsPropertiesMySqlSettingsProperties {
		return &v
	}).(SettingsPropertiesMySqlSettingsPropertiesPtrOutput)
}

func (o SettingsPropertiesMySqlSettingsPropertiesOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesMySqlSettingsProperties) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMySqlSettingsPropertiesOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v SettingsPropertiesMySqlSettingsProperties) int { return v.Port }).(pulumi.IntOutput)
}

func (o SettingsPropertiesMySqlSettingsPropertiesOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesMySqlSettingsProperties) string { return v.ServerName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesMySqlSettingsPropertiesOutput) SslMode() DataProviderDmsSslModeValueOutput {
	return o.ApplyT(func(v SettingsPropertiesMySqlSettingsProperties) DataProviderDmsSslModeValue { return v.SslMode }).(DataProviderDmsSslModeValueOutput)
}

type SettingsPropertiesMySqlSettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesMySqlSettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesMySqlSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesMySqlSettingsPropertiesPtrOutput) ToSettingsPropertiesMySqlSettingsPropertiesPtrOutput() SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesMySqlSettingsPropertiesPtrOutput) ToSettingsPropertiesMySqlSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesMySqlSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesMySqlSettingsPropertiesPtrOutput) Elem() SettingsPropertiesMySqlSettingsPropertiesOutput {
	return o.ApplyT(func(v *SettingsPropertiesMySqlSettingsProperties) SettingsPropertiesMySqlSettingsProperties {
		if v != nil {
			return *v
		}
		var ret SettingsPropertiesMySqlSettingsProperties
		return ret
	}).(SettingsPropertiesMySqlSettingsPropertiesOutput)
}

func (o SettingsPropertiesMySqlSettingsPropertiesPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMySqlSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMySqlSettingsPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMySqlSettingsProperties) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o SettingsPropertiesMySqlSettingsPropertiesPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMySqlSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesMySqlSettingsPropertiesPtrOutput) SslMode() DataProviderDmsSslModeValuePtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesMySqlSettingsProperties) *DataProviderDmsSslModeValue {
		if v == nil {
			return nil
		}
		return &v.SslMode
	}).(DataProviderDmsSslModeValuePtrOutput)
}

// OracleSettings property identifier.
type SettingsPropertiesOracleSettingsProperties struct {
	AsmServer                                       *string                     `pulumi:"asmServer"`
	CertificateArn                                  *string                     `pulumi:"certificateArn"`
	DatabaseName                                    string                      `pulumi:"databaseName"`
	Port                                            int                         `pulumi:"port"`
	SecretsManagerOracleAsmAccessRoleArn            *string                     `pulumi:"secretsManagerOracleAsmAccessRoleArn"`
	SecretsManagerOracleAsmSecretId                 *string                     `pulumi:"secretsManagerOracleAsmSecretId"`
	SecretsManagerSecurityDbEncryptionAccessRoleArn *string                     `pulumi:"secretsManagerSecurityDbEncryptionAccessRoleArn"`
	SecretsManagerSecurityDbEncryptionSecretId      *string                     `pulumi:"secretsManagerSecurityDbEncryptionSecretId"`
	ServerName                                      string                      `pulumi:"serverName"`
	SslMode                                         DataProviderDmsSslModeValue `pulumi:"sslMode"`
}

// SettingsPropertiesOracleSettingsPropertiesInput is an input type that accepts SettingsPropertiesOracleSettingsPropertiesArgs and SettingsPropertiesOracleSettingsPropertiesOutput values.
// You can construct a concrete instance of `SettingsPropertiesOracleSettingsPropertiesInput` via:
//
//	SettingsPropertiesOracleSettingsPropertiesArgs{...}
type SettingsPropertiesOracleSettingsPropertiesInput interface {
	pulumi.Input

	ToSettingsPropertiesOracleSettingsPropertiesOutput() SettingsPropertiesOracleSettingsPropertiesOutput
	ToSettingsPropertiesOracleSettingsPropertiesOutputWithContext(context.Context) SettingsPropertiesOracleSettingsPropertiesOutput
}

// OracleSettings property identifier.
type SettingsPropertiesOracleSettingsPropertiesArgs struct {
	AsmServer                                       pulumi.StringPtrInput            `pulumi:"asmServer"`
	CertificateArn                                  pulumi.StringPtrInput            `pulumi:"certificateArn"`
	DatabaseName                                    pulumi.StringInput               `pulumi:"databaseName"`
	Port                                            pulumi.IntInput                  `pulumi:"port"`
	SecretsManagerOracleAsmAccessRoleArn            pulumi.StringPtrInput            `pulumi:"secretsManagerOracleAsmAccessRoleArn"`
	SecretsManagerOracleAsmSecretId                 pulumi.StringPtrInput            `pulumi:"secretsManagerOracleAsmSecretId"`
	SecretsManagerSecurityDbEncryptionAccessRoleArn pulumi.StringPtrInput            `pulumi:"secretsManagerSecurityDbEncryptionAccessRoleArn"`
	SecretsManagerSecurityDbEncryptionSecretId      pulumi.StringPtrInput            `pulumi:"secretsManagerSecurityDbEncryptionSecretId"`
	ServerName                                      pulumi.StringInput               `pulumi:"serverName"`
	SslMode                                         DataProviderDmsSslModeValueInput `pulumi:"sslMode"`
}

func (SettingsPropertiesOracleSettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesOracleSettingsProperties)(nil)).Elem()
}

func (i SettingsPropertiesOracleSettingsPropertiesArgs) ToSettingsPropertiesOracleSettingsPropertiesOutput() SettingsPropertiesOracleSettingsPropertiesOutput {
	return i.ToSettingsPropertiesOracleSettingsPropertiesOutputWithContext(context.Background())
}

func (i SettingsPropertiesOracleSettingsPropertiesArgs) ToSettingsPropertiesOracleSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesOracleSettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesOracleSettingsPropertiesOutput)
}

func (i SettingsPropertiesOracleSettingsPropertiesArgs) ToSettingsPropertiesOracleSettingsPropertiesPtrOutput() SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesOracleSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i SettingsPropertiesOracleSettingsPropertiesArgs) ToSettingsPropertiesOracleSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesOracleSettingsPropertiesOutput).ToSettingsPropertiesOracleSettingsPropertiesPtrOutputWithContext(ctx)
}

// SettingsPropertiesOracleSettingsPropertiesPtrInput is an input type that accepts SettingsPropertiesOracleSettingsPropertiesArgs, SettingsPropertiesOracleSettingsPropertiesPtr and SettingsPropertiesOracleSettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `SettingsPropertiesOracleSettingsPropertiesPtrInput` via:
//
//	        SettingsPropertiesOracleSettingsPropertiesArgs{...}
//
//	or:
//
//	        nil
type SettingsPropertiesOracleSettingsPropertiesPtrInput interface {
	pulumi.Input

	ToSettingsPropertiesOracleSettingsPropertiesPtrOutput() SettingsPropertiesOracleSettingsPropertiesPtrOutput
	ToSettingsPropertiesOracleSettingsPropertiesPtrOutputWithContext(context.Context) SettingsPropertiesOracleSettingsPropertiesPtrOutput
}

type settingsPropertiesOracleSettingsPropertiesPtrType SettingsPropertiesOracleSettingsPropertiesArgs

func SettingsPropertiesOracleSettingsPropertiesPtr(v *SettingsPropertiesOracleSettingsPropertiesArgs) SettingsPropertiesOracleSettingsPropertiesPtrInput {
	return (*settingsPropertiesOracleSettingsPropertiesPtrType)(v)
}

func (*settingsPropertiesOracleSettingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesOracleSettingsProperties)(nil)).Elem()
}

func (i *settingsPropertiesOracleSettingsPropertiesPtrType) ToSettingsPropertiesOracleSettingsPropertiesPtrOutput() SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesOracleSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *settingsPropertiesOracleSettingsPropertiesPtrType) ToSettingsPropertiesOracleSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesOracleSettingsPropertiesPtrOutput)
}

// OracleSettings property identifier.
type SettingsPropertiesOracleSettingsPropertiesOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesOracleSettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesOracleSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) ToSettingsPropertiesOracleSettingsPropertiesOutput() SettingsPropertiesOracleSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) ToSettingsPropertiesOracleSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesOracleSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) ToSettingsPropertiesOracleSettingsPropertiesPtrOutput() SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return o.ToSettingsPropertiesOracleSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) ToSettingsPropertiesOracleSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsPropertiesOracleSettingsProperties) *SettingsPropertiesOracleSettingsProperties {
		return &v
	}).(SettingsPropertiesOracleSettingsPropertiesPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) AsmServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) *string { return v.AsmServer }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) int { return v.Port }).(pulumi.IntOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) SecretsManagerOracleAsmAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) *string {
		return v.SecretsManagerOracleAsmAccessRoleArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) SecretsManagerOracleAsmSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) *string { return v.SecretsManagerOracleAsmSecretId }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) SecretsManagerSecurityDbEncryptionAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) *string {
		return v.SecretsManagerSecurityDbEncryptionAccessRoleArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) SecretsManagerSecurityDbEncryptionSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) *string {
		return v.SecretsManagerSecurityDbEncryptionSecretId
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) string { return v.ServerName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesOutput) SslMode() DataProviderDmsSslModeValueOutput {
	return o.ApplyT(func(v SettingsPropertiesOracleSettingsProperties) DataProviderDmsSslModeValue { return v.SslMode }).(DataProviderDmsSslModeValueOutput)
}

type SettingsPropertiesOracleSettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesOracleSettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesOracleSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) ToSettingsPropertiesOracleSettingsPropertiesPtrOutput() SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) ToSettingsPropertiesOracleSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesOracleSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) Elem() SettingsPropertiesOracleSettingsPropertiesOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) SettingsPropertiesOracleSettingsProperties {
		if v != nil {
			return *v
		}
		var ret SettingsPropertiesOracleSettingsProperties
		return ret
	}).(SettingsPropertiesOracleSettingsPropertiesOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) AsmServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.AsmServer
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) SecretsManagerOracleAsmAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.SecretsManagerOracleAsmAccessRoleArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) SecretsManagerOracleAsmSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.SecretsManagerOracleAsmSecretId
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) SecretsManagerSecurityDbEncryptionAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.SecretsManagerSecurityDbEncryptionAccessRoleArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) SecretsManagerSecurityDbEncryptionSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.SecretsManagerSecurityDbEncryptionSecretId
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesOracleSettingsPropertiesPtrOutput) SslMode() DataProviderDmsSslModeValuePtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesOracleSettingsProperties) *DataProviderDmsSslModeValue {
		if v == nil {
			return nil
		}
		return &v.SslMode
	}).(DataProviderDmsSslModeValuePtrOutput)
}

// PostgreSqlSettings property identifier.
type SettingsPropertiesPostgreSqlSettingsProperties struct {
	CertificateArn *string                     `pulumi:"certificateArn"`
	DatabaseName   string                      `pulumi:"databaseName"`
	Port           int                         `pulumi:"port"`
	ServerName     string                      `pulumi:"serverName"`
	SslMode        DataProviderDmsSslModeValue `pulumi:"sslMode"`
}

// SettingsPropertiesPostgreSqlSettingsPropertiesInput is an input type that accepts SettingsPropertiesPostgreSqlSettingsPropertiesArgs and SettingsPropertiesPostgreSqlSettingsPropertiesOutput values.
// You can construct a concrete instance of `SettingsPropertiesPostgreSqlSettingsPropertiesInput` via:
//
//	SettingsPropertiesPostgreSqlSettingsPropertiesArgs{...}
type SettingsPropertiesPostgreSqlSettingsPropertiesInput interface {
	pulumi.Input

	ToSettingsPropertiesPostgreSqlSettingsPropertiesOutput() SettingsPropertiesPostgreSqlSettingsPropertiesOutput
	ToSettingsPropertiesPostgreSqlSettingsPropertiesOutputWithContext(context.Context) SettingsPropertiesPostgreSqlSettingsPropertiesOutput
}

// PostgreSqlSettings property identifier.
type SettingsPropertiesPostgreSqlSettingsPropertiesArgs struct {
	CertificateArn pulumi.StringPtrInput            `pulumi:"certificateArn"`
	DatabaseName   pulumi.StringInput               `pulumi:"databaseName"`
	Port           pulumi.IntInput                  `pulumi:"port"`
	ServerName     pulumi.StringInput               `pulumi:"serverName"`
	SslMode        DataProviderDmsSslModeValueInput `pulumi:"sslMode"`
}

func (SettingsPropertiesPostgreSqlSettingsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesPostgreSqlSettingsProperties)(nil)).Elem()
}

func (i SettingsPropertiesPostgreSqlSettingsPropertiesArgs) ToSettingsPropertiesPostgreSqlSettingsPropertiesOutput() SettingsPropertiesPostgreSqlSettingsPropertiesOutput {
	return i.ToSettingsPropertiesPostgreSqlSettingsPropertiesOutputWithContext(context.Background())
}

func (i SettingsPropertiesPostgreSqlSettingsPropertiesArgs) ToSettingsPropertiesPostgreSqlSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesPostgreSqlSettingsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesPostgreSqlSettingsPropertiesOutput)
}

func (i SettingsPropertiesPostgreSqlSettingsPropertiesArgs) ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput() SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i SettingsPropertiesPostgreSqlSettingsPropertiesArgs) ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesPostgreSqlSettingsPropertiesOutput).ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutputWithContext(ctx)
}

// SettingsPropertiesPostgreSqlSettingsPropertiesPtrInput is an input type that accepts SettingsPropertiesPostgreSqlSettingsPropertiesArgs, SettingsPropertiesPostgreSqlSettingsPropertiesPtr and SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput values.
// You can construct a concrete instance of `SettingsPropertiesPostgreSqlSettingsPropertiesPtrInput` via:
//
//	        SettingsPropertiesPostgreSqlSettingsPropertiesArgs{...}
//
//	or:
//
//	        nil
type SettingsPropertiesPostgreSqlSettingsPropertiesPtrInput interface {
	pulumi.Input

	ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput() SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput
	ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutputWithContext(context.Context) SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput
}

type settingsPropertiesPostgreSqlSettingsPropertiesPtrType SettingsPropertiesPostgreSqlSettingsPropertiesArgs

func SettingsPropertiesPostgreSqlSettingsPropertiesPtr(v *SettingsPropertiesPostgreSqlSettingsPropertiesArgs) SettingsPropertiesPostgreSqlSettingsPropertiesPtrInput {
	return (*settingsPropertiesPostgreSqlSettingsPropertiesPtrType)(v)
}

func (*settingsPropertiesPostgreSqlSettingsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesPostgreSqlSettingsProperties)(nil)).Elem()
}

func (i *settingsPropertiesPostgreSqlSettingsPropertiesPtrType) ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput() SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return i.ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (i *settingsPropertiesPostgreSqlSettingsPropertiesPtrType) ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput)
}

// PostgreSqlSettings property identifier.
type SettingsPropertiesPostgreSqlSettingsPropertiesOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesPostgreSqlSettingsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPropertiesPostgreSqlSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesOutput) ToSettingsPropertiesPostgreSqlSettingsPropertiesOutput() SettingsPropertiesPostgreSqlSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesOutput) ToSettingsPropertiesPostgreSqlSettingsPropertiesOutputWithContext(ctx context.Context) SettingsPropertiesPostgreSqlSettingsPropertiesOutput {
	return o
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesOutput) ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput() SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return o.ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutputWithContext(context.Background())
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesOutput) ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsPropertiesPostgreSqlSettingsProperties) *SettingsPropertiesPostgreSqlSettingsProperties {
		return &v
	}).(SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsPropertiesPostgreSqlSettingsProperties) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesPostgreSqlSettingsProperties) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v SettingsPropertiesPostgreSqlSettingsProperties) int { return v.Port }).(pulumi.IntOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v SettingsPropertiesPostgreSqlSettingsProperties) string { return v.ServerName }).(pulumi.StringOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesOutput) SslMode() DataProviderDmsSslModeValueOutput {
	return o.ApplyT(func(v SettingsPropertiesPostgreSqlSettingsProperties) DataProviderDmsSslModeValue { return v.SslMode }).(DataProviderDmsSslModeValueOutput)
}

type SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPropertiesPostgreSqlSettingsProperties)(nil)).Elem()
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput) ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput() SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput) ToSettingsPropertiesPostgreSqlSettingsPropertiesPtrOutputWithContext(ctx context.Context) SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput {
	return o
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput) Elem() SettingsPropertiesPostgreSqlSettingsPropertiesOutput {
	return o.ApplyT(func(v *SettingsPropertiesPostgreSqlSettingsProperties) SettingsPropertiesPostgreSqlSettingsProperties {
		if v != nil {
			return *v
		}
		var ret SettingsPropertiesPostgreSqlSettingsProperties
		return ret
	}).(SettingsPropertiesPostgreSqlSettingsPropertiesOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesPostgreSqlSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesPostgreSqlSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesPostgreSqlSettingsProperties) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesPostgreSqlSettingsProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

func (o SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput) SslMode() DataProviderDmsSslModeValuePtrOutput {
	return o.ApplyT(func(v *SettingsPropertiesPostgreSqlSettingsProperties) *DataProviderDmsSslModeValue {
		if v == nil {
			return nil
		}
		return &v.SslMode
	}).(DataProviderDmsSslModeValuePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationProjectDataProviderDescriptorInput)(nil)).Elem(), MigrationProjectDataProviderDescriptorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationProjectDataProviderDescriptorArrayInput)(nil)).Elem(), MigrationProjectDataProviderDescriptorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationConfigComputeConfigInput)(nil)).Elem(), ReplicationConfigComputeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationConfigComputeConfigPtrInput)(nil)).Elem(), ReplicationConfigComputeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaConversionApplicationAttributesPropertiesInput)(nil)).Elem(), SchemaConversionApplicationAttributesPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaConversionApplicationAttributesPropertiesPtrInput)(nil)).Elem(), SchemaConversionApplicationAttributesPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesInput)(nil)).Elem(), SettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesPtrInput)(nil)).Elem(), SettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesMicrosoftSqlServerSettingsPropertiesInput)(nil)).Elem(), SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrInput)(nil)).Elem(), SettingsPropertiesMicrosoftSqlServerSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesMySqlSettingsPropertiesInput)(nil)).Elem(), SettingsPropertiesMySqlSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesMySqlSettingsPropertiesPtrInput)(nil)).Elem(), SettingsPropertiesMySqlSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesOracleSettingsPropertiesInput)(nil)).Elem(), SettingsPropertiesOracleSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesOracleSettingsPropertiesPtrInput)(nil)).Elem(), SettingsPropertiesOracleSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesPostgreSqlSettingsPropertiesInput)(nil)).Elem(), SettingsPropertiesPostgreSqlSettingsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPropertiesPostgreSqlSettingsPropertiesPtrInput)(nil)).Elem(), SettingsPropertiesPostgreSqlSettingsPropertiesArgs{})
	pulumi.RegisterOutputType(MigrationProjectDataProviderDescriptorOutput{})
	pulumi.RegisterOutputType(MigrationProjectDataProviderDescriptorArrayOutput{})
	pulumi.RegisterOutputType(ReplicationConfigComputeConfigOutput{})
	pulumi.RegisterOutputType(ReplicationConfigComputeConfigPtrOutput{})
	pulumi.RegisterOutputType(SchemaConversionApplicationAttributesPropertiesOutput{})
	pulumi.RegisterOutputType(SchemaConversionApplicationAttributesPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesMicrosoftSqlServerSettingsPropertiesOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesMicrosoftSqlServerSettingsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesMySqlSettingsPropertiesOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesMySqlSettingsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesOracleSettingsPropertiesOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesOracleSettingsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesPostgreSqlSettingsPropertiesOutput{})
	pulumi.RegisterOutputType(SettingsPropertiesPostgreSqlSettingsPropertiesPtrOutput{})
}
