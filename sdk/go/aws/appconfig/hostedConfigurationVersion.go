// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfig

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AppConfig::HostedConfigurationVersion
type HostedConfigurationVersion struct {
	pulumi.CustomResourceState

	// The application ID.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// The configuration profile ID.
	ConfigurationProfileId pulumi.StringOutput `pulumi:"configurationProfileId"`
	// The content of the configuration or the configuration data.
	Content pulumi.StringOutput `pulumi:"content"`
	// A standard MIME type describing the format of the configuration content.
	ContentType pulumi.StringOutput `pulumi:"contentType"`
	// A description of the hosted configuration version.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// An optional locking token used to prevent race conditions from overwriting configuration updates when creating a new version. To ensure your data is not overwritten when creating multiple hosted configuration versions in rapid succession, specify the version number of the latest hosted configuration version.
	LatestVersionNumber pulumi.IntPtrOutput `pulumi:"latestVersionNumber"`
	// A user-defined label for an AWS AppConfig hosted configuration version.
	VersionLabel pulumi.StringPtrOutput `pulumi:"versionLabel"`
	// Current version number of hosted configuration version.
	VersionNumber pulumi.StringOutput `pulumi:"versionNumber"`
}

// NewHostedConfigurationVersion registers a new resource with the given unique name, arguments, and options.
func NewHostedConfigurationVersion(ctx *pulumi.Context,
	name string, args *HostedConfigurationVersionArgs, opts ...pulumi.ResourceOption) (*HostedConfigurationVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.ConfigurationProfileId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationProfileId'")
	}
	if args.Content == nil {
		return nil, errors.New("invalid value for required argument 'Content'")
	}
	if args.ContentType == nil {
		return nil, errors.New("invalid value for required argument 'ContentType'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"applicationId",
		"configurationProfileId",
		"content",
		"contentType",
		"description",
		"latestVersionNumber",
		"versionLabel",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HostedConfigurationVersion
	err := ctx.RegisterResource("aws-native:appconfig:HostedConfigurationVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHostedConfigurationVersion gets an existing HostedConfigurationVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHostedConfigurationVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HostedConfigurationVersionState, opts ...pulumi.ResourceOption) (*HostedConfigurationVersion, error) {
	var resource HostedConfigurationVersion
	err := ctx.ReadResource("aws-native:appconfig:HostedConfigurationVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HostedConfigurationVersion resources.
type hostedConfigurationVersionState struct {
}

type HostedConfigurationVersionState struct {
}

func (HostedConfigurationVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*hostedConfigurationVersionState)(nil)).Elem()
}

type hostedConfigurationVersionArgs struct {
	// The application ID.
	ApplicationId string `pulumi:"applicationId"`
	// The configuration profile ID.
	ConfigurationProfileId string `pulumi:"configurationProfileId"`
	// The content of the configuration or the configuration data.
	Content string `pulumi:"content"`
	// A standard MIME type describing the format of the configuration content.
	ContentType string `pulumi:"contentType"`
	// A description of the hosted configuration version.
	Description *string `pulumi:"description"`
	// An optional locking token used to prevent race conditions from overwriting configuration updates when creating a new version. To ensure your data is not overwritten when creating multiple hosted configuration versions in rapid succession, specify the version number of the latest hosted configuration version.
	LatestVersionNumber *int `pulumi:"latestVersionNumber"`
	// A user-defined label for an AWS AppConfig hosted configuration version.
	VersionLabel *string `pulumi:"versionLabel"`
}

// The set of arguments for constructing a HostedConfigurationVersion resource.
type HostedConfigurationVersionArgs struct {
	// The application ID.
	ApplicationId pulumi.StringInput
	// The configuration profile ID.
	ConfigurationProfileId pulumi.StringInput
	// The content of the configuration or the configuration data.
	Content pulumi.StringInput
	// A standard MIME type describing the format of the configuration content.
	ContentType pulumi.StringInput
	// A description of the hosted configuration version.
	Description pulumi.StringPtrInput
	// An optional locking token used to prevent race conditions from overwriting configuration updates when creating a new version. To ensure your data is not overwritten when creating multiple hosted configuration versions in rapid succession, specify the version number of the latest hosted configuration version.
	LatestVersionNumber pulumi.IntPtrInput
	// A user-defined label for an AWS AppConfig hosted configuration version.
	VersionLabel pulumi.StringPtrInput
}

func (HostedConfigurationVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hostedConfigurationVersionArgs)(nil)).Elem()
}

type HostedConfigurationVersionInput interface {
	pulumi.Input

	ToHostedConfigurationVersionOutput() HostedConfigurationVersionOutput
	ToHostedConfigurationVersionOutputWithContext(ctx context.Context) HostedConfigurationVersionOutput
}

func (*HostedConfigurationVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**HostedConfigurationVersion)(nil)).Elem()
}

func (i *HostedConfigurationVersion) ToHostedConfigurationVersionOutput() HostedConfigurationVersionOutput {
	return i.ToHostedConfigurationVersionOutputWithContext(context.Background())
}

func (i *HostedConfigurationVersion) ToHostedConfigurationVersionOutputWithContext(ctx context.Context) HostedConfigurationVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedConfigurationVersionOutput)
}

type HostedConfigurationVersionOutput struct{ *pulumi.OutputState }

func (HostedConfigurationVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostedConfigurationVersion)(nil)).Elem()
}

func (o HostedConfigurationVersionOutput) ToHostedConfigurationVersionOutput() HostedConfigurationVersionOutput {
	return o
}

func (o HostedConfigurationVersionOutput) ToHostedConfigurationVersionOutputWithContext(ctx context.Context) HostedConfigurationVersionOutput {
	return o
}

// The application ID.
func (o HostedConfigurationVersionOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *HostedConfigurationVersion) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// The configuration profile ID.
func (o HostedConfigurationVersionOutput) ConfigurationProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *HostedConfigurationVersion) pulumi.StringOutput { return v.ConfigurationProfileId }).(pulumi.StringOutput)
}

// The content of the configuration or the configuration data.
func (o HostedConfigurationVersionOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v *HostedConfigurationVersion) pulumi.StringOutput { return v.Content }).(pulumi.StringOutput)
}

// A standard MIME type describing the format of the configuration content.
func (o HostedConfigurationVersionOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v *HostedConfigurationVersion) pulumi.StringOutput { return v.ContentType }).(pulumi.StringOutput)
}

// A description of the hosted configuration version.
func (o HostedConfigurationVersionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostedConfigurationVersion) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// An optional locking token used to prevent race conditions from overwriting configuration updates when creating a new version. To ensure your data is not overwritten when creating multiple hosted configuration versions in rapid succession, specify the version number of the latest hosted configuration version.
func (o HostedConfigurationVersionOutput) LatestVersionNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HostedConfigurationVersion) pulumi.IntPtrOutput { return v.LatestVersionNumber }).(pulumi.IntPtrOutput)
}

// A user-defined label for an AWS AppConfig hosted configuration version.
func (o HostedConfigurationVersionOutput) VersionLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostedConfigurationVersion) pulumi.StringPtrOutput { return v.VersionLabel }).(pulumi.StringPtrOutput)
}

// Current version number of hosted configuration version.
func (o HostedConfigurationVersionOutput) VersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *HostedConfigurationVersion) pulumi.StringOutput { return v.VersionNumber }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HostedConfigurationVersionInput)(nil)).Elem(), &HostedConfigurationVersion{})
	pulumi.RegisterOutputType(HostedConfigurationVersionOutput{})
}
