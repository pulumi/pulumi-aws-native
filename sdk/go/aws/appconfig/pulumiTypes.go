// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Metadata to assign to the application. Tags help organize and categorize your AWS AppConfig resources. Each tag consists of a key and an optional value, both of which you define.
type ApplicationTags struct {
	// The key-value string map. The valid character set is [a-zA-Z1-9 +-=._:/-]. The tag key can be up to 128 characters and must not start with aws:.
	Key string `pulumi:"key"`
	// The tag value can be up to 256 characters.
	Value string `pulumi:"value"`
}

// Metadata to assign to the configuration profile. Tags help organize and categorize your AWS AppConfig resources. Each tag consists of a key and an optional value, both of which you define.
type ConfigurationProfileTags struct {
	// The key-value string map. The tag key can be up to 128 characters and must not start with aws:.
	Key *string `pulumi:"key"`
	// The tag value can be up to 256 characters.
	Value *string `pulumi:"value"`
}

// A list of methods for validating the configuration.
type ConfigurationProfileValidators struct {
	// Either the JSON Schema content or the Amazon Resource Name (ARN) of an Lambda function.
	Content *string `pulumi:"content"`
	// AWS AppConfig supports validators of type JSON_SCHEMA and LAMBDA.
	Type *string `pulumi:"type"`
}

// ConfigurationProfileValidatorsInput is an input type that accepts ConfigurationProfileValidatorsArgs and ConfigurationProfileValidatorsOutput values.
// You can construct a concrete instance of `ConfigurationProfileValidatorsInput` via:
//
//	ConfigurationProfileValidatorsArgs{...}
type ConfigurationProfileValidatorsInput interface {
	pulumi.Input

	ToConfigurationProfileValidatorsOutput() ConfigurationProfileValidatorsOutput
	ToConfigurationProfileValidatorsOutputWithContext(context.Context) ConfigurationProfileValidatorsOutput
}

// A list of methods for validating the configuration.
type ConfigurationProfileValidatorsArgs struct {
	// Either the JSON Schema content or the Amazon Resource Name (ARN) of an Lambda function.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// AWS AppConfig supports validators of type JSON_SCHEMA and LAMBDA.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConfigurationProfileValidatorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationProfileValidators)(nil)).Elem()
}

func (i ConfigurationProfileValidatorsArgs) ToConfigurationProfileValidatorsOutput() ConfigurationProfileValidatorsOutput {
	return i.ToConfigurationProfileValidatorsOutputWithContext(context.Background())
}

func (i ConfigurationProfileValidatorsArgs) ToConfigurationProfileValidatorsOutputWithContext(ctx context.Context) ConfigurationProfileValidatorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationProfileValidatorsOutput)
}

// ConfigurationProfileValidatorsArrayInput is an input type that accepts ConfigurationProfileValidatorsArray and ConfigurationProfileValidatorsArrayOutput values.
// You can construct a concrete instance of `ConfigurationProfileValidatorsArrayInput` via:
//
//	ConfigurationProfileValidatorsArray{ ConfigurationProfileValidatorsArgs{...} }
type ConfigurationProfileValidatorsArrayInput interface {
	pulumi.Input

	ToConfigurationProfileValidatorsArrayOutput() ConfigurationProfileValidatorsArrayOutput
	ToConfigurationProfileValidatorsArrayOutputWithContext(context.Context) ConfigurationProfileValidatorsArrayOutput
}

type ConfigurationProfileValidatorsArray []ConfigurationProfileValidatorsInput

func (ConfigurationProfileValidatorsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationProfileValidators)(nil)).Elem()
}

func (i ConfigurationProfileValidatorsArray) ToConfigurationProfileValidatorsArrayOutput() ConfigurationProfileValidatorsArrayOutput {
	return i.ToConfigurationProfileValidatorsArrayOutputWithContext(context.Background())
}

func (i ConfigurationProfileValidatorsArray) ToConfigurationProfileValidatorsArrayOutputWithContext(ctx context.Context) ConfigurationProfileValidatorsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationProfileValidatorsArrayOutput)
}

// A list of methods for validating the configuration.
type ConfigurationProfileValidatorsOutput struct{ *pulumi.OutputState }

func (ConfigurationProfileValidatorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationProfileValidators)(nil)).Elem()
}

func (o ConfigurationProfileValidatorsOutput) ToConfigurationProfileValidatorsOutput() ConfigurationProfileValidatorsOutput {
	return o
}

func (o ConfigurationProfileValidatorsOutput) ToConfigurationProfileValidatorsOutputWithContext(ctx context.Context) ConfigurationProfileValidatorsOutput {
	return o
}

// Either the JSON Schema content or the Amazon Resource Name (ARN) of an Lambda function.
func (o ConfigurationProfileValidatorsOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationProfileValidators) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// AWS AppConfig supports validators of type JSON_SCHEMA and LAMBDA.
func (o ConfigurationProfileValidatorsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationProfileValidators) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConfigurationProfileValidatorsArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationProfileValidatorsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationProfileValidators)(nil)).Elem()
}

func (o ConfigurationProfileValidatorsArrayOutput) ToConfigurationProfileValidatorsArrayOutput() ConfigurationProfileValidatorsArrayOutput {
	return o
}

func (o ConfigurationProfileValidatorsArrayOutput) ToConfigurationProfileValidatorsArrayOutputWithContext(ctx context.Context) ConfigurationProfileValidatorsArrayOutput {
	return o
}

func (o ConfigurationProfileValidatorsArrayOutput) Index(i pulumi.IntInput) ConfigurationProfileValidatorsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationProfileValidators {
		return vs[0].([]ConfigurationProfileValidators)[vs[1].(int)]
	}).(ConfigurationProfileValidatorsOutput)
}

type DeploymentStrategyTags struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

type DeploymentTags struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// DeploymentTagsInput is an input type that accepts DeploymentTagsArgs and DeploymentTagsOutput values.
// You can construct a concrete instance of `DeploymentTagsInput` via:
//
//	DeploymentTagsArgs{...}
type DeploymentTagsInput interface {
	pulumi.Input

	ToDeploymentTagsOutput() DeploymentTagsOutput
	ToDeploymentTagsOutputWithContext(context.Context) DeploymentTagsOutput
}

type DeploymentTagsArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DeploymentTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentTags)(nil)).Elem()
}

func (i DeploymentTagsArgs) ToDeploymentTagsOutput() DeploymentTagsOutput {
	return i.ToDeploymentTagsOutputWithContext(context.Background())
}

func (i DeploymentTagsArgs) ToDeploymentTagsOutputWithContext(ctx context.Context) DeploymentTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentTagsOutput)
}

// DeploymentTagsArrayInput is an input type that accepts DeploymentTagsArray and DeploymentTagsArrayOutput values.
// You can construct a concrete instance of `DeploymentTagsArrayInput` via:
//
//	DeploymentTagsArray{ DeploymentTagsArgs{...} }
type DeploymentTagsArrayInput interface {
	pulumi.Input

	ToDeploymentTagsArrayOutput() DeploymentTagsArrayOutput
	ToDeploymentTagsArrayOutputWithContext(context.Context) DeploymentTagsArrayOutput
}

type DeploymentTagsArray []DeploymentTagsInput

func (DeploymentTagsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentTags)(nil)).Elem()
}

func (i DeploymentTagsArray) ToDeploymentTagsArrayOutput() DeploymentTagsArrayOutput {
	return i.ToDeploymentTagsArrayOutputWithContext(context.Background())
}

func (i DeploymentTagsArray) ToDeploymentTagsArrayOutputWithContext(ctx context.Context) DeploymentTagsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentTagsArrayOutput)
}

type DeploymentTagsOutput struct{ *pulumi.OutputState }

func (DeploymentTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentTags)(nil)).Elem()
}

func (o DeploymentTagsOutput) ToDeploymentTagsOutput() DeploymentTagsOutput {
	return o
}

func (o DeploymentTagsOutput) ToDeploymentTagsOutputWithContext(ctx context.Context) DeploymentTagsOutput {
	return o
}

func (o DeploymentTagsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentTags) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o DeploymentTagsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentTags) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DeploymentTagsArrayOutput struct{ *pulumi.OutputState }

func (DeploymentTagsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentTags)(nil)).Elem()
}

func (o DeploymentTagsArrayOutput) ToDeploymentTagsArrayOutput() DeploymentTagsArrayOutput {
	return o
}

func (o DeploymentTagsArrayOutput) ToDeploymentTagsArrayOutputWithContext(ctx context.Context) DeploymentTagsArrayOutput {
	return o
}

func (o DeploymentTagsArrayOutput) Index(i pulumi.IntInput) DeploymentTagsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentTags {
		return vs[0].([]DeploymentTags)[vs[1].(int)]
	}).(DeploymentTagsOutput)
}

// Amazon CloudWatch alarm to monitor during the deployment process.
type EnvironmentMonitor struct {
	// Amazon Resource Name (ARN) of the Amazon CloudWatch alarm.
	AlarmArn string `pulumi:"alarmArn"`
	// ARN of an AWS Identity and Access Management (IAM) role for AWS AppConfig to monitor AlarmArn.
	AlarmRoleArn *string `pulumi:"alarmRoleArn"`
}

// EnvironmentMonitorInput is an input type that accepts EnvironmentMonitorArgs and EnvironmentMonitorOutput values.
// You can construct a concrete instance of `EnvironmentMonitorInput` via:
//
//	EnvironmentMonitorArgs{...}
type EnvironmentMonitorInput interface {
	pulumi.Input

	ToEnvironmentMonitorOutput() EnvironmentMonitorOutput
	ToEnvironmentMonitorOutputWithContext(context.Context) EnvironmentMonitorOutput
}

// Amazon CloudWatch alarm to monitor during the deployment process.
type EnvironmentMonitorArgs struct {
	// Amazon Resource Name (ARN) of the Amazon CloudWatch alarm.
	AlarmArn pulumi.StringInput `pulumi:"alarmArn"`
	// ARN of an AWS Identity and Access Management (IAM) role for AWS AppConfig to monitor AlarmArn.
	AlarmRoleArn pulumi.StringPtrInput `pulumi:"alarmRoleArn"`
}

func (EnvironmentMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentMonitor)(nil)).Elem()
}

func (i EnvironmentMonitorArgs) ToEnvironmentMonitorOutput() EnvironmentMonitorOutput {
	return i.ToEnvironmentMonitorOutputWithContext(context.Background())
}

func (i EnvironmentMonitorArgs) ToEnvironmentMonitorOutputWithContext(ctx context.Context) EnvironmentMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentMonitorOutput)
}

// EnvironmentMonitorArrayInput is an input type that accepts EnvironmentMonitorArray and EnvironmentMonitorArrayOutput values.
// You can construct a concrete instance of `EnvironmentMonitorArrayInput` via:
//
//	EnvironmentMonitorArray{ EnvironmentMonitorArgs{...} }
type EnvironmentMonitorArrayInput interface {
	pulumi.Input

	ToEnvironmentMonitorArrayOutput() EnvironmentMonitorArrayOutput
	ToEnvironmentMonitorArrayOutputWithContext(context.Context) EnvironmentMonitorArrayOutput
}

type EnvironmentMonitorArray []EnvironmentMonitorInput

func (EnvironmentMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentMonitor)(nil)).Elem()
}

func (i EnvironmentMonitorArray) ToEnvironmentMonitorArrayOutput() EnvironmentMonitorArrayOutput {
	return i.ToEnvironmentMonitorArrayOutputWithContext(context.Background())
}

func (i EnvironmentMonitorArray) ToEnvironmentMonitorArrayOutputWithContext(ctx context.Context) EnvironmentMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentMonitorArrayOutput)
}

// Amazon CloudWatch alarm to monitor during the deployment process.
type EnvironmentMonitorOutput struct{ *pulumi.OutputState }

func (EnvironmentMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentMonitor)(nil)).Elem()
}

func (o EnvironmentMonitorOutput) ToEnvironmentMonitorOutput() EnvironmentMonitorOutput {
	return o
}

func (o EnvironmentMonitorOutput) ToEnvironmentMonitorOutputWithContext(ctx context.Context) EnvironmentMonitorOutput {
	return o
}

// Amazon Resource Name (ARN) of the Amazon CloudWatch alarm.
func (o EnvironmentMonitorOutput) AlarmArn() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentMonitor) string { return v.AlarmArn }).(pulumi.StringOutput)
}

// ARN of an AWS Identity and Access Management (IAM) role for AWS AppConfig to monitor AlarmArn.
func (o EnvironmentMonitorOutput) AlarmRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentMonitor) *string { return v.AlarmRoleArn }).(pulumi.StringPtrOutput)
}

type EnvironmentMonitorArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentMonitor)(nil)).Elem()
}

func (o EnvironmentMonitorArrayOutput) ToEnvironmentMonitorArrayOutput() EnvironmentMonitorArrayOutput {
	return o
}

func (o EnvironmentMonitorArrayOutput) ToEnvironmentMonitorArrayOutputWithContext(ctx context.Context) EnvironmentMonitorArrayOutput {
	return o
}

func (o EnvironmentMonitorArrayOutput) Index(i pulumi.IntInput) EnvironmentMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentMonitor {
		return vs[0].([]EnvironmentMonitor)[vs[1].(int)]
	}).(EnvironmentMonitorOutput)
}

// Metadata to assign to the environment. Tags help organize and categorize your AWS AppConfig resources. Each tag consists of a key and an optional value, both of which you define.
type EnvironmentTag struct {
	// The key-value string map. The valid character set is [a-zA-Z1-9+-=._:/]. The tag key can be up to 128 characters and must not start with aws:.
	Key string `pulumi:"key"`
	// The tag value can be up to 256 characters.
	Value string `pulumi:"value"`
}

// An action for an extension to take at a specific action point.
type ExtensionAction struct {
	// The description of the extension Action.
	Description *string `pulumi:"description"`
	// The name of the extension action.
	Name string `pulumi:"name"`
	// The ARN of the role for invoking the extension action.
	RoleArn *string `pulumi:"roleArn"`
	// The URI of the extension action.
	Uri string `pulumi:"uri"`
}

// ExtensionActionInput is an input type that accepts ExtensionActionArgs and ExtensionActionOutput values.
// You can construct a concrete instance of `ExtensionActionInput` via:
//
//	ExtensionActionArgs{...}
type ExtensionActionInput interface {
	pulumi.Input

	ToExtensionActionOutput() ExtensionActionOutput
	ToExtensionActionOutputWithContext(context.Context) ExtensionActionOutput
}

// An action for an extension to take at a specific action point.
type ExtensionActionArgs struct {
	// The description of the extension Action.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the extension action.
	Name pulumi.StringInput `pulumi:"name"`
	// The ARN of the role for invoking the extension action.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// The URI of the extension action.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (ExtensionActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionAction)(nil)).Elem()
}

func (i ExtensionActionArgs) ToExtensionActionOutput() ExtensionActionOutput {
	return i.ToExtensionActionOutputWithContext(context.Background())
}

func (i ExtensionActionArgs) ToExtensionActionOutputWithContext(ctx context.Context) ExtensionActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionActionOutput)
}

// ExtensionActionArrayInput is an input type that accepts ExtensionActionArray and ExtensionActionArrayOutput values.
// You can construct a concrete instance of `ExtensionActionArrayInput` via:
//
//	ExtensionActionArray{ ExtensionActionArgs{...} }
type ExtensionActionArrayInput interface {
	pulumi.Input

	ToExtensionActionArrayOutput() ExtensionActionArrayOutput
	ToExtensionActionArrayOutputWithContext(context.Context) ExtensionActionArrayOutput
}

type ExtensionActionArray []ExtensionActionInput

func (ExtensionActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionAction)(nil)).Elem()
}

func (i ExtensionActionArray) ToExtensionActionArrayOutput() ExtensionActionArrayOutput {
	return i.ToExtensionActionArrayOutputWithContext(context.Background())
}

func (i ExtensionActionArray) ToExtensionActionArrayOutputWithContext(ctx context.Context) ExtensionActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionActionArrayOutput)
}

// An action for an extension to take at a specific action point.
type ExtensionActionOutput struct{ *pulumi.OutputState }

func (ExtensionActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionAction)(nil)).Elem()
}

func (o ExtensionActionOutput) ToExtensionActionOutput() ExtensionActionOutput {
	return o
}

func (o ExtensionActionOutput) ToExtensionActionOutputWithContext(ctx context.Context) ExtensionActionOutput {
	return o
}

// The description of the extension Action.
func (o ExtensionActionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionAction) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the extension action.
func (o ExtensionActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExtensionAction) string { return v.Name }).(pulumi.StringOutput)
}

// The ARN of the role for invoking the extension action.
func (o ExtensionActionOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionAction) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The URI of the extension action.
func (o ExtensionActionOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ExtensionAction) string { return v.Uri }).(pulumi.StringOutput)
}

type ExtensionActionArrayOutput struct{ *pulumi.OutputState }

func (ExtensionActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionAction)(nil)).Elem()
}

func (o ExtensionActionArrayOutput) ToExtensionActionArrayOutput() ExtensionActionArrayOutput {
	return o
}

func (o ExtensionActionArrayOutput) ToExtensionActionArrayOutputWithContext(ctx context.Context) ExtensionActionArrayOutput {
	return o
}

func (o ExtensionActionArrayOutput) Index(i pulumi.IntInput) ExtensionActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtensionAction {
		return vs[0].([]ExtensionAction)[vs[1].(int)]
	}).(ExtensionActionOutput)
}

// A key-value pair to associate with a resource.
type ExtensionAssociationTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// ExtensionAssociationTagInput is an input type that accepts ExtensionAssociationTagArgs and ExtensionAssociationTagOutput values.
// You can construct a concrete instance of `ExtensionAssociationTagInput` via:
//
//	ExtensionAssociationTagArgs{...}
type ExtensionAssociationTagInput interface {
	pulumi.Input

	ToExtensionAssociationTagOutput() ExtensionAssociationTagOutput
	ToExtensionAssociationTagOutputWithContext(context.Context) ExtensionAssociationTagOutput
}

// A key-value pair to associate with a resource.
type ExtensionAssociationTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ExtensionAssociationTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionAssociationTag)(nil)).Elem()
}

func (i ExtensionAssociationTagArgs) ToExtensionAssociationTagOutput() ExtensionAssociationTagOutput {
	return i.ToExtensionAssociationTagOutputWithContext(context.Background())
}

func (i ExtensionAssociationTagArgs) ToExtensionAssociationTagOutputWithContext(ctx context.Context) ExtensionAssociationTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionAssociationTagOutput)
}

// ExtensionAssociationTagArrayInput is an input type that accepts ExtensionAssociationTagArray and ExtensionAssociationTagArrayOutput values.
// You can construct a concrete instance of `ExtensionAssociationTagArrayInput` via:
//
//	ExtensionAssociationTagArray{ ExtensionAssociationTagArgs{...} }
type ExtensionAssociationTagArrayInput interface {
	pulumi.Input

	ToExtensionAssociationTagArrayOutput() ExtensionAssociationTagArrayOutput
	ToExtensionAssociationTagArrayOutputWithContext(context.Context) ExtensionAssociationTagArrayOutput
}

type ExtensionAssociationTagArray []ExtensionAssociationTagInput

func (ExtensionAssociationTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionAssociationTag)(nil)).Elem()
}

func (i ExtensionAssociationTagArray) ToExtensionAssociationTagArrayOutput() ExtensionAssociationTagArrayOutput {
	return i.ToExtensionAssociationTagArrayOutputWithContext(context.Background())
}

func (i ExtensionAssociationTagArray) ToExtensionAssociationTagArrayOutputWithContext(ctx context.Context) ExtensionAssociationTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionAssociationTagArrayOutput)
}

// A key-value pair to associate with a resource.
type ExtensionAssociationTagOutput struct{ *pulumi.OutputState }

func (ExtensionAssociationTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionAssociationTag)(nil)).Elem()
}

func (o ExtensionAssociationTagOutput) ToExtensionAssociationTagOutput() ExtensionAssociationTagOutput {
	return o
}

func (o ExtensionAssociationTagOutput) ToExtensionAssociationTagOutputWithContext(ctx context.Context) ExtensionAssociationTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ExtensionAssociationTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ExtensionAssociationTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ExtensionAssociationTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ExtensionAssociationTag) string { return v.Value }).(pulumi.StringOutput)
}

type ExtensionAssociationTagArrayOutput struct{ *pulumi.OutputState }

func (ExtensionAssociationTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionAssociationTag)(nil)).Elem()
}

func (o ExtensionAssociationTagArrayOutput) ToExtensionAssociationTagArrayOutput() ExtensionAssociationTagArrayOutput {
	return o
}

func (o ExtensionAssociationTagArrayOutput) ToExtensionAssociationTagArrayOutputWithContext(ctx context.Context) ExtensionAssociationTagArrayOutput {
	return o
}

func (o ExtensionAssociationTagArrayOutput) Index(i pulumi.IntInput) ExtensionAssociationTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtensionAssociationTag {
		return vs[0].([]ExtensionAssociationTag)[vs[1].(int)]
	}).(ExtensionAssociationTagOutput)
}

// A parameter for the extension to send to a specific action.
type ExtensionParameter struct {
	// The description of the extension Parameter.
	Description *string `pulumi:"description"`
	Required    bool    `pulumi:"required"`
}

// ExtensionParameterInput is an input type that accepts ExtensionParameterArgs and ExtensionParameterOutput values.
// You can construct a concrete instance of `ExtensionParameterInput` via:
//
//	ExtensionParameterArgs{...}
type ExtensionParameterInput interface {
	pulumi.Input

	ToExtensionParameterOutput() ExtensionParameterOutput
	ToExtensionParameterOutputWithContext(context.Context) ExtensionParameterOutput
}

// A parameter for the extension to send to a specific action.
type ExtensionParameterArgs struct {
	// The description of the extension Parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	Required    pulumi.BoolInput      `pulumi:"required"`
}

func (ExtensionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionParameter)(nil)).Elem()
}

func (i ExtensionParameterArgs) ToExtensionParameterOutput() ExtensionParameterOutput {
	return i.ToExtensionParameterOutputWithContext(context.Background())
}

func (i ExtensionParameterArgs) ToExtensionParameterOutputWithContext(ctx context.Context) ExtensionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionParameterOutput)
}

// ExtensionParameterMapInput is an input type that accepts ExtensionParameterMap and ExtensionParameterMapOutput values.
// You can construct a concrete instance of `ExtensionParameterMapInput` via:
//
//	ExtensionParameterMap{ "key": ExtensionParameterArgs{...} }
type ExtensionParameterMapInput interface {
	pulumi.Input

	ToExtensionParameterMapOutput() ExtensionParameterMapOutput
	ToExtensionParameterMapOutputWithContext(context.Context) ExtensionParameterMapOutput
}

type ExtensionParameterMap map[string]ExtensionParameterInput

func (ExtensionParameterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ExtensionParameter)(nil)).Elem()
}

func (i ExtensionParameterMap) ToExtensionParameterMapOutput() ExtensionParameterMapOutput {
	return i.ToExtensionParameterMapOutputWithContext(context.Background())
}

func (i ExtensionParameterMap) ToExtensionParameterMapOutputWithContext(ctx context.Context) ExtensionParameterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionParameterMapOutput)
}

// A parameter for the extension to send to a specific action.
type ExtensionParameterOutput struct{ *pulumi.OutputState }

func (ExtensionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionParameter)(nil)).Elem()
}

func (o ExtensionParameterOutput) ToExtensionParameterOutput() ExtensionParameterOutput {
	return o
}

func (o ExtensionParameterOutput) ToExtensionParameterOutputWithContext(ctx context.Context) ExtensionParameterOutput {
	return o
}

// The description of the extension Parameter.
func (o ExtensionParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ExtensionParameterOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v ExtensionParameter) bool { return v.Required }).(pulumi.BoolOutput)
}

type ExtensionParameterMapOutput struct{ *pulumi.OutputState }

func (ExtensionParameterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ExtensionParameter)(nil)).Elem()
}

func (o ExtensionParameterMapOutput) ToExtensionParameterMapOutput() ExtensionParameterMapOutput {
	return o
}

func (o ExtensionParameterMapOutput) ToExtensionParameterMapOutputWithContext(ctx context.Context) ExtensionParameterMapOutput {
	return o
}

func (o ExtensionParameterMapOutput) MapIndex(k pulumi.StringInput) ExtensionParameterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ExtensionParameter {
		return vs[0].(map[string]ExtensionParameter)[vs[1].(string)]
	}).(ExtensionParameterOutput)
}

// A key-value pair to associate with a resource.
type ExtensionTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// ExtensionTagInput is an input type that accepts ExtensionTagArgs and ExtensionTagOutput values.
// You can construct a concrete instance of `ExtensionTagInput` via:
//
//	ExtensionTagArgs{...}
type ExtensionTagInput interface {
	pulumi.Input

	ToExtensionTagOutput() ExtensionTagOutput
	ToExtensionTagOutputWithContext(context.Context) ExtensionTagOutput
}

// A key-value pair to associate with a resource.
type ExtensionTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ExtensionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionTag)(nil)).Elem()
}

func (i ExtensionTagArgs) ToExtensionTagOutput() ExtensionTagOutput {
	return i.ToExtensionTagOutputWithContext(context.Background())
}

func (i ExtensionTagArgs) ToExtensionTagOutputWithContext(ctx context.Context) ExtensionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionTagOutput)
}

// ExtensionTagArrayInput is an input type that accepts ExtensionTagArray and ExtensionTagArrayOutput values.
// You can construct a concrete instance of `ExtensionTagArrayInput` via:
//
//	ExtensionTagArray{ ExtensionTagArgs{...} }
type ExtensionTagArrayInput interface {
	pulumi.Input

	ToExtensionTagArrayOutput() ExtensionTagArrayOutput
	ToExtensionTagArrayOutputWithContext(context.Context) ExtensionTagArrayOutput
}

type ExtensionTagArray []ExtensionTagInput

func (ExtensionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionTag)(nil)).Elem()
}

func (i ExtensionTagArray) ToExtensionTagArrayOutput() ExtensionTagArrayOutput {
	return i.ToExtensionTagArrayOutputWithContext(context.Background())
}

func (i ExtensionTagArray) ToExtensionTagArrayOutputWithContext(ctx context.Context) ExtensionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionTagArrayOutput)
}

// A key-value pair to associate with a resource.
type ExtensionTagOutput struct{ *pulumi.OutputState }

func (ExtensionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionTag)(nil)).Elem()
}

func (o ExtensionTagOutput) ToExtensionTagOutput() ExtensionTagOutput {
	return o
}

func (o ExtensionTagOutput) ToExtensionTagOutputWithContext(ctx context.Context) ExtensionTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ExtensionTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ExtensionTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ExtensionTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ExtensionTag) string { return v.Value }).(pulumi.StringOutput)
}

type ExtensionTagArrayOutput struct{ *pulumi.OutputState }

func (ExtensionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionTag)(nil)).Elem()
}

func (o ExtensionTagArrayOutput) ToExtensionTagArrayOutput() ExtensionTagArrayOutput {
	return o
}

func (o ExtensionTagArrayOutput) ToExtensionTagArrayOutputWithContext(ctx context.Context) ExtensionTagArrayOutput {
	return o
}

func (o ExtensionTagArrayOutput) Index(i pulumi.IntInput) ExtensionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtensionTag {
		return vs[0].([]ExtensionTag)[vs[1].(int)]
	}).(ExtensionTagOutput)
}

type ExtensionActionArrayMap map[string]ExtensionActionArrayInput

func (ExtensionActionArrayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string][]ExtensionAction)(nil)).Elem()
}

func (i ExtensionActionArrayMap) ToExtensionActionArrayMapOutput() ExtensionActionArrayMapOutput {
	return i.ToExtensionActionArrayMapOutputWithContext(context.Background())
}

func (i ExtensionActionArrayMap) ToExtensionActionArrayMapOutputWithContext(ctx context.Context) ExtensionActionArrayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionActionArrayMapOutput)
}

// ExtensionActionArrayMapInput is an input type that accepts ExtensionActionArrayMap and ExtensionActionArrayMapOutput values.
// You can construct a concrete instance of `ExtensionActionArrayMapInput` via:
//
//	ExtensionActionArrayMap{ "key": ExtensionActionArray{ ExtensionActionArgs{...} } }
type ExtensionActionArrayMapInput interface {
	pulumi.Input

	ToExtensionActionArrayMapOutput() ExtensionActionArrayMapOutput
	ToExtensionActionArrayMapOutputWithContext(context.Context) ExtensionActionArrayMapOutput
}

type ExtensionActionArrayMapOutput struct{ *pulumi.OutputState }

func (ExtensionActionArrayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string][]ExtensionAction)(nil)).Elem()
}

func (o ExtensionActionArrayMapOutput) ToExtensionActionArrayMapOutput() ExtensionActionArrayMapOutput {
	return o
}

func (o ExtensionActionArrayMapOutput) ToExtensionActionArrayMapOutputWithContext(ctx context.Context) ExtensionActionArrayMapOutput {
	return o
}

func (o ExtensionActionArrayMapOutput) MapIndex(k pulumi.StringInput) ExtensionActionArrayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) []ExtensionAction {
		return vs[0].(map[string][]ExtensionAction)[vs[1].(string)]
	}).(ExtensionActionArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationProfileValidatorsInput)(nil)).Elem(), ConfigurationProfileValidatorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationProfileValidatorsArrayInput)(nil)).Elem(), ConfigurationProfileValidatorsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentTagsInput)(nil)).Elem(), DeploymentTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentTagsArrayInput)(nil)).Elem(), DeploymentTagsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentMonitorInput)(nil)).Elem(), EnvironmentMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentMonitorArrayInput)(nil)).Elem(), EnvironmentMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionActionInput)(nil)).Elem(), ExtensionActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionActionArrayInput)(nil)).Elem(), ExtensionActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionAssociationTagInput)(nil)).Elem(), ExtensionAssociationTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionAssociationTagArrayInput)(nil)).Elem(), ExtensionAssociationTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionParameterInput)(nil)).Elem(), ExtensionParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionParameterMapInput)(nil)).Elem(), ExtensionParameterMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionTagInput)(nil)).Elem(), ExtensionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionTagArrayInput)(nil)).Elem(), ExtensionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionActionArrayMapInput)(nil)).Elem(), ExtensionActionArrayMap{})
	pulumi.RegisterOutputType(ConfigurationProfileValidatorsOutput{})
	pulumi.RegisterOutputType(ConfigurationProfileValidatorsArrayOutput{})
	pulumi.RegisterOutputType(DeploymentTagsOutput{})
	pulumi.RegisterOutputType(DeploymentTagsArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentMonitorOutput{})
	pulumi.RegisterOutputType(EnvironmentMonitorArrayOutput{})
	pulumi.RegisterOutputType(ExtensionActionOutput{})
	pulumi.RegisterOutputType(ExtensionActionArrayOutput{})
	pulumi.RegisterOutputType(ExtensionAssociationTagOutput{})
	pulumi.RegisterOutputType(ExtensionAssociationTagArrayOutput{})
	pulumi.RegisterOutputType(ExtensionParameterOutput{})
	pulumi.RegisterOutputType(ExtensionParameterMapOutput{})
	pulumi.RegisterOutputType(ExtensionTagOutput{})
	pulumi.RegisterOutputType(ExtensionTagArrayOutput{})
	pulumi.RegisterOutputType(ExtensionActionArrayMapOutput{})
}
