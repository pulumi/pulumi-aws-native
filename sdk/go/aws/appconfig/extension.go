// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfig

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::AppConfig::Extension
//
// ## Example Usage
// ### Example
//
// ```go
// package main
//
// import (
//
//	awsnative "github.com/pulumi/pulumi-aws-native/sdk/go/aws"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/appconfig"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := appconfig.NewExtension(ctx, "basicExtension", &appconfig.ExtensionArgs{
//				Name:                pulumi.String("My Test Extension"),
//				Description:         pulumi.String("My test extension"),
//				LatestVersionNumber: pulumi.Int(0),
//				Actions: appconfig.ExtensionActionArrayMap{
//					"pre_create_hosted_configuration_version": appconfig.ExtensionActionArray{
//						&appconfig.ExtensionActionArgs{
//							Name:        pulumi.String("My Test Action"),
//							Uri:         pulumi.String("DependentLambda.Arn"),
//							RoleArn:     pulumi.String("DependentRole.Arn"),
//							Description: pulumi.String("My test action point"),
//						},
//					},
//				},
//				Parameters: appconfig.ExtensionParameterMap{
//					"myTestParam": &appconfig.ExtensionParameterArgs{
//						Required:    pulumi.Bool(false),
//						Description: pulumi.String("My test parameter"),
//					},
//				},
//				Tags: aws.TagArray{
//					&aws.TagArgs{
//						Key:   pulumi.String("Ext"),
//						Value: pulumi.String("Test"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type Extension struct {
	pulumi.CustomResourceState

	// The actions defined in the extension.
	Actions ExtensionActionArrayMapOutput `pulumi:"actions"`
	// The system-generated Amazon Resource Name (ARN) for the extension.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The system-generated ID of the extension.
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// Description of the extension.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// You can omit this field when you create an extension. When you create a new version, specify the most recent current version number. For example, you create version 3, enter 2 for this field.
	LatestVersionNumber pulumi.IntPtrOutput `pulumi:"latestVersionNumber"`
	// Name of the extension.
	Name pulumi.StringOutput `pulumi:"name"`
	// The parameters accepted by the extension. You specify parameter values when you associate the extension to an AWS AppConfig resource by using the `CreateExtensionAssociation` API action. For AWS Lambda extension actions, these parameters are included in the Lambda request object.
	Parameters ExtensionParameterMapOutput `pulumi:"parameters"`
	// An array of key-value tags to apply to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The extension version number.
	VersionNumber pulumi.IntOutput `pulumi:"versionNumber"`
}

// NewExtension registers a new resource with the given unique name, arguments, and options.
func NewExtension(ctx *pulumi.Context,
	name string, args *ExtensionArgs, opts ...pulumi.ResourceOption) (*Extension, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Actions == nil {
		return nil, errors.New("invalid value for required argument 'Actions'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Extension
	err := ctx.RegisterResource("aws-native:appconfig:Extension", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExtension gets an existing Extension resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExtension(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExtensionState, opts ...pulumi.ResourceOption) (*Extension, error) {
	var resource Extension
	err := ctx.ReadResource("aws-native:appconfig:Extension", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Extension resources.
type extensionState struct {
}

type ExtensionState struct {
}

func (ExtensionState) ElementType() reflect.Type {
	return reflect.TypeOf((*extensionState)(nil)).Elem()
}

type extensionArgs struct {
	// The actions defined in the extension.
	Actions map[string][]ExtensionAction `pulumi:"actions"`
	// Description of the extension.
	Description *string `pulumi:"description"`
	// You can omit this field when you create an extension. When you create a new version, specify the most recent current version number. For example, you create version 3, enter 2 for this field.
	LatestVersionNumber *int `pulumi:"latestVersionNumber"`
	// Name of the extension.
	Name *string `pulumi:"name"`
	// The parameters accepted by the extension. You specify parameter values when you associate the extension to an AWS AppConfig resource by using the `CreateExtensionAssociation` API action. For AWS Lambda extension actions, these parameters are included in the Lambda request object.
	Parameters map[string]ExtensionParameter `pulumi:"parameters"`
	// An array of key-value tags to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a Extension resource.
type ExtensionArgs struct {
	// The actions defined in the extension.
	Actions ExtensionActionArrayMapInput
	// Description of the extension.
	Description pulumi.StringPtrInput
	// You can omit this field when you create an extension. When you create a new version, specify the most recent current version number. For example, you create version 3, enter 2 for this field.
	LatestVersionNumber pulumi.IntPtrInput
	// Name of the extension.
	Name pulumi.StringPtrInput
	// The parameters accepted by the extension. You specify parameter values when you associate the extension to an AWS AppConfig resource by using the `CreateExtensionAssociation` API action. For AWS Lambda extension actions, these parameters are included in the Lambda request object.
	Parameters ExtensionParameterMapInput
	// An array of key-value tags to apply to this resource.
	Tags aws.TagArrayInput
}

func (ExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*extensionArgs)(nil)).Elem()
}

type ExtensionInput interface {
	pulumi.Input

	ToExtensionOutput() ExtensionOutput
	ToExtensionOutputWithContext(ctx context.Context) ExtensionOutput
}

func (*Extension) ElementType() reflect.Type {
	return reflect.TypeOf((**Extension)(nil)).Elem()
}

func (i *Extension) ToExtensionOutput() ExtensionOutput {
	return i.ToExtensionOutputWithContext(context.Background())
}

func (i *Extension) ToExtensionOutputWithContext(ctx context.Context) ExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionOutput)
}

type ExtensionOutput struct{ *pulumi.OutputState }

func (ExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Extension)(nil)).Elem()
}

func (o ExtensionOutput) ToExtensionOutput() ExtensionOutput {
	return o
}

func (o ExtensionOutput) ToExtensionOutputWithContext(ctx context.Context) ExtensionOutput {
	return o
}

// The actions defined in the extension.
func (o ExtensionOutput) Actions() ExtensionActionArrayMapOutput {
	return o.ApplyT(func(v *Extension) ExtensionActionArrayMapOutput { return v.Actions }).(ExtensionActionArrayMapOutput)
}

// The system-generated Amazon Resource Name (ARN) for the extension.
func (o ExtensionOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Extension) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The system-generated ID of the extension.
func (o ExtensionOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *Extension) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// Description of the extension.
func (o ExtensionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Extension) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// You can omit this field when you create an extension. When you create a new version, specify the most recent current version number. For example, you create version 3, enter 2 for this field.
func (o ExtensionOutput) LatestVersionNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Extension) pulumi.IntPtrOutput { return v.LatestVersionNumber }).(pulumi.IntPtrOutput)
}

// Name of the extension.
func (o ExtensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Extension) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The parameters accepted by the extension. You specify parameter values when you associate the extension to an AWS AppConfig resource by using the `CreateExtensionAssociation` API action. For AWS Lambda extension actions, these parameters are included in the Lambda request object.
func (o ExtensionOutput) Parameters() ExtensionParameterMapOutput {
	return o.ApplyT(func(v *Extension) ExtensionParameterMapOutput { return v.Parameters }).(ExtensionParameterMapOutput)
}

// An array of key-value tags to apply to this resource.
func (o ExtensionOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Extension) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The extension version number.
func (o ExtensionOutput) VersionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *Extension) pulumi.IntOutput { return v.VersionNumber }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionInput)(nil)).Elem(), &Extension{})
	pulumi.RegisterOutputType(ExtensionOutput{})
}
