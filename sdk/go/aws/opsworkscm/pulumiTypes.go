// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package opsworkscm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServerEngineAttribute struct {
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// ServerEngineAttributeInput is an input type that accepts ServerEngineAttributeArgs and ServerEngineAttributeOutput values.
// You can construct a concrete instance of `ServerEngineAttributeInput` via:
//
//          ServerEngineAttributeArgs{...}
type ServerEngineAttributeInput interface {
	pulumi.Input

	ToServerEngineAttributeOutput() ServerEngineAttributeOutput
	ToServerEngineAttributeOutputWithContext(context.Context) ServerEngineAttributeOutput
}

type ServerEngineAttributeArgs struct {
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServerEngineAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerEngineAttribute)(nil)).Elem()
}

func (i ServerEngineAttributeArgs) ToServerEngineAttributeOutput() ServerEngineAttributeOutput {
	return i.ToServerEngineAttributeOutputWithContext(context.Background())
}

func (i ServerEngineAttributeArgs) ToServerEngineAttributeOutputWithContext(ctx context.Context) ServerEngineAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerEngineAttributeOutput)
}

// ServerEngineAttributeArrayInput is an input type that accepts ServerEngineAttributeArray and ServerEngineAttributeArrayOutput values.
// You can construct a concrete instance of `ServerEngineAttributeArrayInput` via:
//
//          ServerEngineAttributeArray{ ServerEngineAttributeArgs{...} }
type ServerEngineAttributeArrayInput interface {
	pulumi.Input

	ToServerEngineAttributeArrayOutput() ServerEngineAttributeArrayOutput
	ToServerEngineAttributeArrayOutputWithContext(context.Context) ServerEngineAttributeArrayOutput
}

type ServerEngineAttributeArray []ServerEngineAttributeInput

func (ServerEngineAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerEngineAttribute)(nil)).Elem()
}

func (i ServerEngineAttributeArray) ToServerEngineAttributeArrayOutput() ServerEngineAttributeArrayOutput {
	return i.ToServerEngineAttributeArrayOutputWithContext(context.Background())
}

func (i ServerEngineAttributeArray) ToServerEngineAttributeArrayOutputWithContext(ctx context.Context) ServerEngineAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerEngineAttributeArrayOutput)
}

type ServerEngineAttributeOutput struct{ *pulumi.OutputState }

func (ServerEngineAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerEngineAttribute)(nil)).Elem()
}

func (o ServerEngineAttributeOutput) ToServerEngineAttributeOutput() ServerEngineAttributeOutput {
	return o
}

func (o ServerEngineAttributeOutput) ToServerEngineAttributeOutputWithContext(ctx context.Context) ServerEngineAttributeOutput {
	return o
}

func (o ServerEngineAttributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerEngineAttribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ServerEngineAttributeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerEngineAttribute) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServerEngineAttributeArrayOutput struct{ *pulumi.OutputState }

func (ServerEngineAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerEngineAttribute)(nil)).Elem()
}

func (o ServerEngineAttributeArrayOutput) ToServerEngineAttributeArrayOutput() ServerEngineAttributeArrayOutput {
	return o
}

func (o ServerEngineAttributeArrayOutput) ToServerEngineAttributeArrayOutputWithContext(ctx context.Context) ServerEngineAttributeArrayOutput {
	return o
}

func (o ServerEngineAttributeArrayOutput) Index(i pulumi.IntInput) ServerEngineAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerEngineAttribute {
		return vs[0].([]ServerEngineAttribute)[vs[1].(int)]
	}).(ServerEngineAttributeOutput)
}

type ServerTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ServerTagInput is an input type that accepts ServerTagArgs and ServerTagOutput values.
// You can construct a concrete instance of `ServerTagInput` via:
//
//          ServerTagArgs{...}
type ServerTagInput interface {
	pulumi.Input

	ToServerTagOutput() ServerTagOutput
	ToServerTagOutputWithContext(context.Context) ServerTagOutput
}

type ServerTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServerTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTag)(nil)).Elem()
}

func (i ServerTagArgs) ToServerTagOutput() ServerTagOutput {
	return i.ToServerTagOutputWithContext(context.Background())
}

func (i ServerTagArgs) ToServerTagOutputWithContext(ctx context.Context) ServerTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTagOutput)
}

// ServerTagArrayInput is an input type that accepts ServerTagArray and ServerTagArrayOutput values.
// You can construct a concrete instance of `ServerTagArrayInput` via:
//
//          ServerTagArray{ ServerTagArgs{...} }
type ServerTagArrayInput interface {
	pulumi.Input

	ToServerTagArrayOutput() ServerTagArrayOutput
	ToServerTagArrayOutputWithContext(context.Context) ServerTagArrayOutput
}

type ServerTagArray []ServerTagInput

func (ServerTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerTag)(nil)).Elem()
}

func (i ServerTagArray) ToServerTagArrayOutput() ServerTagArrayOutput {
	return i.ToServerTagArrayOutputWithContext(context.Background())
}

func (i ServerTagArray) ToServerTagArrayOutputWithContext(ctx context.Context) ServerTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTagArrayOutput)
}

type ServerTagOutput struct{ *pulumi.OutputState }

func (ServerTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTag)(nil)).Elem()
}

func (o ServerTagOutput) ToServerTagOutput() ServerTagOutput {
	return o
}

func (o ServerTagOutput) ToServerTagOutputWithContext(ctx context.Context) ServerTagOutput {
	return o
}

func (o ServerTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServerTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ServerTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ServerTag) string { return v.Value }).(pulumi.StringOutput)
}

type ServerTagArrayOutput struct{ *pulumi.OutputState }

func (ServerTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerTag)(nil)).Elem()
}

func (o ServerTagArrayOutput) ToServerTagArrayOutput() ServerTagArrayOutput {
	return o
}

func (o ServerTagArrayOutput) ToServerTagArrayOutputWithContext(ctx context.Context) ServerTagArrayOutput {
	return o
}

func (o ServerTagArrayOutput) Index(i pulumi.IntInput) ServerTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerTag {
		return vs[0].([]ServerTag)[vs[1].(int)]
	}).(ServerTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServerEngineAttributeInput)(nil)).Elem(), ServerEngineAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerEngineAttributeArrayInput)(nil)).Elem(), ServerEngineAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerTagInput)(nil)).Elem(), ServerTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerTagArrayInput)(nil)).Elem(), ServerTagArray{})
	pulumi.RegisterOutputType(ServerEngineAttributeOutput{})
	pulumi.RegisterOutputType(ServerEngineAttributeArrayOutput{})
	pulumi.RegisterOutputType(ServerTagOutput{})
	pulumi.RegisterOutputType(ServerTagArrayOutput{})
}
