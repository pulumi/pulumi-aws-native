// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opsworkscm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ServerEngineAttribute struct {
	// The name of the engine attribute.
	//
	// *Attribute name for Chef Automate servers:*
	//
	// - `CHEF_AUTOMATE_ADMIN_PASSWORD`
	//
	// *Attribute names for Puppet Enterprise servers:*
	//
	// - `PUPPET_ADMIN_PASSWORD`
	// - `PUPPET_R10K_REMOTE`
	// - `PUPPET_R10K_PRIVATE_KEY`
	Name *string `pulumi:"name"`
	// The value of the engine attribute.
	//
	// *Attribute value for Chef Automate servers:*
	//
	// - `CHEF_AUTOMATE_PIVOTAL_KEY` : A base64-encoded RSA public key. The corresponding private key is required to access the Chef API. You can generate this key by running the following [OpenSSL](https://docs.aws.amazon.com/https://www.openssl.org/) command on Linux-based computers.
	//
	// `openssl genrsa -out *pivotal_key_file_name* .pem 2048`
	//
	// On Windows-based computers, you can use the PuTTYgen utility to generate a base64-encoded RSA private key. For more information, see [PuTTYgen - Key Generator for PuTTY on Windows](https://docs.aws.amazon.com/https://www.ssh.com/ssh/putty/windows/puttygen) on SSH.com.
	//
	// *Attribute values for Puppet Enterprise servers:*
	//
	// - `PUPPET_ADMIN_PASSWORD` : An administrator password that you can use to sign in to the Puppet Enterprise console webpage after the server is online. The password must use between 8 and 32 ASCII characters.
	// - `PUPPET_R10K_REMOTE` : The r10k remote is the URL of your control repository (for example, ssh://git@your.git-repo.com:user/control-repo.git). Specifying an r10k remote opens TCP port 8170.
	// - `PUPPET_R10K_PRIVATE_KEY` : If you are using a private Git repository, add `PUPPET_R10K_PRIVATE_KEY` to specify a PEM-encoded private SSH key.
	Value *string `pulumi:"value"`
}

// ServerEngineAttributeInput is an input type that accepts ServerEngineAttributeArgs and ServerEngineAttributeOutput values.
// You can construct a concrete instance of `ServerEngineAttributeInput` via:
//
//	ServerEngineAttributeArgs{...}
type ServerEngineAttributeInput interface {
	pulumi.Input

	ToServerEngineAttributeOutput() ServerEngineAttributeOutput
	ToServerEngineAttributeOutputWithContext(context.Context) ServerEngineAttributeOutput
}

type ServerEngineAttributeArgs struct {
	// The name of the engine attribute.
	//
	// *Attribute name for Chef Automate servers:*
	//
	// - `CHEF_AUTOMATE_ADMIN_PASSWORD`
	//
	// *Attribute names for Puppet Enterprise servers:*
	//
	// - `PUPPET_ADMIN_PASSWORD`
	// - `PUPPET_R10K_REMOTE`
	// - `PUPPET_R10K_PRIVATE_KEY`
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the engine attribute.
	//
	// *Attribute value for Chef Automate servers:*
	//
	// - `CHEF_AUTOMATE_PIVOTAL_KEY` : A base64-encoded RSA public key. The corresponding private key is required to access the Chef API. You can generate this key by running the following [OpenSSL](https://docs.aws.amazon.com/https://www.openssl.org/) command on Linux-based computers.
	//
	// `openssl genrsa -out *pivotal_key_file_name* .pem 2048`
	//
	// On Windows-based computers, you can use the PuTTYgen utility to generate a base64-encoded RSA private key. For more information, see [PuTTYgen - Key Generator for PuTTY on Windows](https://docs.aws.amazon.com/https://www.ssh.com/ssh/putty/windows/puttygen) on SSH.com.
	//
	// *Attribute values for Puppet Enterprise servers:*
	//
	// - `PUPPET_ADMIN_PASSWORD` : An administrator password that you can use to sign in to the Puppet Enterprise console webpage after the server is online. The password must use between 8 and 32 ASCII characters.
	// - `PUPPET_R10K_REMOTE` : The r10k remote is the URL of your control repository (for example, ssh://git@your.git-repo.com:user/control-repo.git). Specifying an r10k remote opens TCP port 8170.
	// - `PUPPET_R10K_PRIVATE_KEY` : If you are using a private Git repository, add `PUPPET_R10K_PRIVATE_KEY` to specify a PEM-encoded private SSH key.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServerEngineAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerEngineAttribute)(nil)).Elem()
}

func (i ServerEngineAttributeArgs) ToServerEngineAttributeOutput() ServerEngineAttributeOutput {
	return i.ToServerEngineAttributeOutputWithContext(context.Background())
}

func (i ServerEngineAttributeArgs) ToServerEngineAttributeOutputWithContext(ctx context.Context) ServerEngineAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerEngineAttributeOutput)
}

// ServerEngineAttributeArrayInput is an input type that accepts ServerEngineAttributeArray and ServerEngineAttributeArrayOutput values.
// You can construct a concrete instance of `ServerEngineAttributeArrayInput` via:
//
//	ServerEngineAttributeArray{ ServerEngineAttributeArgs{...} }
type ServerEngineAttributeArrayInput interface {
	pulumi.Input

	ToServerEngineAttributeArrayOutput() ServerEngineAttributeArrayOutput
	ToServerEngineAttributeArrayOutputWithContext(context.Context) ServerEngineAttributeArrayOutput
}

type ServerEngineAttributeArray []ServerEngineAttributeInput

func (ServerEngineAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerEngineAttribute)(nil)).Elem()
}

func (i ServerEngineAttributeArray) ToServerEngineAttributeArrayOutput() ServerEngineAttributeArrayOutput {
	return i.ToServerEngineAttributeArrayOutputWithContext(context.Background())
}

func (i ServerEngineAttributeArray) ToServerEngineAttributeArrayOutputWithContext(ctx context.Context) ServerEngineAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerEngineAttributeArrayOutput)
}

type ServerEngineAttributeOutput struct{ *pulumi.OutputState }

func (ServerEngineAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerEngineAttribute)(nil)).Elem()
}

func (o ServerEngineAttributeOutput) ToServerEngineAttributeOutput() ServerEngineAttributeOutput {
	return o
}

func (o ServerEngineAttributeOutput) ToServerEngineAttributeOutputWithContext(ctx context.Context) ServerEngineAttributeOutput {
	return o
}

// The name of the engine attribute.
//
// *Attribute name for Chef Automate servers:*
//
// - `CHEF_AUTOMATE_ADMIN_PASSWORD`
//
// *Attribute names for Puppet Enterprise servers:*
//
// - `PUPPET_ADMIN_PASSWORD`
// - `PUPPET_R10K_REMOTE`
// - `PUPPET_R10K_PRIVATE_KEY`
func (o ServerEngineAttributeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerEngineAttribute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the engine attribute.
//
// *Attribute value for Chef Automate servers:*
//
// - `CHEF_AUTOMATE_PIVOTAL_KEY` : A base64-encoded RSA public key. The corresponding private key is required to access the Chef API. You can generate this key by running the following [OpenSSL](https://docs.aws.amazon.com/https://www.openssl.org/) command on Linux-based computers.
//
// `openssl genrsa -out *pivotal_key_file_name* .pem 2048`
//
// On Windows-based computers, you can use the PuTTYgen utility to generate a base64-encoded RSA private key. For more information, see [PuTTYgen - Key Generator for PuTTY on Windows](https://docs.aws.amazon.com/https://www.ssh.com/ssh/putty/windows/puttygen) on SSH.com.
//
// *Attribute values for Puppet Enterprise servers:*
//
// - `PUPPET_ADMIN_PASSWORD` : An administrator password that you can use to sign in to the Puppet Enterprise console webpage after the server is online. The password must use between 8 and 32 ASCII characters.
// - `PUPPET_R10K_REMOTE` : The r10k remote is the URL of your control repository (for example, ssh://git@your.git-repo.com:user/control-repo.git). Specifying an r10k remote opens TCP port 8170.
// - `PUPPET_R10K_PRIVATE_KEY` : If you are using a private Git repository, add `PUPPET_R10K_PRIVATE_KEY` to specify a PEM-encoded private SSH key.
func (o ServerEngineAttributeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerEngineAttribute) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServerEngineAttributeArrayOutput struct{ *pulumi.OutputState }

func (ServerEngineAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerEngineAttribute)(nil)).Elem()
}

func (o ServerEngineAttributeArrayOutput) ToServerEngineAttributeArrayOutput() ServerEngineAttributeArrayOutput {
	return o
}

func (o ServerEngineAttributeArrayOutput) ToServerEngineAttributeArrayOutputWithContext(ctx context.Context) ServerEngineAttributeArrayOutput {
	return o
}

func (o ServerEngineAttributeArrayOutput) Index(i pulumi.IntInput) ServerEngineAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerEngineAttribute {
		return vs[0].([]ServerEngineAttribute)[vs[1].(int)]
	}).(ServerEngineAttributeOutput)
}

type ServerTag struct {
	// A tag key, such as `Stage` or `Name` . A tag key cannot be empty. The key can be a maximum of 127 characters, and can contain only Unicode letters, numbers, or separators, or the following special characters: `+ - = . _ : /`
	Key string `pulumi:"key"`
	// An optional tag value, such as `Production` or `test-owcm-server` . The value can be a maximum of 255 characters, and contain only Unicode letters, numbers, or separators, or the following special characters: `+ - = . _ : /`
	Value string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServerEngineAttributeInput)(nil)).Elem(), ServerEngineAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerEngineAttributeArrayInput)(nil)).Elem(), ServerEngineAttributeArray{})
	pulumi.RegisterOutputType(ServerEngineAttributeOutput{})
	pulumi.RegisterOutputType(ServerEngineAttributeArrayOutput{})
}
