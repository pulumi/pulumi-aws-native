// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fis

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::FIS::TargetAccountConfiguration
type TargetAccountConfiguration struct {
	pulumi.CustomResourceState

	AccountId            pulumi.StringOutput    `pulumi:"accountId"`
	Description          pulumi.StringPtrOutput `pulumi:"description"`
	ExperimentTemplateId pulumi.StringOutput    `pulumi:"experimentTemplateId"`
	RoleArn              pulumi.StringOutput    `pulumi:"roleArn"`
}

// NewTargetAccountConfiguration registers a new resource with the given unique name, arguments, and options.
func NewTargetAccountConfiguration(ctx *pulumi.Context,
	name string, args *TargetAccountConfigurationArgs, opts ...pulumi.ResourceOption) (*TargetAccountConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.ExperimentTemplateId == nil {
		return nil, errors.New("invalid value for required argument 'ExperimentTemplateId'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"accountId",
		"experimentTemplateId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TargetAccountConfiguration
	err := ctx.RegisterResource("aws-native:fis:TargetAccountConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTargetAccountConfiguration gets an existing TargetAccountConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTargetAccountConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TargetAccountConfigurationState, opts ...pulumi.ResourceOption) (*TargetAccountConfiguration, error) {
	var resource TargetAccountConfiguration
	err := ctx.ReadResource("aws-native:fis:TargetAccountConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TargetAccountConfiguration resources.
type targetAccountConfigurationState struct {
}

type TargetAccountConfigurationState struct {
}

func (TargetAccountConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*targetAccountConfigurationState)(nil)).Elem()
}

type targetAccountConfigurationArgs struct {
	AccountId            string  `pulumi:"accountId"`
	Description          *string `pulumi:"description"`
	ExperimentTemplateId string  `pulumi:"experimentTemplateId"`
	RoleArn              string  `pulumi:"roleArn"`
}

// The set of arguments for constructing a TargetAccountConfiguration resource.
type TargetAccountConfigurationArgs struct {
	AccountId            pulumi.StringInput
	Description          pulumi.StringPtrInput
	ExperimentTemplateId pulumi.StringInput
	RoleArn              pulumi.StringInput
}

func (TargetAccountConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*targetAccountConfigurationArgs)(nil)).Elem()
}

type TargetAccountConfigurationInput interface {
	pulumi.Input

	ToTargetAccountConfigurationOutput() TargetAccountConfigurationOutput
	ToTargetAccountConfigurationOutputWithContext(ctx context.Context) TargetAccountConfigurationOutput
}

func (*TargetAccountConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetAccountConfiguration)(nil)).Elem()
}

func (i *TargetAccountConfiguration) ToTargetAccountConfigurationOutput() TargetAccountConfigurationOutput {
	return i.ToTargetAccountConfigurationOutputWithContext(context.Background())
}

func (i *TargetAccountConfiguration) ToTargetAccountConfigurationOutputWithContext(ctx context.Context) TargetAccountConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetAccountConfigurationOutput)
}

type TargetAccountConfigurationOutput struct{ *pulumi.OutputState }

func (TargetAccountConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetAccountConfiguration)(nil)).Elem()
}

func (o TargetAccountConfigurationOutput) ToTargetAccountConfigurationOutput() TargetAccountConfigurationOutput {
	return o
}

func (o TargetAccountConfigurationOutput) ToTargetAccountConfigurationOutputWithContext(ctx context.Context) TargetAccountConfigurationOutput {
	return o
}

func (o TargetAccountConfigurationOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetAccountConfiguration) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

func (o TargetAccountConfigurationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetAccountConfiguration) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TargetAccountConfigurationOutput) ExperimentTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetAccountConfiguration) pulumi.StringOutput { return v.ExperimentTemplateId }).(pulumi.StringOutput)
}

func (o TargetAccountConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetAccountConfiguration) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TargetAccountConfigurationInput)(nil)).Elem(), &TargetAccountConfiguration{})
	pulumi.RegisterOutputType(TargetAccountConfigurationOutput{})
}
