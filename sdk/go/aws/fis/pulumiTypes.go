// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The actions for the experiment.
type ExperimentTemplateExperimentTemplateActionMap struct {
}

// ExperimentTemplateExperimentTemplateActionMapInput is an input type that accepts ExperimentTemplateExperimentTemplateActionMap and ExperimentTemplateExperimentTemplateActionMapOutput values.
// You can construct a concrete instance of `ExperimentTemplateExperimentTemplateActionMapInput` via:
//
//          ExperimentTemplateExperimentTemplateActionMap{ "key": ExperimentTemplateExperimentTemplateActionArgs{...} }
type ExperimentTemplateExperimentTemplateActionMapInput interface {
	pulumi.Input

	ToExperimentTemplateExperimentTemplateActionMapOutput() ExperimentTemplateExperimentTemplateActionMapOutput
	ToExperimentTemplateExperimentTemplateActionMapOutputWithContext(context.Context) ExperimentTemplateExperimentTemplateActionMapOutput
}

// The actions for the experiment.
type ExperimentTemplateExperimentTemplateActionMapArgs struct {
}

func (ExperimentTemplateExperimentTemplateActionMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentTemplateExperimentTemplateActionMap)(nil)).Elem()
}

func (i ExperimentTemplateExperimentTemplateActionMapArgs) ToExperimentTemplateExperimentTemplateActionMapOutput() ExperimentTemplateExperimentTemplateActionMapOutput {
	return i.ToExperimentTemplateExperimentTemplateActionMapOutputWithContext(context.Background())
}

func (i ExperimentTemplateExperimentTemplateActionMapArgs) ToExperimentTemplateExperimentTemplateActionMapOutputWithContext(ctx context.Context) ExperimentTemplateExperimentTemplateActionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentTemplateExperimentTemplateActionMapOutput)
}

func (i ExperimentTemplateExperimentTemplateActionMapArgs) ToExperimentTemplateExperimentTemplateActionMapPtrOutput() ExperimentTemplateExperimentTemplateActionMapPtrOutput {
	return i.ToExperimentTemplateExperimentTemplateActionMapPtrOutputWithContext(context.Background())
}

func (i ExperimentTemplateExperimentTemplateActionMapArgs) ToExperimentTemplateExperimentTemplateActionMapPtrOutputWithContext(ctx context.Context) ExperimentTemplateExperimentTemplateActionMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentTemplateExperimentTemplateActionMapOutput).ToExperimentTemplateExperimentTemplateActionMapPtrOutputWithContext(ctx)
}

// ExperimentTemplateExperimentTemplateActionMapPtrInput is an input type that accepts ExperimentTemplateExperimentTemplateActionMapArgs, ExperimentTemplateExperimentTemplateActionMapPtr and ExperimentTemplateExperimentTemplateActionMapPtrOutput values.
// You can construct a concrete instance of `ExperimentTemplateExperimentTemplateActionMapPtrInput` via:
//
//          ExperimentTemplateExperimentTemplateActionMapArgs{...}
//
//  or:
//
//          nil
type ExperimentTemplateExperimentTemplateActionMapPtrInput interface {
	pulumi.Input

	ToExperimentTemplateExperimentTemplateActionMapPtrOutput() ExperimentTemplateExperimentTemplateActionMapPtrOutput
	ToExperimentTemplateExperimentTemplateActionMapPtrOutputWithContext(context.Context) ExperimentTemplateExperimentTemplateActionMapPtrOutput
}

type experimentTemplateExperimentTemplateActionMapPtrType ExperimentTemplateExperimentTemplateActionMapArgs

func ExperimentTemplateExperimentTemplateActionMapPtr(v *ExperimentTemplateExperimentTemplateActionMapArgs) ExperimentTemplateExperimentTemplateActionMapPtrInput {
	return (*experimentTemplateExperimentTemplateActionMapPtrType)(v)
}

func (*experimentTemplateExperimentTemplateActionMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentTemplateExperimentTemplateActionMap)(nil)).Elem()
}

func (i *experimentTemplateExperimentTemplateActionMapPtrType) ToExperimentTemplateExperimentTemplateActionMapPtrOutput() ExperimentTemplateExperimentTemplateActionMapPtrOutput {
	return i.ToExperimentTemplateExperimentTemplateActionMapPtrOutputWithContext(context.Background())
}

func (i *experimentTemplateExperimentTemplateActionMapPtrType) ToExperimentTemplateExperimentTemplateActionMapPtrOutputWithContext(ctx context.Context) ExperimentTemplateExperimentTemplateActionMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentTemplateExperimentTemplateActionMapPtrOutput)
}

// The actions for the experiment.
type ExperimentTemplateExperimentTemplateActionMapOutput struct{ *pulumi.OutputState }

func (ExperimentTemplateExperimentTemplateActionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentTemplateExperimentTemplateActionMap)(nil)).Elem()
}

func (o ExperimentTemplateExperimentTemplateActionMapOutput) ToExperimentTemplateExperimentTemplateActionMapOutput() ExperimentTemplateExperimentTemplateActionMapOutput {
	return o
}

func (o ExperimentTemplateExperimentTemplateActionMapOutput) ToExperimentTemplateExperimentTemplateActionMapOutputWithContext(ctx context.Context) ExperimentTemplateExperimentTemplateActionMapOutput {
	return o
}

func (o ExperimentTemplateExperimentTemplateActionMapOutput) ToExperimentTemplateExperimentTemplateActionMapPtrOutput() ExperimentTemplateExperimentTemplateActionMapPtrOutput {
	return o.ToExperimentTemplateExperimentTemplateActionMapPtrOutputWithContext(context.Background())
}

func (o ExperimentTemplateExperimentTemplateActionMapOutput) ToExperimentTemplateExperimentTemplateActionMapPtrOutputWithContext(ctx context.Context) ExperimentTemplateExperimentTemplateActionMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExperimentTemplateExperimentTemplateActionMap) *ExperimentTemplateExperimentTemplateActionMap {
		return &v
	}).(ExperimentTemplateExperimentTemplateActionMapPtrOutput)
}

type ExperimentTemplateExperimentTemplateActionMapPtrOutput struct{ *pulumi.OutputState }

func (ExperimentTemplateExperimentTemplateActionMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentTemplateExperimentTemplateActionMap)(nil)).Elem()
}

func (o ExperimentTemplateExperimentTemplateActionMapPtrOutput) ToExperimentTemplateExperimentTemplateActionMapPtrOutput() ExperimentTemplateExperimentTemplateActionMapPtrOutput {
	return o
}

func (o ExperimentTemplateExperimentTemplateActionMapPtrOutput) ToExperimentTemplateExperimentTemplateActionMapPtrOutputWithContext(ctx context.Context) ExperimentTemplateExperimentTemplateActionMapPtrOutput {
	return o
}

func (o ExperimentTemplateExperimentTemplateActionMapPtrOutput) Elem() ExperimentTemplateExperimentTemplateActionMapOutput {
	return o.ApplyT(func(v *ExperimentTemplateExperimentTemplateActionMap) ExperimentTemplateExperimentTemplateActionMap {
		if v != nil {
			return *v
		}
		var ret ExperimentTemplateExperimentTemplateActionMap
		return ret
	}).(ExperimentTemplateExperimentTemplateActionMapOutput)
}

type ExperimentTemplateExperimentTemplateStopCondition struct {
	Source string  `pulumi:"source"`
	Value  *string `pulumi:"value"`
}

// ExperimentTemplateExperimentTemplateStopConditionInput is an input type that accepts ExperimentTemplateExperimentTemplateStopConditionArgs and ExperimentTemplateExperimentTemplateStopConditionOutput values.
// You can construct a concrete instance of `ExperimentTemplateExperimentTemplateStopConditionInput` via:
//
//          ExperimentTemplateExperimentTemplateStopConditionArgs{...}
type ExperimentTemplateExperimentTemplateStopConditionInput interface {
	pulumi.Input

	ToExperimentTemplateExperimentTemplateStopConditionOutput() ExperimentTemplateExperimentTemplateStopConditionOutput
	ToExperimentTemplateExperimentTemplateStopConditionOutputWithContext(context.Context) ExperimentTemplateExperimentTemplateStopConditionOutput
}

type ExperimentTemplateExperimentTemplateStopConditionArgs struct {
	Source pulumi.StringInput    `pulumi:"source"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (ExperimentTemplateExperimentTemplateStopConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentTemplateExperimentTemplateStopCondition)(nil)).Elem()
}

func (i ExperimentTemplateExperimentTemplateStopConditionArgs) ToExperimentTemplateExperimentTemplateStopConditionOutput() ExperimentTemplateExperimentTemplateStopConditionOutput {
	return i.ToExperimentTemplateExperimentTemplateStopConditionOutputWithContext(context.Background())
}

func (i ExperimentTemplateExperimentTemplateStopConditionArgs) ToExperimentTemplateExperimentTemplateStopConditionOutputWithContext(ctx context.Context) ExperimentTemplateExperimentTemplateStopConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentTemplateExperimentTemplateStopConditionOutput)
}

// ExperimentTemplateExperimentTemplateStopConditionArrayInput is an input type that accepts ExperimentTemplateExperimentTemplateStopConditionArray and ExperimentTemplateExperimentTemplateStopConditionArrayOutput values.
// You can construct a concrete instance of `ExperimentTemplateExperimentTemplateStopConditionArrayInput` via:
//
//          ExperimentTemplateExperimentTemplateStopConditionArray{ ExperimentTemplateExperimentTemplateStopConditionArgs{...} }
type ExperimentTemplateExperimentTemplateStopConditionArrayInput interface {
	pulumi.Input

	ToExperimentTemplateExperimentTemplateStopConditionArrayOutput() ExperimentTemplateExperimentTemplateStopConditionArrayOutput
	ToExperimentTemplateExperimentTemplateStopConditionArrayOutputWithContext(context.Context) ExperimentTemplateExperimentTemplateStopConditionArrayOutput
}

type ExperimentTemplateExperimentTemplateStopConditionArray []ExperimentTemplateExperimentTemplateStopConditionInput

func (ExperimentTemplateExperimentTemplateStopConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExperimentTemplateExperimentTemplateStopCondition)(nil)).Elem()
}

func (i ExperimentTemplateExperimentTemplateStopConditionArray) ToExperimentTemplateExperimentTemplateStopConditionArrayOutput() ExperimentTemplateExperimentTemplateStopConditionArrayOutput {
	return i.ToExperimentTemplateExperimentTemplateStopConditionArrayOutputWithContext(context.Background())
}

func (i ExperimentTemplateExperimentTemplateStopConditionArray) ToExperimentTemplateExperimentTemplateStopConditionArrayOutputWithContext(ctx context.Context) ExperimentTemplateExperimentTemplateStopConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentTemplateExperimentTemplateStopConditionArrayOutput)
}

type ExperimentTemplateExperimentTemplateStopConditionOutput struct{ *pulumi.OutputState }

func (ExperimentTemplateExperimentTemplateStopConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentTemplateExperimentTemplateStopCondition)(nil)).Elem()
}

func (o ExperimentTemplateExperimentTemplateStopConditionOutput) ToExperimentTemplateExperimentTemplateStopConditionOutput() ExperimentTemplateExperimentTemplateStopConditionOutput {
	return o
}

func (o ExperimentTemplateExperimentTemplateStopConditionOutput) ToExperimentTemplateExperimentTemplateStopConditionOutputWithContext(ctx context.Context) ExperimentTemplateExperimentTemplateStopConditionOutput {
	return o
}

func (o ExperimentTemplateExperimentTemplateStopConditionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ExperimentTemplateExperimentTemplateStopCondition) string { return v.Source }).(pulumi.StringOutput)
}

func (o ExperimentTemplateExperimentTemplateStopConditionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExperimentTemplateExperimentTemplateStopCondition) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ExperimentTemplateExperimentTemplateStopConditionArrayOutput struct{ *pulumi.OutputState }

func (ExperimentTemplateExperimentTemplateStopConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExperimentTemplateExperimentTemplateStopCondition)(nil)).Elem()
}

func (o ExperimentTemplateExperimentTemplateStopConditionArrayOutput) ToExperimentTemplateExperimentTemplateStopConditionArrayOutput() ExperimentTemplateExperimentTemplateStopConditionArrayOutput {
	return o
}

func (o ExperimentTemplateExperimentTemplateStopConditionArrayOutput) ToExperimentTemplateExperimentTemplateStopConditionArrayOutputWithContext(ctx context.Context) ExperimentTemplateExperimentTemplateStopConditionArrayOutput {
	return o
}

func (o ExperimentTemplateExperimentTemplateStopConditionArrayOutput) Index(i pulumi.IntInput) ExperimentTemplateExperimentTemplateStopConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExperimentTemplateExperimentTemplateStopCondition {
		return vs[0].([]ExperimentTemplateExperimentTemplateStopCondition)[vs[1].(int)]
	}).(ExperimentTemplateExperimentTemplateStopConditionOutput)
}

// The targets for the experiment.
type ExperimentTemplateExperimentTemplateTargetMap struct {
}

// ExperimentTemplateExperimentTemplateTargetMapInput is an input type that accepts ExperimentTemplateExperimentTemplateTargetMap and ExperimentTemplateExperimentTemplateTargetMapOutput values.
// You can construct a concrete instance of `ExperimentTemplateExperimentTemplateTargetMapInput` via:
//
//          ExperimentTemplateExperimentTemplateTargetMap{ "key": ExperimentTemplateExperimentTemplateTargetArgs{...} }
type ExperimentTemplateExperimentTemplateTargetMapInput interface {
	pulumi.Input

	ToExperimentTemplateExperimentTemplateTargetMapOutput() ExperimentTemplateExperimentTemplateTargetMapOutput
	ToExperimentTemplateExperimentTemplateTargetMapOutputWithContext(context.Context) ExperimentTemplateExperimentTemplateTargetMapOutput
}

// The targets for the experiment.
type ExperimentTemplateExperimentTemplateTargetMapArgs struct {
}

func (ExperimentTemplateExperimentTemplateTargetMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentTemplateExperimentTemplateTargetMap)(nil)).Elem()
}

func (i ExperimentTemplateExperimentTemplateTargetMapArgs) ToExperimentTemplateExperimentTemplateTargetMapOutput() ExperimentTemplateExperimentTemplateTargetMapOutput {
	return i.ToExperimentTemplateExperimentTemplateTargetMapOutputWithContext(context.Background())
}

func (i ExperimentTemplateExperimentTemplateTargetMapArgs) ToExperimentTemplateExperimentTemplateTargetMapOutputWithContext(ctx context.Context) ExperimentTemplateExperimentTemplateTargetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentTemplateExperimentTemplateTargetMapOutput)
}

func (i ExperimentTemplateExperimentTemplateTargetMapArgs) ToExperimentTemplateExperimentTemplateTargetMapPtrOutput() ExperimentTemplateExperimentTemplateTargetMapPtrOutput {
	return i.ToExperimentTemplateExperimentTemplateTargetMapPtrOutputWithContext(context.Background())
}

func (i ExperimentTemplateExperimentTemplateTargetMapArgs) ToExperimentTemplateExperimentTemplateTargetMapPtrOutputWithContext(ctx context.Context) ExperimentTemplateExperimentTemplateTargetMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentTemplateExperimentTemplateTargetMapOutput).ToExperimentTemplateExperimentTemplateTargetMapPtrOutputWithContext(ctx)
}

// ExperimentTemplateExperimentTemplateTargetMapPtrInput is an input type that accepts ExperimentTemplateExperimentTemplateTargetMapArgs, ExperimentTemplateExperimentTemplateTargetMapPtr and ExperimentTemplateExperimentTemplateTargetMapPtrOutput values.
// You can construct a concrete instance of `ExperimentTemplateExperimentTemplateTargetMapPtrInput` via:
//
//          ExperimentTemplateExperimentTemplateTargetMapArgs{...}
//
//  or:
//
//          nil
type ExperimentTemplateExperimentTemplateTargetMapPtrInput interface {
	pulumi.Input

	ToExperimentTemplateExperimentTemplateTargetMapPtrOutput() ExperimentTemplateExperimentTemplateTargetMapPtrOutput
	ToExperimentTemplateExperimentTemplateTargetMapPtrOutputWithContext(context.Context) ExperimentTemplateExperimentTemplateTargetMapPtrOutput
}

type experimentTemplateExperimentTemplateTargetMapPtrType ExperimentTemplateExperimentTemplateTargetMapArgs

func ExperimentTemplateExperimentTemplateTargetMapPtr(v *ExperimentTemplateExperimentTemplateTargetMapArgs) ExperimentTemplateExperimentTemplateTargetMapPtrInput {
	return (*experimentTemplateExperimentTemplateTargetMapPtrType)(v)
}

func (*experimentTemplateExperimentTemplateTargetMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentTemplateExperimentTemplateTargetMap)(nil)).Elem()
}

func (i *experimentTemplateExperimentTemplateTargetMapPtrType) ToExperimentTemplateExperimentTemplateTargetMapPtrOutput() ExperimentTemplateExperimentTemplateTargetMapPtrOutput {
	return i.ToExperimentTemplateExperimentTemplateTargetMapPtrOutputWithContext(context.Background())
}

func (i *experimentTemplateExperimentTemplateTargetMapPtrType) ToExperimentTemplateExperimentTemplateTargetMapPtrOutputWithContext(ctx context.Context) ExperimentTemplateExperimentTemplateTargetMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentTemplateExperimentTemplateTargetMapPtrOutput)
}

// The targets for the experiment.
type ExperimentTemplateExperimentTemplateTargetMapOutput struct{ *pulumi.OutputState }

func (ExperimentTemplateExperimentTemplateTargetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentTemplateExperimentTemplateTargetMap)(nil)).Elem()
}

func (o ExperimentTemplateExperimentTemplateTargetMapOutput) ToExperimentTemplateExperimentTemplateTargetMapOutput() ExperimentTemplateExperimentTemplateTargetMapOutput {
	return o
}

func (o ExperimentTemplateExperimentTemplateTargetMapOutput) ToExperimentTemplateExperimentTemplateTargetMapOutputWithContext(ctx context.Context) ExperimentTemplateExperimentTemplateTargetMapOutput {
	return o
}

func (o ExperimentTemplateExperimentTemplateTargetMapOutput) ToExperimentTemplateExperimentTemplateTargetMapPtrOutput() ExperimentTemplateExperimentTemplateTargetMapPtrOutput {
	return o.ToExperimentTemplateExperimentTemplateTargetMapPtrOutputWithContext(context.Background())
}

func (o ExperimentTemplateExperimentTemplateTargetMapOutput) ToExperimentTemplateExperimentTemplateTargetMapPtrOutputWithContext(ctx context.Context) ExperimentTemplateExperimentTemplateTargetMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExperimentTemplateExperimentTemplateTargetMap) *ExperimentTemplateExperimentTemplateTargetMap {
		return &v
	}).(ExperimentTemplateExperimentTemplateTargetMapPtrOutput)
}

type ExperimentTemplateExperimentTemplateTargetMapPtrOutput struct{ *pulumi.OutputState }

func (ExperimentTemplateExperimentTemplateTargetMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentTemplateExperimentTemplateTargetMap)(nil)).Elem()
}

func (o ExperimentTemplateExperimentTemplateTargetMapPtrOutput) ToExperimentTemplateExperimentTemplateTargetMapPtrOutput() ExperimentTemplateExperimentTemplateTargetMapPtrOutput {
	return o
}

func (o ExperimentTemplateExperimentTemplateTargetMapPtrOutput) ToExperimentTemplateExperimentTemplateTargetMapPtrOutputWithContext(ctx context.Context) ExperimentTemplateExperimentTemplateTargetMapPtrOutput {
	return o
}

func (o ExperimentTemplateExperimentTemplateTargetMapPtrOutput) Elem() ExperimentTemplateExperimentTemplateTargetMapOutput {
	return o.ApplyT(func(v *ExperimentTemplateExperimentTemplateTargetMap) ExperimentTemplateExperimentTemplateTargetMap {
		if v != nil {
			return *v
		}
		var ret ExperimentTemplateExperimentTemplateTargetMap
		return ret
	}).(ExperimentTemplateExperimentTemplateTargetMapOutput)
}

func init() {
	pulumi.RegisterOutputType(ExperimentTemplateExperimentTemplateActionMapOutput{})
	pulumi.RegisterOutputType(ExperimentTemplateExperimentTemplateActionMapPtrOutput{})
	pulumi.RegisterOutputType(ExperimentTemplateExperimentTemplateStopConditionOutput{})
	pulumi.RegisterOutputType(ExperimentTemplateExperimentTemplateStopConditionArrayOutput{})
	pulumi.RegisterOutputType(ExperimentTemplateExperimentTemplateTargetMapOutput{})
	pulumi.RegisterOutputType(ExperimentTemplateExperimentTemplateTargetMapPtrOutput{})
}
