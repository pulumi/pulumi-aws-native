// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::FIS::TargetAccountConfiguration
func LookupTargetAccountConfiguration(ctx *pulumi.Context, args *LookupTargetAccountConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupTargetAccountConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTargetAccountConfigurationResult
	err := ctx.Invoke("aws-native:fis:getTargetAccountConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTargetAccountConfigurationArgs struct {
	// The AWS account ID of the target account.
	AccountId string `pulumi:"accountId"`
	// The ID of the experiment template.
	ExperimentTemplateId string `pulumi:"experimentTemplateId"`
}

type LookupTargetAccountConfigurationResult struct {
	// The description of the target account.
	Description *string `pulumi:"description"`
	// The Amazon Resource Name (ARN) of an IAM role for the target account.
	RoleArn *string `pulumi:"roleArn"`
}

func LookupTargetAccountConfigurationOutput(ctx *pulumi.Context, args LookupTargetAccountConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupTargetAccountConfigurationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTargetAccountConfigurationResultOutput, error) {
			args := v.(LookupTargetAccountConfigurationArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupTargetAccountConfigurationResult
			secret, err := ctx.InvokePackageRaw("aws-native:fis:getTargetAccountConfiguration", args, &rv, "", opts...)
			if err != nil {
				return LookupTargetAccountConfigurationResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupTargetAccountConfigurationResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupTargetAccountConfigurationResultOutput), nil
			}
			return output, nil
		}).(LookupTargetAccountConfigurationResultOutput)
}

type LookupTargetAccountConfigurationOutputArgs struct {
	// The AWS account ID of the target account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The ID of the experiment template.
	ExperimentTemplateId pulumi.StringInput `pulumi:"experimentTemplateId"`
}

func (LookupTargetAccountConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTargetAccountConfigurationArgs)(nil)).Elem()
}

type LookupTargetAccountConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupTargetAccountConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTargetAccountConfigurationResult)(nil)).Elem()
}

func (o LookupTargetAccountConfigurationResultOutput) ToLookupTargetAccountConfigurationResultOutput() LookupTargetAccountConfigurationResultOutput {
	return o
}

func (o LookupTargetAccountConfigurationResultOutput) ToLookupTargetAccountConfigurationResultOutputWithContext(ctx context.Context) LookupTargetAccountConfigurationResultOutput {
	return o
}

// The description of the target account.
func (o LookupTargetAccountConfigurationResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTargetAccountConfigurationResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of an IAM role for the target account.
func (o LookupTargetAccountConfigurationResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTargetAccountConfigurationResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTargetAccountConfigurationResultOutput{})
}
