// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iot.inputs;

import com.pulumi.awsnative.iot.inputs.TopicRuleActionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicRulePayloadArgs extends com.pulumi.resources.ResourceArgs {

    public static final TopicRulePayloadArgs Empty = new TopicRulePayloadArgs();

    @Import(name="actions", required=true)
    private Output<List<TopicRuleActionArgs>> actions;

    public Output<List<TopicRuleActionArgs>> actions() {
        return this.actions;
    }

    @Import(name="awsIotSqlVersion")
    private @Nullable Output<String> awsIotSqlVersion;

    public Optional<Output<String>> awsIotSqlVersion() {
        return Optional.ofNullable(this.awsIotSqlVersion);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="errorAction")
    private @Nullable Output<TopicRuleActionArgs> errorAction;

    public Optional<Output<TopicRuleActionArgs>> errorAction() {
        return Optional.ofNullable(this.errorAction);
    }

    @Import(name="ruleDisabled")
    private @Nullable Output<Boolean> ruleDisabled;

    public Optional<Output<Boolean>> ruleDisabled() {
        return Optional.ofNullable(this.ruleDisabled);
    }

    @Import(name="sql", required=true)
    private Output<String> sql;

    public Output<String> sql() {
        return this.sql;
    }

    private TopicRulePayloadArgs() {}

    private TopicRulePayloadArgs(TopicRulePayloadArgs $) {
        this.actions = $.actions;
        this.awsIotSqlVersion = $.awsIotSqlVersion;
        this.description = $.description;
        this.errorAction = $.errorAction;
        this.ruleDisabled = $.ruleDisabled;
        this.sql = $.sql;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicRulePayloadArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicRulePayloadArgs $;

        public Builder() {
            $ = new TopicRulePayloadArgs();
        }

        public Builder(TopicRulePayloadArgs defaults) {
            $ = new TopicRulePayloadArgs(Objects.requireNonNull(defaults));
        }

        public Builder actions(Output<List<TopicRuleActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        public Builder actions(List<TopicRuleActionArgs> actions) {
            return actions(Output.of(actions));
        }

        public Builder actions(TopicRuleActionArgs... actions) {
            return actions(List.of(actions));
        }

        public Builder awsIotSqlVersion(@Nullable Output<String> awsIotSqlVersion) {
            $.awsIotSqlVersion = awsIotSqlVersion;
            return this;
        }

        public Builder awsIotSqlVersion(String awsIotSqlVersion) {
            return awsIotSqlVersion(Output.of(awsIotSqlVersion));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder errorAction(@Nullable Output<TopicRuleActionArgs> errorAction) {
            $.errorAction = errorAction;
            return this;
        }

        public Builder errorAction(TopicRuleActionArgs errorAction) {
            return errorAction(Output.of(errorAction));
        }

        public Builder ruleDisabled(@Nullable Output<Boolean> ruleDisabled) {
            $.ruleDisabled = ruleDisabled;
            return this;
        }

        public Builder ruleDisabled(Boolean ruleDisabled) {
            return ruleDisabled(Output.of(ruleDisabled));
        }

        public Builder sql(Output<String> sql) {
            $.sql = sql;
            return this;
        }

        public Builder sql(String sql) {
            return sql(Output.of(sql));
        }

        public TopicRulePayloadArgs build() {
            $.actions = Objects.requireNonNull($.actions, "expected parameter 'actions' to be non-null");
            $.sql = Objects.requireNonNull($.sql, "expected parameter 'sql' to be non-null");
            return $;
        }
    }

}
