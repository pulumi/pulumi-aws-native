// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iot;

import com.pulumi.awsnative.iot.enums.ResourceSpecificLoggingLogLevel;
import com.pulumi.awsnative.iot.enums.ResourceSpecificLoggingTargetType;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class ResourceSpecificLoggingArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceSpecificLoggingArgs Empty = new ResourceSpecificLoggingArgs();

    /**
     * The log level for a specific target. Valid values are: ERROR, WARN, INFO, DEBUG, or DISABLED.
     * 
     */
    @Import(name="logLevel", required=true)
    private Output<ResourceSpecificLoggingLogLevel> logLevel;

    /**
     * @return The log level for a specific target. Valid values are: ERROR, WARN, INFO, DEBUG, or DISABLED.
     * 
     */
    public Output<ResourceSpecificLoggingLogLevel> logLevel() {
        return this.logLevel;
    }

    /**
     * The target name.
     * 
     */
    @Import(name="targetName", required=true)
    private Output<String> targetName;

    /**
     * @return The target name.
     * 
     */
    public Output<String> targetName() {
        return this.targetName;
    }

    /**
     * The target type. Value must be THING_GROUP, CLIENT_ID, SOURCE_IP, PRINCIPAL_ID.
     * 
     */
    @Import(name="targetType", required=true)
    private Output<ResourceSpecificLoggingTargetType> targetType;

    /**
     * @return The target type. Value must be THING_GROUP, CLIENT_ID, SOURCE_IP, PRINCIPAL_ID.
     * 
     */
    public Output<ResourceSpecificLoggingTargetType> targetType() {
        return this.targetType;
    }

    private ResourceSpecificLoggingArgs() {}

    private ResourceSpecificLoggingArgs(ResourceSpecificLoggingArgs $) {
        this.logLevel = $.logLevel;
        this.targetName = $.targetName;
        this.targetType = $.targetType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceSpecificLoggingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceSpecificLoggingArgs $;

        public Builder() {
            $ = new ResourceSpecificLoggingArgs();
        }

        public Builder(ResourceSpecificLoggingArgs defaults) {
            $ = new ResourceSpecificLoggingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logLevel The log level for a specific target. Valid values are: ERROR, WARN, INFO, DEBUG, or DISABLED.
         * 
         * @return builder
         * 
         */
        public Builder logLevel(Output<ResourceSpecificLoggingLogLevel> logLevel) {
            $.logLevel = logLevel;
            return this;
        }

        /**
         * @param logLevel The log level for a specific target. Valid values are: ERROR, WARN, INFO, DEBUG, or DISABLED.
         * 
         * @return builder
         * 
         */
        public Builder logLevel(ResourceSpecificLoggingLogLevel logLevel) {
            return logLevel(Output.of(logLevel));
        }

        /**
         * @param targetName The target name.
         * 
         * @return builder
         * 
         */
        public Builder targetName(Output<String> targetName) {
            $.targetName = targetName;
            return this;
        }

        /**
         * @param targetName The target name.
         * 
         * @return builder
         * 
         */
        public Builder targetName(String targetName) {
            return targetName(Output.of(targetName));
        }

        /**
         * @param targetType The target type. Value must be THING_GROUP, CLIENT_ID, SOURCE_IP, PRINCIPAL_ID.
         * 
         * @return builder
         * 
         */
        public Builder targetType(Output<ResourceSpecificLoggingTargetType> targetType) {
            $.targetType = targetType;
            return this;
        }

        /**
         * @param targetType The target type. Value must be THING_GROUP, CLIENT_ID, SOURCE_IP, PRINCIPAL_ID.
         * 
         * @return builder
         * 
         */
        public Builder targetType(ResourceSpecificLoggingTargetType targetType) {
            return targetType(Output.of(targetType));
        }

        public ResourceSpecificLoggingArgs build() {
            $.logLevel = Objects.requireNonNull($.logLevel, "expected parameter 'logLevel' to be non-null");
            $.targetName = Objects.requireNonNull($.targetName, "expected parameter 'targetName' to be non-null");
            $.targetType = Objects.requireNonNull($.targetType, "expected parameter 'targetType' to be non-null");
            return $;
        }
    }

}
