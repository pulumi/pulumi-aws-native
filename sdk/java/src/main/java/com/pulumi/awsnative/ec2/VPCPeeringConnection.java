// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.ec2.VPCPeeringConnectionArgs;
import com.pulumi.awsnative.ec2.outputs.VPCPeeringConnectionTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource Type definition for AWS::EC2::VPCPeeringConnection
 * 
 */
@ResourceType(type="aws-native:ec2:VPCPeeringConnection")
public class VPCPeeringConnection extends com.pulumi.resources.CustomResource {
    /**
     * The AWS account ID of the owner of the accepter VPC.
     * 
     */
    @Export(name="peerOwnerId", type=String.class, parameters={})
    private Output</* @Nullable */ String> peerOwnerId;

    /**
     * @return The AWS account ID of the owner of the accepter VPC.
     * 
     */
    public Output<Optional<String>> peerOwnerId() {
        return Codegen.optional(this.peerOwnerId);
    }
    /**
     * The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request.
     * 
     */
    @Export(name="peerRegion", type=String.class, parameters={})
    private Output</* @Nullable */ String> peerRegion;

    /**
     * @return The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request.
     * 
     */
    public Output<Optional<String>> peerRegion() {
        return Codegen.optional(this.peerRegion);
    }
    /**
     * The Amazon Resource Name (ARN) of the VPC peer role for the peering connection in another AWS account.
     * 
     */
    @Export(name="peerRoleArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> peerRoleArn;

    /**
     * @return The Amazon Resource Name (ARN) of the VPC peer role for the peering connection in another AWS account.
     * 
     */
    public Output<Optional<String>> peerRoleArn() {
        return Codegen.optional(this.peerRoleArn);
    }
    /**
     * The ID of the VPC with which you are creating the VPC peering connection. You must specify this parameter in the request.
     * 
     */
    @Export(name="peerVpcId", type=String.class, parameters={})
    private Output<String> peerVpcId;

    /**
     * @return The ID of the VPC with which you are creating the VPC peering connection. You must specify this parameter in the request.
     * 
     */
    public Output<String> peerVpcId() {
        return this.peerVpcId;
    }
    @Export(name="tags", type=List.class, parameters={VPCPeeringConnectionTag.class})
    private Output</* @Nullable */ List<VPCPeeringConnectionTag>> tags;

    public Output<Optional<List<VPCPeeringConnectionTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The ID of the VPC.
     * 
     */
    @Export(name="vpcId", type=String.class, parameters={})
    private Output<String> vpcId;

    /**
     * @return The ID of the VPC.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VPCPeeringConnection(String name) {
        this(name, VPCPeeringConnectionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VPCPeeringConnection(String name, VPCPeeringConnectionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VPCPeeringConnection(String name, VPCPeeringConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:ec2:VPCPeeringConnection", name, args == null ? VPCPeeringConnectionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private VPCPeeringConnection(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:ec2:VPCPeeringConnection", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VPCPeeringConnection get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VPCPeeringConnection(name, id, options);
    }
}
