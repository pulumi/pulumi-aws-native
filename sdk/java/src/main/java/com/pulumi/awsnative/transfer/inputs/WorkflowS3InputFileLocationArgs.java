// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.transfer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies the details for the S3 file being copied.
 * 
 */
public final class WorkflowS3InputFileLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkflowS3InputFileLocationArgs Empty = new WorkflowS3InputFileLocationArgs();

    /**
     * Specifies the S3 bucket that contains the file being copied.
     * 
     */
    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    /**
     * @return Specifies the S3 bucket that contains the file being copied.
     * 
     */
    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    /**
     * The name assigned to the file when it was created in S3. You use the object key to retrieve the object.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return The name assigned to the file when it was created in S3. You use the object key to retrieve the object.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    private WorkflowS3InputFileLocationArgs() {}

    private WorkflowS3InputFileLocationArgs(WorkflowS3InputFileLocationArgs $) {
        this.bucket = $.bucket;
        this.key = $.key;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkflowS3InputFileLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkflowS3InputFileLocationArgs $;

        public Builder() {
            $ = new WorkflowS3InputFileLocationArgs();
        }

        public Builder(WorkflowS3InputFileLocationArgs defaults) {
            $ = new WorkflowS3InputFileLocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket Specifies the S3 bucket that contains the file being copied.
         * 
         * @return builder
         * 
         */
        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket Specifies the S3 bucket that contains the file being copied.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param key The name assigned to the file when it was created in S3. You use the object key to retrieve the object.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key The name assigned to the file when it was created in S3. You use the object key to retrieve the object.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        public WorkflowS3InputFileLocationArgs build() {
            return $;
        }
    }

}
