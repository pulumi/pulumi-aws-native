// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker;

import com.pulumi.awsnative.sagemaker.inputs.ProjectTagArgs;
import com.pulumi.awsnative.sagemaker.inputs.ServiceCatalogProvisioningDetailsPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectArgs Empty = new ProjectArgs();

    @Import(name="projectDescription")
    private @Nullable Output<String> projectDescription;

    public Optional<Output<String>> projectDescription() {
        return Optional.ofNullable(this.projectDescription);
    }

    @Import(name="projectName")
    private @Nullable Output<String> projectName;

    public Optional<Output<String>> projectName() {
        return Optional.ofNullable(this.projectName);
    }

    /**
     * Input ServiceCatalog Provisioning Details
     * 
     */
    @Import(name="serviceCatalogProvisioningDetails", required=true)
    private Output<ServiceCatalogProvisioningDetailsPropertiesArgs> serviceCatalogProvisioningDetails;

    /**
     * @return Input ServiceCatalog Provisioning Details
     * 
     */
    public Output<ServiceCatalogProvisioningDetailsPropertiesArgs> serviceCatalogProvisioningDetails() {
        return this.serviceCatalogProvisioningDetails;
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<ProjectTagArgs>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public Optional<Output<List<ProjectTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ProjectArgs() {}

    private ProjectArgs(ProjectArgs $) {
        this.projectDescription = $.projectDescription;
        this.projectName = $.projectName;
        this.serviceCatalogProvisioningDetails = $.serviceCatalogProvisioningDetails;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectArgs $;

        public Builder() {
            $ = new ProjectArgs();
        }

        public Builder(ProjectArgs defaults) {
            $ = new ProjectArgs(Objects.requireNonNull(defaults));
        }

        public Builder projectDescription(@Nullable Output<String> projectDescription) {
            $.projectDescription = projectDescription;
            return this;
        }

        public Builder projectDescription(String projectDescription) {
            return projectDescription(Output.of(projectDescription));
        }

        public Builder projectName(@Nullable Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        /**
         * @param serviceCatalogProvisioningDetails Input ServiceCatalog Provisioning Details
         * 
         * @return builder
         * 
         */
        public Builder serviceCatalogProvisioningDetails(Output<ServiceCatalogProvisioningDetailsPropertiesArgs> serviceCatalogProvisioningDetails) {
            $.serviceCatalogProvisioningDetails = serviceCatalogProvisioningDetails;
            return this;
        }

        /**
         * @param serviceCatalogProvisioningDetails Input ServiceCatalog Provisioning Details
         * 
         * @return builder
         * 
         */
        public Builder serviceCatalogProvisioningDetails(ServiceCatalogProvisioningDetailsPropertiesArgs serviceCatalogProvisioningDetails) {
            return serviceCatalogProvisioningDetails(Output.of(serviceCatalogProvisioningDetails));
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<ProjectTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<ProjectTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(ProjectTagArgs... tags) {
            return tags(List.of(tags));
        }

        public ProjectArgs build() {
            $.serviceCatalogProvisioningDetails = Objects.requireNonNull($.serviceCatalogProvisioningDetails, "expected parameter 'serviceCatalogProvisioningDetails' to be non-null");
            return $;
        }
    }

}
