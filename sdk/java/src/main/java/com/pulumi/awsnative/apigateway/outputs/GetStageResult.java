// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.apigateway.outputs;

import com.pulumi.awsnative.apigateway.outputs.StageAccessLogSetting;
import com.pulumi.awsnative.apigateway.outputs.StageCanarySetting;
import com.pulumi.awsnative.apigateway.outputs.StageMethodSetting;
import com.pulumi.awsnative.apigateway.outputs.StageTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetStageResult {
    /**
     * @return Specifies settings for logging access in this stage.
     * 
     */
    private @Nullable StageAccessLogSetting accessLogSetting;
    /**
     * @return Indicates whether cache clustering is enabled for the stage.
     * 
     */
    private @Nullable Boolean cacheClusterEnabled;
    /**
     * @return The stage&#39;s cache cluster size.
     * 
     */
    private @Nullable String cacheClusterSize;
    /**
     * @return Specifies settings for the canary deployment in this stage.
     * 
     */
    private @Nullable StageCanarySetting canarySetting;
    /**
     * @return The ID of the client certificate that API Gateway uses to call your integration endpoints in the stage.
     * 
     */
    private @Nullable String clientCertificateId;
    /**
     * @return The ID of the deployment that the stage is associated with. This parameter is required to create a stage.
     * 
     */
    private @Nullable String deploymentId;
    /**
     * @return A description of the stage.
     * 
     */
    private @Nullable String description;
    /**
     * @return The version ID of the API documentation snapshot.
     * 
     */
    private @Nullable String documentationVersion;
    /**
     * @return Settings for all methods in the stage.
     * 
     */
    private @Nullable List<StageMethodSetting> methodSettings;
    /**
     * @return An array of arbitrary tags (key-value pairs) to associate with the stage.
     * 
     */
    private @Nullable List<StageTag> tags;
    /**
     * @return Specifies whether active X-Ray tracing is enabled for this stage.
     * 
     */
    private @Nullable Boolean tracingEnabled;
    /**
     * @return A map (string-to-string map) that defines the stage variables, where the variable name is the key and the variable value is the value.
     * 
     */
    private @Nullable Object variables;

    private GetStageResult() {}
    /**
     * @return Specifies settings for logging access in this stage.
     * 
     */
    public Optional<StageAccessLogSetting> accessLogSetting() {
        return Optional.ofNullable(this.accessLogSetting);
    }
    /**
     * @return Indicates whether cache clustering is enabled for the stage.
     * 
     */
    public Optional<Boolean> cacheClusterEnabled() {
        return Optional.ofNullable(this.cacheClusterEnabled);
    }
    /**
     * @return The stage&#39;s cache cluster size.
     * 
     */
    public Optional<String> cacheClusterSize() {
        return Optional.ofNullable(this.cacheClusterSize);
    }
    /**
     * @return Specifies settings for the canary deployment in this stage.
     * 
     */
    public Optional<StageCanarySetting> canarySetting() {
        return Optional.ofNullable(this.canarySetting);
    }
    /**
     * @return The ID of the client certificate that API Gateway uses to call your integration endpoints in the stage.
     * 
     */
    public Optional<String> clientCertificateId() {
        return Optional.ofNullable(this.clientCertificateId);
    }
    /**
     * @return The ID of the deployment that the stage is associated with. This parameter is required to create a stage.
     * 
     */
    public Optional<String> deploymentId() {
        return Optional.ofNullable(this.deploymentId);
    }
    /**
     * @return A description of the stage.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The version ID of the API documentation snapshot.
     * 
     */
    public Optional<String> documentationVersion() {
        return Optional.ofNullable(this.documentationVersion);
    }
    /**
     * @return Settings for all methods in the stage.
     * 
     */
    public List<StageMethodSetting> methodSettings() {
        return this.methodSettings == null ? List.of() : this.methodSettings;
    }
    /**
     * @return An array of arbitrary tags (key-value pairs) to associate with the stage.
     * 
     */
    public List<StageTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return Specifies whether active X-Ray tracing is enabled for this stage.
     * 
     */
    public Optional<Boolean> tracingEnabled() {
        return Optional.ofNullable(this.tracingEnabled);
    }
    /**
     * @return A map (string-to-string map) that defines the stage variables, where the variable name is the key and the variable value is the value.
     * 
     */
    public Optional<Object> variables() {
        return Optional.ofNullable(this.variables);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStageResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable StageAccessLogSetting accessLogSetting;
        private @Nullable Boolean cacheClusterEnabled;
        private @Nullable String cacheClusterSize;
        private @Nullable StageCanarySetting canarySetting;
        private @Nullable String clientCertificateId;
        private @Nullable String deploymentId;
        private @Nullable String description;
        private @Nullable String documentationVersion;
        private @Nullable List<StageMethodSetting> methodSettings;
        private @Nullable List<StageTag> tags;
        private @Nullable Boolean tracingEnabled;
        private @Nullable Object variables;
        public Builder() {}
        public Builder(GetStageResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLogSetting = defaults.accessLogSetting;
    	      this.cacheClusterEnabled = defaults.cacheClusterEnabled;
    	      this.cacheClusterSize = defaults.cacheClusterSize;
    	      this.canarySetting = defaults.canarySetting;
    	      this.clientCertificateId = defaults.clientCertificateId;
    	      this.deploymentId = defaults.deploymentId;
    	      this.description = defaults.description;
    	      this.documentationVersion = defaults.documentationVersion;
    	      this.methodSettings = defaults.methodSettings;
    	      this.tags = defaults.tags;
    	      this.tracingEnabled = defaults.tracingEnabled;
    	      this.variables = defaults.variables;
        }

        @CustomType.Setter
        public Builder accessLogSetting(@Nullable StageAccessLogSetting accessLogSetting) {
            this.accessLogSetting = accessLogSetting;
            return this;
        }
        @CustomType.Setter
        public Builder cacheClusterEnabled(@Nullable Boolean cacheClusterEnabled) {
            this.cacheClusterEnabled = cacheClusterEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder cacheClusterSize(@Nullable String cacheClusterSize) {
            this.cacheClusterSize = cacheClusterSize;
            return this;
        }
        @CustomType.Setter
        public Builder canarySetting(@Nullable StageCanarySetting canarySetting) {
            this.canarySetting = canarySetting;
            return this;
        }
        @CustomType.Setter
        public Builder clientCertificateId(@Nullable String clientCertificateId) {
            this.clientCertificateId = clientCertificateId;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentId(@Nullable String deploymentId) {
            this.deploymentId = deploymentId;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder documentationVersion(@Nullable String documentationVersion) {
            this.documentationVersion = documentationVersion;
            return this;
        }
        @CustomType.Setter
        public Builder methodSettings(@Nullable List<StageMethodSetting> methodSettings) {
            this.methodSettings = methodSettings;
            return this;
        }
        public Builder methodSettings(StageMethodSetting... methodSettings) {
            return methodSettings(List.of(methodSettings));
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<StageTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(StageTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tracingEnabled(@Nullable Boolean tracingEnabled) {
            this.tracingEnabled = tracingEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder variables(@Nullable Object variables) {
            this.variables = variables;
            return this;
        }
        public GetStageResult build() {
            final var o = new GetStageResult();
            o.accessLogSetting = accessLogSetting;
            o.cacheClusterEnabled = cacheClusterEnabled;
            o.cacheClusterSize = cacheClusterSize;
            o.canarySetting = canarySetting;
            o.clientCertificateId = clientCertificateId;
            o.deploymentId = deploymentId;
            o.description = description;
            o.documentationVersion = documentationVersion;
            o.methodSettings = methodSettings;
            o.tags = tags;
            o.tracingEnabled = tracingEnabled;
            o.variables = variables;
            return o;
        }
    }
}
