// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.rds;

import com.pulumi.awsnative.rds.inputs.DBParameterGroupTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DBParameterGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final DBParameterGroupArgs Empty = new DBParameterGroupArgs();

    /**
     * Provides the customer-specified description for this DB parameter group.
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return Provides the customer-specified description for this DB parameter group.
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * The DB parameter group family name.
     * 
     */
    @Import(name="family", required=true)
    private Output<String> family;

    /**
     * @return The DB parameter group family name.
     * 
     */
    public Output<String> family() {
        return this.family;
    }

    /**
     * An array of parameter names and values for the parameter update.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<Object> parameters;

    /**
     * @return An array of parameter names and values for the parameter update.
     * 
     */
    public Optional<Output<Object>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<DBParameterGroupTagArgs>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public Optional<Output<List<DBParameterGroupTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DBParameterGroupArgs() {}

    private DBParameterGroupArgs(DBParameterGroupArgs $) {
        this.description = $.description;
        this.family = $.family;
        this.parameters = $.parameters;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DBParameterGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DBParameterGroupArgs $;

        public Builder() {
            $ = new DBParameterGroupArgs();
        }

        public Builder(DBParameterGroupArgs defaults) {
            $ = new DBParameterGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Provides the customer-specified description for this DB parameter group.
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Provides the customer-specified description for this DB parameter group.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param family The DB parameter group family name.
         * 
         * @return builder
         * 
         */
        public Builder family(Output<String> family) {
            $.family = family;
            return this;
        }

        /**
         * @param family The DB parameter group family name.
         * 
         * @return builder
         * 
         */
        public Builder family(String family) {
            return family(Output.of(family));
        }

        /**
         * @param parameters An array of parameter names and values for the parameter update.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<Object> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters An array of parameter names and values for the parameter update.
         * 
         * @return builder
         * 
         */
        public Builder parameters(Object parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<DBParameterGroupTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<DBParameterGroupTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(DBParameterGroupTagArgs... tags) {
            return tags(List.of(tags));
        }

        public DBParameterGroupArgs build() {
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.family = Objects.requireNonNull($.family, "expected parameter 'family' to be non-null");
            return $;
        }
    }

}
