// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetTransitGatewayMulticastDomainAssociationPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTransitGatewayMulticastDomainAssociationPlainArgs Empty = new GetTransitGatewayMulticastDomainAssociationPlainArgs();

    /**
     * The IDs of the subnets to associate with the transit gateway multicast domain.
     * 
     */
    @Import(name="subnetId", required=true)
    private String subnetId;

    /**
     * @return The IDs of the subnets to associate with the transit gateway multicast domain.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }

    /**
     * The ID of the transit gateway attachment.
     * 
     */
    @Import(name="transitGatewayAttachmentId", required=true)
    private String transitGatewayAttachmentId;

    /**
     * @return The ID of the transit gateway attachment.
     * 
     */
    public String transitGatewayAttachmentId() {
        return this.transitGatewayAttachmentId;
    }

    /**
     * The ID of the transit gateway multicast domain.
     * 
     */
    @Import(name="transitGatewayMulticastDomainId", required=true)
    private String transitGatewayMulticastDomainId;

    /**
     * @return The ID of the transit gateway multicast domain.
     * 
     */
    public String transitGatewayMulticastDomainId() {
        return this.transitGatewayMulticastDomainId;
    }

    private GetTransitGatewayMulticastDomainAssociationPlainArgs() {}

    private GetTransitGatewayMulticastDomainAssociationPlainArgs(GetTransitGatewayMulticastDomainAssociationPlainArgs $) {
        this.subnetId = $.subnetId;
        this.transitGatewayAttachmentId = $.transitGatewayAttachmentId;
        this.transitGatewayMulticastDomainId = $.transitGatewayMulticastDomainId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTransitGatewayMulticastDomainAssociationPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTransitGatewayMulticastDomainAssociationPlainArgs $;

        public Builder() {
            $ = new GetTransitGatewayMulticastDomainAssociationPlainArgs();
        }

        public Builder(GetTransitGatewayMulticastDomainAssociationPlainArgs defaults) {
            $ = new GetTransitGatewayMulticastDomainAssociationPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param subnetId The IDs of the subnets to associate with the transit gateway multicast domain.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param transitGatewayAttachmentId The ID of the transit gateway attachment.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayAttachmentId(String transitGatewayAttachmentId) {
            $.transitGatewayAttachmentId = transitGatewayAttachmentId;
            return this;
        }

        /**
         * @param transitGatewayMulticastDomainId The ID of the transit gateway multicast domain.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayMulticastDomainId(String transitGatewayMulticastDomainId) {
            $.transitGatewayMulticastDomainId = transitGatewayMulticastDomainId;
            return this;
        }

        public GetTransitGatewayMulticastDomainAssociationPlainArgs build() {
            $.subnetId = Objects.requireNonNull($.subnetId, "expected parameter 'subnetId' to be non-null");
            $.transitGatewayAttachmentId = Objects.requireNonNull($.transitGatewayAttachmentId, "expected parameter 'transitGatewayAttachmentId' to be non-null");
            $.transitGatewayMulticastDomainId = Objects.requireNonNull($.transitGatewayMulticastDomainId, "expected parameter 'transitGatewayMulticastDomainId' to be non-null");
            return $;
        }
    }

}
