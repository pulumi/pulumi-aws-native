// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.outputs;

import com.pulumi.awsnative.sagemaker.outputs.ModelPackageContainerDefinitionModelInputProperties;
import com.pulumi.awsnative.sagemaker.outputs.ModelPackageEnvironment;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ModelPackageContainerDefinition {
    /**
     * @return The DNS host name for the Docker container.
     * 
     */
    private @Nullable String containerHostname;
    private @Nullable ModelPackageEnvironment environment;
    /**
     * @return The machine learning framework of the model package container image.
     * 
     */
    private @Nullable String framework;
    /**
     * @return The framework version of the Model Package Container Image.
     * 
     */
    private @Nullable String frameworkVersion;
    /**
     * @return The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.
     * 
     */
    private String image;
    /**
     * @return An MD5 hash of the training algorithm that identifies the Docker image used for training.
     * 
     */
    private @Nullable String imageDigest;
    /**
     * @return A structure with Model Input details.
     * 
     */
    private @Nullable String modelDataUrl;
    private @Nullable ModelPackageContainerDefinitionModelInputProperties modelInput;
    /**
     * @return The name of a pre-trained machine learning benchmarked by Amazon SageMaker Inference Recommender model that matches your model.
     * 
     */
    private @Nullable String nearestModelName;
    /**
     * @return The AWS Marketplace product ID of the model package.
     * 
     */
    private @Nullable String productId;

    private ModelPackageContainerDefinition() {}
    /**
     * @return The DNS host name for the Docker container.
     * 
     */
    public Optional<String> containerHostname() {
        return Optional.ofNullable(this.containerHostname);
    }
    public Optional<ModelPackageEnvironment> environment() {
        return Optional.ofNullable(this.environment);
    }
    /**
     * @return The machine learning framework of the model package container image.
     * 
     */
    public Optional<String> framework() {
        return Optional.ofNullable(this.framework);
    }
    /**
     * @return The framework version of the Model Package Container Image.
     * 
     */
    public Optional<String> frameworkVersion() {
        return Optional.ofNullable(this.frameworkVersion);
    }
    /**
     * @return The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.
     * 
     */
    public String image() {
        return this.image;
    }
    /**
     * @return An MD5 hash of the training algorithm that identifies the Docker image used for training.
     * 
     */
    public Optional<String> imageDigest() {
        return Optional.ofNullable(this.imageDigest);
    }
    /**
     * @return A structure with Model Input details.
     * 
     */
    public Optional<String> modelDataUrl() {
        return Optional.ofNullable(this.modelDataUrl);
    }
    public Optional<ModelPackageContainerDefinitionModelInputProperties> modelInput() {
        return Optional.ofNullable(this.modelInput);
    }
    /**
     * @return The name of a pre-trained machine learning benchmarked by Amazon SageMaker Inference Recommender model that matches your model.
     * 
     */
    public Optional<String> nearestModelName() {
        return Optional.ofNullable(this.nearestModelName);
    }
    /**
     * @return The AWS Marketplace product ID of the model package.
     * 
     */
    public Optional<String> productId() {
        return Optional.ofNullable(this.productId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelPackageContainerDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String containerHostname;
        private @Nullable ModelPackageEnvironment environment;
        private @Nullable String framework;
        private @Nullable String frameworkVersion;
        private String image;
        private @Nullable String imageDigest;
        private @Nullable String modelDataUrl;
        private @Nullable ModelPackageContainerDefinitionModelInputProperties modelInput;
        private @Nullable String nearestModelName;
        private @Nullable String productId;
        public Builder() {}
        public Builder(ModelPackageContainerDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerHostname = defaults.containerHostname;
    	      this.environment = defaults.environment;
    	      this.framework = defaults.framework;
    	      this.frameworkVersion = defaults.frameworkVersion;
    	      this.image = defaults.image;
    	      this.imageDigest = defaults.imageDigest;
    	      this.modelDataUrl = defaults.modelDataUrl;
    	      this.modelInput = defaults.modelInput;
    	      this.nearestModelName = defaults.nearestModelName;
    	      this.productId = defaults.productId;
        }

        @CustomType.Setter
        public Builder containerHostname(@Nullable String containerHostname) {
            this.containerHostname = containerHostname;
            return this;
        }
        @CustomType.Setter
        public Builder environment(@Nullable ModelPackageEnvironment environment) {
            this.environment = environment;
            return this;
        }
        @CustomType.Setter
        public Builder framework(@Nullable String framework) {
            this.framework = framework;
            return this;
        }
        @CustomType.Setter
        public Builder frameworkVersion(@Nullable String frameworkVersion) {
            this.frameworkVersion = frameworkVersion;
            return this;
        }
        @CustomType.Setter
        public Builder image(String image) {
            this.image = Objects.requireNonNull(image);
            return this;
        }
        @CustomType.Setter
        public Builder imageDigest(@Nullable String imageDigest) {
            this.imageDigest = imageDigest;
            return this;
        }
        @CustomType.Setter
        public Builder modelDataUrl(@Nullable String modelDataUrl) {
            this.modelDataUrl = modelDataUrl;
            return this;
        }
        @CustomType.Setter
        public Builder modelInput(@Nullable ModelPackageContainerDefinitionModelInputProperties modelInput) {
            this.modelInput = modelInput;
            return this;
        }
        @CustomType.Setter
        public Builder nearestModelName(@Nullable String nearestModelName) {
            this.nearestModelName = nearestModelName;
            return this;
        }
        @CustomType.Setter
        public Builder productId(@Nullable String productId) {
            this.productId = productId;
            return this;
        }
        public ModelPackageContainerDefinition build() {
            final var o = new ModelPackageContainerDefinition();
            o.containerHostname = containerHostname;
            o.environment = environment;
            o.framework = framework;
            o.frameworkVersion = frameworkVersion;
            o.image = image;
            o.imageDigest = imageDigest;
            o.modelDataUrl = modelDataUrl;
            o.modelInput = modelInput;
            o.nearestModelName = nearestModelName;
            o.productId = productId;
            return o;
        }
    }
}
