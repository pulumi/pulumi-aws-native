// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.dynamodb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GlobalTableKeySchemaArgs extends com.pulumi.resources.ResourceArgs {

    public static final GlobalTableKeySchemaArgs Empty = new GlobalTableKeySchemaArgs();

    @Import(name="attributeName", required=true)
    private Output<String> attributeName;

    public Output<String> attributeName() {
        return this.attributeName;
    }

    @Import(name="keyType", required=true)
    private Output<String> keyType;

    public Output<String> keyType() {
        return this.keyType;
    }

    private GlobalTableKeySchemaArgs() {}

    private GlobalTableKeySchemaArgs(GlobalTableKeySchemaArgs $) {
        this.attributeName = $.attributeName;
        this.keyType = $.keyType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GlobalTableKeySchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GlobalTableKeySchemaArgs $;

        public Builder() {
            $ = new GlobalTableKeySchemaArgs();
        }

        public Builder(GlobalTableKeySchemaArgs defaults) {
            $ = new GlobalTableKeySchemaArgs(Objects.requireNonNull(defaults));
        }

        public Builder attributeName(Output<String> attributeName) {
            $.attributeName = attributeName;
            return this;
        }

        public Builder attributeName(String attributeName) {
            return attributeName(Output.of(attributeName));
        }

        public Builder keyType(Output<String> keyType) {
            $.keyType = keyType;
            return this;
        }

        public Builder keyType(String keyType) {
            return keyType(Output.of(keyType));
        }

        public GlobalTableKeySchemaArgs build() {
            $.attributeName = Objects.requireNonNull($.attributeName, "expected parameter 'attributeName' to be non-null");
            $.keyType = Objects.requireNonNull($.keyType, "expected parameter 'keyType' to be non-null");
            return $;
        }
    }

}
