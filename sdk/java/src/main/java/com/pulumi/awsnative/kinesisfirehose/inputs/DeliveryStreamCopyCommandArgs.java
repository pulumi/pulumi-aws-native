// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisfirehose.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeliveryStreamCopyCommandArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeliveryStreamCopyCommandArgs Empty = new DeliveryStreamCopyCommandArgs();

    @Import(name="copyOptions")
    private @Nullable Output<String> copyOptions;

    public Optional<Output<String>> copyOptions() {
        return Optional.ofNullable(this.copyOptions);
    }

    @Import(name="dataTableColumns")
    private @Nullable Output<String> dataTableColumns;

    public Optional<Output<String>> dataTableColumns() {
        return Optional.ofNullable(this.dataTableColumns);
    }

    @Import(name="dataTableName", required=true)
    private Output<String> dataTableName;

    public Output<String> dataTableName() {
        return this.dataTableName;
    }

    private DeliveryStreamCopyCommandArgs() {}

    private DeliveryStreamCopyCommandArgs(DeliveryStreamCopyCommandArgs $) {
        this.copyOptions = $.copyOptions;
        this.dataTableColumns = $.dataTableColumns;
        this.dataTableName = $.dataTableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeliveryStreamCopyCommandArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeliveryStreamCopyCommandArgs $;

        public Builder() {
            $ = new DeliveryStreamCopyCommandArgs();
        }

        public Builder(DeliveryStreamCopyCommandArgs defaults) {
            $ = new DeliveryStreamCopyCommandArgs(Objects.requireNonNull(defaults));
        }

        public Builder copyOptions(@Nullable Output<String> copyOptions) {
            $.copyOptions = copyOptions;
            return this;
        }

        public Builder copyOptions(String copyOptions) {
            return copyOptions(Output.of(copyOptions));
        }

        public Builder dataTableColumns(@Nullable Output<String> dataTableColumns) {
            $.dataTableColumns = dataTableColumns;
            return this;
        }

        public Builder dataTableColumns(String dataTableColumns) {
            return dataTableColumns(Output.of(dataTableColumns));
        }

        public Builder dataTableName(Output<String> dataTableName) {
            $.dataTableName = dataTableName;
            return this;
        }

        public Builder dataTableName(String dataTableName) {
            return dataTableName(Output.of(dataTableName));
        }

        public DeliveryStreamCopyCommandArgs build() {
            $.dataTableName = Objects.requireNonNull($.dataTableName, "expected parameter 'dataTableName' to be non-null");
            return $;
        }
    }

}
