// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kendra.inputs;

import com.pulumi.awsnative.kendra.enums.DataSourceSharePointConfigurationSharePointVersion;
import com.pulumi.awsnative.kendra.inputs.DataSourceS3PathArgs;
import com.pulumi.awsnative.kendra.inputs.DataSourceToIndexFieldMappingArgs;
import com.pulumi.awsnative.kendra.inputs.DataSourceVpcConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * SharePoint configuration
 * 
 */
public final class DataSourceSharePointConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceSharePointConfigurationArgs Empty = new DataSourceSharePointConfigurationArgs();

    @Import(name="crawlAttachments")
    private @Nullable Output<Boolean> crawlAttachments;

    public Optional<Output<Boolean>> crawlAttachments() {
        return Optional.ofNullable(this.crawlAttachments);
    }

    @Import(name="disableLocalGroups")
    private @Nullable Output<Boolean> disableLocalGroups;

    public Optional<Output<Boolean>> disableLocalGroups() {
        return Optional.ofNullable(this.disableLocalGroups);
    }

    @Import(name="documentTitleFieldName")
    private @Nullable Output<String> documentTitleFieldName;

    public Optional<Output<String>> documentTitleFieldName() {
        return Optional.ofNullable(this.documentTitleFieldName);
    }

    @Import(name="exclusionPatterns")
    private @Nullable Output<List<String>> exclusionPatterns;

    public Optional<Output<List<String>>> exclusionPatterns() {
        return Optional.ofNullable(this.exclusionPatterns);
    }

    @Import(name="fieldMappings")
    private @Nullable Output<List<DataSourceToIndexFieldMappingArgs>> fieldMappings;

    public Optional<Output<List<DataSourceToIndexFieldMappingArgs>>> fieldMappings() {
        return Optional.ofNullable(this.fieldMappings);
    }

    @Import(name="inclusionPatterns")
    private @Nullable Output<List<String>> inclusionPatterns;

    public Optional<Output<List<String>>> inclusionPatterns() {
        return Optional.ofNullable(this.inclusionPatterns);
    }

    @Import(name="secretArn", required=true)
    private Output<String> secretArn;

    public Output<String> secretArn() {
        return this.secretArn;
    }

    @Import(name="sharePointVersion", required=true)
    private Output<DataSourceSharePointConfigurationSharePointVersion> sharePointVersion;

    public Output<DataSourceSharePointConfigurationSharePointVersion> sharePointVersion() {
        return this.sharePointVersion;
    }

    @Import(name="sslCertificateS3Path")
    private @Nullable Output<DataSourceS3PathArgs> sslCertificateS3Path;

    public Optional<Output<DataSourceS3PathArgs>> sslCertificateS3Path() {
        return Optional.ofNullable(this.sslCertificateS3Path);
    }

    @Import(name="urls", required=true)
    private Output<List<String>> urls;

    public Output<List<String>> urls() {
        return this.urls;
    }

    @Import(name="useChangeLog")
    private @Nullable Output<Boolean> useChangeLog;

    public Optional<Output<Boolean>> useChangeLog() {
        return Optional.ofNullable(this.useChangeLog);
    }

    @Import(name="vpcConfiguration")
    private @Nullable Output<DataSourceVpcConfigurationArgs> vpcConfiguration;

    public Optional<Output<DataSourceVpcConfigurationArgs>> vpcConfiguration() {
        return Optional.ofNullable(this.vpcConfiguration);
    }

    private DataSourceSharePointConfigurationArgs() {}

    private DataSourceSharePointConfigurationArgs(DataSourceSharePointConfigurationArgs $) {
        this.crawlAttachments = $.crawlAttachments;
        this.disableLocalGroups = $.disableLocalGroups;
        this.documentTitleFieldName = $.documentTitleFieldName;
        this.exclusionPatterns = $.exclusionPatterns;
        this.fieldMappings = $.fieldMappings;
        this.inclusionPatterns = $.inclusionPatterns;
        this.secretArn = $.secretArn;
        this.sharePointVersion = $.sharePointVersion;
        this.sslCertificateS3Path = $.sslCertificateS3Path;
        this.urls = $.urls;
        this.useChangeLog = $.useChangeLog;
        this.vpcConfiguration = $.vpcConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceSharePointConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceSharePointConfigurationArgs $;

        public Builder() {
            $ = new DataSourceSharePointConfigurationArgs();
        }

        public Builder(DataSourceSharePointConfigurationArgs defaults) {
            $ = new DataSourceSharePointConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder crawlAttachments(@Nullable Output<Boolean> crawlAttachments) {
            $.crawlAttachments = crawlAttachments;
            return this;
        }

        public Builder crawlAttachments(Boolean crawlAttachments) {
            return crawlAttachments(Output.of(crawlAttachments));
        }

        public Builder disableLocalGroups(@Nullable Output<Boolean> disableLocalGroups) {
            $.disableLocalGroups = disableLocalGroups;
            return this;
        }

        public Builder disableLocalGroups(Boolean disableLocalGroups) {
            return disableLocalGroups(Output.of(disableLocalGroups));
        }

        public Builder documentTitleFieldName(@Nullable Output<String> documentTitleFieldName) {
            $.documentTitleFieldName = documentTitleFieldName;
            return this;
        }

        public Builder documentTitleFieldName(String documentTitleFieldName) {
            return documentTitleFieldName(Output.of(documentTitleFieldName));
        }

        public Builder exclusionPatterns(@Nullable Output<List<String>> exclusionPatterns) {
            $.exclusionPatterns = exclusionPatterns;
            return this;
        }

        public Builder exclusionPatterns(List<String> exclusionPatterns) {
            return exclusionPatterns(Output.of(exclusionPatterns));
        }

        public Builder exclusionPatterns(String... exclusionPatterns) {
            return exclusionPatterns(List.of(exclusionPatterns));
        }

        public Builder fieldMappings(@Nullable Output<List<DataSourceToIndexFieldMappingArgs>> fieldMappings) {
            $.fieldMappings = fieldMappings;
            return this;
        }

        public Builder fieldMappings(List<DataSourceToIndexFieldMappingArgs> fieldMappings) {
            return fieldMappings(Output.of(fieldMappings));
        }

        public Builder fieldMappings(DataSourceToIndexFieldMappingArgs... fieldMappings) {
            return fieldMappings(List.of(fieldMappings));
        }

        public Builder inclusionPatterns(@Nullable Output<List<String>> inclusionPatterns) {
            $.inclusionPatterns = inclusionPatterns;
            return this;
        }

        public Builder inclusionPatterns(List<String> inclusionPatterns) {
            return inclusionPatterns(Output.of(inclusionPatterns));
        }

        public Builder inclusionPatterns(String... inclusionPatterns) {
            return inclusionPatterns(List.of(inclusionPatterns));
        }

        public Builder secretArn(Output<String> secretArn) {
            $.secretArn = secretArn;
            return this;
        }

        public Builder secretArn(String secretArn) {
            return secretArn(Output.of(secretArn));
        }

        public Builder sharePointVersion(Output<DataSourceSharePointConfigurationSharePointVersion> sharePointVersion) {
            $.sharePointVersion = sharePointVersion;
            return this;
        }

        public Builder sharePointVersion(DataSourceSharePointConfigurationSharePointVersion sharePointVersion) {
            return sharePointVersion(Output.of(sharePointVersion));
        }

        public Builder sslCertificateS3Path(@Nullable Output<DataSourceS3PathArgs> sslCertificateS3Path) {
            $.sslCertificateS3Path = sslCertificateS3Path;
            return this;
        }

        public Builder sslCertificateS3Path(DataSourceS3PathArgs sslCertificateS3Path) {
            return sslCertificateS3Path(Output.of(sslCertificateS3Path));
        }

        public Builder urls(Output<List<String>> urls) {
            $.urls = urls;
            return this;
        }

        public Builder urls(List<String> urls) {
            return urls(Output.of(urls));
        }

        public Builder urls(String... urls) {
            return urls(List.of(urls));
        }

        public Builder useChangeLog(@Nullable Output<Boolean> useChangeLog) {
            $.useChangeLog = useChangeLog;
            return this;
        }

        public Builder useChangeLog(Boolean useChangeLog) {
            return useChangeLog(Output.of(useChangeLog));
        }

        public Builder vpcConfiguration(@Nullable Output<DataSourceVpcConfigurationArgs> vpcConfiguration) {
            $.vpcConfiguration = vpcConfiguration;
            return this;
        }

        public Builder vpcConfiguration(DataSourceVpcConfigurationArgs vpcConfiguration) {
            return vpcConfiguration(Output.of(vpcConfiguration));
        }

        public DataSourceSharePointConfigurationArgs build() {
            $.secretArn = Objects.requireNonNull($.secretArn, "expected parameter 'secretArn' to be non-null");
            $.sharePointVersion = Objects.requireNonNull($.sharePointVersion, "expected parameter 'sharePointVersion' to be non-null");
            $.urls = Objects.requireNonNull($.urls, "expected parameter 'urls' to be non-null");
            return $;
        }
    }

}
