// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * S3 location of bot definitions zip file, if it&#39;s not defined inline in CloudFormation.
 * 
 */
public final class BotS3LocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BotS3LocationArgs Empty = new BotS3LocationArgs();

    /**
     * An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.
     * 
     */
    @Import(name="s3Bucket", required=true)
    private Output<String> s3Bucket;

    /**
     * @return An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.
     * 
     */
    public Output<String> s3Bucket() {
        return this.s3Bucket;
    }

    /**
     * The Amazon S3 key of the deployment package.
     * 
     */
    @Import(name="s3ObjectKey", required=true)
    private Output<String> s3ObjectKey;

    /**
     * @return The Amazon S3 key of the deployment package.
     * 
     */
    public Output<String> s3ObjectKey() {
        return this.s3ObjectKey;
    }

    /**
     * For versioned objects, the version of the deployment package object to use. If not specified, the current object version will be used.
     * 
     */
    @Import(name="s3ObjectVersion")
    private @Nullable Output<String> s3ObjectVersion;

    /**
     * @return For versioned objects, the version of the deployment package object to use. If not specified, the current object version will be used.
     * 
     */
    public Optional<Output<String>> s3ObjectVersion() {
        return Optional.ofNullable(this.s3ObjectVersion);
    }

    private BotS3LocationArgs() {}

    private BotS3LocationArgs(BotS3LocationArgs $) {
        this.s3Bucket = $.s3Bucket;
        this.s3ObjectKey = $.s3ObjectKey;
        this.s3ObjectVersion = $.s3ObjectVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BotS3LocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BotS3LocationArgs $;

        public Builder() {
            $ = new BotS3LocationArgs();
        }

        public Builder(BotS3LocationArgs defaults) {
            $ = new BotS3LocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param s3Bucket An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.
         * 
         * @return builder
         * 
         */
        public Builder s3Bucket(Output<String> s3Bucket) {
            $.s3Bucket = s3Bucket;
            return this;
        }

        /**
         * @param s3Bucket An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.
         * 
         * @return builder
         * 
         */
        public Builder s3Bucket(String s3Bucket) {
            return s3Bucket(Output.of(s3Bucket));
        }

        /**
         * @param s3ObjectKey The Amazon S3 key of the deployment package.
         * 
         * @return builder
         * 
         */
        public Builder s3ObjectKey(Output<String> s3ObjectKey) {
            $.s3ObjectKey = s3ObjectKey;
            return this;
        }

        /**
         * @param s3ObjectKey The Amazon S3 key of the deployment package.
         * 
         * @return builder
         * 
         */
        public Builder s3ObjectKey(String s3ObjectKey) {
            return s3ObjectKey(Output.of(s3ObjectKey));
        }

        /**
         * @param s3ObjectVersion For versioned objects, the version of the deployment package object to use. If not specified, the current object version will be used.
         * 
         * @return builder
         * 
         */
        public Builder s3ObjectVersion(@Nullable Output<String> s3ObjectVersion) {
            $.s3ObjectVersion = s3ObjectVersion;
            return this;
        }

        /**
         * @param s3ObjectVersion For versioned objects, the version of the deployment package object to use. If not specified, the current object version will be used.
         * 
         * @return builder
         * 
         */
        public Builder s3ObjectVersion(String s3ObjectVersion) {
            return s3ObjectVersion(Output.of(s3ObjectVersion));
        }

        public BotS3LocationArgs build() {
            $.s3Bucket = Objects.requireNonNull($.s3Bucket, "expected parameter 's3Bucket' to be non-null");
            $.s3ObjectKey = Objects.requireNonNull($.s3ObjectKey, "expected parameter 's3ObjectKey' to be non-null");
            return $;
        }
    }

}
