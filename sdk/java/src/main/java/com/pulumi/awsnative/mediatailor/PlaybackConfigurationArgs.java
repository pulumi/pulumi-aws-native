// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.mediatailor;

import com.pulumi.awsnative.mediatailor.inputs.PlaybackConfigurationAvailSuppressionArgs;
import com.pulumi.awsnative.mediatailor.inputs.PlaybackConfigurationBumperArgs;
import com.pulumi.awsnative.mediatailor.inputs.PlaybackConfigurationCdnConfigurationArgs;
import com.pulumi.awsnative.mediatailor.inputs.PlaybackConfigurationConfigurationAliasesArgs;
import com.pulumi.awsnative.mediatailor.inputs.PlaybackConfigurationDashConfigurationArgs;
import com.pulumi.awsnative.mediatailor.inputs.PlaybackConfigurationHlsConfigurationArgs;
import com.pulumi.awsnative.mediatailor.inputs.PlaybackConfigurationLivePreRollConfigurationArgs;
import com.pulumi.awsnative.mediatailor.inputs.PlaybackConfigurationManifestProcessingRulesArgs;
import com.pulumi.awsnative.mediatailor.inputs.PlaybackConfigurationTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PlaybackConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PlaybackConfigurationArgs Empty = new PlaybackConfigurationArgs();

    /**
     * The URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing you can provide a static VAST URL. The maximum length is 25,000 characters.
     * 
     */
    @Import(name="adDecisionServerUrl", required=true)
    private Output<String> adDecisionServerUrl;

    /**
     * @return The URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing you can provide a static VAST URL. The maximum length is 25,000 characters.
     * 
     */
    public Output<String> adDecisionServerUrl() {
        return this.adDecisionServerUrl;
    }

    /**
     * The configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see Ad Suppression (https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
     * 
     */
    @Import(name="availSuppression")
    private @Nullable Output<PlaybackConfigurationAvailSuppressionArgs> availSuppression;

    /**
     * @return The configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see Ad Suppression (https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
     * 
     */
    public Optional<Output<PlaybackConfigurationAvailSuppressionArgs>> availSuppression() {
        return Optional.ofNullable(this.availSuppression);
    }

    /**
     * The configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see Bumpers (https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html).
     * 
     */
    @Import(name="bumper")
    private @Nullable Output<PlaybackConfigurationBumperArgs> bumper;

    /**
     * @return The configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see Bumpers (https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html).
     * 
     */
    public Optional<Output<PlaybackConfigurationBumperArgs>> bumper() {
        return Optional.ofNullable(this.bumper);
    }

    /**
     * The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.
     * 
     */
    @Import(name="cdnConfiguration")
    private @Nullable Output<PlaybackConfigurationCdnConfigurationArgs> cdnConfiguration;

    /**
     * @return The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.
     * 
     */
    public Optional<Output<PlaybackConfigurationCdnConfigurationArgs>> cdnConfiguration() {
        return Optional.ofNullable(this.cdnConfiguration);
    }

    /**
     * The player parameters and aliases used as dynamic variables during session initialization. For more information, see Domain Variables.
     * 
     */
    @Import(name="configurationAliases")
    private @Nullable Output<PlaybackConfigurationConfigurationAliasesArgs> configurationAliases;

    /**
     * @return The player parameters and aliases used as dynamic variables during session initialization. For more information, see Domain Variables.
     * 
     */
    public Optional<Output<PlaybackConfigurationConfigurationAliasesArgs>> configurationAliases() {
        return Optional.ofNullable(this.configurationAliases);
    }

    /**
     * The configuration for DASH content.
     * 
     */
    @Import(name="dashConfiguration")
    private @Nullable Output<PlaybackConfigurationDashConfigurationArgs> dashConfiguration;

    /**
     * @return The configuration for DASH content.
     * 
     */
    public Optional<Output<PlaybackConfigurationDashConfigurationArgs>> dashConfiguration() {
        return Optional.ofNullable(this.dashConfiguration);
    }

    /**
     * The configuration for HLS content.
     * 
     */
    @Import(name="hlsConfiguration")
    private @Nullable Output<PlaybackConfigurationHlsConfigurationArgs> hlsConfiguration;

    /**
     * @return The configuration for HLS content.
     * 
     */
    public Optional<Output<PlaybackConfigurationHlsConfigurationArgs>> hlsConfiguration() {
        return Optional.ofNullable(this.hlsConfiguration);
    }

    /**
     * The configuration for pre-roll ad insertion.
     * 
     */
    @Import(name="livePreRollConfiguration")
    private @Nullable Output<PlaybackConfigurationLivePreRollConfigurationArgs> livePreRollConfiguration;

    /**
     * @return The configuration for pre-roll ad insertion.
     * 
     */
    public Optional<Output<PlaybackConfigurationLivePreRollConfigurationArgs>> livePreRollConfiguration() {
        return Optional.ofNullable(this.livePreRollConfiguration);
    }

    /**
     * The configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.
     * 
     */
    @Import(name="manifestProcessingRules")
    private @Nullable Output<PlaybackConfigurationManifestProcessingRulesArgs> manifestProcessingRules;

    /**
     * @return The configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.
     * 
     */
    public Optional<Output<PlaybackConfigurationManifestProcessingRulesArgs>> manifestProcessingRules() {
        return Optional.ofNullable(this.manifestProcessingRules);
    }

    /**
     * The identifier for the playback configuration.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The identifier for the playback configuration.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Defines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to ad replacement in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see Ad Behavior in AWS Elemental MediaTailor (https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
     * 
     */
    @Import(name="personalizationThresholdSeconds")
    private @Nullable Output<Integer> personalizationThresholdSeconds;

    /**
     * @return Defines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to ad replacement in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see Ad Behavior in AWS Elemental MediaTailor (https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
     * 
     */
    public Optional<Output<Integer>> personalizationThresholdSeconds() {
        return Optional.ofNullable(this.personalizationThresholdSeconds);
    }

    /**
     * The URL for a high-quality video asset to transcode and use to fill in time that&#39;s not used by ads. AWS Elemental MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID configurations. For VPAID, the slate is required because MediaTailor provides it in the slots that are designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.
     * 
     */
    @Import(name="slateAdUrl")
    private @Nullable Output<String> slateAdUrl;

    /**
     * @return The URL for a high-quality video asset to transcode and use to fill in time that&#39;s not used by ads. AWS Elemental MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID configurations. For VPAID, the slate is required because MediaTailor provides it in the slots that are designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.
     * 
     */
    public Optional<Output<String>> slateAdUrl() {
        return Optional.ofNullable(this.slateAdUrl);
    }

    /**
     * The tags to assign to the playback configuration.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<PlaybackConfigurationTagArgs>> tags;

    /**
     * @return The tags to assign to the playback configuration.
     * 
     */
    public Optional<Output<List<PlaybackConfigurationTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.
     * 
     */
    @Import(name="transcodeProfileName")
    private @Nullable Output<String> transcodeProfileName;

    /**
     * @return The name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.
     * 
     */
    public Optional<Output<String>> transcodeProfileName() {
        return Optional.ofNullable(this.transcodeProfileName);
    }

    /**
     * The URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.
     * 
     */
    @Import(name="videoContentSourceUrl", required=true)
    private Output<String> videoContentSourceUrl;

    /**
     * @return The URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.
     * 
     */
    public Output<String> videoContentSourceUrl() {
        return this.videoContentSourceUrl;
    }

    private PlaybackConfigurationArgs() {}

    private PlaybackConfigurationArgs(PlaybackConfigurationArgs $) {
        this.adDecisionServerUrl = $.adDecisionServerUrl;
        this.availSuppression = $.availSuppression;
        this.bumper = $.bumper;
        this.cdnConfiguration = $.cdnConfiguration;
        this.configurationAliases = $.configurationAliases;
        this.dashConfiguration = $.dashConfiguration;
        this.hlsConfiguration = $.hlsConfiguration;
        this.livePreRollConfiguration = $.livePreRollConfiguration;
        this.manifestProcessingRules = $.manifestProcessingRules;
        this.name = $.name;
        this.personalizationThresholdSeconds = $.personalizationThresholdSeconds;
        this.slateAdUrl = $.slateAdUrl;
        this.tags = $.tags;
        this.transcodeProfileName = $.transcodeProfileName;
        this.videoContentSourceUrl = $.videoContentSourceUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PlaybackConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PlaybackConfigurationArgs $;

        public Builder() {
            $ = new PlaybackConfigurationArgs();
        }

        public Builder(PlaybackConfigurationArgs defaults) {
            $ = new PlaybackConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adDecisionServerUrl The URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing you can provide a static VAST URL. The maximum length is 25,000 characters.
         * 
         * @return builder
         * 
         */
        public Builder adDecisionServerUrl(Output<String> adDecisionServerUrl) {
            $.adDecisionServerUrl = adDecisionServerUrl;
            return this;
        }

        /**
         * @param adDecisionServerUrl The URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing you can provide a static VAST URL. The maximum length is 25,000 characters.
         * 
         * @return builder
         * 
         */
        public Builder adDecisionServerUrl(String adDecisionServerUrl) {
            return adDecisionServerUrl(Output.of(adDecisionServerUrl));
        }

        /**
         * @param availSuppression The configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see Ad Suppression (https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
         * 
         * @return builder
         * 
         */
        public Builder availSuppression(@Nullable Output<PlaybackConfigurationAvailSuppressionArgs> availSuppression) {
            $.availSuppression = availSuppression;
            return this;
        }

        /**
         * @param availSuppression The configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see Ad Suppression (https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
         * 
         * @return builder
         * 
         */
        public Builder availSuppression(PlaybackConfigurationAvailSuppressionArgs availSuppression) {
            return availSuppression(Output.of(availSuppression));
        }

        /**
         * @param bumper The configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see Bumpers (https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html).
         * 
         * @return builder
         * 
         */
        public Builder bumper(@Nullable Output<PlaybackConfigurationBumperArgs> bumper) {
            $.bumper = bumper;
            return this;
        }

        /**
         * @param bumper The configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see Bumpers (https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html).
         * 
         * @return builder
         * 
         */
        public Builder bumper(PlaybackConfigurationBumperArgs bumper) {
            return bumper(Output.of(bumper));
        }

        /**
         * @param cdnConfiguration The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.
         * 
         * @return builder
         * 
         */
        public Builder cdnConfiguration(@Nullable Output<PlaybackConfigurationCdnConfigurationArgs> cdnConfiguration) {
            $.cdnConfiguration = cdnConfiguration;
            return this;
        }

        /**
         * @param cdnConfiguration The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.
         * 
         * @return builder
         * 
         */
        public Builder cdnConfiguration(PlaybackConfigurationCdnConfigurationArgs cdnConfiguration) {
            return cdnConfiguration(Output.of(cdnConfiguration));
        }

        /**
         * @param configurationAliases The player parameters and aliases used as dynamic variables during session initialization. For more information, see Domain Variables.
         * 
         * @return builder
         * 
         */
        public Builder configurationAliases(@Nullable Output<PlaybackConfigurationConfigurationAliasesArgs> configurationAliases) {
            $.configurationAliases = configurationAliases;
            return this;
        }

        /**
         * @param configurationAliases The player parameters and aliases used as dynamic variables during session initialization. For more information, see Domain Variables.
         * 
         * @return builder
         * 
         */
        public Builder configurationAliases(PlaybackConfigurationConfigurationAliasesArgs configurationAliases) {
            return configurationAliases(Output.of(configurationAliases));
        }

        /**
         * @param dashConfiguration The configuration for DASH content.
         * 
         * @return builder
         * 
         */
        public Builder dashConfiguration(@Nullable Output<PlaybackConfigurationDashConfigurationArgs> dashConfiguration) {
            $.dashConfiguration = dashConfiguration;
            return this;
        }

        /**
         * @param dashConfiguration The configuration for DASH content.
         * 
         * @return builder
         * 
         */
        public Builder dashConfiguration(PlaybackConfigurationDashConfigurationArgs dashConfiguration) {
            return dashConfiguration(Output.of(dashConfiguration));
        }

        /**
         * @param hlsConfiguration The configuration for HLS content.
         * 
         * @return builder
         * 
         */
        public Builder hlsConfiguration(@Nullable Output<PlaybackConfigurationHlsConfigurationArgs> hlsConfiguration) {
            $.hlsConfiguration = hlsConfiguration;
            return this;
        }

        /**
         * @param hlsConfiguration The configuration for HLS content.
         * 
         * @return builder
         * 
         */
        public Builder hlsConfiguration(PlaybackConfigurationHlsConfigurationArgs hlsConfiguration) {
            return hlsConfiguration(Output.of(hlsConfiguration));
        }

        /**
         * @param livePreRollConfiguration The configuration for pre-roll ad insertion.
         * 
         * @return builder
         * 
         */
        public Builder livePreRollConfiguration(@Nullable Output<PlaybackConfigurationLivePreRollConfigurationArgs> livePreRollConfiguration) {
            $.livePreRollConfiguration = livePreRollConfiguration;
            return this;
        }

        /**
         * @param livePreRollConfiguration The configuration for pre-roll ad insertion.
         * 
         * @return builder
         * 
         */
        public Builder livePreRollConfiguration(PlaybackConfigurationLivePreRollConfigurationArgs livePreRollConfiguration) {
            return livePreRollConfiguration(Output.of(livePreRollConfiguration));
        }

        /**
         * @param manifestProcessingRules The configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.
         * 
         * @return builder
         * 
         */
        public Builder manifestProcessingRules(@Nullable Output<PlaybackConfigurationManifestProcessingRulesArgs> manifestProcessingRules) {
            $.manifestProcessingRules = manifestProcessingRules;
            return this;
        }

        /**
         * @param manifestProcessingRules The configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.
         * 
         * @return builder
         * 
         */
        public Builder manifestProcessingRules(PlaybackConfigurationManifestProcessingRulesArgs manifestProcessingRules) {
            return manifestProcessingRules(Output.of(manifestProcessingRules));
        }

        /**
         * @param name The identifier for the playback configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The identifier for the playback configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param personalizationThresholdSeconds Defines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to ad replacement in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see Ad Behavior in AWS Elemental MediaTailor (https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
         * 
         * @return builder
         * 
         */
        public Builder personalizationThresholdSeconds(@Nullable Output<Integer> personalizationThresholdSeconds) {
            $.personalizationThresholdSeconds = personalizationThresholdSeconds;
            return this;
        }

        /**
         * @param personalizationThresholdSeconds Defines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to ad replacement in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see Ad Behavior in AWS Elemental MediaTailor (https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
         * 
         * @return builder
         * 
         */
        public Builder personalizationThresholdSeconds(Integer personalizationThresholdSeconds) {
            return personalizationThresholdSeconds(Output.of(personalizationThresholdSeconds));
        }

        /**
         * @param slateAdUrl The URL for a high-quality video asset to transcode and use to fill in time that&#39;s not used by ads. AWS Elemental MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID configurations. For VPAID, the slate is required because MediaTailor provides it in the slots that are designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.
         * 
         * @return builder
         * 
         */
        public Builder slateAdUrl(@Nullable Output<String> slateAdUrl) {
            $.slateAdUrl = slateAdUrl;
            return this;
        }

        /**
         * @param slateAdUrl The URL for a high-quality video asset to transcode and use to fill in time that&#39;s not used by ads. AWS Elemental MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID configurations. For VPAID, the slate is required because MediaTailor provides it in the slots that are designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.
         * 
         * @return builder
         * 
         */
        public Builder slateAdUrl(String slateAdUrl) {
            return slateAdUrl(Output.of(slateAdUrl));
        }

        /**
         * @param tags The tags to assign to the playback configuration.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<PlaybackConfigurationTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags to assign to the playback configuration.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<PlaybackConfigurationTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The tags to assign to the playback configuration.
         * 
         * @return builder
         * 
         */
        public Builder tags(PlaybackConfigurationTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param transcodeProfileName The name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.
         * 
         * @return builder
         * 
         */
        public Builder transcodeProfileName(@Nullable Output<String> transcodeProfileName) {
            $.transcodeProfileName = transcodeProfileName;
            return this;
        }

        /**
         * @param transcodeProfileName The name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.
         * 
         * @return builder
         * 
         */
        public Builder transcodeProfileName(String transcodeProfileName) {
            return transcodeProfileName(Output.of(transcodeProfileName));
        }

        /**
         * @param videoContentSourceUrl The URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.
         * 
         * @return builder
         * 
         */
        public Builder videoContentSourceUrl(Output<String> videoContentSourceUrl) {
            $.videoContentSourceUrl = videoContentSourceUrl;
            return this;
        }

        /**
         * @param videoContentSourceUrl The URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.
         * 
         * @return builder
         * 
         */
        public Builder videoContentSourceUrl(String videoContentSourceUrl) {
            return videoContentSourceUrl(Output.of(videoContentSourceUrl));
        }

        public PlaybackConfigurationArgs build() {
            $.adDecisionServerUrl = Objects.requireNonNull($.adDecisionServerUrl, "expected parameter 'adDecisionServerUrl' to be non-null");
            $.videoContentSourceUrl = Objects.requireNonNull($.videoContentSourceUrl, "expected parameter 'videoContentSourceUrl' to be non-null");
            return $;
        }
    }

}
