// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.accessanalyzer.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AnalyzerFilter {
    private @Nullable List<String> contains;
    private @Nullable List<String> eq;
    private @Nullable Boolean exists;
    private @Nullable List<String> neq;
    private String property;

    private AnalyzerFilter() {}
    public List<String> contains() {
        return this.contains == null ? List.of() : this.contains;
    }
    public List<String> eq() {
        return this.eq == null ? List.of() : this.eq;
    }
    public Optional<Boolean> exists() {
        return Optional.ofNullable(this.exists);
    }
    public List<String> neq() {
        return this.neq == null ? List.of() : this.neq;
    }
    public String property() {
        return this.property;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AnalyzerFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> contains;
        private @Nullable List<String> eq;
        private @Nullable Boolean exists;
        private @Nullable List<String> neq;
        private String property;
        public Builder() {}
        public Builder(AnalyzerFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contains = defaults.contains;
    	      this.eq = defaults.eq;
    	      this.exists = defaults.exists;
    	      this.neq = defaults.neq;
    	      this.property = defaults.property;
        }

        @CustomType.Setter
        public Builder contains(@Nullable List<String> contains) {
            this.contains = contains;
            return this;
        }
        public Builder contains(String... contains) {
            return contains(List.of(contains));
        }
        @CustomType.Setter
        public Builder eq(@Nullable List<String> eq) {
            this.eq = eq;
            return this;
        }
        public Builder eq(String... eq) {
            return eq(List.of(eq));
        }
        @CustomType.Setter
        public Builder exists(@Nullable Boolean exists) {
            this.exists = exists;
            return this;
        }
        @CustomType.Setter
        public Builder neq(@Nullable List<String> neq) {
            this.neq = neq;
            return this;
        }
        public Builder neq(String... neq) {
            return neq(List.of(neq));
        }
        @CustomType.Setter
        public Builder property(String property) {
            this.property = Objects.requireNonNull(property);
            return this;
        }
        public AnalyzerFilter build() {
            final var o = new AnalyzerFilter();
            o.contains = contains;
            o.eq = eq;
            o.exists = exists;
            o.neq = neq;
            o.property = property;
            return o;
        }
    }
}
