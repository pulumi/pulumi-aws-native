// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.route53resolver;

import com.pulumi.awsnative.route53resolver.inputs.FirewallDomainListTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallDomainListArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallDomainListArgs Empty = new FirewallDomainListArgs();

    /**
     * S3 URL to import domains from.
     * 
     */
    @Import(name="domainFileUrl")
    private @Nullable Output<String> domainFileUrl;

    /**
     * @return S3 URL to import domains from.
     * 
     */
    public Optional<Output<String>> domainFileUrl() {
        return Optional.ofNullable(this.domainFileUrl);
    }

    @Import(name="domains")
    private @Nullable Output<List<String>> domains;

    public Optional<Output<List<String>>> domains() {
        return Optional.ofNullable(this.domains);
    }

    /**
     * FirewallDomainListName
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return FirewallDomainListName
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<FirewallDomainListTagArgs>> tags;

    /**
     * @return Tags
     * 
     */
    public Optional<Output<List<FirewallDomainListTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private FirewallDomainListArgs() {}

    private FirewallDomainListArgs(FirewallDomainListArgs $) {
        this.domainFileUrl = $.domainFileUrl;
        this.domains = $.domains;
        this.name = $.name;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallDomainListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallDomainListArgs $;

        public Builder() {
            $ = new FirewallDomainListArgs();
        }

        public Builder(FirewallDomainListArgs defaults) {
            $ = new FirewallDomainListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainFileUrl S3 URL to import domains from.
         * 
         * @return builder
         * 
         */
        public Builder domainFileUrl(@Nullable Output<String> domainFileUrl) {
            $.domainFileUrl = domainFileUrl;
            return this;
        }

        /**
         * @param domainFileUrl S3 URL to import domains from.
         * 
         * @return builder
         * 
         */
        public Builder domainFileUrl(String domainFileUrl) {
            return domainFileUrl(Output.of(domainFileUrl));
        }

        public Builder domains(@Nullable Output<List<String>> domains) {
            $.domains = domains;
            return this;
        }

        public Builder domains(List<String> domains) {
            return domains(Output.of(domains));
        }

        public Builder domains(String... domains) {
            return domains(List.of(domains));
        }

        /**
         * @param name FirewallDomainListName
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name FirewallDomainListName
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags Tags
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<FirewallDomainListTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags
         * 
         * @return builder
         * 
         */
        public Builder tags(List<FirewallDomainListTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Tags
         * 
         * @return builder
         * 
         */
        public Builder tags(FirewallDomainListTagArgs... tags) {
            return tags(List.of(tags));
        }

        public FirewallDomainListArgs build() {
            return $;
        }
    }

}
