// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.route53recoverycontrol.outputs;

import com.pulumi.awsnative.route53recoverycontrol.enums.ControlPanelStatus;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetControlPanelResult {
    /**
     * @return The Amazon Resource Name (ARN) of the cluster.
     * 
     */
    private @Nullable String controlPanelArn;
    /**
     * @return A flag that Amazon Route 53 Application Recovery Controller sets to true to designate the default control panel for a cluster. When you create a cluster, Amazon Route 53 Application Recovery Controller creates a control panel, and sets this flag for that control panel. If you create a control panel yourself, this flag is set to false.
     * 
     */
    private @Nullable Boolean defaultControlPanel;
    /**
     * @return The name of the control panel. You can use any non-white space character in the name.
     * 
     */
    private @Nullable String name;
    /**
     * @return Count of associated routing controls
     * 
     */
    private @Nullable Integer routingControlCount;
    /**
     * @return The deployment status of control panel. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.
     * 
     */
    private @Nullable ControlPanelStatus status;

    private GetControlPanelResult() {}
    /**
     * @return The Amazon Resource Name (ARN) of the cluster.
     * 
     */
    public Optional<String> controlPanelArn() {
        return Optional.ofNullable(this.controlPanelArn);
    }
    /**
     * @return A flag that Amazon Route 53 Application Recovery Controller sets to true to designate the default control panel for a cluster. When you create a cluster, Amazon Route 53 Application Recovery Controller creates a control panel, and sets this flag for that control panel. If you create a control panel yourself, this flag is set to false.
     * 
     */
    public Optional<Boolean> defaultControlPanel() {
        return Optional.ofNullable(this.defaultControlPanel);
    }
    /**
     * @return The name of the control panel. You can use any non-white space character in the name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Count of associated routing controls
     * 
     */
    public Optional<Integer> routingControlCount() {
        return Optional.ofNullable(this.routingControlCount);
    }
    /**
     * @return The deployment status of control panel. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.
     * 
     */
    public Optional<ControlPanelStatus> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetControlPanelResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String controlPanelArn;
        private @Nullable Boolean defaultControlPanel;
        private @Nullable String name;
        private @Nullable Integer routingControlCount;
        private @Nullable ControlPanelStatus status;
        public Builder() {}
        public Builder(GetControlPanelResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.controlPanelArn = defaults.controlPanelArn;
    	      this.defaultControlPanel = defaults.defaultControlPanel;
    	      this.name = defaults.name;
    	      this.routingControlCount = defaults.routingControlCount;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder controlPanelArn(@Nullable String controlPanelArn) {
            this.controlPanelArn = controlPanelArn;
            return this;
        }
        @CustomType.Setter
        public Builder defaultControlPanel(@Nullable Boolean defaultControlPanel) {
            this.defaultControlPanel = defaultControlPanel;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder routingControlCount(@Nullable Integer routingControlCount) {
            this.routingControlCount = routingControlCount;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable ControlPanelStatus status) {
            this.status = status;
            return this;
        }
        public GetControlPanelResult build() {
            final var o = new GetControlPanelResult();
            o.controlPanelArn = controlPanelArn;
            o.defaultControlPanel = defaultControlPanel;
            o.name = name;
            o.routingControlCount = routingControlCount;
            o.status = status;
            return o;
        }
    }
}
