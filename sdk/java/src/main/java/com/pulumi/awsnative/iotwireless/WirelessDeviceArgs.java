// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotwireless;

import com.pulumi.awsnative.iotwireless.enums.WirelessDeviceType;
import com.pulumi.awsnative.iotwireless.inputs.WirelessDeviceLoRaWANDeviceArgs;
import com.pulumi.awsnative.iotwireless.inputs.WirelessDeviceTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WirelessDeviceArgs extends com.pulumi.resources.ResourceArgs {

    public static final WirelessDeviceArgs Empty = new WirelessDeviceArgs();

    /**
     * Wireless device description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Wireless device description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Wireless device destination name
     * 
     */
    @Import(name="destinationName", required=true)
    private Output<String> destinationName;

    /**
     * @return Wireless device destination name
     * 
     */
    public Output<String> destinationName() {
        return this.destinationName;
    }

    /**
     * The date and time when the most recent uplink was received.
     * 
     */
    @Import(name="lastUplinkReceivedAt")
    private @Nullable Output<String> lastUplinkReceivedAt;

    /**
     * @return The date and time when the most recent uplink was received.
     * 
     */
    public Optional<Output<String>> lastUplinkReceivedAt() {
        return Optional.ofNullable(this.lastUplinkReceivedAt);
    }

    /**
     * The combination of Package, Station and Model which represents the version of the LoRaWAN Wireless Device.
     * 
     */
    @Import(name="loRaWAN")
    private @Nullable Output<WirelessDeviceLoRaWANDeviceArgs> loRaWAN;

    /**
     * @return The combination of Package, Station and Model which represents the version of the LoRaWAN Wireless Device.
     * 
     */
    public Optional<Output<WirelessDeviceLoRaWANDeviceArgs>> loRaWAN() {
        return Optional.ofNullable(this.loRaWAN);
    }

    /**
     * Wireless device name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Wireless device name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A list of key-value pairs that contain metadata for the device. Currently not supported, will not create if tags are passed.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<WirelessDeviceTagArgs>> tags;

    /**
     * @return A list of key-value pairs that contain metadata for the device. Currently not supported, will not create if tags are passed.
     * 
     */
    public Optional<Output<List<WirelessDeviceTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Thing arn. Passed into update to associate Thing with Wireless device.
     * 
     */
    @Import(name="thingArn")
    private @Nullable Output<String> thingArn;

    /**
     * @return Thing arn. Passed into update to associate Thing with Wireless device.
     * 
     */
    public Optional<Output<String>> thingArn() {
        return Optional.ofNullable(this.thingArn);
    }

    /**
     * Wireless device type, currently only Sidewalk and LoRa
     * 
     */
    @Import(name="type", required=true)
    private Output<WirelessDeviceType> type;

    /**
     * @return Wireless device type, currently only Sidewalk and LoRa
     * 
     */
    public Output<WirelessDeviceType> type() {
        return this.type;
    }

    private WirelessDeviceArgs() {}

    private WirelessDeviceArgs(WirelessDeviceArgs $) {
        this.description = $.description;
        this.destinationName = $.destinationName;
        this.lastUplinkReceivedAt = $.lastUplinkReceivedAt;
        this.loRaWAN = $.loRaWAN;
        this.name = $.name;
        this.tags = $.tags;
        this.thingArn = $.thingArn;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WirelessDeviceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WirelessDeviceArgs $;

        public Builder() {
            $ = new WirelessDeviceArgs();
        }

        public Builder(WirelessDeviceArgs defaults) {
            $ = new WirelessDeviceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Wireless device description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Wireless device description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param destinationName Wireless device destination name
         * 
         * @return builder
         * 
         */
        public Builder destinationName(Output<String> destinationName) {
            $.destinationName = destinationName;
            return this;
        }

        /**
         * @param destinationName Wireless device destination name
         * 
         * @return builder
         * 
         */
        public Builder destinationName(String destinationName) {
            return destinationName(Output.of(destinationName));
        }

        /**
         * @param lastUplinkReceivedAt The date and time when the most recent uplink was received.
         * 
         * @return builder
         * 
         */
        public Builder lastUplinkReceivedAt(@Nullable Output<String> lastUplinkReceivedAt) {
            $.lastUplinkReceivedAt = lastUplinkReceivedAt;
            return this;
        }

        /**
         * @param lastUplinkReceivedAt The date and time when the most recent uplink was received.
         * 
         * @return builder
         * 
         */
        public Builder lastUplinkReceivedAt(String lastUplinkReceivedAt) {
            return lastUplinkReceivedAt(Output.of(lastUplinkReceivedAt));
        }

        /**
         * @param loRaWAN The combination of Package, Station and Model which represents the version of the LoRaWAN Wireless Device.
         * 
         * @return builder
         * 
         */
        public Builder loRaWAN(@Nullable Output<WirelessDeviceLoRaWANDeviceArgs> loRaWAN) {
            $.loRaWAN = loRaWAN;
            return this;
        }

        /**
         * @param loRaWAN The combination of Package, Station and Model which represents the version of the LoRaWAN Wireless Device.
         * 
         * @return builder
         * 
         */
        public Builder loRaWAN(WirelessDeviceLoRaWANDeviceArgs loRaWAN) {
            return loRaWAN(Output.of(loRaWAN));
        }

        /**
         * @param name Wireless device name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Wireless device name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags A list of key-value pairs that contain metadata for the device. Currently not supported, will not create if tags are passed.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<WirelessDeviceTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A list of key-value pairs that contain metadata for the device. Currently not supported, will not create if tags are passed.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<WirelessDeviceTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A list of key-value pairs that contain metadata for the device. Currently not supported, will not create if tags are passed.
         * 
         * @return builder
         * 
         */
        public Builder tags(WirelessDeviceTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param thingArn Thing arn. Passed into update to associate Thing with Wireless device.
         * 
         * @return builder
         * 
         */
        public Builder thingArn(@Nullable Output<String> thingArn) {
            $.thingArn = thingArn;
            return this;
        }

        /**
         * @param thingArn Thing arn. Passed into update to associate Thing with Wireless device.
         * 
         * @return builder
         * 
         */
        public Builder thingArn(String thingArn) {
            return thingArn(Output.of(thingArn));
        }

        /**
         * @param type Wireless device type, currently only Sidewalk and LoRa
         * 
         * @return builder
         * 
         */
        public Builder type(Output<WirelessDeviceType> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Wireless device type, currently only Sidewalk and LoRa
         * 
         * @return builder
         * 
         */
        public Builder type(WirelessDeviceType type) {
            return type(Output.of(type));
        }

        public WirelessDeviceArgs build() {
            $.destinationName = Objects.requireNonNull($.destinationName, "expected parameter 'destinationName' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
