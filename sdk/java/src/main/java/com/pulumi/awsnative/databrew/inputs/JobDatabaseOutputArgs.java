// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.databrew.inputs;

import com.pulumi.awsnative.databrew.enums.JobDatabaseOutputDatabaseOutputMode;
import com.pulumi.awsnative.databrew.inputs.JobDatabaseTableOutputOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobDatabaseOutputArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobDatabaseOutputArgs Empty = new JobDatabaseOutputArgs();

    @Import(name="databaseOptions", required=true)
    private Output<JobDatabaseTableOutputOptionsArgs> databaseOptions;

    public Output<JobDatabaseTableOutputOptionsArgs> databaseOptions() {
        return this.databaseOptions;
    }

    /**
     * Database table name
     * 
     */
    @Import(name="databaseOutputMode")
    private @Nullable Output<JobDatabaseOutputDatabaseOutputMode> databaseOutputMode;

    /**
     * @return Database table name
     * 
     */
    public Optional<Output<JobDatabaseOutputDatabaseOutputMode>> databaseOutputMode() {
        return Optional.ofNullable(this.databaseOutputMode);
    }

    /**
     * Glue connection name
     * 
     */
    @Import(name="glueConnectionName", required=true)
    private Output<String> glueConnectionName;

    /**
     * @return Glue connection name
     * 
     */
    public Output<String> glueConnectionName() {
        return this.glueConnectionName;
    }

    private JobDatabaseOutputArgs() {}

    private JobDatabaseOutputArgs(JobDatabaseOutputArgs $) {
        this.databaseOptions = $.databaseOptions;
        this.databaseOutputMode = $.databaseOutputMode;
        this.glueConnectionName = $.glueConnectionName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobDatabaseOutputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobDatabaseOutputArgs $;

        public Builder() {
            $ = new JobDatabaseOutputArgs();
        }

        public Builder(JobDatabaseOutputArgs defaults) {
            $ = new JobDatabaseOutputArgs(Objects.requireNonNull(defaults));
        }

        public Builder databaseOptions(Output<JobDatabaseTableOutputOptionsArgs> databaseOptions) {
            $.databaseOptions = databaseOptions;
            return this;
        }

        public Builder databaseOptions(JobDatabaseTableOutputOptionsArgs databaseOptions) {
            return databaseOptions(Output.of(databaseOptions));
        }

        /**
         * @param databaseOutputMode Database table name
         * 
         * @return builder
         * 
         */
        public Builder databaseOutputMode(@Nullable Output<JobDatabaseOutputDatabaseOutputMode> databaseOutputMode) {
            $.databaseOutputMode = databaseOutputMode;
            return this;
        }

        /**
         * @param databaseOutputMode Database table name
         * 
         * @return builder
         * 
         */
        public Builder databaseOutputMode(JobDatabaseOutputDatabaseOutputMode databaseOutputMode) {
            return databaseOutputMode(Output.of(databaseOutputMode));
        }

        /**
         * @param glueConnectionName Glue connection name
         * 
         * @return builder
         * 
         */
        public Builder glueConnectionName(Output<String> glueConnectionName) {
            $.glueConnectionName = glueConnectionName;
            return this;
        }

        /**
         * @param glueConnectionName Glue connection name
         * 
         * @return builder
         * 
         */
        public Builder glueConnectionName(String glueConnectionName) {
            return glueConnectionName(Output.of(glueConnectionName));
        }

        public JobDatabaseOutputArgs build() {
            $.databaseOptions = Objects.requireNonNull($.databaseOptions, "expected parameter 'databaseOptions' to be non-null");
            $.glueConnectionName = Objects.requireNonNull($.glueConnectionName, "expected parameter 'glueConnectionName' to be non-null");
            return $;
        }
    }

}
