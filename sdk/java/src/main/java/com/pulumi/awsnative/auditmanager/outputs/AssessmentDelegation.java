// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.auditmanager.outputs;

import com.pulumi.awsnative.auditmanager.enums.AssessmentDelegationStatus;
import com.pulumi.awsnative.auditmanager.enums.AssessmentRoleType;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AssessmentDelegation {
    private @Nullable String assessmentId;
    private @Nullable String assessmentName;
    private @Nullable String comment;
    private @Nullable String controlSetId;
    private @Nullable String createdBy;
    private @Nullable Double creationTime;
    private @Nullable String id;
    private @Nullable Double lastUpdated;
    private @Nullable String roleArn;
    private @Nullable AssessmentRoleType roleType;
    private @Nullable AssessmentDelegationStatus status;

    private AssessmentDelegation() {}
    public Optional<String> assessmentId() {
        return Optional.ofNullable(this.assessmentId);
    }
    public Optional<String> assessmentName() {
        return Optional.ofNullable(this.assessmentName);
    }
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    public Optional<String> controlSetId() {
        return Optional.ofNullable(this.controlSetId);
    }
    public Optional<String> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }
    public Optional<Double> creationTime() {
        return Optional.ofNullable(this.creationTime);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<Double> lastUpdated() {
        return Optional.ofNullable(this.lastUpdated);
    }
    public Optional<String> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }
    public Optional<AssessmentRoleType> roleType() {
        return Optional.ofNullable(this.roleType);
    }
    public Optional<AssessmentDelegationStatus> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssessmentDelegation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String assessmentId;
        private @Nullable String assessmentName;
        private @Nullable String comment;
        private @Nullable String controlSetId;
        private @Nullable String createdBy;
        private @Nullable Double creationTime;
        private @Nullable String id;
        private @Nullable Double lastUpdated;
        private @Nullable String roleArn;
        private @Nullable AssessmentRoleType roleType;
        private @Nullable AssessmentDelegationStatus status;
        public Builder() {}
        public Builder(AssessmentDelegation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assessmentId = defaults.assessmentId;
    	      this.assessmentName = defaults.assessmentName;
    	      this.comment = defaults.comment;
    	      this.controlSetId = defaults.controlSetId;
    	      this.createdBy = defaults.createdBy;
    	      this.creationTime = defaults.creationTime;
    	      this.id = defaults.id;
    	      this.lastUpdated = defaults.lastUpdated;
    	      this.roleArn = defaults.roleArn;
    	      this.roleType = defaults.roleType;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder assessmentId(@Nullable String assessmentId) {
            this.assessmentId = assessmentId;
            return this;
        }
        @CustomType.Setter
        public Builder assessmentName(@Nullable String assessmentName) {
            this.assessmentName = assessmentName;
            return this;
        }
        @CustomType.Setter
        public Builder comment(@Nullable String comment) {
            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder controlSetId(@Nullable String controlSetId) {
            this.controlSetId = controlSetId;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(@Nullable String createdBy) {
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder creationTime(@Nullable Double creationTime) {
            this.creationTime = creationTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdated(@Nullable Double lastUpdated) {
            this.lastUpdated = lastUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(@Nullable String roleArn) {
            this.roleArn = roleArn;
            return this;
        }
        @CustomType.Setter
        public Builder roleType(@Nullable AssessmentRoleType roleType) {
            this.roleType = roleType;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable AssessmentDelegationStatus status) {
            this.status = status;
            return this;
        }
        public AssessmentDelegation build() {
            final var o = new AssessmentDelegation();
            o.assessmentId = assessmentId;
            o.assessmentName = assessmentName;
            o.comment = comment;
            o.controlSetId = controlSetId;
            o.createdBy = createdBy;
            o.creationTime = creationTime;
            o.id = id;
            o.lastUpdated = lastUpdated;
            o.roleArn = roleArn;
            o.roleType = roleType;
            o.status = status;
            return o;
        }
    }
}
