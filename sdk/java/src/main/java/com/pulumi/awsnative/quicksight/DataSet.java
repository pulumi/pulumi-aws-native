// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.quicksight.DataSetArgs;
import com.pulumi.awsnative.quicksight.enums.DataSetImportMode;
import com.pulumi.awsnative.quicksight.outputs.DataSetColumnGroup;
import com.pulumi.awsnative.quicksight.outputs.DataSetColumnLevelPermissionRule;
import com.pulumi.awsnative.quicksight.outputs.DataSetFieldFolderMap;
import com.pulumi.awsnative.quicksight.outputs.DataSetIngestionWaitPolicy;
import com.pulumi.awsnative.quicksight.outputs.DataSetLogicalTableMap;
import com.pulumi.awsnative.quicksight.outputs.DataSetOutputColumn;
import com.pulumi.awsnative.quicksight.outputs.DataSetPhysicalTableMap;
import com.pulumi.awsnative.quicksight.outputs.DataSetResourcePermission;
import com.pulumi.awsnative.quicksight.outputs.DataSetRowLevelPermissionDataSet;
import com.pulumi.awsnative.quicksight.outputs.DataSetTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Definition of the AWS::QuickSight::DataSet Resource Type.
 * 
 */
@ResourceType(type="aws-native:quicksight:DataSet")
public class DataSet extends com.pulumi.resources.CustomResource {
    /**
     * &lt;p&gt;The Amazon Resource Name (ARN) of the resource.&lt;/p&gt;
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return &lt;p&gt;The Amazon Resource Name (ARN) of the resource.&lt;/p&gt;
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="awsAccountId", type=String.class, parameters={})
    private Output</* @Nullable */ String> awsAccountId;

    public Output<Optional<String>> awsAccountId() {
        return Codegen.optional(this.awsAccountId);
    }
    /**
     * &lt;p&gt;Groupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.&lt;/p&gt;
     * 
     */
    @Export(name="columnGroups", type=List.class, parameters={DataSetColumnGroup.class})
    private Output</* @Nullable */ List<DataSetColumnGroup>> columnGroups;

    /**
     * @return &lt;p&gt;Groupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.&lt;/p&gt;
     * 
     */
    public Output<Optional<List<DataSetColumnGroup>>> columnGroups() {
        return Codegen.optional(this.columnGroups);
    }
    @Export(name="columnLevelPermissionRules", type=List.class, parameters={DataSetColumnLevelPermissionRule.class})
    private Output</* @Nullable */ List<DataSetColumnLevelPermissionRule>> columnLevelPermissionRules;

    public Output<Optional<List<DataSetColumnLevelPermissionRule>>> columnLevelPermissionRules() {
        return Codegen.optional(this.columnLevelPermissionRules);
    }
    /**
     * &lt;p&gt;The amount of SPICE capacity used by this dataset. This is 0 if the dataset isn&#39;t
     *             imported into SPICE.&lt;/p&gt;
     * 
     */
    @Export(name="consumedSpiceCapacityInBytes", type=Double.class, parameters={})
    private Output<Double> consumedSpiceCapacityInBytes;

    /**
     * @return &lt;p&gt;The amount of SPICE capacity used by this dataset. This is 0 if the dataset isn&#39;t
     *             imported into SPICE.&lt;/p&gt;
     * 
     */
    public Output<Double> consumedSpiceCapacityInBytes() {
        return this.consumedSpiceCapacityInBytes;
    }
    /**
     * &lt;p&gt;The time that this dataset was created.&lt;/p&gt;
     * 
     */
    @Export(name="createdTime", type=String.class, parameters={})
    private Output<String> createdTime;

    /**
     * @return &lt;p&gt;The time that this dataset was created.&lt;/p&gt;
     * 
     */
    public Output<String> createdTime() {
        return this.createdTime;
    }
    @Export(name="dataSetId", type=String.class, parameters={})
    private Output</* @Nullable */ String> dataSetId;

    public Output<Optional<String>> dataSetId() {
        return Codegen.optional(this.dataSetId);
    }
    @Export(name="fieldFolders", type=DataSetFieldFolderMap.class, parameters={})
    private Output</* @Nullable */ DataSetFieldFolderMap> fieldFolders;

    public Output<Optional<DataSetFieldFolderMap>> fieldFolders() {
        return Codegen.optional(this.fieldFolders);
    }
    @Export(name="importMode", type=DataSetImportMode.class, parameters={})
    private Output</* @Nullable */ DataSetImportMode> importMode;

    public Output<Optional<DataSetImportMode>> importMode() {
        return Codegen.optional(this.importMode);
    }
    @Export(name="ingestionWaitPolicy", type=DataSetIngestionWaitPolicy.class, parameters={})
    private Output</* @Nullable */ DataSetIngestionWaitPolicy> ingestionWaitPolicy;

    public Output<Optional<DataSetIngestionWaitPolicy>> ingestionWaitPolicy() {
        return Codegen.optional(this.ingestionWaitPolicy);
    }
    /**
     * &lt;p&gt;The last time that this dataset was updated.&lt;/p&gt;
     * 
     */
    @Export(name="lastUpdatedTime", type=String.class, parameters={})
    private Output<String> lastUpdatedTime;

    /**
     * @return &lt;p&gt;The last time that this dataset was updated.&lt;/p&gt;
     * 
     */
    public Output<String> lastUpdatedTime() {
        return this.lastUpdatedTime;
    }
    @Export(name="logicalTableMap", type=DataSetLogicalTableMap.class, parameters={})
    private Output</* @Nullable */ DataSetLogicalTableMap> logicalTableMap;

    public Output<Optional<DataSetLogicalTableMap>> logicalTableMap() {
        return Codegen.optional(this.logicalTableMap);
    }
    /**
     * &lt;p&gt;The display name for the dataset.&lt;/p&gt;
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output</* @Nullable */ String> name;

    /**
     * @return &lt;p&gt;The display name for the dataset.&lt;/p&gt;
     * 
     */
    public Output<Optional<String>> name() {
        return Codegen.optional(this.name);
    }
    /**
     * &lt;p&gt;The list of columns after all transforms. These columns are available in templates,
     *             analyses, and dashboards.&lt;/p&gt;
     * 
     */
    @Export(name="outputColumns", type=List.class, parameters={DataSetOutputColumn.class})
    private Output<List<DataSetOutputColumn>> outputColumns;

    /**
     * @return &lt;p&gt;The list of columns after all transforms. These columns are available in templates,
     *             analyses, and dashboards.&lt;/p&gt;
     * 
     */
    public Output<List<DataSetOutputColumn>> outputColumns() {
        return this.outputColumns;
    }
    /**
     * &lt;p&gt;A list of resource permissions on the dataset.&lt;/p&gt;
     * 
     */
    @Export(name="permissions", type=List.class, parameters={DataSetResourcePermission.class})
    private Output</* @Nullable */ List<DataSetResourcePermission>> permissions;

    /**
     * @return &lt;p&gt;A list of resource permissions on the dataset.&lt;/p&gt;
     * 
     */
    public Output<Optional<List<DataSetResourcePermission>>> permissions() {
        return Codegen.optional(this.permissions);
    }
    @Export(name="physicalTableMap", type=DataSetPhysicalTableMap.class, parameters={})
    private Output</* @Nullable */ DataSetPhysicalTableMap> physicalTableMap;

    public Output<Optional<DataSetPhysicalTableMap>> physicalTableMap() {
        return Codegen.optional(this.physicalTableMap);
    }
    @Export(name="rowLevelPermissionDataSet", type=DataSetRowLevelPermissionDataSet.class, parameters={})
    private Output</* @Nullable */ DataSetRowLevelPermissionDataSet> rowLevelPermissionDataSet;

    public Output<Optional<DataSetRowLevelPermissionDataSet>> rowLevelPermissionDataSet() {
        return Codegen.optional(this.rowLevelPermissionDataSet);
    }
    /**
     * &lt;p&gt;Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.&lt;/p&gt;
     * 
     */
    @Export(name="tags", type=List.class, parameters={DataSetTag.class})
    private Output</* @Nullable */ List<DataSetTag>> tags;

    /**
     * @return &lt;p&gt;Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.&lt;/p&gt;
     * 
     */
    public Output<Optional<List<DataSetTag>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DataSet(String name) {
        this(name, DataSetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DataSet(String name, @Nullable DataSetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DataSet(String name, @Nullable DataSetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:quicksight:DataSet", name, args == null ? DataSetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DataSet(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:quicksight:DataSet", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DataSet get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DataSet(name, id, options);
    }
}
