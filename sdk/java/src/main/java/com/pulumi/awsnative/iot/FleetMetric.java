// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iot;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.iot.FleetMetricArgs;
import com.pulumi.awsnative.iot.outputs.FleetMetricAggregationType;
import com.pulumi.awsnative.iot.outputs.FleetMetricTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * An aggregated metric of certain devices in your fleet
 * 
 */
@ResourceType(type="aws-native:iot:FleetMetric")
public class FleetMetric extends com.pulumi.resources.CustomResource {
    /**
     * The aggregation field to perform aggregation and metric emission
     * 
     */
    @Export(name="aggregationField", type=String.class, parameters={})
    private Output</* @Nullable */ String> aggregationField;

    /**
     * @return The aggregation field to perform aggregation and metric emission
     * 
     */
    public Output<Optional<String>> aggregationField() {
        return Codegen.optional(this.aggregationField);
    }
    @Export(name="aggregationType", type=FleetMetricAggregationType.class, parameters={})
    private Output</* @Nullable */ FleetMetricAggregationType> aggregationType;

    public Output<Optional<FleetMetricAggregationType>> aggregationType() {
        return Codegen.optional(this.aggregationType);
    }
    /**
     * The creation date of a fleet metric
     * 
     */
    @Export(name="creationDate", type=Double.class, parameters={})
    private Output<Double> creationDate;

    /**
     * @return The creation date of a fleet metric
     * 
     */
    public Output<Double> creationDate() {
        return this.creationDate;
    }
    /**
     * The description of a fleet metric
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of a fleet metric
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The index name of a fleet metric
     * 
     */
    @Export(name="indexName", type=String.class, parameters={})
    private Output</* @Nullable */ String> indexName;

    /**
     * @return The index name of a fleet metric
     * 
     */
    public Output<Optional<String>> indexName() {
        return Codegen.optional(this.indexName);
    }
    /**
     * The last modified date of a fleet metric
     * 
     */
    @Export(name="lastModifiedDate", type=Double.class, parameters={})
    private Output<Double> lastModifiedDate;

    /**
     * @return The last modified date of a fleet metric
     * 
     */
    public Output<Double> lastModifiedDate() {
        return this.lastModifiedDate;
    }
    /**
     * The Amazon Resource Number (ARN) of a fleet metric metric
     * 
     */
    @Export(name="metricArn", type=String.class, parameters={})
    private Output<String> metricArn;

    /**
     * @return The Amazon Resource Number (ARN) of a fleet metric metric
     * 
     */
    public Output<String> metricArn() {
        return this.metricArn;
    }
    /**
     * The name of the fleet metric
     * 
     */
    @Export(name="metricName", type=String.class, parameters={})
    private Output<String> metricName;

    /**
     * @return The name of the fleet metric
     * 
     */
    public Output<String> metricName() {
        return this.metricName;
    }
    /**
     * The period of metric emission in seconds
     * 
     */
    @Export(name="period", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> period;

    /**
     * @return The period of metric emission in seconds
     * 
     */
    public Output<Optional<Integer>> period() {
        return Codegen.optional(this.period);
    }
    /**
     * The Fleet Indexing query used by a fleet metric
     * 
     */
    @Export(name="queryString", type=String.class, parameters={})
    private Output</* @Nullable */ String> queryString;

    /**
     * @return The Fleet Indexing query used by a fleet metric
     * 
     */
    public Output<Optional<String>> queryString() {
        return Codegen.optional(this.queryString);
    }
    /**
     * The version of a Fleet Indexing query used by a fleet metric
     * 
     */
    @Export(name="queryVersion", type=String.class, parameters={})
    private Output</* @Nullable */ String> queryVersion;

    /**
     * @return The version of a Fleet Indexing query used by a fleet metric
     * 
     */
    public Output<Optional<String>> queryVersion() {
        return Codegen.optional(this.queryVersion);
    }
    /**
     * An array of key-value pairs to apply to this resource
     * 
     */
    @Export(name="tags", type=List.class, parameters={FleetMetricTag.class})
    private Output</* @Nullable */ List<FleetMetricTag>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource
     * 
     */
    public Output<Optional<List<FleetMetricTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The unit of data points emitted by a fleet metric
     * 
     */
    @Export(name="unit", type=String.class, parameters={})
    private Output</* @Nullable */ String> unit;

    /**
     * @return The unit of data points emitted by a fleet metric
     * 
     */
    public Output<Optional<String>> unit() {
        return Codegen.optional(this.unit);
    }
    /**
     * The version of a fleet metric
     * 
     */
    @Export(name="version", type=Double.class, parameters={})
    private Output<Double> version;

    /**
     * @return The version of a fleet metric
     * 
     */
    public Output<Double> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FleetMetric(String name) {
        this(name, FleetMetricArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FleetMetric(String name, FleetMetricArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FleetMetric(String name, FleetMetricArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:iot:FleetMetric", name, args == null ? FleetMetricArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private FleetMetric(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:iot:FleetMetric", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FleetMetric get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FleetMetric(name, id, options);
    }
}
