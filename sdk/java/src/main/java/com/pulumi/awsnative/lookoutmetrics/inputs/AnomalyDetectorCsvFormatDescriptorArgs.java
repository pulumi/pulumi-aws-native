// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lookoutmetrics.inputs;

import com.pulumi.awsnative.lookoutmetrics.enums.AnomalyDetectorCsvFormatDescriptorFileCompression;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AnomalyDetectorCsvFormatDescriptorArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnomalyDetectorCsvFormatDescriptorArgs Empty = new AnomalyDetectorCsvFormatDescriptorArgs();

    @Import(name="charset")
    private @Nullable Output<String> charset;

    public Optional<Output<String>> charset() {
        return Optional.ofNullable(this.charset);
    }

    @Import(name="containsHeader")
    private @Nullable Output<Boolean> containsHeader;

    public Optional<Output<Boolean>> containsHeader() {
        return Optional.ofNullable(this.containsHeader);
    }

    @Import(name="delimiter")
    private @Nullable Output<String> delimiter;

    public Optional<Output<String>> delimiter() {
        return Optional.ofNullable(this.delimiter);
    }

    @Import(name="fileCompression")
    private @Nullable Output<AnomalyDetectorCsvFormatDescriptorFileCompression> fileCompression;

    public Optional<Output<AnomalyDetectorCsvFormatDescriptorFileCompression>> fileCompression() {
        return Optional.ofNullable(this.fileCompression);
    }

    @Import(name="headerList")
    private @Nullable Output<List<String>> headerList;

    public Optional<Output<List<String>>> headerList() {
        return Optional.ofNullable(this.headerList);
    }

    @Import(name="quoteSymbol")
    private @Nullable Output<String> quoteSymbol;

    public Optional<Output<String>> quoteSymbol() {
        return Optional.ofNullable(this.quoteSymbol);
    }

    private AnomalyDetectorCsvFormatDescriptorArgs() {}

    private AnomalyDetectorCsvFormatDescriptorArgs(AnomalyDetectorCsvFormatDescriptorArgs $) {
        this.charset = $.charset;
        this.containsHeader = $.containsHeader;
        this.delimiter = $.delimiter;
        this.fileCompression = $.fileCompression;
        this.headerList = $.headerList;
        this.quoteSymbol = $.quoteSymbol;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnomalyDetectorCsvFormatDescriptorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnomalyDetectorCsvFormatDescriptorArgs $;

        public Builder() {
            $ = new AnomalyDetectorCsvFormatDescriptorArgs();
        }

        public Builder(AnomalyDetectorCsvFormatDescriptorArgs defaults) {
            $ = new AnomalyDetectorCsvFormatDescriptorArgs(Objects.requireNonNull(defaults));
        }

        public Builder charset(@Nullable Output<String> charset) {
            $.charset = charset;
            return this;
        }

        public Builder charset(String charset) {
            return charset(Output.of(charset));
        }

        public Builder containsHeader(@Nullable Output<Boolean> containsHeader) {
            $.containsHeader = containsHeader;
            return this;
        }

        public Builder containsHeader(Boolean containsHeader) {
            return containsHeader(Output.of(containsHeader));
        }

        public Builder delimiter(@Nullable Output<String> delimiter) {
            $.delimiter = delimiter;
            return this;
        }

        public Builder delimiter(String delimiter) {
            return delimiter(Output.of(delimiter));
        }

        public Builder fileCompression(@Nullable Output<AnomalyDetectorCsvFormatDescriptorFileCompression> fileCompression) {
            $.fileCompression = fileCompression;
            return this;
        }

        public Builder fileCompression(AnomalyDetectorCsvFormatDescriptorFileCompression fileCompression) {
            return fileCompression(Output.of(fileCompression));
        }

        public Builder headerList(@Nullable Output<List<String>> headerList) {
            $.headerList = headerList;
            return this;
        }

        public Builder headerList(List<String> headerList) {
            return headerList(Output.of(headerList));
        }

        public Builder headerList(String... headerList) {
            return headerList(List.of(headerList));
        }

        public Builder quoteSymbol(@Nullable Output<String> quoteSymbol) {
            $.quoteSymbol = quoteSymbol;
            return this;
        }

        public Builder quoteSymbol(String quoteSymbol) {
            return quoteSymbol(Output.of(quoteSymbol));
        }

        public AnomalyDetectorCsvFormatDescriptorArgs build() {
            return $;
        }
    }

}
