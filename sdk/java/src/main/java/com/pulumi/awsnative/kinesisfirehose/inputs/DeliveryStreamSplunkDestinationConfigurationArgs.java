// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisfirehose.inputs;

import com.pulumi.awsnative.kinesisfirehose.enums.DeliveryStreamSplunkDestinationConfigurationHECEndpointType;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamCloudWatchLoggingOptionsArgs;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamProcessingConfigurationArgs;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamS3DestinationConfigurationArgs;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamSplunkRetryOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeliveryStreamSplunkDestinationConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeliveryStreamSplunkDestinationConfigurationArgs Empty = new DeliveryStreamSplunkDestinationConfigurationArgs();

    @Import(name="cloudWatchLoggingOptions")
    private @Nullable Output<DeliveryStreamCloudWatchLoggingOptionsArgs> cloudWatchLoggingOptions;

    public Optional<Output<DeliveryStreamCloudWatchLoggingOptionsArgs>> cloudWatchLoggingOptions() {
        return Optional.ofNullable(this.cloudWatchLoggingOptions);
    }

    @Import(name="hECAcknowledgmentTimeoutInSeconds")
    private @Nullable Output<Integer> hECAcknowledgmentTimeoutInSeconds;

    public Optional<Output<Integer>> hECAcknowledgmentTimeoutInSeconds() {
        return Optional.ofNullable(this.hECAcknowledgmentTimeoutInSeconds);
    }

    @Import(name="hECEndpoint", required=true)
    private Output<String> hECEndpoint;

    public Output<String> hECEndpoint() {
        return this.hECEndpoint;
    }

    @Import(name="hECEndpointType", required=true)
    private Output<DeliveryStreamSplunkDestinationConfigurationHECEndpointType> hECEndpointType;

    public Output<DeliveryStreamSplunkDestinationConfigurationHECEndpointType> hECEndpointType() {
        return this.hECEndpointType;
    }

    @Import(name="hECToken", required=true)
    private Output<String> hECToken;

    public Output<String> hECToken() {
        return this.hECToken;
    }

    @Import(name="processingConfiguration")
    private @Nullable Output<DeliveryStreamProcessingConfigurationArgs> processingConfiguration;

    public Optional<Output<DeliveryStreamProcessingConfigurationArgs>> processingConfiguration() {
        return Optional.ofNullable(this.processingConfiguration);
    }

    @Import(name="retryOptions")
    private @Nullable Output<DeliveryStreamSplunkRetryOptionsArgs> retryOptions;

    public Optional<Output<DeliveryStreamSplunkRetryOptionsArgs>> retryOptions() {
        return Optional.ofNullable(this.retryOptions);
    }

    @Import(name="s3BackupMode")
    private @Nullable Output<String> s3BackupMode;

    public Optional<Output<String>> s3BackupMode() {
        return Optional.ofNullable(this.s3BackupMode);
    }

    @Import(name="s3Configuration", required=true)
    private Output<DeliveryStreamS3DestinationConfigurationArgs> s3Configuration;

    public Output<DeliveryStreamS3DestinationConfigurationArgs> s3Configuration() {
        return this.s3Configuration;
    }

    private DeliveryStreamSplunkDestinationConfigurationArgs() {}

    private DeliveryStreamSplunkDestinationConfigurationArgs(DeliveryStreamSplunkDestinationConfigurationArgs $) {
        this.cloudWatchLoggingOptions = $.cloudWatchLoggingOptions;
        this.hECAcknowledgmentTimeoutInSeconds = $.hECAcknowledgmentTimeoutInSeconds;
        this.hECEndpoint = $.hECEndpoint;
        this.hECEndpointType = $.hECEndpointType;
        this.hECToken = $.hECToken;
        this.processingConfiguration = $.processingConfiguration;
        this.retryOptions = $.retryOptions;
        this.s3BackupMode = $.s3BackupMode;
        this.s3Configuration = $.s3Configuration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeliveryStreamSplunkDestinationConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeliveryStreamSplunkDestinationConfigurationArgs $;

        public Builder() {
            $ = new DeliveryStreamSplunkDestinationConfigurationArgs();
        }

        public Builder(DeliveryStreamSplunkDestinationConfigurationArgs defaults) {
            $ = new DeliveryStreamSplunkDestinationConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder cloudWatchLoggingOptions(@Nullable Output<DeliveryStreamCloudWatchLoggingOptionsArgs> cloudWatchLoggingOptions) {
            $.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
            return this;
        }

        public Builder cloudWatchLoggingOptions(DeliveryStreamCloudWatchLoggingOptionsArgs cloudWatchLoggingOptions) {
            return cloudWatchLoggingOptions(Output.of(cloudWatchLoggingOptions));
        }

        public Builder hECAcknowledgmentTimeoutInSeconds(@Nullable Output<Integer> hECAcknowledgmentTimeoutInSeconds) {
            $.hECAcknowledgmentTimeoutInSeconds = hECAcknowledgmentTimeoutInSeconds;
            return this;
        }

        public Builder hECAcknowledgmentTimeoutInSeconds(Integer hECAcknowledgmentTimeoutInSeconds) {
            return hECAcknowledgmentTimeoutInSeconds(Output.of(hECAcknowledgmentTimeoutInSeconds));
        }

        public Builder hECEndpoint(Output<String> hECEndpoint) {
            $.hECEndpoint = hECEndpoint;
            return this;
        }

        public Builder hECEndpoint(String hECEndpoint) {
            return hECEndpoint(Output.of(hECEndpoint));
        }

        public Builder hECEndpointType(Output<DeliveryStreamSplunkDestinationConfigurationHECEndpointType> hECEndpointType) {
            $.hECEndpointType = hECEndpointType;
            return this;
        }

        public Builder hECEndpointType(DeliveryStreamSplunkDestinationConfigurationHECEndpointType hECEndpointType) {
            return hECEndpointType(Output.of(hECEndpointType));
        }

        public Builder hECToken(Output<String> hECToken) {
            $.hECToken = hECToken;
            return this;
        }

        public Builder hECToken(String hECToken) {
            return hECToken(Output.of(hECToken));
        }

        public Builder processingConfiguration(@Nullable Output<DeliveryStreamProcessingConfigurationArgs> processingConfiguration) {
            $.processingConfiguration = processingConfiguration;
            return this;
        }

        public Builder processingConfiguration(DeliveryStreamProcessingConfigurationArgs processingConfiguration) {
            return processingConfiguration(Output.of(processingConfiguration));
        }

        public Builder retryOptions(@Nullable Output<DeliveryStreamSplunkRetryOptionsArgs> retryOptions) {
            $.retryOptions = retryOptions;
            return this;
        }

        public Builder retryOptions(DeliveryStreamSplunkRetryOptionsArgs retryOptions) {
            return retryOptions(Output.of(retryOptions));
        }

        public Builder s3BackupMode(@Nullable Output<String> s3BackupMode) {
            $.s3BackupMode = s3BackupMode;
            return this;
        }

        public Builder s3BackupMode(String s3BackupMode) {
            return s3BackupMode(Output.of(s3BackupMode));
        }

        public Builder s3Configuration(Output<DeliveryStreamS3DestinationConfigurationArgs> s3Configuration) {
            $.s3Configuration = s3Configuration;
            return this;
        }

        public Builder s3Configuration(DeliveryStreamS3DestinationConfigurationArgs s3Configuration) {
            return s3Configuration(Output.of(s3Configuration));
        }

        public DeliveryStreamSplunkDestinationConfigurationArgs build() {
            $.hECEndpoint = Objects.requireNonNull($.hECEndpoint, "expected parameter 'hECEndpoint' to be non-null");
            $.hECEndpointType = Objects.requireNonNull($.hECEndpointType, "expected parameter 'hECEndpointType' to be non-null");
            $.hECToken = Objects.requireNonNull($.hECToken, "expected parameter 'hECToken' to be non-null");
            $.s3Configuration = Objects.requireNonNull($.s3Configuration, "expected parameter 's3Configuration' to be non-null");
            return $;
        }
    }

}
