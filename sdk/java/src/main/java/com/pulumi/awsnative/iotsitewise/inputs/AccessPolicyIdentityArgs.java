// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotsitewise.inputs;

import com.pulumi.awsnative.iotsitewise.inputs.AccessPolicyIamRoleArgs;
import com.pulumi.awsnative.iotsitewise.inputs.AccessPolicyIamUserArgs;
import com.pulumi.awsnative.iotsitewise.inputs.AccessPolicyUserArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The identity for this access policy. Choose either an SSO user or group or an IAM user or role.
 * 
 */
public final class AccessPolicyIdentityArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessPolicyIdentityArgs Empty = new AccessPolicyIdentityArgs();

    @Import(name="iamRole")
    private @Nullable Output<AccessPolicyIamRoleArgs> iamRole;

    public Optional<Output<AccessPolicyIamRoleArgs>> iamRole() {
        return Optional.ofNullable(this.iamRole);
    }

    @Import(name="iamUser")
    private @Nullable Output<AccessPolicyIamUserArgs> iamUser;

    public Optional<Output<AccessPolicyIamUserArgs>> iamUser() {
        return Optional.ofNullable(this.iamUser);
    }

    @Import(name="user")
    private @Nullable Output<AccessPolicyUserArgs> user;

    public Optional<Output<AccessPolicyUserArgs>> user() {
        return Optional.ofNullable(this.user);
    }

    private AccessPolicyIdentityArgs() {}

    private AccessPolicyIdentityArgs(AccessPolicyIdentityArgs $) {
        this.iamRole = $.iamRole;
        this.iamUser = $.iamUser;
        this.user = $.user;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessPolicyIdentityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessPolicyIdentityArgs $;

        public Builder() {
            $ = new AccessPolicyIdentityArgs();
        }

        public Builder(AccessPolicyIdentityArgs defaults) {
            $ = new AccessPolicyIdentityArgs(Objects.requireNonNull(defaults));
        }

        public Builder iamRole(@Nullable Output<AccessPolicyIamRoleArgs> iamRole) {
            $.iamRole = iamRole;
            return this;
        }

        public Builder iamRole(AccessPolicyIamRoleArgs iamRole) {
            return iamRole(Output.of(iamRole));
        }

        public Builder iamUser(@Nullable Output<AccessPolicyIamUserArgs> iamUser) {
            $.iamUser = iamUser;
            return this;
        }

        public Builder iamUser(AccessPolicyIamUserArgs iamUser) {
            return iamUser(Output.of(iamUser));
        }

        public Builder user(@Nullable Output<AccessPolicyUserArgs> user) {
            $.user = user;
            return this;
        }

        public Builder user(AccessPolicyUserArgs user) {
            return user(Output.of(user));
        }

        public AccessPolicyIdentityArgs build() {
            return $;
        }
    }

}
