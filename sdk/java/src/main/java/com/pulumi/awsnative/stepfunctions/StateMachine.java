// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.stepfunctions;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.stepfunctions.StateMachineArgs;
import com.pulumi.awsnative.stepfunctions.enums.StateMachineType;
import com.pulumi.awsnative.stepfunctions.outputs.StateMachineDefinition;
import com.pulumi.awsnative.stepfunctions.outputs.StateMachineDefinitionSubstitutions;
import com.pulumi.awsnative.stepfunctions.outputs.StateMachineLoggingConfiguration;
import com.pulumi.awsnative.stepfunctions.outputs.StateMachineS3Location;
import com.pulumi.awsnative.stepfunctions.outputs.StateMachineTagsEntry;
import com.pulumi.awsnative.stepfunctions.outputs.StateMachineTracingConfiguration;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource schema for StateMachine
 * 
 * ## Example Usage
 * 
 */
@ResourceType(type="aws-native:stepfunctions:StateMachine")
public class StateMachine extends com.pulumi.resources.CustomResource {
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="definition", type=StateMachineDefinition.class, parameters={})
    private Output</* @Nullable */ StateMachineDefinition> definition;

    public Output<Optional<StateMachineDefinition>> definition() {
        return Codegen.optional(this.definition);
    }
    @Export(name="definitionS3Location", type=StateMachineS3Location.class, parameters={})
    private Output</* @Nullable */ StateMachineS3Location> definitionS3Location;

    public Output<Optional<StateMachineS3Location>> definitionS3Location() {
        return Codegen.optional(this.definitionS3Location);
    }
    @Export(name="definitionString", type=String.class, parameters={})
    private Output</* @Nullable */ String> definitionString;

    public Output<Optional<String>> definitionString() {
        return Codegen.optional(this.definitionString);
    }
    @Export(name="definitionSubstitutions", type=StateMachineDefinitionSubstitutions.class, parameters={})
    private Output</* @Nullable */ StateMachineDefinitionSubstitutions> definitionSubstitutions;

    public Output<Optional<StateMachineDefinitionSubstitutions>> definitionSubstitutions() {
        return Codegen.optional(this.definitionSubstitutions);
    }
    @Export(name="loggingConfiguration", type=StateMachineLoggingConfiguration.class, parameters={})
    private Output</* @Nullable */ StateMachineLoggingConfiguration> loggingConfiguration;

    public Output<Optional<StateMachineLoggingConfiguration>> loggingConfiguration() {
        return Codegen.optional(this.loggingConfiguration);
    }
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="roleArn", type=String.class, parameters={})
    private Output<String> roleArn;

    public Output<String> roleArn() {
        return this.roleArn;
    }
    @Export(name="stateMachineName", type=String.class, parameters={})
    private Output</* @Nullable */ String> stateMachineName;

    public Output<Optional<String>> stateMachineName() {
        return Codegen.optional(this.stateMachineName);
    }
    @Export(name="stateMachineType", type=StateMachineType.class, parameters={})
    private Output</* @Nullable */ StateMachineType> stateMachineType;

    public Output<Optional<StateMachineType>> stateMachineType() {
        return Codegen.optional(this.stateMachineType);
    }
    @Export(name="tags", type=List.class, parameters={StateMachineTagsEntry.class})
    private Output</* @Nullable */ List<StateMachineTagsEntry>> tags;

    public Output<Optional<List<StateMachineTagsEntry>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="tracingConfiguration", type=StateMachineTracingConfiguration.class, parameters={})
    private Output</* @Nullable */ StateMachineTracingConfiguration> tracingConfiguration;

    public Output<Optional<StateMachineTracingConfiguration>> tracingConfiguration() {
        return Codegen.optional(this.tracingConfiguration);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StateMachine(String name) {
        this(name, StateMachineArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StateMachine(String name, StateMachineArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StateMachine(String name, StateMachineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:stepfunctions:StateMachine", name, args == null ? StateMachineArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private StateMachine(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:stepfunctions:StateMachine", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StateMachine get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StateMachine(name, id, options);
    }
}
