// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.quicksight.DashboardArgs;
import com.pulumi.awsnative.quicksight.outputs.DashboardParameters;
import com.pulumi.awsnative.quicksight.outputs.DashboardPublishOptions;
import com.pulumi.awsnative.quicksight.outputs.DashboardResourcePermission;
import com.pulumi.awsnative.quicksight.outputs.DashboardSourceEntity;
import com.pulumi.awsnative.quicksight.outputs.DashboardTag;
import com.pulumi.awsnative.quicksight.outputs.DashboardVersion;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Definition of the AWS::QuickSight::Dashboard Resource Type.
 * 
 */
@ResourceType(type="aws-native:quicksight:Dashboard")
public class Dashboard extends com.pulumi.resources.CustomResource {
    /**
     * &lt;p&gt;The Amazon Resource Name (ARN) of the resource.&lt;/p&gt;
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return &lt;p&gt;The Amazon Resource Name (ARN) of the resource.&lt;/p&gt;
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="awsAccountId", type=String.class, parameters={})
    private Output<String> awsAccountId;

    public Output<String> awsAccountId() {
        return this.awsAccountId;
    }
    /**
     * &lt;p&gt;The time that this dataset was created.&lt;/p&gt;
     * 
     */
    @Export(name="createdTime", type=String.class, parameters={})
    private Output<String> createdTime;

    /**
     * @return &lt;p&gt;The time that this dataset was created.&lt;/p&gt;
     * 
     */
    public Output<String> createdTime() {
        return this.createdTime;
    }
    @Export(name="dashboardId", type=String.class, parameters={})
    private Output<String> dashboardId;

    public Output<String> dashboardId() {
        return this.dashboardId;
    }
    @Export(name="dashboardPublishOptions", type=DashboardPublishOptions.class, parameters={})
    private Output</* @Nullable */ DashboardPublishOptions> dashboardPublishOptions;

    public Output<Optional<DashboardPublishOptions>> dashboardPublishOptions() {
        return Codegen.optional(this.dashboardPublishOptions);
    }
    /**
     * &lt;p&gt;The last time that this dataset was published.&lt;/p&gt;
     * 
     */
    @Export(name="lastPublishedTime", type=String.class, parameters={})
    private Output<String> lastPublishedTime;

    /**
     * @return &lt;p&gt;The last time that this dataset was published.&lt;/p&gt;
     * 
     */
    public Output<String> lastPublishedTime() {
        return this.lastPublishedTime;
    }
    /**
     * &lt;p&gt;The last time that this dataset was updated.&lt;/p&gt;
     * 
     */
    @Export(name="lastUpdatedTime", type=String.class, parameters={})
    private Output<String> lastUpdatedTime;

    /**
     * @return &lt;p&gt;The last time that this dataset was updated.&lt;/p&gt;
     * 
     */
    public Output<String> lastUpdatedTime() {
        return this.lastUpdatedTime;
    }
    /**
     * &lt;p&gt;The display name of the dashboard.&lt;/p&gt;
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output</* @Nullable */ String> name;

    /**
     * @return &lt;p&gt;The display name of the dashboard.&lt;/p&gt;
     * 
     */
    public Output<Optional<String>> name() {
        return Codegen.optional(this.name);
    }
    @Export(name="parameters", type=DashboardParameters.class, parameters={})
    private Output</* @Nullable */ DashboardParameters> parameters;

    public Output<Optional<DashboardParameters>> parameters() {
        return Codegen.optional(this.parameters);
    }
    /**
     * &lt;p&gt;A structure that contains the permissions of the dashboard. You can use this structure
     *             for granting permissions by providing a list of IAM action information for each
     *             principal ARN. &lt;/p&gt;
     * 
     *         &lt;p&gt;To specify no permissions, omit the permissions list.&lt;/p&gt;
     * 
     */
    @Export(name="permissions", type=List.class, parameters={DashboardResourcePermission.class})
    private Output</* @Nullable */ List<DashboardResourcePermission>> permissions;

    /**
     * @return &lt;p&gt;A structure that contains the permissions of the dashboard. You can use this structure
     *             for granting permissions by providing a list of IAM action information for each
     *             principal ARN. &lt;/p&gt;
     * 
     *         &lt;p&gt;To specify no permissions, omit the permissions list.&lt;/p&gt;
     * 
     */
    public Output<Optional<List<DashboardResourcePermission>>> permissions() {
        return Codegen.optional(this.permissions);
    }
    @Export(name="sourceEntity", type=DashboardSourceEntity.class, parameters={})
    private Output<DashboardSourceEntity> sourceEntity;

    public Output<DashboardSourceEntity> sourceEntity() {
        return this.sourceEntity;
    }
    /**
     * &lt;p&gt;Contains a map of the key-value pairs for the resource tag or tags assigned to the
     *             dashboard.&lt;/p&gt;
     * 
     */
    @Export(name="tags", type=List.class, parameters={DashboardTag.class})
    private Output</* @Nullable */ List<DashboardTag>> tags;

    /**
     * @return &lt;p&gt;Contains a map of the key-value pairs for the resource tag or tags assigned to the
     *             dashboard.&lt;/p&gt;
     * 
     */
    public Output<Optional<List<DashboardTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * &lt;p&gt;The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If
     *             you add a value for this field, it overrides the value that is used in the source
     *             entity. The theme ARN must exist in the same AWS account where you create the
     *             dashboard.&lt;/p&gt;
     * 
     */
    @Export(name="themeArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> themeArn;

    /**
     * @return &lt;p&gt;The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If
     *             you add a value for this field, it overrides the value that is used in the source
     *             entity. The theme ARN must exist in the same AWS account where you create the
     *             dashboard.&lt;/p&gt;
     * 
     */
    public Output<Optional<String>> themeArn() {
        return Codegen.optional(this.themeArn);
    }
    @Export(name="version", type=DashboardVersion.class, parameters={})
    private Output<DashboardVersion> version;

    public Output<DashboardVersion> version() {
        return this.version;
    }
    /**
     * &lt;p&gt;A description for the first version of the dashboard being created.&lt;/p&gt;
     * 
     */
    @Export(name="versionDescription", type=String.class, parameters={})
    private Output</* @Nullable */ String> versionDescription;

    /**
     * @return &lt;p&gt;A description for the first version of the dashboard being created.&lt;/p&gt;
     * 
     */
    public Output<Optional<String>> versionDescription() {
        return Codegen.optional(this.versionDescription);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Dashboard(String name) {
        this(name, DashboardArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Dashboard(String name, DashboardArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Dashboard(String name, DashboardArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:quicksight:Dashboard", name, args == null ? DashboardArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Dashboard(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:quicksight:Dashboard", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Dashboard get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Dashboard(name, id, options);
    }
}
