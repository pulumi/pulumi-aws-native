// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.applicationinsights.outputs;

import com.pulumi.awsnative.applicationinsights.enums.ApplicationGroupingType;
import com.pulumi.awsnative.applicationinsights.outputs.ApplicationComponentMonitoringSetting;
import com.pulumi.awsnative.applicationinsights.outputs.ApplicationCustomComponent;
import com.pulumi.awsnative.applicationinsights.outputs.ApplicationLogPatternSet;
import com.pulumi.awsnative.applicationinsights.outputs.ApplicationTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetApplicationResult {
    /**
     * @return The ARN of the ApplicationInsights application.
     * 
     */
    private @Nullable String applicationARN;
    /**
     * @return If set to true, application will be configured with recommended monitoring configuration.
     * 
     */
    private @Nullable Boolean autoConfigurationEnabled;
    /**
     * @return Indicates whether Application Insights can listen to CloudWatch events for the application resources.
     * 
     */
    private @Nullable Boolean cWEMonitorEnabled;
    /**
     * @return The monitoring settings of the components.
     * 
     */
    private @Nullable List<ApplicationComponentMonitoringSetting> componentMonitoringSettings;
    /**
     * @return The custom grouped components.
     * 
     */
    private @Nullable List<ApplicationCustomComponent> customComponents;
    /**
     * @return The grouping type of the application
     * 
     */
    private @Nullable ApplicationGroupingType groupingType;
    /**
     * @return The log pattern sets.
     * 
     */
    private @Nullable List<ApplicationLogPatternSet> logPatternSets;
    /**
     * @return When set to true, creates opsItems for any problems detected on an application.
     * 
     */
    private @Nullable Boolean opsCenterEnabled;
    /**
     * @return The SNS topic provided to Application Insights that is associated to the created opsItem.
     * 
     */
    private @Nullable String opsItemSNSTopicArn;
    /**
     * @return The tags of Application Insights application.
     * 
     */
    private @Nullable List<ApplicationTag> tags;

    private GetApplicationResult() {}
    /**
     * @return The ARN of the ApplicationInsights application.
     * 
     */
    public Optional<String> applicationARN() {
        return Optional.ofNullable(this.applicationARN);
    }
    /**
     * @return If set to true, application will be configured with recommended monitoring configuration.
     * 
     */
    public Optional<Boolean> autoConfigurationEnabled() {
        return Optional.ofNullable(this.autoConfigurationEnabled);
    }
    /**
     * @return Indicates whether Application Insights can listen to CloudWatch events for the application resources.
     * 
     */
    public Optional<Boolean> cWEMonitorEnabled() {
        return Optional.ofNullable(this.cWEMonitorEnabled);
    }
    /**
     * @return The monitoring settings of the components.
     * 
     */
    public List<ApplicationComponentMonitoringSetting> componentMonitoringSettings() {
        return this.componentMonitoringSettings == null ? List.of() : this.componentMonitoringSettings;
    }
    /**
     * @return The custom grouped components.
     * 
     */
    public List<ApplicationCustomComponent> customComponents() {
        return this.customComponents == null ? List.of() : this.customComponents;
    }
    /**
     * @return The grouping type of the application
     * 
     */
    public Optional<ApplicationGroupingType> groupingType() {
        return Optional.ofNullable(this.groupingType);
    }
    /**
     * @return The log pattern sets.
     * 
     */
    public List<ApplicationLogPatternSet> logPatternSets() {
        return this.logPatternSets == null ? List.of() : this.logPatternSets;
    }
    /**
     * @return When set to true, creates opsItems for any problems detected on an application.
     * 
     */
    public Optional<Boolean> opsCenterEnabled() {
        return Optional.ofNullable(this.opsCenterEnabled);
    }
    /**
     * @return The SNS topic provided to Application Insights that is associated to the created opsItem.
     * 
     */
    public Optional<String> opsItemSNSTopicArn() {
        return Optional.ofNullable(this.opsItemSNSTopicArn);
    }
    /**
     * @return The tags of Application Insights application.
     * 
     */
    public List<ApplicationTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String applicationARN;
        private @Nullable Boolean autoConfigurationEnabled;
        private @Nullable Boolean cWEMonitorEnabled;
        private @Nullable List<ApplicationComponentMonitoringSetting> componentMonitoringSettings;
        private @Nullable List<ApplicationCustomComponent> customComponents;
        private @Nullable ApplicationGroupingType groupingType;
        private @Nullable List<ApplicationLogPatternSet> logPatternSets;
        private @Nullable Boolean opsCenterEnabled;
        private @Nullable String opsItemSNSTopicArn;
        private @Nullable List<ApplicationTag> tags;
        public Builder() {}
        public Builder(GetApplicationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationARN = defaults.applicationARN;
    	      this.autoConfigurationEnabled = defaults.autoConfigurationEnabled;
    	      this.cWEMonitorEnabled = defaults.cWEMonitorEnabled;
    	      this.componentMonitoringSettings = defaults.componentMonitoringSettings;
    	      this.customComponents = defaults.customComponents;
    	      this.groupingType = defaults.groupingType;
    	      this.logPatternSets = defaults.logPatternSets;
    	      this.opsCenterEnabled = defaults.opsCenterEnabled;
    	      this.opsItemSNSTopicArn = defaults.opsItemSNSTopicArn;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder applicationARN(@Nullable String applicationARN) {
            this.applicationARN = applicationARN;
            return this;
        }
        @CustomType.Setter
        public Builder autoConfigurationEnabled(@Nullable Boolean autoConfigurationEnabled) {
            this.autoConfigurationEnabled = autoConfigurationEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder cWEMonitorEnabled(@Nullable Boolean cWEMonitorEnabled) {
            this.cWEMonitorEnabled = cWEMonitorEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder componentMonitoringSettings(@Nullable List<ApplicationComponentMonitoringSetting> componentMonitoringSettings) {
            this.componentMonitoringSettings = componentMonitoringSettings;
            return this;
        }
        public Builder componentMonitoringSettings(ApplicationComponentMonitoringSetting... componentMonitoringSettings) {
            return componentMonitoringSettings(List.of(componentMonitoringSettings));
        }
        @CustomType.Setter
        public Builder customComponents(@Nullable List<ApplicationCustomComponent> customComponents) {
            this.customComponents = customComponents;
            return this;
        }
        public Builder customComponents(ApplicationCustomComponent... customComponents) {
            return customComponents(List.of(customComponents));
        }
        @CustomType.Setter
        public Builder groupingType(@Nullable ApplicationGroupingType groupingType) {
            this.groupingType = groupingType;
            return this;
        }
        @CustomType.Setter
        public Builder logPatternSets(@Nullable List<ApplicationLogPatternSet> logPatternSets) {
            this.logPatternSets = logPatternSets;
            return this;
        }
        public Builder logPatternSets(ApplicationLogPatternSet... logPatternSets) {
            return logPatternSets(List.of(logPatternSets));
        }
        @CustomType.Setter
        public Builder opsCenterEnabled(@Nullable Boolean opsCenterEnabled) {
            this.opsCenterEnabled = opsCenterEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder opsItemSNSTopicArn(@Nullable String opsItemSNSTopicArn) {
            this.opsItemSNSTopicArn = opsItemSNSTopicArn;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<ApplicationTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(ApplicationTag... tags) {
            return tags(List.of(tags));
        }
        public GetApplicationResult build() {
            final var o = new GetApplicationResult();
            o.applicationARN = applicationARN;
            o.autoConfigurationEnabled = autoConfigurationEnabled;
            o.cWEMonitorEnabled = cWEMonitorEnabled;
            o.componentMonitoringSettings = componentMonitoringSettings;
            o.customComponents = customComponents;
            o.groupingType = groupingType;
            o.logPatternSets = logPatternSets;
            o.opsCenterEnabled = opsCenterEnabled;
            o.opsItemSNSTopicArn = opsItemSNSTopicArn;
            o.tags = tags;
            return o;
        }
    }
}
