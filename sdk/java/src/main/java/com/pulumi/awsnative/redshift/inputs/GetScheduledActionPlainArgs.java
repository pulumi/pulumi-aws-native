// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.redshift.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetScheduledActionPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetScheduledActionPlainArgs Empty = new GetScheduledActionPlainArgs();

    /**
     * The name of the scheduled action. The name must be unique within an account.
     * 
     */
    @Import(name="scheduledActionName", required=true)
    private String scheduledActionName;

    /**
     * @return The name of the scheduled action. The name must be unique within an account.
     * 
     */
    public String scheduledActionName() {
        return this.scheduledActionName;
    }

    private GetScheduledActionPlainArgs() {}

    private GetScheduledActionPlainArgs(GetScheduledActionPlainArgs $) {
        this.scheduledActionName = $.scheduledActionName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetScheduledActionPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetScheduledActionPlainArgs $;

        public Builder() {
            $ = new GetScheduledActionPlainArgs();
        }

        public Builder(GetScheduledActionPlainArgs defaults) {
            $ = new GetScheduledActionPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param scheduledActionName The name of the scheduled action. The name must be unique within an account.
         * 
         * @return builder
         * 
         */
        public Builder scheduledActionName(String scheduledActionName) {
            $.scheduledActionName = scheduledActionName;
            return this;
        }

        public GetScheduledActionPlainArgs build() {
            $.scheduledActionName = Objects.requireNonNull($.scheduledActionName, "expected parameter 'scheduledActionName' to be non-null");
            return $;
        }
    }

}
