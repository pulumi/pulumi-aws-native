// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iot;

import com.pulumi.awsnative.iot.enums.DomainConfigurationServiceType;
import com.pulumi.awsnative.iot.enums.DomainConfigurationStatus;
import com.pulumi.awsnative.iot.inputs.DomainConfigurationAuthorizerConfigArgs;
import com.pulumi.awsnative.iot.inputs.DomainConfigurationTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainConfigurationArgs Empty = new DomainConfigurationArgs();

    @Import(name="authorizerConfig")
    private @Nullable Output<DomainConfigurationAuthorizerConfigArgs> authorizerConfig;

    public Optional<Output<DomainConfigurationAuthorizerConfigArgs>> authorizerConfig() {
        return Optional.ofNullable(this.authorizerConfig);
    }

    @Import(name="domainConfigurationName")
    private @Nullable Output<String> domainConfigurationName;

    public Optional<Output<String>> domainConfigurationName() {
        return Optional.ofNullable(this.domainConfigurationName);
    }

    @Import(name="domainConfigurationStatus")
    private @Nullable Output<DomainConfigurationStatus> domainConfigurationStatus;

    public Optional<Output<DomainConfigurationStatus>> domainConfigurationStatus() {
        return Optional.ofNullable(this.domainConfigurationStatus);
    }

    @Import(name="domainName")
    private @Nullable Output<String> domainName;

    public Optional<Output<String>> domainName() {
        return Optional.ofNullable(this.domainName);
    }

    @Import(name="serverCertificateArns")
    private @Nullable Output<List<String>> serverCertificateArns;

    public Optional<Output<List<String>>> serverCertificateArns() {
        return Optional.ofNullable(this.serverCertificateArns);
    }

    @Import(name="serviceType")
    private @Nullable Output<DomainConfigurationServiceType> serviceType;

    public Optional<Output<DomainConfigurationServiceType>> serviceType() {
        return Optional.ofNullable(this.serviceType);
    }

    @Import(name="tags")
    private @Nullable Output<List<DomainConfigurationTagArgs>> tags;

    public Optional<Output<List<DomainConfigurationTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="validationCertificateArn")
    private @Nullable Output<String> validationCertificateArn;

    public Optional<Output<String>> validationCertificateArn() {
        return Optional.ofNullable(this.validationCertificateArn);
    }

    private DomainConfigurationArgs() {}

    private DomainConfigurationArgs(DomainConfigurationArgs $) {
        this.authorizerConfig = $.authorizerConfig;
        this.domainConfigurationName = $.domainConfigurationName;
        this.domainConfigurationStatus = $.domainConfigurationStatus;
        this.domainName = $.domainName;
        this.serverCertificateArns = $.serverCertificateArns;
        this.serviceType = $.serviceType;
        this.tags = $.tags;
        this.validationCertificateArn = $.validationCertificateArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainConfigurationArgs $;

        public Builder() {
            $ = new DomainConfigurationArgs();
        }

        public Builder(DomainConfigurationArgs defaults) {
            $ = new DomainConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder authorizerConfig(@Nullable Output<DomainConfigurationAuthorizerConfigArgs> authorizerConfig) {
            $.authorizerConfig = authorizerConfig;
            return this;
        }

        public Builder authorizerConfig(DomainConfigurationAuthorizerConfigArgs authorizerConfig) {
            return authorizerConfig(Output.of(authorizerConfig));
        }

        public Builder domainConfigurationName(@Nullable Output<String> domainConfigurationName) {
            $.domainConfigurationName = domainConfigurationName;
            return this;
        }

        public Builder domainConfigurationName(String domainConfigurationName) {
            return domainConfigurationName(Output.of(domainConfigurationName));
        }

        public Builder domainConfigurationStatus(@Nullable Output<DomainConfigurationStatus> domainConfigurationStatus) {
            $.domainConfigurationStatus = domainConfigurationStatus;
            return this;
        }

        public Builder domainConfigurationStatus(DomainConfigurationStatus domainConfigurationStatus) {
            return domainConfigurationStatus(Output.of(domainConfigurationStatus));
        }

        public Builder domainName(@Nullable Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        public Builder serverCertificateArns(@Nullable Output<List<String>> serverCertificateArns) {
            $.serverCertificateArns = serverCertificateArns;
            return this;
        }

        public Builder serverCertificateArns(List<String> serverCertificateArns) {
            return serverCertificateArns(Output.of(serverCertificateArns));
        }

        public Builder serverCertificateArns(String... serverCertificateArns) {
            return serverCertificateArns(List.of(serverCertificateArns));
        }

        public Builder serviceType(@Nullable Output<DomainConfigurationServiceType> serviceType) {
            $.serviceType = serviceType;
            return this;
        }

        public Builder serviceType(DomainConfigurationServiceType serviceType) {
            return serviceType(Output.of(serviceType));
        }

        public Builder tags(@Nullable Output<List<DomainConfigurationTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<DomainConfigurationTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(DomainConfigurationTagArgs... tags) {
            return tags(List.of(tags));
        }

        public Builder validationCertificateArn(@Nullable Output<String> validationCertificateArn) {
            $.validationCertificateArn = validationCertificateArn;
            return this;
        }

        public Builder validationCertificateArn(String validationCertificateArn) {
            return validationCertificateArn(Output.of(validationCertificateArn));
        }

        public DomainConfigurationArgs build() {
            return $;
        }
    }

}
