// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.forecast.outputs;

import com.pulumi.awsnative.forecast.enums.DatasetDomain;
import com.pulumi.awsnative.forecast.enums.DatasetType;
import com.pulumi.awsnative.forecast.outputs.EncryptionConfigProperties;
import com.pulumi.awsnative.forecast.outputs.SchemaProperties;
import com.pulumi.awsnative.forecast.outputs.TagsItemProperties;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDatasetResult {
    private @Nullable String arn;
    /**
     * @return Frequency of data collection. This parameter is required for RELATED_TIME_SERIES
     * 
     */
    private @Nullable String dataFrequency;
    /**
     * @return The dataset type
     * 
     */
    private @Nullable DatasetType datasetType;
    /**
     * @return The domain associated with the dataset
     * 
     */
    private @Nullable DatasetDomain domain;
    private @Nullable EncryptionConfigProperties encryptionConfig;
    private @Nullable SchemaProperties schema;
    private @Nullable List<TagsItemProperties> tags;

    private GetDatasetResult() {}
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Frequency of data collection. This parameter is required for RELATED_TIME_SERIES
     * 
     */
    public Optional<String> dataFrequency() {
        return Optional.ofNullable(this.dataFrequency);
    }
    /**
     * @return The dataset type
     * 
     */
    public Optional<DatasetType> datasetType() {
        return Optional.ofNullable(this.datasetType);
    }
    /**
     * @return The domain associated with the dataset
     * 
     */
    public Optional<DatasetDomain> domain() {
        return Optional.ofNullable(this.domain);
    }
    public Optional<EncryptionConfigProperties> encryptionConfig() {
        return Optional.ofNullable(this.encryptionConfig);
    }
    public Optional<SchemaProperties> schema() {
        return Optional.ofNullable(this.schema);
    }
    public List<TagsItemProperties> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatasetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String dataFrequency;
        private @Nullable DatasetType datasetType;
        private @Nullable DatasetDomain domain;
        private @Nullable EncryptionConfigProperties encryptionConfig;
        private @Nullable SchemaProperties schema;
        private @Nullable List<TagsItemProperties> tags;
        public Builder() {}
        public Builder(GetDatasetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.dataFrequency = defaults.dataFrequency;
    	      this.datasetType = defaults.datasetType;
    	      this.domain = defaults.domain;
    	      this.encryptionConfig = defaults.encryptionConfig;
    	      this.schema = defaults.schema;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder dataFrequency(@Nullable String dataFrequency) {
            this.dataFrequency = dataFrequency;
            return this;
        }
        @CustomType.Setter
        public Builder datasetType(@Nullable DatasetType datasetType) {
            this.datasetType = datasetType;
            return this;
        }
        @CustomType.Setter
        public Builder domain(@Nullable DatasetDomain domain) {
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionConfig(@Nullable EncryptionConfigProperties encryptionConfig) {
            this.encryptionConfig = encryptionConfig;
            return this;
        }
        @CustomType.Setter
        public Builder schema(@Nullable SchemaProperties schema) {
            this.schema = schema;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<TagsItemProperties> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(TagsItemProperties... tags) {
            return tags(List.of(tags));
        }
        public GetDatasetResult build() {
            final var o = new GetDatasetResult();
            o.arn = arn;
            o.dataFrequency = dataFrequency;
            o.datasetType = datasetType;
            o.domain = domain;
            o.encryptionConfig = encryptionConfig;
            o.schema = schema;
            o.tags = tags;
            return o;
        }
    }
}
