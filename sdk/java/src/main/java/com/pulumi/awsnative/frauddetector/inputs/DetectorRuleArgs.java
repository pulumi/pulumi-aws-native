// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.frauddetector.inputs;

import com.pulumi.awsnative.frauddetector.enums.DetectorRuleLanguage;
import com.pulumi.awsnative.frauddetector.inputs.DetectorOutcomeArgs;
import com.pulumi.awsnative.frauddetector.inputs.DetectorTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DetectorRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final DetectorRuleArgs Empty = new DetectorRuleArgs();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The time when the event type was created.
     * 
     */
    @Import(name="createdTime")
    private @Nullable Output<String> createdTime;

    /**
     * @return The time when the event type was created.
     * 
     */
    public Optional<Output<String>> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }

    /**
     * The description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="detectorId")
    private @Nullable Output<String> detectorId;

    public Optional<Output<String>> detectorId() {
        return Optional.ofNullable(this.detectorId);
    }

    @Import(name="expression")
    private @Nullable Output<String> expression;

    public Optional<Output<String>> expression() {
        return Optional.ofNullable(this.expression);
    }

    @Import(name="language")
    private @Nullable Output<DetectorRuleLanguage> language;

    public Optional<Output<DetectorRuleLanguage>> language() {
        return Optional.ofNullable(this.language);
    }

    /**
     * The time when the event type was last updated.
     * 
     */
    @Import(name="lastUpdatedTime")
    private @Nullable Output<String> lastUpdatedTime;

    /**
     * @return The time when the event type was last updated.
     * 
     */
    public Optional<Output<String>> lastUpdatedTime() {
        return Optional.ofNullable(this.lastUpdatedTime);
    }

    @Import(name="outcomes")
    private @Nullable Output<List<DetectorOutcomeArgs>> outcomes;

    public Optional<Output<List<DetectorOutcomeArgs>>> outcomes() {
        return Optional.ofNullable(this.outcomes);
    }

    @Import(name="ruleId")
    private @Nullable Output<String> ruleId;

    public Optional<Output<String>> ruleId() {
        return Optional.ofNullable(this.ruleId);
    }

    @Import(name="ruleVersion")
    private @Nullable Output<String> ruleVersion;

    public Optional<Output<String>> ruleVersion() {
        return Optional.ofNullable(this.ruleVersion);
    }

    /**
     * Tags associated with this event type.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<DetectorTagArgs>> tags;

    /**
     * @return Tags associated with this event type.
     * 
     */
    public Optional<Output<List<DetectorTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DetectorRuleArgs() {}

    private DetectorRuleArgs(DetectorRuleArgs $) {
        this.arn = $.arn;
        this.createdTime = $.createdTime;
        this.description = $.description;
        this.detectorId = $.detectorId;
        this.expression = $.expression;
        this.language = $.language;
        this.lastUpdatedTime = $.lastUpdatedTime;
        this.outcomes = $.outcomes;
        this.ruleId = $.ruleId;
        this.ruleVersion = $.ruleVersion;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DetectorRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DetectorRuleArgs $;

        public Builder() {
            $ = new DetectorRuleArgs();
        }

        public Builder(DetectorRuleArgs defaults) {
            $ = new DetectorRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param createdTime The time when the event type was created.
         * 
         * @return builder
         * 
         */
        public Builder createdTime(@Nullable Output<String> createdTime) {
            $.createdTime = createdTime;
            return this;
        }

        /**
         * @param createdTime The time when the event type was created.
         * 
         * @return builder
         * 
         */
        public Builder createdTime(String createdTime) {
            return createdTime(Output.of(createdTime));
        }

        /**
         * @param description The description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder detectorId(@Nullable Output<String> detectorId) {
            $.detectorId = detectorId;
            return this;
        }

        public Builder detectorId(String detectorId) {
            return detectorId(Output.of(detectorId));
        }

        public Builder expression(@Nullable Output<String> expression) {
            $.expression = expression;
            return this;
        }

        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        public Builder language(@Nullable Output<DetectorRuleLanguage> language) {
            $.language = language;
            return this;
        }

        public Builder language(DetectorRuleLanguage language) {
            return language(Output.of(language));
        }

        /**
         * @param lastUpdatedTime The time when the event type was last updated.
         * 
         * @return builder
         * 
         */
        public Builder lastUpdatedTime(@Nullable Output<String> lastUpdatedTime) {
            $.lastUpdatedTime = lastUpdatedTime;
            return this;
        }

        /**
         * @param lastUpdatedTime The time when the event type was last updated.
         * 
         * @return builder
         * 
         */
        public Builder lastUpdatedTime(String lastUpdatedTime) {
            return lastUpdatedTime(Output.of(lastUpdatedTime));
        }

        public Builder outcomes(@Nullable Output<List<DetectorOutcomeArgs>> outcomes) {
            $.outcomes = outcomes;
            return this;
        }

        public Builder outcomes(List<DetectorOutcomeArgs> outcomes) {
            return outcomes(Output.of(outcomes));
        }

        public Builder outcomes(DetectorOutcomeArgs... outcomes) {
            return outcomes(List.of(outcomes));
        }

        public Builder ruleId(@Nullable Output<String> ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        public Builder ruleId(String ruleId) {
            return ruleId(Output.of(ruleId));
        }

        public Builder ruleVersion(@Nullable Output<String> ruleVersion) {
            $.ruleVersion = ruleVersion;
            return this;
        }

        public Builder ruleVersion(String ruleVersion) {
            return ruleVersion(Output.of(ruleVersion));
        }

        /**
         * @param tags Tags associated with this event type.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<DetectorTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags associated with this event type.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<DetectorTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Tags associated with this event type.
         * 
         * @return builder
         * 
         */
        public Builder tags(DetectorTagArgs... tags) {
            return tags(List.of(tags));
        }

        public DetectorRuleArgs build() {
            return $;
        }
    }

}
