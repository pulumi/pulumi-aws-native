// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotanalytics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class DatasetGlueConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatasetGlueConfigurationArgs Empty = new DatasetGlueConfigurationArgs();

    @Import(name="databaseName", required=true)
    private Output<String> databaseName;

    public Output<String> databaseName() {
        return this.databaseName;
    }

    @Import(name="tableName", required=true)
    private Output<String> tableName;

    public Output<String> tableName() {
        return this.tableName;
    }

    private DatasetGlueConfigurationArgs() {}

    private DatasetGlueConfigurationArgs(DatasetGlueConfigurationArgs $) {
        this.databaseName = $.databaseName;
        this.tableName = $.tableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetGlueConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetGlueConfigurationArgs $;

        public Builder() {
            $ = new DatasetGlueConfigurationArgs();
        }

        public Builder(DatasetGlueConfigurationArgs defaults) {
            $ = new DatasetGlueConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder databaseName(Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        public Builder tableName(Output<String> tableName) {
            $.tableName = tableName;
            return this;
        }

        public Builder tableName(String tableName) {
            return tableName(Output.of(tableName));
        }

        public DatasetGlueConfigurationArgs build() {
            $.databaseName = Objects.requireNonNull($.databaseName, "expected parameter 'databaseName' to be non-null");
            $.tableName = Objects.requireNonNull($.tableName, "expected parameter 'tableName' to be non-null");
            return $;
        }
    }

}
