// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudtrail.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * CloudTrail supports data event logging for Amazon S3 objects and AWS Lambda functions. You can specify up to 250 resources for an individual event selector, but the total number of data resources cannot exceed 250 across all event selectors in a trail. This limit does not apply if you configure resource logging for all data events.
 * 
 */
public final class TrailDataResourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final TrailDataResourceArgs Empty = new TrailDataResourceArgs();

    /**
     * The resource type in which you want to log data events. You can specify AWS::S3::Object or AWS::Lambda::Function resources.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The resource type in which you want to log data events. You can specify AWS::S3::Object or AWS::Lambda::Function resources.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * An array of Amazon Resource Name (ARN) strings or partial ARN strings for the specified objects.
     * 
     */
    @Import(name="values")
    private @Nullable Output<List<String>> values;

    /**
     * @return An array of Amazon Resource Name (ARN) strings or partial ARN strings for the specified objects.
     * 
     */
    public Optional<Output<List<String>>> values() {
        return Optional.ofNullable(this.values);
    }

    private TrailDataResourceArgs() {}

    private TrailDataResourceArgs(TrailDataResourceArgs $) {
        this.type = $.type;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TrailDataResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TrailDataResourceArgs $;

        public Builder() {
            $ = new TrailDataResourceArgs();
        }

        public Builder(TrailDataResourceArgs defaults) {
            $ = new TrailDataResourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param type The resource type in which you want to log data events. You can specify AWS::S3::Object or AWS::Lambda::Function resources.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The resource type in which you want to log data events. You can specify AWS::S3::Object or AWS::Lambda::Function resources.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param values An array of Amazon Resource Name (ARN) strings or partial ARN strings for the specified objects.
         * 
         * @return builder
         * 
         */
        public Builder values(@Nullable Output<List<String>> values) {
            $.values = values;
            return this;
        }

        /**
         * @param values An array of Amazon Resource Name (ARN) strings or partial ARN strings for the specified objects.
         * 
         * @return builder
         * 
         */
        public Builder values(List<String> values) {
            return values(Output.of(values));
        }

        /**
         * @param values An array of Amazon Resource Name (ARN) strings or partial ARN strings for the specified objects.
         * 
         * @return builder
         * 
         */
        public Builder values(String... values) {
            return values(List.of(values));
        }

        public TrailDataResourceArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
