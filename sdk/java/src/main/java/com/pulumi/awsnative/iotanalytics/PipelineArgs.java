// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotanalytics;

import com.pulumi.awsnative.iotanalytics.inputs.PipelineActivityArgs;
import com.pulumi.awsnative.iotanalytics.inputs.PipelineTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineArgs Empty = new PipelineArgs();

    @Import(name="pipelineActivities", required=true)
    private Output<List<PipelineActivityArgs>> pipelineActivities;

    public Output<List<PipelineActivityArgs>> pipelineActivities() {
        return this.pipelineActivities;
    }

    @Import(name="pipelineName")
    private @Nullable Output<String> pipelineName;

    public Optional<Output<String>> pipelineName() {
        return Optional.ofNullable(this.pipelineName);
    }

    @Import(name="tags")
    private @Nullable Output<List<PipelineTagArgs>> tags;

    public Optional<Output<List<PipelineTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private PipelineArgs() {}

    private PipelineArgs(PipelineArgs $) {
        this.pipelineActivities = $.pipelineActivities;
        this.pipelineName = $.pipelineName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineArgs $;

        public Builder() {
            $ = new PipelineArgs();
        }

        public Builder(PipelineArgs defaults) {
            $ = new PipelineArgs(Objects.requireNonNull(defaults));
        }

        public Builder pipelineActivities(Output<List<PipelineActivityArgs>> pipelineActivities) {
            $.pipelineActivities = pipelineActivities;
            return this;
        }

        public Builder pipelineActivities(List<PipelineActivityArgs> pipelineActivities) {
            return pipelineActivities(Output.of(pipelineActivities));
        }

        public Builder pipelineActivities(PipelineActivityArgs... pipelineActivities) {
            return pipelineActivities(List.of(pipelineActivities));
        }

        public Builder pipelineName(@Nullable Output<String> pipelineName) {
            $.pipelineName = pipelineName;
            return this;
        }

        public Builder pipelineName(String pipelineName) {
            return pipelineName(Output.of(pipelineName));
        }

        public Builder tags(@Nullable Output<List<PipelineTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<PipelineTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(PipelineTagArgs... tags) {
            return tags(List.of(tags));
        }

        public PipelineArgs build() {
            $.pipelineActivities = Objects.requireNonNull($.pipelineActivities, "expected parameter 'pipelineActivities' to be non-null");
            return $;
        }
    }

}
