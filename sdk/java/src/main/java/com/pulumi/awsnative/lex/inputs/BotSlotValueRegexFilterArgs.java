// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * A regular expression used to validate the value of a slot.
 * 
 */
public final class BotSlotValueRegexFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final BotSlotValueRegexFilterArgs Empty = new BotSlotValueRegexFilterArgs();

    /**
     * Regex pattern
     * 
     */
    @Import(name="pattern", required=true)
    private Output<String> pattern;

    /**
     * @return Regex pattern
     * 
     */
    public Output<String> pattern() {
        return this.pattern;
    }

    private BotSlotValueRegexFilterArgs() {}

    private BotSlotValueRegexFilterArgs(BotSlotValueRegexFilterArgs $) {
        this.pattern = $.pattern;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BotSlotValueRegexFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BotSlotValueRegexFilterArgs $;

        public Builder() {
            $ = new BotSlotValueRegexFilterArgs();
        }

        public Builder(BotSlotValueRegexFilterArgs defaults) {
            $ = new BotSlotValueRegexFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param pattern Regex pattern
         * 
         * @return builder
         * 
         */
        public Builder pattern(Output<String> pattern) {
            $.pattern = pattern;
            return this;
        }

        /**
         * @param pattern Regex pattern
         * 
         * @return builder
         * 
         */
        public Builder pattern(String pattern) {
            return pattern(Output.of(pattern));
        }

        public BotSlotValueRegexFilterArgs build() {
            $.pattern = Objects.requireNonNull($.pattern, "expected parameter 'pattern' to be non-null");
            return $;
        }
    }

}
