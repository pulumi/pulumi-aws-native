// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetTaskSetArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTaskSetArgs Empty = new GetTaskSetArgs();

    /**
     * The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service to create the task set in.
     * 
     */
    @Import(name="cluster", required=true)
    private Output<String> cluster;

    /**
     * @return The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service to create the task set in.
     * 
     */
    public Output<String> cluster() {
        return this.cluster;
    }

    /**
     * The ID of the task set.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The ID of the task set.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * The short name or full Amazon Resource Name (ARN) of the service to create the task set in.
     * 
     */
    @Import(name="service", required=true)
    private Output<String> service;

    /**
     * @return The short name or full Amazon Resource Name (ARN) of the service to create the task set in.
     * 
     */
    public Output<String> service() {
        return this.service;
    }

    private GetTaskSetArgs() {}

    private GetTaskSetArgs(GetTaskSetArgs $) {
        this.cluster = $.cluster;
        this.id = $.id;
        this.service = $.service;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTaskSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTaskSetArgs $;

        public Builder() {
            $ = new GetTaskSetArgs();
        }

        public Builder(GetTaskSetArgs defaults) {
            $ = new GetTaskSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cluster The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service to create the task set in.
         * 
         * @return builder
         * 
         */
        public Builder cluster(Output<String> cluster) {
            $.cluster = cluster;
            return this;
        }

        /**
         * @param cluster The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service to create the task set in.
         * 
         * @return builder
         * 
         */
        public Builder cluster(String cluster) {
            return cluster(Output.of(cluster));
        }

        /**
         * @param id The ID of the task set.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the task set.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param service The short name or full Amazon Resource Name (ARN) of the service to create the task set in.
         * 
         * @return builder
         * 
         */
        public Builder service(Output<String> service) {
            $.service = service;
            return this;
        }

        /**
         * @param service The short name or full Amazon Resource Name (ARN) of the service to create the task set in.
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            return service(Output.of(service));
        }

        public GetTaskSetArgs build() {
            $.cluster = Objects.requireNonNull($.cluster, "expected parameter 'cluster' to be non-null");
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.service = Objects.requireNonNull($.service, "expected parameter 'service' to be non-null");
            return $;
        }
    }

}
