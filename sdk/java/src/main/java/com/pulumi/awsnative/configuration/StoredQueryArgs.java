// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.configuration;

import com.pulumi.awsnative.configuration.inputs.StoredQueryTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StoredQueryArgs extends com.pulumi.resources.ResourceArgs {

    public static final StoredQueryArgs Empty = new StoredQueryArgs();

    @Import(name="queryDescription")
    private @Nullable Output<String> queryDescription;

    public Optional<Output<String>> queryDescription() {
        return Optional.ofNullable(this.queryDescription);
    }

    @Import(name="queryExpression", required=true)
    private Output<String> queryExpression;

    public Output<String> queryExpression() {
        return this.queryExpression;
    }

    @Import(name="queryName", required=true)
    private Output<String> queryName;

    public Output<String> queryName() {
        return this.queryName;
    }

    /**
     * The tags for the stored query.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<StoredQueryTagArgs>> tags;

    /**
     * @return The tags for the stored query.
     * 
     */
    public Optional<Output<List<StoredQueryTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private StoredQueryArgs() {}

    private StoredQueryArgs(StoredQueryArgs $) {
        this.queryDescription = $.queryDescription;
        this.queryExpression = $.queryExpression;
        this.queryName = $.queryName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StoredQueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StoredQueryArgs $;

        public Builder() {
            $ = new StoredQueryArgs();
        }

        public Builder(StoredQueryArgs defaults) {
            $ = new StoredQueryArgs(Objects.requireNonNull(defaults));
        }

        public Builder queryDescription(@Nullable Output<String> queryDescription) {
            $.queryDescription = queryDescription;
            return this;
        }

        public Builder queryDescription(String queryDescription) {
            return queryDescription(Output.of(queryDescription));
        }

        public Builder queryExpression(Output<String> queryExpression) {
            $.queryExpression = queryExpression;
            return this;
        }

        public Builder queryExpression(String queryExpression) {
            return queryExpression(Output.of(queryExpression));
        }

        public Builder queryName(Output<String> queryName) {
            $.queryName = queryName;
            return this;
        }

        public Builder queryName(String queryName) {
            return queryName(Output.of(queryName));
        }

        /**
         * @param tags The tags for the stored query.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<StoredQueryTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags for the stored query.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<StoredQueryTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The tags for the stored query.
         * 
         * @return builder
         * 
         */
        public Builder tags(StoredQueryTagArgs... tags) {
            return tags(List.of(tags));
        }

        public StoredQueryArgs build() {
            $.queryExpression = Objects.requireNonNull($.queryExpression, "expected parameter 'queryExpression' to be non-null");
            $.queryName = Objects.requireNonNull($.queryName, "expected parameter 'queryName' to be non-null");
            return $;
        }
    }

}
