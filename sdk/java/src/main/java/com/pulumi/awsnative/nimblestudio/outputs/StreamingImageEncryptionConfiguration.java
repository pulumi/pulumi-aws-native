// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.nimblestudio.outputs;

import com.pulumi.awsnative.nimblestudio.enums.StreamingImageEncryptionConfigurationKeyType;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StreamingImageEncryptionConfiguration {
    /**
     * @return &lt;p&gt;The ARN for a KMS key that is used to encrypt studio data.&lt;/p&gt;
     * 
     */
    private @Nullable String keyArn;
    private StreamingImageEncryptionConfigurationKeyType keyType;

    private StreamingImageEncryptionConfiguration() {}
    /**
     * @return &lt;p&gt;The ARN for a KMS key that is used to encrypt studio data.&lt;/p&gt;
     * 
     */
    public Optional<String> keyArn() {
        return Optional.ofNullable(this.keyArn);
    }
    public StreamingImageEncryptionConfigurationKeyType keyType() {
        return this.keyType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamingImageEncryptionConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String keyArn;
        private StreamingImageEncryptionConfigurationKeyType keyType;
        public Builder() {}
        public Builder(StreamingImageEncryptionConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyArn = defaults.keyArn;
    	      this.keyType = defaults.keyType;
        }

        @CustomType.Setter
        public Builder keyArn(@Nullable String keyArn) {
            this.keyArn = keyArn;
            return this;
        }
        @CustomType.Setter
        public Builder keyType(StreamingImageEncryptionConfigurationKeyType keyType) {
            this.keyType = Objects.requireNonNull(keyType);
            return this;
        }
        public StreamingImageEncryptionConfiguration build() {
            final var o = new StreamingImageEncryptionConfiguration();
            o.keyArn = keyArn;
            o.keyType = keyType;
            return o;
        }
    }
}
