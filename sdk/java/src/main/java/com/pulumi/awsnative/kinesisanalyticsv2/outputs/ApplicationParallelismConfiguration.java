// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisanalyticsv2.outputs;

import com.pulumi.awsnative.kinesisanalyticsv2.enums.ApplicationParallelismConfigurationConfigurationType;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationParallelismConfiguration {
    /**
     * @return Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.
     * 
     */
    private @Nullable Boolean autoScalingEnabled;
    /**
     * @return Describes whether the application uses the default parallelism for the Kinesis Data Analytics service. You must set this property to `CUSTOM` in order to change your application&#39;s `AutoScalingEnabled`, `Parallelism`, or `ParallelismPerKPU` properties.
     * 
     */
    private ApplicationParallelismConfigurationConfigurationType configurationType;
    /**
     * @return Describes the initial number of parallel tasks that a Java-based Kinesis Data Analytics application can perform. The Kinesis Data Analytics service can increase this number automatically if ParallelismConfiguration:AutoScalingEnabled is set to true.
     * 
     */
    private @Nullable Integer parallelism;
    /**
     * @return Describes the number of parallel tasks that a Java-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application. For more information about KPUs, see Amazon Kinesis Data Analytics Pricing.
     * 
     */
    private @Nullable Integer parallelismPerKPU;

    private ApplicationParallelismConfiguration() {}
    /**
     * @return Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.
     * 
     */
    public Optional<Boolean> autoScalingEnabled() {
        return Optional.ofNullable(this.autoScalingEnabled);
    }
    /**
     * @return Describes whether the application uses the default parallelism for the Kinesis Data Analytics service. You must set this property to `CUSTOM` in order to change your application&#39;s `AutoScalingEnabled`, `Parallelism`, or `ParallelismPerKPU` properties.
     * 
     */
    public ApplicationParallelismConfigurationConfigurationType configurationType() {
        return this.configurationType;
    }
    /**
     * @return Describes the initial number of parallel tasks that a Java-based Kinesis Data Analytics application can perform. The Kinesis Data Analytics service can increase this number automatically if ParallelismConfiguration:AutoScalingEnabled is set to true.
     * 
     */
    public Optional<Integer> parallelism() {
        return Optional.ofNullable(this.parallelism);
    }
    /**
     * @return Describes the number of parallel tasks that a Java-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application. For more information about KPUs, see Amazon Kinesis Data Analytics Pricing.
     * 
     */
    public Optional<Integer> parallelismPerKPU() {
        return Optional.ofNullable(this.parallelismPerKPU);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationParallelismConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean autoScalingEnabled;
        private ApplicationParallelismConfigurationConfigurationType configurationType;
        private @Nullable Integer parallelism;
        private @Nullable Integer parallelismPerKPU;
        public Builder() {}
        public Builder(ApplicationParallelismConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoScalingEnabled = defaults.autoScalingEnabled;
    	      this.configurationType = defaults.configurationType;
    	      this.parallelism = defaults.parallelism;
    	      this.parallelismPerKPU = defaults.parallelismPerKPU;
        }

        @CustomType.Setter
        public Builder autoScalingEnabled(@Nullable Boolean autoScalingEnabled) {
            this.autoScalingEnabled = autoScalingEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder configurationType(ApplicationParallelismConfigurationConfigurationType configurationType) {
            this.configurationType = Objects.requireNonNull(configurationType);
            return this;
        }
        @CustomType.Setter
        public Builder parallelism(@Nullable Integer parallelism) {
            this.parallelism = parallelism;
            return this;
        }
        @CustomType.Setter
        public Builder parallelismPerKPU(@Nullable Integer parallelismPerKPU) {
            this.parallelismPerKPU = parallelismPerKPU;
            return this;
        }
        public ApplicationParallelismConfiguration build() {
            final var o = new ApplicationParallelismConfiguration();
            o.autoScalingEnabled = autoScalingEnabled;
            o.configurationType = configurationType;
            o.parallelism = parallelism;
            o.parallelismPerKPU = parallelismPerKPU;
            return o;
        }
    }
}
