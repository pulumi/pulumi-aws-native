// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.budgets.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetBudgetsActionArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBudgetsActionArgs Empty = new GetBudgetsActionArgs();

    @Import(name="actionId", required=true)
    private Output<String> actionId;

    public Output<String> actionId() {
        return this.actionId;
    }

    @Import(name="budgetName", required=true)
    private Output<String> budgetName;

    public Output<String> budgetName() {
        return this.budgetName;
    }

    private GetBudgetsActionArgs() {}

    private GetBudgetsActionArgs(GetBudgetsActionArgs $) {
        this.actionId = $.actionId;
        this.budgetName = $.budgetName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBudgetsActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBudgetsActionArgs $;

        public Builder() {
            $ = new GetBudgetsActionArgs();
        }

        public Builder(GetBudgetsActionArgs defaults) {
            $ = new GetBudgetsActionArgs(Objects.requireNonNull(defaults));
        }

        public Builder actionId(Output<String> actionId) {
            $.actionId = actionId;
            return this;
        }

        public Builder actionId(String actionId) {
            return actionId(Output.of(actionId));
        }

        public Builder budgetName(Output<String> budgetName) {
            $.budgetName = budgetName;
            return this;
        }

        public Builder budgetName(String budgetName) {
            return budgetName(Output.of(budgetName));
        }

        public GetBudgetsActionArgs build() {
            $.actionId = Objects.requireNonNull($.actionId, "expected parameter 'actionId' to be non-null");
            $.budgetName = Objects.requireNonNull($.budgetName, "expected parameter 'budgetName' to be non-null");
            return $;
        }
    }

}
