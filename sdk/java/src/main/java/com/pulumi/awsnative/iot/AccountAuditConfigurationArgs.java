// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iot;

import com.pulumi.awsnative.iot.inputs.AccountAuditConfigurationAuditCheckConfigurationsArgs;
import com.pulumi.awsnative.iot.inputs.AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountAuditConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountAuditConfigurationArgs Empty = new AccountAuditConfigurationArgs();

    /**
     * Your 12-digit account ID (used as the primary identifier for the CloudFormation resource).
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Your 12-digit account ID (used as the primary identifier for the CloudFormation resource).
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    @Import(name="auditCheckConfigurations", required=true)
    private Output<AccountAuditConfigurationAuditCheckConfigurationsArgs> auditCheckConfigurations;

    public Output<AccountAuditConfigurationAuditCheckConfigurationsArgs> auditCheckConfigurations() {
        return this.auditCheckConfigurations;
    }

    @Import(name="auditNotificationTargetConfigurations")
    private @Nullable Output<AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs> auditNotificationTargetConfigurations;

    public Optional<Output<AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs>> auditNotificationTargetConfigurations() {
        return Optional.ofNullable(this.auditNotificationTargetConfigurations);
    }

    /**
     * The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates and other items as required when performing an audit.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates and other items as required when performing an audit.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    private AccountAuditConfigurationArgs() {}

    private AccountAuditConfigurationArgs(AccountAuditConfigurationArgs $) {
        this.accountId = $.accountId;
        this.auditCheckConfigurations = $.auditCheckConfigurations;
        this.auditNotificationTargetConfigurations = $.auditNotificationTargetConfigurations;
        this.roleArn = $.roleArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountAuditConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountAuditConfigurationArgs $;

        public Builder() {
            $ = new AccountAuditConfigurationArgs();
        }

        public Builder(AccountAuditConfigurationArgs defaults) {
            $ = new AccountAuditConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Your 12-digit account ID (used as the primary identifier for the CloudFormation resource).
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Your 12-digit account ID (used as the primary identifier for the CloudFormation resource).
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder auditCheckConfigurations(Output<AccountAuditConfigurationAuditCheckConfigurationsArgs> auditCheckConfigurations) {
            $.auditCheckConfigurations = auditCheckConfigurations;
            return this;
        }

        public Builder auditCheckConfigurations(AccountAuditConfigurationAuditCheckConfigurationsArgs auditCheckConfigurations) {
            return auditCheckConfigurations(Output.of(auditCheckConfigurations));
        }

        public Builder auditNotificationTargetConfigurations(@Nullable Output<AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs> auditNotificationTargetConfigurations) {
            $.auditNotificationTargetConfigurations = auditNotificationTargetConfigurations;
            return this;
        }

        public Builder auditNotificationTargetConfigurations(AccountAuditConfigurationAuditNotificationTargetConfigurationsArgs auditNotificationTargetConfigurations) {
            return auditNotificationTargetConfigurations(Output.of(auditNotificationTargetConfigurations));
        }

        /**
         * @param roleArn The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates and other items as required when performing an audit.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates and other items as required when performing an audit.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public AccountAuditConfigurationArgs build() {
            $.accountId = Objects.requireNonNull($.accountId, "expected parameter 'accountId' to be non-null");
            $.auditCheckConfigurations = Objects.requireNonNull($.auditCheckConfigurations, "expected parameter 'auditCheckConfigurations' to be non-null");
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            return $;
        }
    }

}
