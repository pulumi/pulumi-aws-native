// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The session logging configuration for ExecuteCommand.
 * 
 */
public final class ClusterExecuteCommandLogConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterExecuteCommandLogConfigurationArgs Empty = new ClusterExecuteCommandLogConfigurationArgs();

    @Import(name="cloudWatchEncryptionEnabled")
    private @Nullable Output<Boolean> cloudWatchEncryptionEnabled;

    public Optional<Output<Boolean>> cloudWatchEncryptionEnabled() {
        return Optional.ofNullable(this.cloudWatchEncryptionEnabled);
    }

    @Import(name="cloudWatchLogGroupName")
    private @Nullable Output<String> cloudWatchLogGroupName;

    public Optional<Output<String>> cloudWatchLogGroupName() {
        return Optional.ofNullable(this.cloudWatchLogGroupName);
    }

    @Import(name="s3BucketName")
    private @Nullable Output<String> s3BucketName;

    public Optional<Output<String>> s3BucketName() {
        return Optional.ofNullable(this.s3BucketName);
    }

    @Import(name="s3EncryptionEnabled")
    private @Nullable Output<Boolean> s3EncryptionEnabled;

    public Optional<Output<Boolean>> s3EncryptionEnabled() {
        return Optional.ofNullable(this.s3EncryptionEnabled);
    }

    @Import(name="s3KeyPrefix")
    private @Nullable Output<String> s3KeyPrefix;

    public Optional<Output<String>> s3KeyPrefix() {
        return Optional.ofNullable(this.s3KeyPrefix);
    }

    private ClusterExecuteCommandLogConfigurationArgs() {}

    private ClusterExecuteCommandLogConfigurationArgs(ClusterExecuteCommandLogConfigurationArgs $) {
        this.cloudWatchEncryptionEnabled = $.cloudWatchEncryptionEnabled;
        this.cloudWatchLogGroupName = $.cloudWatchLogGroupName;
        this.s3BucketName = $.s3BucketName;
        this.s3EncryptionEnabled = $.s3EncryptionEnabled;
        this.s3KeyPrefix = $.s3KeyPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterExecuteCommandLogConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterExecuteCommandLogConfigurationArgs $;

        public Builder() {
            $ = new ClusterExecuteCommandLogConfigurationArgs();
        }

        public Builder(ClusterExecuteCommandLogConfigurationArgs defaults) {
            $ = new ClusterExecuteCommandLogConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder cloudWatchEncryptionEnabled(@Nullable Output<Boolean> cloudWatchEncryptionEnabled) {
            $.cloudWatchEncryptionEnabled = cloudWatchEncryptionEnabled;
            return this;
        }

        public Builder cloudWatchEncryptionEnabled(Boolean cloudWatchEncryptionEnabled) {
            return cloudWatchEncryptionEnabled(Output.of(cloudWatchEncryptionEnabled));
        }

        public Builder cloudWatchLogGroupName(@Nullable Output<String> cloudWatchLogGroupName) {
            $.cloudWatchLogGroupName = cloudWatchLogGroupName;
            return this;
        }

        public Builder cloudWatchLogGroupName(String cloudWatchLogGroupName) {
            return cloudWatchLogGroupName(Output.of(cloudWatchLogGroupName));
        }

        public Builder s3BucketName(@Nullable Output<String> s3BucketName) {
            $.s3BucketName = s3BucketName;
            return this;
        }

        public Builder s3BucketName(String s3BucketName) {
            return s3BucketName(Output.of(s3BucketName));
        }

        public Builder s3EncryptionEnabled(@Nullable Output<Boolean> s3EncryptionEnabled) {
            $.s3EncryptionEnabled = s3EncryptionEnabled;
            return this;
        }

        public Builder s3EncryptionEnabled(Boolean s3EncryptionEnabled) {
            return s3EncryptionEnabled(Output.of(s3EncryptionEnabled));
        }

        public Builder s3KeyPrefix(@Nullable Output<String> s3KeyPrefix) {
            $.s3KeyPrefix = s3KeyPrefix;
            return this;
        }

        public Builder s3KeyPrefix(String s3KeyPrefix) {
            return s3KeyPrefix(Output.of(s3KeyPrefix));
        }

        public ClusterExecuteCommandLogConfigurationArgs build() {
            return $;
        }
    }

}
