// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2.inputs;

import com.pulumi.awsnative.ec2.enums.SpotFleetRequestConfigDataAllocationStrategy;
import com.pulumi.awsnative.ec2.enums.SpotFleetRequestConfigDataExcessCapacityTerminationPolicy;
import com.pulumi.awsnative.ec2.enums.SpotFleetRequestConfigDataInstanceInterruptionBehavior;
import com.pulumi.awsnative.ec2.enums.SpotFleetRequestConfigDataTargetCapacityUnitType;
import com.pulumi.awsnative.ec2.enums.SpotFleetRequestConfigDataType;
import com.pulumi.awsnative.ec2.inputs.SpotFleetLaunchSpecificationArgs;
import com.pulumi.awsnative.ec2.inputs.SpotFleetLaunchTemplateConfigArgs;
import com.pulumi.awsnative.ec2.inputs.SpotFleetLoadBalancersConfigArgs;
import com.pulumi.awsnative.ec2.inputs.SpotFleetSpotMaintenanceStrategiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpotFleetRequestConfigDataArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpotFleetRequestConfigDataArgs Empty = new SpotFleetRequestConfigDataArgs();

    @Import(name="allocationStrategy")
    private @Nullable Output<SpotFleetRequestConfigDataAllocationStrategy> allocationStrategy;

    public Optional<Output<SpotFleetRequestConfigDataAllocationStrategy>> allocationStrategy() {
        return Optional.ofNullable(this.allocationStrategy);
    }

    @Import(name="context")
    private @Nullable Output<String> context;

    public Optional<Output<String>> context() {
        return Optional.ofNullable(this.context);
    }

    @Import(name="excessCapacityTerminationPolicy")
    private @Nullable Output<SpotFleetRequestConfigDataExcessCapacityTerminationPolicy> excessCapacityTerminationPolicy;

    public Optional<Output<SpotFleetRequestConfigDataExcessCapacityTerminationPolicy>> excessCapacityTerminationPolicy() {
        return Optional.ofNullable(this.excessCapacityTerminationPolicy);
    }

    @Import(name="iamFleetRole", required=true)
    private Output<String> iamFleetRole;

    public Output<String> iamFleetRole() {
        return this.iamFleetRole;
    }

    @Import(name="instanceInterruptionBehavior")
    private @Nullable Output<SpotFleetRequestConfigDataInstanceInterruptionBehavior> instanceInterruptionBehavior;

    public Optional<Output<SpotFleetRequestConfigDataInstanceInterruptionBehavior>> instanceInterruptionBehavior() {
        return Optional.ofNullable(this.instanceInterruptionBehavior);
    }

    @Import(name="instancePoolsToUseCount")
    private @Nullable Output<Integer> instancePoolsToUseCount;

    public Optional<Output<Integer>> instancePoolsToUseCount() {
        return Optional.ofNullable(this.instancePoolsToUseCount);
    }

    @Import(name="launchSpecifications")
    private @Nullable Output<List<SpotFleetLaunchSpecificationArgs>> launchSpecifications;

    public Optional<Output<List<SpotFleetLaunchSpecificationArgs>>> launchSpecifications() {
        return Optional.ofNullable(this.launchSpecifications);
    }

    @Import(name="launchTemplateConfigs")
    private @Nullable Output<List<SpotFleetLaunchTemplateConfigArgs>> launchTemplateConfigs;

    public Optional<Output<List<SpotFleetLaunchTemplateConfigArgs>>> launchTemplateConfigs() {
        return Optional.ofNullable(this.launchTemplateConfigs);
    }

    @Import(name="loadBalancersConfig")
    private @Nullable Output<SpotFleetLoadBalancersConfigArgs> loadBalancersConfig;

    public Optional<Output<SpotFleetLoadBalancersConfigArgs>> loadBalancersConfig() {
        return Optional.ofNullable(this.loadBalancersConfig);
    }

    @Import(name="onDemandAllocationStrategy")
    private @Nullable Output<String> onDemandAllocationStrategy;

    public Optional<Output<String>> onDemandAllocationStrategy() {
        return Optional.ofNullable(this.onDemandAllocationStrategy);
    }

    @Import(name="onDemandMaxTotalPrice")
    private @Nullable Output<String> onDemandMaxTotalPrice;

    public Optional<Output<String>> onDemandMaxTotalPrice() {
        return Optional.ofNullable(this.onDemandMaxTotalPrice);
    }

    @Import(name="onDemandTargetCapacity")
    private @Nullable Output<Integer> onDemandTargetCapacity;

    public Optional<Output<Integer>> onDemandTargetCapacity() {
        return Optional.ofNullable(this.onDemandTargetCapacity);
    }

    @Import(name="replaceUnhealthyInstances")
    private @Nullable Output<Boolean> replaceUnhealthyInstances;

    public Optional<Output<Boolean>> replaceUnhealthyInstances() {
        return Optional.ofNullable(this.replaceUnhealthyInstances);
    }

    @Import(name="spotMaintenanceStrategies")
    private @Nullable Output<SpotFleetSpotMaintenanceStrategiesArgs> spotMaintenanceStrategies;

    public Optional<Output<SpotFleetSpotMaintenanceStrategiesArgs>> spotMaintenanceStrategies() {
        return Optional.ofNullable(this.spotMaintenanceStrategies);
    }

    @Import(name="spotMaxTotalPrice")
    private @Nullable Output<String> spotMaxTotalPrice;

    public Optional<Output<String>> spotMaxTotalPrice() {
        return Optional.ofNullable(this.spotMaxTotalPrice);
    }

    @Import(name="spotPrice")
    private @Nullable Output<String> spotPrice;

    public Optional<Output<String>> spotPrice() {
        return Optional.ofNullable(this.spotPrice);
    }

    @Import(name="targetCapacity", required=true)
    private Output<Integer> targetCapacity;

    public Output<Integer> targetCapacity() {
        return this.targetCapacity;
    }

    @Import(name="targetCapacityUnitType")
    private @Nullable Output<SpotFleetRequestConfigDataTargetCapacityUnitType> targetCapacityUnitType;

    public Optional<Output<SpotFleetRequestConfigDataTargetCapacityUnitType>> targetCapacityUnitType() {
        return Optional.ofNullable(this.targetCapacityUnitType);
    }

    @Import(name="terminateInstancesWithExpiration")
    private @Nullable Output<Boolean> terminateInstancesWithExpiration;

    public Optional<Output<Boolean>> terminateInstancesWithExpiration() {
        return Optional.ofNullable(this.terminateInstancesWithExpiration);
    }

    @Import(name="type")
    private @Nullable Output<SpotFleetRequestConfigDataType> type;

    public Optional<Output<SpotFleetRequestConfigDataType>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="validFrom")
    private @Nullable Output<String> validFrom;

    public Optional<Output<String>> validFrom() {
        return Optional.ofNullable(this.validFrom);
    }

    @Import(name="validUntil")
    private @Nullable Output<String> validUntil;

    public Optional<Output<String>> validUntil() {
        return Optional.ofNullable(this.validUntil);
    }

    private SpotFleetRequestConfigDataArgs() {}

    private SpotFleetRequestConfigDataArgs(SpotFleetRequestConfigDataArgs $) {
        this.allocationStrategy = $.allocationStrategy;
        this.context = $.context;
        this.excessCapacityTerminationPolicy = $.excessCapacityTerminationPolicy;
        this.iamFleetRole = $.iamFleetRole;
        this.instanceInterruptionBehavior = $.instanceInterruptionBehavior;
        this.instancePoolsToUseCount = $.instancePoolsToUseCount;
        this.launchSpecifications = $.launchSpecifications;
        this.launchTemplateConfigs = $.launchTemplateConfigs;
        this.loadBalancersConfig = $.loadBalancersConfig;
        this.onDemandAllocationStrategy = $.onDemandAllocationStrategy;
        this.onDemandMaxTotalPrice = $.onDemandMaxTotalPrice;
        this.onDemandTargetCapacity = $.onDemandTargetCapacity;
        this.replaceUnhealthyInstances = $.replaceUnhealthyInstances;
        this.spotMaintenanceStrategies = $.spotMaintenanceStrategies;
        this.spotMaxTotalPrice = $.spotMaxTotalPrice;
        this.spotPrice = $.spotPrice;
        this.targetCapacity = $.targetCapacity;
        this.targetCapacityUnitType = $.targetCapacityUnitType;
        this.terminateInstancesWithExpiration = $.terminateInstancesWithExpiration;
        this.type = $.type;
        this.validFrom = $.validFrom;
        this.validUntil = $.validUntil;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpotFleetRequestConfigDataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpotFleetRequestConfigDataArgs $;

        public Builder() {
            $ = new SpotFleetRequestConfigDataArgs();
        }

        public Builder(SpotFleetRequestConfigDataArgs defaults) {
            $ = new SpotFleetRequestConfigDataArgs(Objects.requireNonNull(defaults));
        }

        public Builder allocationStrategy(@Nullable Output<SpotFleetRequestConfigDataAllocationStrategy> allocationStrategy) {
            $.allocationStrategy = allocationStrategy;
            return this;
        }

        public Builder allocationStrategy(SpotFleetRequestConfigDataAllocationStrategy allocationStrategy) {
            return allocationStrategy(Output.of(allocationStrategy));
        }

        public Builder context(@Nullable Output<String> context) {
            $.context = context;
            return this;
        }

        public Builder context(String context) {
            return context(Output.of(context));
        }

        public Builder excessCapacityTerminationPolicy(@Nullable Output<SpotFleetRequestConfigDataExcessCapacityTerminationPolicy> excessCapacityTerminationPolicy) {
            $.excessCapacityTerminationPolicy = excessCapacityTerminationPolicy;
            return this;
        }

        public Builder excessCapacityTerminationPolicy(SpotFleetRequestConfigDataExcessCapacityTerminationPolicy excessCapacityTerminationPolicy) {
            return excessCapacityTerminationPolicy(Output.of(excessCapacityTerminationPolicy));
        }

        public Builder iamFleetRole(Output<String> iamFleetRole) {
            $.iamFleetRole = iamFleetRole;
            return this;
        }

        public Builder iamFleetRole(String iamFleetRole) {
            return iamFleetRole(Output.of(iamFleetRole));
        }

        public Builder instanceInterruptionBehavior(@Nullable Output<SpotFleetRequestConfigDataInstanceInterruptionBehavior> instanceInterruptionBehavior) {
            $.instanceInterruptionBehavior = instanceInterruptionBehavior;
            return this;
        }

        public Builder instanceInterruptionBehavior(SpotFleetRequestConfigDataInstanceInterruptionBehavior instanceInterruptionBehavior) {
            return instanceInterruptionBehavior(Output.of(instanceInterruptionBehavior));
        }

        public Builder instancePoolsToUseCount(@Nullable Output<Integer> instancePoolsToUseCount) {
            $.instancePoolsToUseCount = instancePoolsToUseCount;
            return this;
        }

        public Builder instancePoolsToUseCount(Integer instancePoolsToUseCount) {
            return instancePoolsToUseCount(Output.of(instancePoolsToUseCount));
        }

        public Builder launchSpecifications(@Nullable Output<List<SpotFleetLaunchSpecificationArgs>> launchSpecifications) {
            $.launchSpecifications = launchSpecifications;
            return this;
        }

        public Builder launchSpecifications(List<SpotFleetLaunchSpecificationArgs> launchSpecifications) {
            return launchSpecifications(Output.of(launchSpecifications));
        }

        public Builder launchSpecifications(SpotFleetLaunchSpecificationArgs... launchSpecifications) {
            return launchSpecifications(List.of(launchSpecifications));
        }

        public Builder launchTemplateConfigs(@Nullable Output<List<SpotFleetLaunchTemplateConfigArgs>> launchTemplateConfigs) {
            $.launchTemplateConfigs = launchTemplateConfigs;
            return this;
        }

        public Builder launchTemplateConfigs(List<SpotFleetLaunchTemplateConfigArgs> launchTemplateConfigs) {
            return launchTemplateConfigs(Output.of(launchTemplateConfigs));
        }

        public Builder launchTemplateConfigs(SpotFleetLaunchTemplateConfigArgs... launchTemplateConfigs) {
            return launchTemplateConfigs(List.of(launchTemplateConfigs));
        }

        public Builder loadBalancersConfig(@Nullable Output<SpotFleetLoadBalancersConfigArgs> loadBalancersConfig) {
            $.loadBalancersConfig = loadBalancersConfig;
            return this;
        }

        public Builder loadBalancersConfig(SpotFleetLoadBalancersConfigArgs loadBalancersConfig) {
            return loadBalancersConfig(Output.of(loadBalancersConfig));
        }

        public Builder onDemandAllocationStrategy(@Nullable Output<String> onDemandAllocationStrategy) {
            $.onDemandAllocationStrategy = onDemandAllocationStrategy;
            return this;
        }

        public Builder onDemandAllocationStrategy(String onDemandAllocationStrategy) {
            return onDemandAllocationStrategy(Output.of(onDemandAllocationStrategy));
        }

        public Builder onDemandMaxTotalPrice(@Nullable Output<String> onDemandMaxTotalPrice) {
            $.onDemandMaxTotalPrice = onDemandMaxTotalPrice;
            return this;
        }

        public Builder onDemandMaxTotalPrice(String onDemandMaxTotalPrice) {
            return onDemandMaxTotalPrice(Output.of(onDemandMaxTotalPrice));
        }

        public Builder onDemandTargetCapacity(@Nullable Output<Integer> onDemandTargetCapacity) {
            $.onDemandTargetCapacity = onDemandTargetCapacity;
            return this;
        }

        public Builder onDemandTargetCapacity(Integer onDemandTargetCapacity) {
            return onDemandTargetCapacity(Output.of(onDemandTargetCapacity));
        }

        public Builder replaceUnhealthyInstances(@Nullable Output<Boolean> replaceUnhealthyInstances) {
            $.replaceUnhealthyInstances = replaceUnhealthyInstances;
            return this;
        }

        public Builder replaceUnhealthyInstances(Boolean replaceUnhealthyInstances) {
            return replaceUnhealthyInstances(Output.of(replaceUnhealthyInstances));
        }

        public Builder spotMaintenanceStrategies(@Nullable Output<SpotFleetSpotMaintenanceStrategiesArgs> spotMaintenanceStrategies) {
            $.spotMaintenanceStrategies = spotMaintenanceStrategies;
            return this;
        }

        public Builder spotMaintenanceStrategies(SpotFleetSpotMaintenanceStrategiesArgs spotMaintenanceStrategies) {
            return spotMaintenanceStrategies(Output.of(spotMaintenanceStrategies));
        }

        public Builder spotMaxTotalPrice(@Nullable Output<String> spotMaxTotalPrice) {
            $.spotMaxTotalPrice = spotMaxTotalPrice;
            return this;
        }

        public Builder spotMaxTotalPrice(String spotMaxTotalPrice) {
            return spotMaxTotalPrice(Output.of(spotMaxTotalPrice));
        }

        public Builder spotPrice(@Nullable Output<String> spotPrice) {
            $.spotPrice = spotPrice;
            return this;
        }

        public Builder spotPrice(String spotPrice) {
            return spotPrice(Output.of(spotPrice));
        }

        public Builder targetCapacity(Output<Integer> targetCapacity) {
            $.targetCapacity = targetCapacity;
            return this;
        }

        public Builder targetCapacity(Integer targetCapacity) {
            return targetCapacity(Output.of(targetCapacity));
        }

        public Builder targetCapacityUnitType(@Nullable Output<SpotFleetRequestConfigDataTargetCapacityUnitType> targetCapacityUnitType) {
            $.targetCapacityUnitType = targetCapacityUnitType;
            return this;
        }

        public Builder targetCapacityUnitType(SpotFleetRequestConfigDataTargetCapacityUnitType targetCapacityUnitType) {
            return targetCapacityUnitType(Output.of(targetCapacityUnitType));
        }

        public Builder terminateInstancesWithExpiration(@Nullable Output<Boolean> terminateInstancesWithExpiration) {
            $.terminateInstancesWithExpiration = terminateInstancesWithExpiration;
            return this;
        }

        public Builder terminateInstancesWithExpiration(Boolean terminateInstancesWithExpiration) {
            return terminateInstancesWithExpiration(Output.of(terminateInstancesWithExpiration));
        }

        public Builder type(@Nullable Output<SpotFleetRequestConfigDataType> type) {
            $.type = type;
            return this;
        }

        public Builder type(SpotFleetRequestConfigDataType type) {
            return type(Output.of(type));
        }

        public Builder validFrom(@Nullable Output<String> validFrom) {
            $.validFrom = validFrom;
            return this;
        }

        public Builder validFrom(String validFrom) {
            return validFrom(Output.of(validFrom));
        }

        public Builder validUntil(@Nullable Output<String> validUntil) {
            $.validUntil = validUntil;
            return this;
        }

        public Builder validUntil(String validUntil) {
            return validUntil(Output.of(validUntil));
        }

        public SpotFleetRequestConfigDataArgs build() {
            $.iamFleetRole = Objects.requireNonNull($.iamFleetRole, "expected parameter 'iamFleetRole' to be non-null");
            $.targetCapacity = Objects.requireNonNull($.targetCapacity, "expected parameter 'targetCapacity' to be non-null");
            return $;
        }
    }

}
