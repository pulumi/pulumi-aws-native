// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisfirehose.inputs;

import com.pulumi.awsnative.kinesisfirehose.enums.DeliveryStreamExtendedS3DestinationConfigurationCompressionFormat;
import com.pulumi.awsnative.kinesisfirehose.enums.DeliveryStreamExtendedS3DestinationConfigurationS3BackupMode;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamBufferingHintsArgs;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamCloudWatchLoggingOptionsArgs;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamDataFormatConversionConfigurationArgs;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamDynamicPartitioningConfigurationArgs;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamEncryptionConfigurationArgs;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamProcessingConfigurationArgs;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamS3DestinationConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeliveryStreamExtendedS3DestinationConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeliveryStreamExtendedS3DestinationConfigurationArgs Empty = new DeliveryStreamExtendedS3DestinationConfigurationArgs();

    @Import(name="bucketARN", required=true)
    private Output<String> bucketARN;

    public Output<String> bucketARN() {
        return this.bucketARN;
    }

    @Import(name="bufferingHints")
    private @Nullable Output<DeliveryStreamBufferingHintsArgs> bufferingHints;

    public Optional<Output<DeliveryStreamBufferingHintsArgs>> bufferingHints() {
        return Optional.ofNullable(this.bufferingHints);
    }

    @Import(name="cloudWatchLoggingOptions")
    private @Nullable Output<DeliveryStreamCloudWatchLoggingOptionsArgs> cloudWatchLoggingOptions;

    public Optional<Output<DeliveryStreamCloudWatchLoggingOptionsArgs>> cloudWatchLoggingOptions() {
        return Optional.ofNullable(this.cloudWatchLoggingOptions);
    }

    @Import(name="compressionFormat")
    private @Nullable Output<DeliveryStreamExtendedS3DestinationConfigurationCompressionFormat> compressionFormat;

    public Optional<Output<DeliveryStreamExtendedS3DestinationConfigurationCompressionFormat>> compressionFormat() {
        return Optional.ofNullable(this.compressionFormat);
    }

    @Import(name="dataFormatConversionConfiguration")
    private @Nullable Output<DeliveryStreamDataFormatConversionConfigurationArgs> dataFormatConversionConfiguration;

    public Optional<Output<DeliveryStreamDataFormatConversionConfigurationArgs>> dataFormatConversionConfiguration() {
        return Optional.ofNullable(this.dataFormatConversionConfiguration);
    }

    @Import(name="dynamicPartitioningConfiguration")
    private @Nullable Output<DeliveryStreamDynamicPartitioningConfigurationArgs> dynamicPartitioningConfiguration;

    public Optional<Output<DeliveryStreamDynamicPartitioningConfigurationArgs>> dynamicPartitioningConfiguration() {
        return Optional.ofNullable(this.dynamicPartitioningConfiguration);
    }

    @Import(name="encryptionConfiguration")
    private @Nullable Output<DeliveryStreamEncryptionConfigurationArgs> encryptionConfiguration;

    public Optional<Output<DeliveryStreamEncryptionConfigurationArgs>> encryptionConfiguration() {
        return Optional.ofNullable(this.encryptionConfiguration);
    }

    @Import(name="errorOutputPrefix")
    private @Nullable Output<String> errorOutputPrefix;

    public Optional<Output<String>> errorOutputPrefix() {
        return Optional.ofNullable(this.errorOutputPrefix);
    }

    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    @Import(name="processingConfiguration")
    private @Nullable Output<DeliveryStreamProcessingConfigurationArgs> processingConfiguration;

    public Optional<Output<DeliveryStreamProcessingConfigurationArgs>> processingConfiguration() {
        return Optional.ofNullable(this.processingConfiguration);
    }

    @Import(name="roleARN", required=true)
    private Output<String> roleARN;

    public Output<String> roleARN() {
        return this.roleARN;
    }

    @Import(name="s3BackupConfiguration")
    private @Nullable Output<DeliveryStreamS3DestinationConfigurationArgs> s3BackupConfiguration;

    public Optional<Output<DeliveryStreamS3DestinationConfigurationArgs>> s3BackupConfiguration() {
        return Optional.ofNullable(this.s3BackupConfiguration);
    }

    @Import(name="s3BackupMode")
    private @Nullable Output<DeliveryStreamExtendedS3DestinationConfigurationS3BackupMode> s3BackupMode;

    public Optional<Output<DeliveryStreamExtendedS3DestinationConfigurationS3BackupMode>> s3BackupMode() {
        return Optional.ofNullable(this.s3BackupMode);
    }

    private DeliveryStreamExtendedS3DestinationConfigurationArgs() {}

    private DeliveryStreamExtendedS3DestinationConfigurationArgs(DeliveryStreamExtendedS3DestinationConfigurationArgs $) {
        this.bucketARN = $.bucketARN;
        this.bufferingHints = $.bufferingHints;
        this.cloudWatchLoggingOptions = $.cloudWatchLoggingOptions;
        this.compressionFormat = $.compressionFormat;
        this.dataFormatConversionConfiguration = $.dataFormatConversionConfiguration;
        this.dynamicPartitioningConfiguration = $.dynamicPartitioningConfiguration;
        this.encryptionConfiguration = $.encryptionConfiguration;
        this.errorOutputPrefix = $.errorOutputPrefix;
        this.prefix = $.prefix;
        this.processingConfiguration = $.processingConfiguration;
        this.roleARN = $.roleARN;
        this.s3BackupConfiguration = $.s3BackupConfiguration;
        this.s3BackupMode = $.s3BackupMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeliveryStreamExtendedS3DestinationConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeliveryStreamExtendedS3DestinationConfigurationArgs $;

        public Builder() {
            $ = new DeliveryStreamExtendedS3DestinationConfigurationArgs();
        }

        public Builder(DeliveryStreamExtendedS3DestinationConfigurationArgs defaults) {
            $ = new DeliveryStreamExtendedS3DestinationConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder bucketARN(Output<String> bucketARN) {
            $.bucketARN = bucketARN;
            return this;
        }

        public Builder bucketARN(String bucketARN) {
            return bucketARN(Output.of(bucketARN));
        }

        public Builder bufferingHints(@Nullable Output<DeliveryStreamBufferingHintsArgs> bufferingHints) {
            $.bufferingHints = bufferingHints;
            return this;
        }

        public Builder bufferingHints(DeliveryStreamBufferingHintsArgs bufferingHints) {
            return bufferingHints(Output.of(bufferingHints));
        }

        public Builder cloudWatchLoggingOptions(@Nullable Output<DeliveryStreamCloudWatchLoggingOptionsArgs> cloudWatchLoggingOptions) {
            $.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
            return this;
        }

        public Builder cloudWatchLoggingOptions(DeliveryStreamCloudWatchLoggingOptionsArgs cloudWatchLoggingOptions) {
            return cloudWatchLoggingOptions(Output.of(cloudWatchLoggingOptions));
        }

        public Builder compressionFormat(@Nullable Output<DeliveryStreamExtendedS3DestinationConfigurationCompressionFormat> compressionFormat) {
            $.compressionFormat = compressionFormat;
            return this;
        }

        public Builder compressionFormat(DeliveryStreamExtendedS3DestinationConfigurationCompressionFormat compressionFormat) {
            return compressionFormat(Output.of(compressionFormat));
        }

        public Builder dataFormatConversionConfiguration(@Nullable Output<DeliveryStreamDataFormatConversionConfigurationArgs> dataFormatConversionConfiguration) {
            $.dataFormatConversionConfiguration = dataFormatConversionConfiguration;
            return this;
        }

        public Builder dataFormatConversionConfiguration(DeliveryStreamDataFormatConversionConfigurationArgs dataFormatConversionConfiguration) {
            return dataFormatConversionConfiguration(Output.of(dataFormatConversionConfiguration));
        }

        public Builder dynamicPartitioningConfiguration(@Nullable Output<DeliveryStreamDynamicPartitioningConfigurationArgs> dynamicPartitioningConfiguration) {
            $.dynamicPartitioningConfiguration = dynamicPartitioningConfiguration;
            return this;
        }

        public Builder dynamicPartitioningConfiguration(DeliveryStreamDynamicPartitioningConfigurationArgs dynamicPartitioningConfiguration) {
            return dynamicPartitioningConfiguration(Output.of(dynamicPartitioningConfiguration));
        }

        public Builder encryptionConfiguration(@Nullable Output<DeliveryStreamEncryptionConfigurationArgs> encryptionConfiguration) {
            $.encryptionConfiguration = encryptionConfiguration;
            return this;
        }

        public Builder encryptionConfiguration(DeliveryStreamEncryptionConfigurationArgs encryptionConfiguration) {
            return encryptionConfiguration(Output.of(encryptionConfiguration));
        }

        public Builder errorOutputPrefix(@Nullable Output<String> errorOutputPrefix) {
            $.errorOutputPrefix = errorOutputPrefix;
            return this;
        }

        public Builder errorOutputPrefix(String errorOutputPrefix) {
            return errorOutputPrefix(Output.of(errorOutputPrefix));
        }

        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        public Builder processingConfiguration(@Nullable Output<DeliveryStreamProcessingConfigurationArgs> processingConfiguration) {
            $.processingConfiguration = processingConfiguration;
            return this;
        }

        public Builder processingConfiguration(DeliveryStreamProcessingConfigurationArgs processingConfiguration) {
            return processingConfiguration(Output.of(processingConfiguration));
        }

        public Builder roleARN(Output<String> roleARN) {
            $.roleARN = roleARN;
            return this;
        }

        public Builder roleARN(String roleARN) {
            return roleARN(Output.of(roleARN));
        }

        public Builder s3BackupConfiguration(@Nullable Output<DeliveryStreamS3DestinationConfigurationArgs> s3BackupConfiguration) {
            $.s3BackupConfiguration = s3BackupConfiguration;
            return this;
        }

        public Builder s3BackupConfiguration(DeliveryStreamS3DestinationConfigurationArgs s3BackupConfiguration) {
            return s3BackupConfiguration(Output.of(s3BackupConfiguration));
        }

        public Builder s3BackupMode(@Nullable Output<DeliveryStreamExtendedS3DestinationConfigurationS3BackupMode> s3BackupMode) {
            $.s3BackupMode = s3BackupMode;
            return this;
        }

        public Builder s3BackupMode(DeliveryStreamExtendedS3DestinationConfigurationS3BackupMode s3BackupMode) {
            return s3BackupMode(Output.of(s3BackupMode));
        }

        public DeliveryStreamExtendedS3DestinationConfigurationArgs build() {
            $.bucketARN = Objects.requireNonNull($.bucketARN, "expected parameter 'bucketARN' to be non-null");
            $.roleARN = Objects.requireNonNull($.roleARN, "expected parameter 'roleARN' to be non-null");
            return $;
        }
    }

}
