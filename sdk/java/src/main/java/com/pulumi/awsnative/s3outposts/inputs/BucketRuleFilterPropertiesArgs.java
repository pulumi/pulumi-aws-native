// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3outposts.inputs;

import com.pulumi.awsnative.s3outposts.inputs.BucketFilterAndOperatorArgs;
import com.pulumi.awsnative.s3outposts.inputs.BucketFilterTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The container for the filter of the lifecycle rule.
 * 
 */
public final class BucketRuleFilterPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketRuleFilterPropertiesArgs Empty = new BucketRuleFilterPropertiesArgs();

    /**
     * The container for the AND condition for the lifecycle rule. A combination of Prefix and 1 or more Tags OR a minimum of 2 or more tags.
     * 
     */
    @Import(name="andOperator")
    private @Nullable Output<BucketFilterAndOperatorArgs> andOperator;

    /**
     * @return The container for the AND condition for the lifecycle rule. A combination of Prefix and 1 or more Tags OR a minimum of 2 or more tags.
     * 
     */
    public Optional<Output<BucketFilterAndOperatorArgs>> andOperator() {
        return Optional.ofNullable(this.andOperator);
    }

    /**
     * Object key prefix that identifies one or more objects to which this rule applies.
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    /**
     * @return Object key prefix that identifies one or more objects to which this rule applies.
     * 
     */
    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * Specifies a tag used to identify a subset of objects for an Amazon S3Outposts bucket.
     * 
     */
    @Import(name="tag")
    private @Nullable Output<BucketFilterTagArgs> tag;

    /**
     * @return Specifies a tag used to identify a subset of objects for an Amazon S3Outposts bucket.
     * 
     */
    public Optional<Output<BucketFilterTagArgs>> tag() {
        return Optional.ofNullable(this.tag);
    }

    private BucketRuleFilterPropertiesArgs() {}

    private BucketRuleFilterPropertiesArgs(BucketRuleFilterPropertiesArgs $) {
        this.andOperator = $.andOperator;
        this.prefix = $.prefix;
        this.tag = $.tag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketRuleFilterPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketRuleFilterPropertiesArgs $;

        public Builder() {
            $ = new BucketRuleFilterPropertiesArgs();
        }

        public Builder(BucketRuleFilterPropertiesArgs defaults) {
            $ = new BucketRuleFilterPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param andOperator The container for the AND condition for the lifecycle rule. A combination of Prefix and 1 or more Tags OR a minimum of 2 or more tags.
         * 
         * @return builder
         * 
         */
        public Builder andOperator(@Nullable Output<BucketFilterAndOperatorArgs> andOperator) {
            $.andOperator = andOperator;
            return this;
        }

        /**
         * @param andOperator The container for the AND condition for the lifecycle rule. A combination of Prefix and 1 or more Tags OR a minimum of 2 or more tags.
         * 
         * @return builder
         * 
         */
        public Builder andOperator(BucketFilterAndOperatorArgs andOperator) {
            return andOperator(Output.of(andOperator));
        }

        /**
         * @param prefix Object key prefix that identifies one or more objects to which this rule applies.
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix Object key prefix that identifies one or more objects to which this rule applies.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param tag Specifies a tag used to identify a subset of objects for an Amazon S3Outposts bucket.
         * 
         * @return builder
         * 
         */
        public Builder tag(@Nullable Output<BucketFilterTagArgs> tag) {
            $.tag = tag;
            return this;
        }

        /**
         * @param tag Specifies a tag used to identify a subset of objects for an Amazon S3Outposts bucket.
         * 
         * @return builder
         * 
         */
        public Builder tag(BucketFilterTagArgs tag) {
            return tag(Output.of(tag));
        }

        public BucketRuleFilterPropertiesArgs build() {
            return $;
        }
    }

}
