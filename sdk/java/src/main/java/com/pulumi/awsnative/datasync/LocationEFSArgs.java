// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.datasync;

import com.pulumi.awsnative.datasync.enums.LocationEFSInTransitEncryption;
import com.pulumi.awsnative.datasync.inputs.LocationEFSEc2ConfigArgs;
import com.pulumi.awsnative.datasync.inputs.LocationEFSTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LocationEFSArgs extends com.pulumi.resources.ResourceArgs {

    public static final LocationEFSArgs Empty = new LocationEFSArgs();

    /**
     * The Amazon Resource Name (ARN) for the Amazon EFS Access point that DataSync uses when accessing the EFS file system.
     * 
     */
    @Import(name="accessPointArn")
    private @Nullable Output<String> accessPointArn;

    /**
     * @return The Amazon Resource Name (ARN) for the Amazon EFS Access point that DataSync uses when accessing the EFS file system.
     * 
     */
    public Optional<Output<String>> accessPointArn() {
        return Optional.ofNullable(this.accessPointArn);
    }

    @Import(name="ec2Config", required=true)
    private Output<LocationEFSEc2ConfigArgs> ec2Config;

    public Output<LocationEFSEc2ConfigArgs> ec2Config() {
        return this.ec2Config;
    }

    /**
     * The Amazon Resource Name (ARN) for the Amazon EFS file system.
     * 
     */
    @Import(name="efsFilesystemArn", required=true)
    private Output<String> efsFilesystemArn;

    /**
     * @return The Amazon Resource Name (ARN) for the Amazon EFS file system.
     * 
     */
    public Output<String> efsFilesystemArn() {
        return this.efsFilesystemArn;
    }

    /**
     * The Amazon Resource Name (ARN) of the AWS IAM role that the DataSync will assume when mounting the EFS file system.
     * 
     */
    @Import(name="fileSystemAccessRoleArn")
    private @Nullable Output<String> fileSystemAccessRoleArn;

    /**
     * @return The Amazon Resource Name (ARN) of the AWS IAM role that the DataSync will assume when mounting the EFS file system.
     * 
     */
    public Optional<Output<String>> fileSystemAccessRoleArn() {
        return Optional.ofNullable(this.fileSystemAccessRoleArn);
    }

    /**
     * Protocol that is used for encrypting the traffic exchanged between the DataSync Agent and the EFS file system.
     * 
     */
    @Import(name="inTransitEncryption")
    private @Nullable Output<LocationEFSInTransitEncryption> inTransitEncryption;

    /**
     * @return Protocol that is used for encrypting the traffic exchanged between the DataSync Agent and the EFS file system.
     * 
     */
    public Optional<Output<LocationEFSInTransitEncryption>> inTransitEncryption() {
        return Optional.ofNullable(this.inTransitEncryption);
    }

    /**
     * A subdirectory in the location&#39;s path. This subdirectory in the EFS file system is used to read data from the EFS source location or write data to the EFS destination.
     * 
     */
    @Import(name="subdirectory")
    private @Nullable Output<String> subdirectory;

    /**
     * @return A subdirectory in the location&#39;s path. This subdirectory in the EFS file system is used to read data from the EFS source location or write data to the EFS destination.
     * 
     */
    public Optional<Output<String>> subdirectory() {
        return Optional.ofNullable(this.subdirectory);
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<LocationEFSTagArgs>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public Optional<Output<List<LocationEFSTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private LocationEFSArgs() {}

    private LocationEFSArgs(LocationEFSArgs $) {
        this.accessPointArn = $.accessPointArn;
        this.ec2Config = $.ec2Config;
        this.efsFilesystemArn = $.efsFilesystemArn;
        this.fileSystemAccessRoleArn = $.fileSystemAccessRoleArn;
        this.inTransitEncryption = $.inTransitEncryption;
        this.subdirectory = $.subdirectory;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LocationEFSArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LocationEFSArgs $;

        public Builder() {
            $ = new LocationEFSArgs();
        }

        public Builder(LocationEFSArgs defaults) {
            $ = new LocationEFSArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessPointArn The Amazon Resource Name (ARN) for the Amazon EFS Access point that DataSync uses when accessing the EFS file system.
         * 
         * @return builder
         * 
         */
        public Builder accessPointArn(@Nullable Output<String> accessPointArn) {
            $.accessPointArn = accessPointArn;
            return this;
        }

        /**
         * @param accessPointArn The Amazon Resource Name (ARN) for the Amazon EFS Access point that DataSync uses when accessing the EFS file system.
         * 
         * @return builder
         * 
         */
        public Builder accessPointArn(String accessPointArn) {
            return accessPointArn(Output.of(accessPointArn));
        }

        public Builder ec2Config(Output<LocationEFSEc2ConfigArgs> ec2Config) {
            $.ec2Config = ec2Config;
            return this;
        }

        public Builder ec2Config(LocationEFSEc2ConfigArgs ec2Config) {
            return ec2Config(Output.of(ec2Config));
        }

        /**
         * @param efsFilesystemArn The Amazon Resource Name (ARN) for the Amazon EFS file system.
         * 
         * @return builder
         * 
         */
        public Builder efsFilesystemArn(Output<String> efsFilesystemArn) {
            $.efsFilesystemArn = efsFilesystemArn;
            return this;
        }

        /**
         * @param efsFilesystemArn The Amazon Resource Name (ARN) for the Amazon EFS file system.
         * 
         * @return builder
         * 
         */
        public Builder efsFilesystemArn(String efsFilesystemArn) {
            return efsFilesystemArn(Output.of(efsFilesystemArn));
        }

        /**
         * @param fileSystemAccessRoleArn The Amazon Resource Name (ARN) of the AWS IAM role that the DataSync will assume when mounting the EFS file system.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemAccessRoleArn(@Nullable Output<String> fileSystemAccessRoleArn) {
            $.fileSystemAccessRoleArn = fileSystemAccessRoleArn;
            return this;
        }

        /**
         * @param fileSystemAccessRoleArn The Amazon Resource Name (ARN) of the AWS IAM role that the DataSync will assume when mounting the EFS file system.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemAccessRoleArn(String fileSystemAccessRoleArn) {
            return fileSystemAccessRoleArn(Output.of(fileSystemAccessRoleArn));
        }

        /**
         * @param inTransitEncryption Protocol that is used for encrypting the traffic exchanged between the DataSync Agent and the EFS file system.
         * 
         * @return builder
         * 
         */
        public Builder inTransitEncryption(@Nullable Output<LocationEFSInTransitEncryption> inTransitEncryption) {
            $.inTransitEncryption = inTransitEncryption;
            return this;
        }

        /**
         * @param inTransitEncryption Protocol that is used for encrypting the traffic exchanged between the DataSync Agent and the EFS file system.
         * 
         * @return builder
         * 
         */
        public Builder inTransitEncryption(LocationEFSInTransitEncryption inTransitEncryption) {
            return inTransitEncryption(Output.of(inTransitEncryption));
        }

        /**
         * @param subdirectory A subdirectory in the location&#39;s path. This subdirectory in the EFS file system is used to read data from the EFS source location or write data to the EFS destination.
         * 
         * @return builder
         * 
         */
        public Builder subdirectory(@Nullable Output<String> subdirectory) {
            $.subdirectory = subdirectory;
            return this;
        }

        /**
         * @param subdirectory A subdirectory in the location&#39;s path. This subdirectory in the EFS file system is used to read data from the EFS source location or write data to the EFS destination.
         * 
         * @return builder
         * 
         */
        public Builder subdirectory(String subdirectory) {
            return subdirectory(Output.of(subdirectory));
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<LocationEFSTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<LocationEFSTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(LocationEFSTagArgs... tags) {
            return tags(List.of(tags));
        }

        public LocationEFSArgs build() {
            $.ec2Config = Objects.requireNonNull($.ec2Config, "expected parameter 'ec2Config' to be non-null");
            $.efsFilesystemArn = Objects.requireNonNull($.efsFilesystemArn, "expected parameter 'efsFilesystemArn' to be non-null");
            return $;
        }
    }

}
