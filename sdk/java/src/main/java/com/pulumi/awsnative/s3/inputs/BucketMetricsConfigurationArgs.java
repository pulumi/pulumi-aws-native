// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.inputs.BucketTagFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketMetricsConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketMetricsConfigurationArgs Empty = new BucketMetricsConfigurationArgs();

    @Import(name="accessPointArn")
    private @Nullable Output<String> accessPointArn;

    public Optional<Output<String>> accessPointArn() {
        return Optional.ofNullable(this.accessPointArn);
    }

    @Import(name="id", required=true)
    private Output<String> id;

    public Output<String> id() {
        return this.id;
    }

    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    @Import(name="tagFilters")
    private @Nullable Output<List<BucketTagFilterArgs>> tagFilters;

    public Optional<Output<List<BucketTagFilterArgs>>> tagFilters() {
        return Optional.ofNullable(this.tagFilters);
    }

    private BucketMetricsConfigurationArgs() {}

    private BucketMetricsConfigurationArgs(BucketMetricsConfigurationArgs $) {
        this.accessPointArn = $.accessPointArn;
        this.id = $.id;
        this.prefix = $.prefix;
        this.tagFilters = $.tagFilters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketMetricsConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketMetricsConfigurationArgs $;

        public Builder() {
            $ = new BucketMetricsConfigurationArgs();
        }

        public Builder(BucketMetricsConfigurationArgs defaults) {
            $ = new BucketMetricsConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessPointArn(@Nullable Output<String> accessPointArn) {
            $.accessPointArn = accessPointArn;
            return this;
        }

        public Builder accessPointArn(String accessPointArn) {
            return accessPointArn(Output.of(accessPointArn));
        }

        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        public Builder tagFilters(@Nullable Output<List<BucketTagFilterArgs>> tagFilters) {
            $.tagFilters = tagFilters;
            return this;
        }

        public Builder tagFilters(List<BucketTagFilterArgs> tagFilters) {
            return tagFilters(Output.of(tagFilters));
        }

        public Builder tagFilters(BucketTagFilterArgs... tagFilters) {
            return tagFilters(List.of(tagFilters));
        }

        public BucketMetricsConfigurationArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
