// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IPAMAllocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final IPAMAllocationArgs Empty = new IPAMAllocationArgs();

    @Import(name="cidr")
    private @Nullable Output<String> cidr;

    public Optional<Output<String>> cidr() {
        return Optional.ofNullable(this.cidr);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Id of the IPAM Pool.
     * 
     */
    @Import(name="ipamPoolId", required=true)
    private Output<String> ipamPoolId;

    /**
     * @return Id of the IPAM Pool.
     * 
     */
    public Output<String> ipamPoolId() {
        return this.ipamPoolId;
    }

    /**
     * The desired netmask length of the allocation. If set, IPAM will choose a block of free space with this size and return the CIDR representing it.
     * 
     */
    @Import(name="netmaskLength")
    private @Nullable Output<Integer> netmaskLength;

    /**
     * @return The desired netmask length of the allocation. If set, IPAM will choose a block of free space with this size and return the CIDR representing it.
     * 
     */
    public Optional<Output<Integer>> netmaskLength() {
        return Optional.ofNullable(this.netmaskLength);
    }

    private IPAMAllocationArgs() {}

    private IPAMAllocationArgs(IPAMAllocationArgs $) {
        this.cidr = $.cidr;
        this.description = $.description;
        this.ipamPoolId = $.ipamPoolId;
        this.netmaskLength = $.netmaskLength;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IPAMAllocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IPAMAllocationArgs $;

        public Builder() {
            $ = new IPAMAllocationArgs();
        }

        public Builder(IPAMAllocationArgs defaults) {
            $ = new IPAMAllocationArgs(Objects.requireNonNull(defaults));
        }

        public Builder cidr(@Nullable Output<String> cidr) {
            $.cidr = cidr;
            return this;
        }

        public Builder cidr(String cidr) {
            return cidr(Output.of(cidr));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param ipamPoolId Id of the IPAM Pool.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolId(Output<String> ipamPoolId) {
            $.ipamPoolId = ipamPoolId;
            return this;
        }

        /**
         * @param ipamPoolId Id of the IPAM Pool.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolId(String ipamPoolId) {
            return ipamPoolId(Output.of(ipamPoolId));
        }

        /**
         * @param netmaskLength The desired netmask length of the allocation. If set, IPAM will choose a block of free space with this size and return the CIDR representing it.
         * 
         * @return builder
         * 
         */
        public Builder netmaskLength(@Nullable Output<Integer> netmaskLength) {
            $.netmaskLength = netmaskLength;
            return this;
        }

        /**
         * @param netmaskLength The desired netmask length of the allocation. If set, IPAM will choose a block of free space with this size and return the CIDR representing it.
         * 
         * @return builder
         * 
         */
        public Builder netmaskLength(Integer netmaskLength) {
            return netmaskLength(Output.of(netmaskLength));
        }

        public IPAMAllocationArgs build() {
            $.ipamPoolId = Objects.requireNonNull($.ipamPoolId, "expected parameter 'ipamPoolId' to be non-null");
            return $;
        }
    }

}
