// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.quicksight.TemplateArgs;
import com.pulumi.awsnative.quicksight.outputs.TemplateResourcePermission;
import com.pulumi.awsnative.quicksight.outputs.TemplateSourceEntity;
import com.pulumi.awsnative.quicksight.outputs.TemplateTag;
import com.pulumi.awsnative.quicksight.outputs.TemplateVersion;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Definition of the AWS::QuickSight::Template Resource Type.
 * 
 */
@ResourceType(type="aws-native:quicksight:Template")
public class Template extends com.pulumi.resources.CustomResource {
    /**
     * &lt;p&gt;The Amazon Resource Name (ARN) of the template.&lt;/p&gt;
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return &lt;p&gt;The Amazon Resource Name (ARN) of the template.&lt;/p&gt;
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="awsAccountId", type=String.class, parameters={})
    private Output<String> awsAccountId;

    public Output<String> awsAccountId() {
        return this.awsAccountId;
    }
    /**
     * &lt;p&gt;Time when this was created.&lt;/p&gt;
     * 
     */
    @Export(name="createdTime", type=String.class, parameters={})
    private Output<String> createdTime;

    /**
     * @return &lt;p&gt;Time when this was created.&lt;/p&gt;
     * 
     */
    public Output<String> createdTime() {
        return this.createdTime;
    }
    /**
     * &lt;p&gt;Time when this was last updated.&lt;/p&gt;
     * 
     */
    @Export(name="lastUpdatedTime", type=String.class, parameters={})
    private Output<String> lastUpdatedTime;

    /**
     * @return &lt;p&gt;Time when this was last updated.&lt;/p&gt;
     * 
     */
    public Output<String> lastUpdatedTime() {
        return this.lastUpdatedTime;
    }
    /**
     * &lt;p&gt;A display name for the template.&lt;/p&gt;
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output</* @Nullable */ String> name;

    /**
     * @return &lt;p&gt;A display name for the template.&lt;/p&gt;
     * 
     */
    public Output<Optional<String>> name() {
        return Codegen.optional(this.name);
    }
    /**
     * &lt;p&gt;A list of resource permissions to be set on the template. &lt;/p&gt;
     * 
     */
    @Export(name="permissions", type=List.class, parameters={TemplateResourcePermission.class})
    private Output</* @Nullable */ List<TemplateResourcePermission>> permissions;

    /**
     * @return &lt;p&gt;A list of resource permissions to be set on the template. &lt;/p&gt;
     * 
     */
    public Output<Optional<List<TemplateResourcePermission>>> permissions() {
        return Codegen.optional(this.permissions);
    }
    @Export(name="sourceEntity", type=TemplateSourceEntity.class, parameters={})
    private Output<TemplateSourceEntity> sourceEntity;

    public Output<TemplateSourceEntity> sourceEntity() {
        return this.sourceEntity;
    }
    /**
     * &lt;p&gt;Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.&lt;/p&gt;
     * 
     */
    @Export(name="tags", type=List.class, parameters={TemplateTag.class})
    private Output</* @Nullable */ List<TemplateTag>> tags;

    /**
     * @return &lt;p&gt;Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.&lt;/p&gt;
     * 
     */
    public Output<Optional<List<TemplateTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="templateId", type=String.class, parameters={})
    private Output<String> templateId;

    public Output<String> templateId() {
        return this.templateId;
    }
    @Export(name="version", type=TemplateVersion.class, parameters={})
    private Output<TemplateVersion> version;

    public Output<TemplateVersion> version() {
        return this.version;
    }
    /**
     * &lt;p&gt;A description of the current template version being created. This API operation creates the
     * 			first version of the template. Every time &lt;code&gt;UpdateTemplate&lt;/code&gt; is called, a new
     * 			version is created. Each version of the template maintains a description of the version
     * 			in the &lt;code&gt;VersionDescription&lt;/code&gt; field.&lt;/p&gt;
     * 
     */
    @Export(name="versionDescription", type=String.class, parameters={})
    private Output</* @Nullable */ String> versionDescription;

    /**
     * @return &lt;p&gt;A description of the current template version being created. This API operation creates the
     * 			first version of the template. Every time &lt;code&gt;UpdateTemplate&lt;/code&gt; is called, a new
     * 			version is created. Each version of the template maintains a description of the version
     * 			in the &lt;code&gt;VersionDescription&lt;/code&gt; field.&lt;/p&gt;
     * 
     */
    public Output<Optional<String>> versionDescription() {
        return Codegen.optional(this.versionDescription);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Template(String name) {
        this(name, TemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Template(String name, TemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Template(String name, TemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:quicksight:Template", name, args == null ? TemplateArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Template(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:quicksight:Template", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Template get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Template(name, id, options);
    }
}
