// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.route53.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class CidrCollectionLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CidrCollectionLocationArgs Empty = new CidrCollectionLocationArgs();

    /**
     * A list of CIDR blocks.
     * 
     */
    @Import(name="cidrList", required=true)
    private Output<List<String>> cidrList;

    /**
     * @return A list of CIDR blocks.
     * 
     */
    public Output<List<String>> cidrList() {
        return this.cidrList;
    }

    /**
     * The name of the location that is associated with the CIDR collection.
     * 
     */
    @Import(name="locationName", required=true)
    private Output<String> locationName;

    /**
     * @return The name of the location that is associated with the CIDR collection.
     * 
     */
    public Output<String> locationName() {
        return this.locationName;
    }

    private CidrCollectionLocationArgs() {}

    private CidrCollectionLocationArgs(CidrCollectionLocationArgs $) {
        this.cidrList = $.cidrList;
        this.locationName = $.locationName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CidrCollectionLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CidrCollectionLocationArgs $;

        public Builder() {
            $ = new CidrCollectionLocationArgs();
        }

        public Builder(CidrCollectionLocationArgs defaults) {
            $ = new CidrCollectionLocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidrList A list of CIDR blocks.
         * 
         * @return builder
         * 
         */
        public Builder cidrList(Output<List<String>> cidrList) {
            $.cidrList = cidrList;
            return this;
        }

        /**
         * @param cidrList A list of CIDR blocks.
         * 
         * @return builder
         * 
         */
        public Builder cidrList(List<String> cidrList) {
            return cidrList(Output.of(cidrList));
        }

        /**
         * @param cidrList A list of CIDR blocks.
         * 
         * @return builder
         * 
         */
        public Builder cidrList(String... cidrList) {
            return cidrList(List.of(cidrList));
        }

        /**
         * @param locationName The name of the location that is associated with the CIDR collection.
         * 
         * @return builder
         * 
         */
        public Builder locationName(Output<String> locationName) {
            $.locationName = locationName;
            return this;
        }

        /**
         * @param locationName The name of the location that is associated with the CIDR collection.
         * 
         * @return builder
         * 
         */
        public Builder locationName(String locationName) {
            return locationName(Output.of(locationName));
        }

        public CidrCollectionLocationArgs build() {
            $.cidrList = Objects.requireNonNull($.cidrList, "expected parameter 'cidrList' to be non-null");
            $.locationName = Objects.requireNonNull($.locationName, "expected parameter 'locationName' to be non-null");
            return $;
        }
    }

}
