// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2.inputs;

import com.pulumi.awsnative.ec2.enums.FlowLogDestinationOptionsPropertiesFileFormat;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


public final class DestinationOptionsPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final DestinationOptionsPropertiesArgs Empty = new DestinationOptionsPropertiesArgs();

    @Import(name="fileFormat", required=true)
    private Output<FlowLogDestinationOptionsPropertiesFileFormat> fileFormat;

    public Output<FlowLogDestinationOptionsPropertiesFileFormat> fileFormat() {
        return this.fileFormat;
    }

    @Import(name="hiveCompatiblePartitions", required=true)
    private Output<Boolean> hiveCompatiblePartitions;

    public Output<Boolean> hiveCompatiblePartitions() {
        return this.hiveCompatiblePartitions;
    }

    @Import(name="perHourPartition", required=true)
    private Output<Boolean> perHourPartition;

    public Output<Boolean> perHourPartition() {
        return this.perHourPartition;
    }

    private DestinationOptionsPropertiesArgs() {}

    private DestinationOptionsPropertiesArgs(DestinationOptionsPropertiesArgs $) {
        this.fileFormat = $.fileFormat;
        this.hiveCompatiblePartitions = $.hiveCompatiblePartitions;
        this.perHourPartition = $.perHourPartition;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DestinationOptionsPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DestinationOptionsPropertiesArgs $;

        public Builder() {
            $ = new DestinationOptionsPropertiesArgs();
        }

        public Builder(DestinationOptionsPropertiesArgs defaults) {
            $ = new DestinationOptionsPropertiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder fileFormat(Output<FlowLogDestinationOptionsPropertiesFileFormat> fileFormat) {
            $.fileFormat = fileFormat;
            return this;
        }

        public Builder fileFormat(FlowLogDestinationOptionsPropertiesFileFormat fileFormat) {
            return fileFormat(Output.of(fileFormat));
        }

        public Builder hiveCompatiblePartitions(Output<Boolean> hiveCompatiblePartitions) {
            $.hiveCompatiblePartitions = hiveCompatiblePartitions;
            return this;
        }

        public Builder hiveCompatiblePartitions(Boolean hiveCompatiblePartitions) {
            return hiveCompatiblePartitions(Output.of(hiveCompatiblePartitions));
        }

        public Builder perHourPartition(Output<Boolean> perHourPartition) {
            $.perHourPartition = perHourPartition;
            return this;
        }

        public Builder perHourPartition(Boolean perHourPartition) {
            return perHourPartition(Output.of(perHourPartition));
        }

        public DestinationOptionsPropertiesArgs build() {
            $.fileFormat = Objects.requireNonNull($.fileFormat, "expected parameter 'fileFormat' to be non-null");
            $.hiveCompatiblePartitions = Objects.requireNonNull($.hiveCompatiblePartitions, "expected parameter 'hiveCompatiblePartitions' to be non-null");
            $.perHourPartition = Objects.requireNonNull($.perHourPartition, "expected parameter 'perHourPartition' to be non-null");
            return $;
        }
    }

}
