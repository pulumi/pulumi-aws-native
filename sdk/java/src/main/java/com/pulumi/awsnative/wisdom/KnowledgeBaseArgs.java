// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.wisdom;

import com.pulumi.awsnative.wisdom.enums.KnowledgeBaseType;
import com.pulumi.awsnative.wisdom.inputs.KnowledgeBaseRenderingConfigurationArgs;
import com.pulumi.awsnative.wisdom.inputs.KnowledgeBaseServerSideEncryptionConfigurationArgs;
import com.pulumi.awsnative.wisdom.inputs.KnowledgeBaseSourceConfigurationArgs;
import com.pulumi.awsnative.wisdom.inputs.KnowledgeBaseTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KnowledgeBaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final KnowledgeBaseArgs Empty = new KnowledgeBaseArgs();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="knowledgeBaseType", required=true)
    private Output<KnowledgeBaseType> knowledgeBaseType;

    public Output<KnowledgeBaseType> knowledgeBaseType() {
        return this.knowledgeBaseType;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="renderingConfiguration")
    private @Nullable Output<KnowledgeBaseRenderingConfigurationArgs> renderingConfiguration;

    public Optional<Output<KnowledgeBaseRenderingConfigurationArgs>> renderingConfiguration() {
        return Optional.ofNullable(this.renderingConfiguration);
    }

    @Import(name="serverSideEncryptionConfiguration")
    private @Nullable Output<KnowledgeBaseServerSideEncryptionConfigurationArgs> serverSideEncryptionConfiguration;

    public Optional<Output<KnowledgeBaseServerSideEncryptionConfigurationArgs>> serverSideEncryptionConfiguration() {
        return Optional.ofNullable(this.serverSideEncryptionConfiguration);
    }

    @Import(name="sourceConfiguration")
    private @Nullable Output<KnowledgeBaseSourceConfigurationArgs> sourceConfiguration;

    public Optional<Output<KnowledgeBaseSourceConfigurationArgs>> sourceConfiguration() {
        return Optional.ofNullable(this.sourceConfiguration);
    }

    @Import(name="tags")
    private @Nullable Output<List<KnowledgeBaseTagArgs>> tags;

    public Optional<Output<List<KnowledgeBaseTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private KnowledgeBaseArgs() {}

    private KnowledgeBaseArgs(KnowledgeBaseArgs $) {
        this.description = $.description;
        this.knowledgeBaseType = $.knowledgeBaseType;
        this.name = $.name;
        this.renderingConfiguration = $.renderingConfiguration;
        this.serverSideEncryptionConfiguration = $.serverSideEncryptionConfiguration;
        this.sourceConfiguration = $.sourceConfiguration;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KnowledgeBaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KnowledgeBaseArgs $;

        public Builder() {
            $ = new KnowledgeBaseArgs();
        }

        public Builder(KnowledgeBaseArgs defaults) {
            $ = new KnowledgeBaseArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder knowledgeBaseType(Output<KnowledgeBaseType> knowledgeBaseType) {
            $.knowledgeBaseType = knowledgeBaseType;
            return this;
        }

        public Builder knowledgeBaseType(KnowledgeBaseType knowledgeBaseType) {
            return knowledgeBaseType(Output.of(knowledgeBaseType));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder renderingConfiguration(@Nullable Output<KnowledgeBaseRenderingConfigurationArgs> renderingConfiguration) {
            $.renderingConfiguration = renderingConfiguration;
            return this;
        }

        public Builder renderingConfiguration(KnowledgeBaseRenderingConfigurationArgs renderingConfiguration) {
            return renderingConfiguration(Output.of(renderingConfiguration));
        }

        public Builder serverSideEncryptionConfiguration(@Nullable Output<KnowledgeBaseServerSideEncryptionConfigurationArgs> serverSideEncryptionConfiguration) {
            $.serverSideEncryptionConfiguration = serverSideEncryptionConfiguration;
            return this;
        }

        public Builder serverSideEncryptionConfiguration(KnowledgeBaseServerSideEncryptionConfigurationArgs serverSideEncryptionConfiguration) {
            return serverSideEncryptionConfiguration(Output.of(serverSideEncryptionConfiguration));
        }

        public Builder sourceConfiguration(@Nullable Output<KnowledgeBaseSourceConfigurationArgs> sourceConfiguration) {
            $.sourceConfiguration = sourceConfiguration;
            return this;
        }

        public Builder sourceConfiguration(KnowledgeBaseSourceConfigurationArgs sourceConfiguration) {
            return sourceConfiguration(Output.of(sourceConfiguration));
        }

        public Builder tags(@Nullable Output<List<KnowledgeBaseTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<KnowledgeBaseTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(KnowledgeBaseTagArgs... tags) {
            return tags(List.of(tags));
        }

        public KnowledgeBaseArgs build() {
            $.knowledgeBaseType = Objects.requireNonNull($.knowledgeBaseType, "expected parameter 'knowledgeBaseType' to be non-null");
            return $;
        }
    }

}
