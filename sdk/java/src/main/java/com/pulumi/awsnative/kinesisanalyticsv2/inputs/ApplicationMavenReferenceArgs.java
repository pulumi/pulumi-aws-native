// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisanalyticsv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The information required to specify a Maven reference. You can use Maven references to specify dependency JAR files.
 * 
 */
public final class ApplicationMavenReferenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationMavenReferenceArgs Empty = new ApplicationMavenReferenceArgs();

    /**
     * The artifact ID of the Maven reference.
     * 
     */
    @Import(name="artifactId", required=true)
    private Output<String> artifactId;

    /**
     * @return The artifact ID of the Maven reference.
     * 
     */
    public Output<String> artifactId() {
        return this.artifactId;
    }

    /**
     * The group ID of the Maven reference.
     * 
     */
    @Import(name="groupId", required=true)
    private Output<String> groupId;

    /**
     * @return The group ID of the Maven reference.
     * 
     */
    public Output<String> groupId() {
        return this.groupId;
    }

    /**
     * The version of the Maven reference.
     * 
     */
    @Import(name="version", required=true)
    private Output<String> version;

    /**
     * @return The version of the Maven reference.
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    private ApplicationMavenReferenceArgs() {}

    private ApplicationMavenReferenceArgs(ApplicationMavenReferenceArgs $) {
        this.artifactId = $.artifactId;
        this.groupId = $.groupId;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationMavenReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationMavenReferenceArgs $;

        public Builder() {
            $ = new ApplicationMavenReferenceArgs();
        }

        public Builder(ApplicationMavenReferenceArgs defaults) {
            $ = new ApplicationMavenReferenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param artifactId The artifact ID of the Maven reference.
         * 
         * @return builder
         * 
         */
        public Builder artifactId(Output<String> artifactId) {
            $.artifactId = artifactId;
            return this;
        }

        /**
         * @param artifactId The artifact ID of the Maven reference.
         * 
         * @return builder
         * 
         */
        public Builder artifactId(String artifactId) {
            return artifactId(Output.of(artifactId));
        }

        /**
         * @param groupId The group ID of the Maven reference.
         * 
         * @return builder
         * 
         */
        public Builder groupId(Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId The group ID of the Maven reference.
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param version The version of the Maven reference.
         * 
         * @return builder
         * 
         */
        public Builder version(Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the Maven reference.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public ApplicationMavenReferenceArgs build() {
            $.artifactId = Objects.requireNonNull($.artifactId, "expected parameter 'artifactId' to be non-null");
            $.groupId = Objects.requireNonNull($.groupId, "expected parameter 'groupId' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
