// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.databrew.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RecipeConditionExpression {
    /**
     * @return Input condition to be applied to the target column
     * 
     */
    private String condition;
    /**
     * @return Name of the target column
     * 
     */
    private String targetColumn;
    /**
     * @return Value of the condition
     * 
     */
    private @Nullable String value;

    private RecipeConditionExpression() {}
    /**
     * @return Input condition to be applied to the target column
     * 
     */
    public String condition() {
        return this.condition;
    }
    /**
     * @return Name of the target column
     * 
     */
    public String targetColumn() {
        return this.targetColumn;
    }
    /**
     * @return Value of the condition
     * 
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RecipeConditionExpression defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String condition;
        private String targetColumn;
        private @Nullable String value;
        public Builder() {}
        public Builder(RecipeConditionExpression defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.condition = defaults.condition;
    	      this.targetColumn = defaults.targetColumn;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder condition(String condition) {
            this.condition = Objects.requireNonNull(condition);
            return this;
        }
        @CustomType.Setter
        public Builder targetColumn(String targetColumn) {
            this.targetColumn = Objects.requireNonNull(targetColumn);
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }
        public RecipeConditionExpression build() {
            final var o = new RecipeConditionExpression();
            o.condition = condition;
            o.targetColumn = targetColumn;
            o.value = value;
            return o;
        }
    }
}
