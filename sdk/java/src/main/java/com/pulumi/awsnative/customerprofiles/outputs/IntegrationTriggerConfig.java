// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.customerprofiles.outputs;

import com.pulumi.awsnative.customerprofiles.enums.IntegrationTriggerType;
import com.pulumi.awsnative.customerprofiles.outputs.IntegrationTriggerProperties;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IntegrationTriggerConfig {
    private @Nullable IntegrationTriggerProperties triggerProperties;
    private IntegrationTriggerType triggerType;

    private IntegrationTriggerConfig() {}
    public Optional<IntegrationTriggerProperties> triggerProperties() {
        return Optional.ofNullable(this.triggerProperties);
    }
    public IntegrationTriggerType triggerType() {
        return this.triggerType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntegrationTriggerConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable IntegrationTriggerProperties triggerProperties;
        private IntegrationTriggerType triggerType;
        public Builder() {}
        public Builder(IntegrationTriggerConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.triggerProperties = defaults.triggerProperties;
    	      this.triggerType = defaults.triggerType;
        }

        @CustomType.Setter
        public Builder triggerProperties(@Nullable IntegrationTriggerProperties triggerProperties) {
            this.triggerProperties = triggerProperties;
            return this;
        }
        @CustomType.Setter
        public Builder triggerType(IntegrationTriggerType triggerType) {
            this.triggerType = Objects.requireNonNull(triggerType);
            return this;
        }
        public IntegrationTriggerConfig build() {
            final var o = new IntegrationTriggerConfig();
            o.triggerProperties = triggerProperties;
            o.triggerType = triggerType;
            return o;
        }
    }
}
