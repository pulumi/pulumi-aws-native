// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


/**
 * Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.
 * 
 */
public final class SentimentAnalysisSettingsPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final SentimentAnalysisSettingsPropertiesArgs Empty = new SentimentAnalysisSettingsPropertiesArgs();

    /**
     * Enable to call Amazon Comprehend for Sentiment natively within Lex
     * 
     */
    @Import(name="detectSentiment", required=true)
    private Output<Boolean> detectSentiment;

    /**
     * @return Enable to call Amazon Comprehend for Sentiment natively within Lex
     * 
     */
    public Output<Boolean> detectSentiment() {
        return this.detectSentiment;
    }

    private SentimentAnalysisSettingsPropertiesArgs() {}

    private SentimentAnalysisSettingsPropertiesArgs(SentimentAnalysisSettingsPropertiesArgs $) {
        this.detectSentiment = $.detectSentiment;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SentimentAnalysisSettingsPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SentimentAnalysisSettingsPropertiesArgs $;

        public Builder() {
            $ = new SentimentAnalysisSettingsPropertiesArgs();
        }

        public Builder(SentimentAnalysisSettingsPropertiesArgs defaults) {
            $ = new SentimentAnalysisSettingsPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param detectSentiment Enable to call Amazon Comprehend for Sentiment natively within Lex
         * 
         * @return builder
         * 
         */
        public Builder detectSentiment(Output<Boolean> detectSentiment) {
            $.detectSentiment = detectSentiment;
            return this;
        }

        /**
         * @param detectSentiment Enable to call Amazon Comprehend for Sentiment natively within Lex
         * 
         * @return builder
         * 
         */
        public Builder detectSentiment(Boolean detectSentiment) {
            return detectSentiment(Output.of(detectSentiment));
        }

        public SentimentAnalysisSettingsPropertiesArgs build() {
            $.detectSentiment = Objects.requireNonNull($.detectSentiment, "expected parameter 'detectSentiment' to be non-null");
            return $;
        }
    }

}
