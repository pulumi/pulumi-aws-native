// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.databrew.inputs;

import com.pulumi.awsnative.databrew.inputs.RecipeActionArgs;
import com.pulumi.awsnative.databrew.inputs.RecipeConditionExpressionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RecipeStepArgs extends com.pulumi.resources.ResourceArgs {

    public static final RecipeStepArgs Empty = new RecipeStepArgs();

    @Import(name="action", required=true)
    private Output<RecipeActionArgs> action;

    public Output<RecipeActionArgs> action() {
        return this.action;
    }

    /**
     * Condition expressions applied to the step action
     * 
     */
    @Import(name="conditionExpressions")
    private @Nullable Output<List<RecipeConditionExpressionArgs>> conditionExpressions;

    /**
     * @return Condition expressions applied to the step action
     * 
     */
    public Optional<Output<List<RecipeConditionExpressionArgs>>> conditionExpressions() {
        return Optional.ofNullable(this.conditionExpressions);
    }

    private RecipeStepArgs() {}

    private RecipeStepArgs(RecipeStepArgs $) {
        this.action = $.action;
        this.conditionExpressions = $.conditionExpressions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecipeStepArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecipeStepArgs $;

        public Builder() {
            $ = new RecipeStepArgs();
        }

        public Builder(RecipeStepArgs defaults) {
            $ = new RecipeStepArgs(Objects.requireNonNull(defaults));
        }

        public Builder action(Output<RecipeActionArgs> action) {
            $.action = action;
            return this;
        }

        public Builder action(RecipeActionArgs action) {
            return action(Output.of(action));
        }

        /**
         * @param conditionExpressions Condition expressions applied to the step action
         * 
         * @return builder
         * 
         */
        public Builder conditionExpressions(@Nullable Output<List<RecipeConditionExpressionArgs>> conditionExpressions) {
            $.conditionExpressions = conditionExpressions;
            return this;
        }

        /**
         * @param conditionExpressions Condition expressions applied to the step action
         * 
         * @return builder
         * 
         */
        public Builder conditionExpressions(List<RecipeConditionExpressionArgs> conditionExpressions) {
            return conditionExpressions(Output.of(conditionExpressions));
        }

        /**
         * @param conditionExpressions Condition expressions applied to the step action
         * 
         * @return builder
         * 
         */
        public Builder conditionExpressions(RecipeConditionExpressionArgs... conditionExpressions) {
            return conditionExpressions(List.of(conditionExpressions));
        }

        public RecipeStepArgs build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            return $;
        }
    }

}
