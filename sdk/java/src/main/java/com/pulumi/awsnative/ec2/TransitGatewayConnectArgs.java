// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2;

import com.pulumi.awsnative.ec2.inputs.TransitGatewayConnectOptionsArgs;
import com.pulumi.awsnative.ec2.inputs.TransitGatewayConnectTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransitGatewayConnectArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransitGatewayConnectArgs Empty = new TransitGatewayConnectArgs();

    /**
     * The Connect attachment options.
     * 
     */
    @Import(name="options", required=true)
    private Output<TransitGatewayConnectOptionsArgs> options;

    /**
     * @return The Connect attachment options.
     * 
     */
    public Output<TransitGatewayConnectOptionsArgs> options() {
        return this.options;
    }

    /**
     * The tags for the attachment.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<TransitGatewayConnectTagArgs>> tags;

    /**
     * @return The tags for the attachment.
     * 
     */
    public Optional<Output<List<TransitGatewayConnectTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The ID of the attachment from which the Connect attachment was created.
     * 
     */
    @Import(name="transportTransitGatewayAttachmentId", required=true)
    private Output<String> transportTransitGatewayAttachmentId;

    /**
     * @return The ID of the attachment from which the Connect attachment was created.
     * 
     */
    public Output<String> transportTransitGatewayAttachmentId() {
        return this.transportTransitGatewayAttachmentId;
    }

    private TransitGatewayConnectArgs() {}

    private TransitGatewayConnectArgs(TransitGatewayConnectArgs $) {
        this.options = $.options;
        this.tags = $.tags;
        this.transportTransitGatewayAttachmentId = $.transportTransitGatewayAttachmentId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransitGatewayConnectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransitGatewayConnectArgs $;

        public Builder() {
            $ = new TransitGatewayConnectArgs();
        }

        public Builder(TransitGatewayConnectArgs defaults) {
            $ = new TransitGatewayConnectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param options The Connect attachment options.
         * 
         * @return builder
         * 
         */
        public Builder options(Output<TransitGatewayConnectOptionsArgs> options) {
            $.options = options;
            return this;
        }

        /**
         * @param options The Connect attachment options.
         * 
         * @return builder
         * 
         */
        public Builder options(TransitGatewayConnectOptionsArgs options) {
            return options(Output.of(options));
        }

        /**
         * @param tags The tags for the attachment.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<TransitGatewayConnectTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags for the attachment.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<TransitGatewayConnectTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The tags for the attachment.
         * 
         * @return builder
         * 
         */
        public Builder tags(TransitGatewayConnectTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param transportTransitGatewayAttachmentId The ID of the attachment from which the Connect attachment was created.
         * 
         * @return builder
         * 
         */
        public Builder transportTransitGatewayAttachmentId(Output<String> transportTransitGatewayAttachmentId) {
            $.transportTransitGatewayAttachmentId = transportTransitGatewayAttachmentId;
            return this;
        }

        /**
         * @param transportTransitGatewayAttachmentId The ID of the attachment from which the Connect attachment was created.
         * 
         * @return builder
         * 
         */
        public Builder transportTransitGatewayAttachmentId(String transportTransitGatewayAttachmentId) {
            return transportTransitGatewayAttachmentId(Output.of(transportTransitGatewayAttachmentId));
        }

        public TransitGatewayConnectArgs build() {
            $.options = Objects.requireNonNull($.options, "expected parameter 'options' to be non-null");
            $.transportTransitGatewayAttachmentId = Objects.requireNonNull($.transportTransitGatewayAttachmentId, "expected parameter 'transportTransitGatewayAttachmentId' to be non-null");
            return $;
        }
    }

}
