// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.servicecatalog;

import com.pulumi.awsnative.servicecatalog.enums.CloudFormationProvisionedProductAcceptLanguage;
import com.pulumi.awsnative.servicecatalog.inputs.CloudFormationProvisionedProductProvisioningParameterArgs;
import com.pulumi.awsnative.servicecatalog.inputs.CloudFormationProvisionedProductProvisioningPreferencesArgs;
import com.pulumi.awsnative.servicecatalog.inputs.CloudFormationProvisionedProductTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudFormationProvisionedProductArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudFormationProvisionedProductArgs Empty = new CloudFormationProvisionedProductArgs();

    @Import(name="acceptLanguage")
    private @Nullable Output<CloudFormationProvisionedProductAcceptLanguage> acceptLanguage;

    public Optional<Output<CloudFormationProvisionedProductAcceptLanguage>> acceptLanguage() {
        return Optional.ofNullable(this.acceptLanguage);
    }

    @Import(name="notificationArns")
    private @Nullable Output<List<String>> notificationArns;

    public Optional<Output<List<String>>> notificationArns() {
        return Optional.ofNullable(this.notificationArns);
    }

    @Import(name="pathId")
    private @Nullable Output<String> pathId;

    public Optional<Output<String>> pathId() {
        return Optional.ofNullable(this.pathId);
    }

    @Import(name="pathName")
    private @Nullable Output<String> pathName;

    public Optional<Output<String>> pathName() {
        return Optional.ofNullable(this.pathName);
    }

    @Import(name="productId")
    private @Nullable Output<String> productId;

    public Optional<Output<String>> productId() {
        return Optional.ofNullable(this.productId);
    }

    @Import(name="productName")
    private @Nullable Output<String> productName;

    public Optional<Output<String>> productName() {
        return Optional.ofNullable(this.productName);
    }

    @Import(name="provisionedProductName")
    private @Nullable Output<String> provisionedProductName;

    public Optional<Output<String>> provisionedProductName() {
        return Optional.ofNullable(this.provisionedProductName);
    }

    @Import(name="provisioningArtifactId")
    private @Nullable Output<String> provisioningArtifactId;

    public Optional<Output<String>> provisioningArtifactId() {
        return Optional.ofNullable(this.provisioningArtifactId);
    }

    @Import(name="provisioningArtifactName")
    private @Nullable Output<String> provisioningArtifactName;

    public Optional<Output<String>> provisioningArtifactName() {
        return Optional.ofNullable(this.provisioningArtifactName);
    }

    @Import(name="provisioningParameters")
    private @Nullable Output<List<CloudFormationProvisionedProductProvisioningParameterArgs>> provisioningParameters;

    public Optional<Output<List<CloudFormationProvisionedProductProvisioningParameterArgs>>> provisioningParameters() {
        return Optional.ofNullable(this.provisioningParameters);
    }

    @Import(name="provisioningPreferences")
    private @Nullable Output<CloudFormationProvisionedProductProvisioningPreferencesArgs> provisioningPreferences;

    public Optional<Output<CloudFormationProvisionedProductProvisioningPreferencesArgs>> provisioningPreferences() {
        return Optional.ofNullable(this.provisioningPreferences);
    }

    @Import(name="tags")
    private @Nullable Output<List<CloudFormationProvisionedProductTagArgs>> tags;

    public Optional<Output<List<CloudFormationProvisionedProductTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private CloudFormationProvisionedProductArgs() {}

    private CloudFormationProvisionedProductArgs(CloudFormationProvisionedProductArgs $) {
        this.acceptLanguage = $.acceptLanguage;
        this.notificationArns = $.notificationArns;
        this.pathId = $.pathId;
        this.pathName = $.pathName;
        this.productId = $.productId;
        this.productName = $.productName;
        this.provisionedProductName = $.provisionedProductName;
        this.provisioningArtifactId = $.provisioningArtifactId;
        this.provisioningArtifactName = $.provisioningArtifactName;
        this.provisioningParameters = $.provisioningParameters;
        this.provisioningPreferences = $.provisioningPreferences;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudFormationProvisionedProductArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudFormationProvisionedProductArgs $;

        public Builder() {
            $ = new CloudFormationProvisionedProductArgs();
        }

        public Builder(CloudFormationProvisionedProductArgs defaults) {
            $ = new CloudFormationProvisionedProductArgs(Objects.requireNonNull(defaults));
        }

        public Builder acceptLanguage(@Nullable Output<CloudFormationProvisionedProductAcceptLanguage> acceptLanguage) {
            $.acceptLanguage = acceptLanguage;
            return this;
        }

        public Builder acceptLanguage(CloudFormationProvisionedProductAcceptLanguage acceptLanguage) {
            return acceptLanguage(Output.of(acceptLanguage));
        }

        public Builder notificationArns(@Nullable Output<List<String>> notificationArns) {
            $.notificationArns = notificationArns;
            return this;
        }

        public Builder notificationArns(List<String> notificationArns) {
            return notificationArns(Output.of(notificationArns));
        }

        public Builder notificationArns(String... notificationArns) {
            return notificationArns(List.of(notificationArns));
        }

        public Builder pathId(@Nullable Output<String> pathId) {
            $.pathId = pathId;
            return this;
        }

        public Builder pathId(String pathId) {
            return pathId(Output.of(pathId));
        }

        public Builder pathName(@Nullable Output<String> pathName) {
            $.pathName = pathName;
            return this;
        }

        public Builder pathName(String pathName) {
            return pathName(Output.of(pathName));
        }

        public Builder productId(@Nullable Output<String> productId) {
            $.productId = productId;
            return this;
        }

        public Builder productId(String productId) {
            return productId(Output.of(productId));
        }

        public Builder productName(@Nullable Output<String> productName) {
            $.productName = productName;
            return this;
        }

        public Builder productName(String productName) {
            return productName(Output.of(productName));
        }

        public Builder provisionedProductName(@Nullable Output<String> provisionedProductName) {
            $.provisionedProductName = provisionedProductName;
            return this;
        }

        public Builder provisionedProductName(String provisionedProductName) {
            return provisionedProductName(Output.of(provisionedProductName));
        }

        public Builder provisioningArtifactId(@Nullable Output<String> provisioningArtifactId) {
            $.provisioningArtifactId = provisioningArtifactId;
            return this;
        }

        public Builder provisioningArtifactId(String provisioningArtifactId) {
            return provisioningArtifactId(Output.of(provisioningArtifactId));
        }

        public Builder provisioningArtifactName(@Nullable Output<String> provisioningArtifactName) {
            $.provisioningArtifactName = provisioningArtifactName;
            return this;
        }

        public Builder provisioningArtifactName(String provisioningArtifactName) {
            return provisioningArtifactName(Output.of(provisioningArtifactName));
        }

        public Builder provisioningParameters(@Nullable Output<List<CloudFormationProvisionedProductProvisioningParameterArgs>> provisioningParameters) {
            $.provisioningParameters = provisioningParameters;
            return this;
        }

        public Builder provisioningParameters(List<CloudFormationProvisionedProductProvisioningParameterArgs> provisioningParameters) {
            return provisioningParameters(Output.of(provisioningParameters));
        }

        public Builder provisioningParameters(CloudFormationProvisionedProductProvisioningParameterArgs... provisioningParameters) {
            return provisioningParameters(List.of(provisioningParameters));
        }

        public Builder provisioningPreferences(@Nullable Output<CloudFormationProvisionedProductProvisioningPreferencesArgs> provisioningPreferences) {
            $.provisioningPreferences = provisioningPreferences;
            return this;
        }

        public Builder provisioningPreferences(CloudFormationProvisionedProductProvisioningPreferencesArgs provisioningPreferences) {
            return provisioningPreferences(Output.of(provisioningPreferences));
        }

        public Builder tags(@Nullable Output<List<CloudFormationProvisionedProductTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<CloudFormationProvisionedProductTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(CloudFormationProvisionedProductTagArgs... tags) {
            return tags(List.of(tags));
        }

        public CloudFormationProvisionedProductArgs build() {
            return $;
        }
    }

}
