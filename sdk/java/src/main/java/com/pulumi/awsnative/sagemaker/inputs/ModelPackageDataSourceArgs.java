// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.inputs;

import com.pulumi.awsnative.sagemaker.inputs.ModelPackageS3DataSourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


/**
 * Describes the input source of a transform job and the way the transform job consumes it.
 * 
 */
public final class ModelPackageDataSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelPackageDataSourceArgs Empty = new ModelPackageDataSourceArgs();

    @Import(name="s3DataSource", required=true)
    private Output<ModelPackageS3DataSourceArgs> s3DataSource;

    public Output<ModelPackageS3DataSourceArgs> s3DataSource() {
        return this.s3DataSource;
    }

    private ModelPackageDataSourceArgs() {}

    private ModelPackageDataSourceArgs(ModelPackageDataSourceArgs $) {
        this.s3DataSource = $.s3DataSource;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelPackageDataSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelPackageDataSourceArgs $;

        public Builder() {
            $ = new ModelPackageDataSourceArgs();
        }

        public Builder(ModelPackageDataSourceArgs defaults) {
            $ = new ModelPackageDataSourceArgs(Objects.requireNonNull(defaults));
        }

        public Builder s3DataSource(Output<ModelPackageS3DataSourceArgs> s3DataSource) {
            $.s3DataSource = s3DataSource;
            return this;
        }

        public Builder s3DataSource(ModelPackageS3DataSourceArgs s3DataSource) {
            return s3DataSource(Output.of(s3DataSource));
        }

        public ModelPackageDataSourceArgs build() {
            $.s3DataSource = Objects.requireNonNull($.s3DataSource, "expected parameter 's3DataSource' to be non-null");
            return $;
        }
    }

}
