// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.refactorspaces;

import com.pulumi.awsnative.refactorspaces.enums.ServiceEndpointType;
import com.pulumi.awsnative.refactorspaces.inputs.ServiceLambdaEndpointInputArgs;
import com.pulumi.awsnative.refactorspaces.inputs.ServiceTagArgs;
import com.pulumi.awsnative.refactorspaces.inputs.ServiceUrlEndpointInputArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceArgs Empty = new ServiceArgs();

    @Import(name="applicationIdentifier", required=true)
    private Output<String> applicationIdentifier;

    public Output<String> applicationIdentifier() {
        return this.applicationIdentifier;
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="endpointType")
    private @Nullable Output<ServiceEndpointType> endpointType;

    public Optional<Output<ServiceEndpointType>> endpointType() {
        return Optional.ofNullable(this.endpointType);
    }

    @Import(name="environmentIdentifier", required=true)
    private Output<String> environmentIdentifier;

    public Output<String> environmentIdentifier() {
        return this.environmentIdentifier;
    }

    @Import(name="lambdaEndpoint")
    private @Nullable Output<ServiceLambdaEndpointInputArgs> lambdaEndpoint;

    public Optional<Output<ServiceLambdaEndpointInputArgs>> lambdaEndpoint() {
        return Optional.ofNullable(this.lambdaEndpoint);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<ServiceTagArgs>> tags;

    /**
     * @return Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
     * 
     */
    public Optional<Output<List<ServiceTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="urlEndpoint")
    private @Nullable Output<ServiceUrlEndpointInputArgs> urlEndpoint;

    public Optional<Output<ServiceUrlEndpointInputArgs>> urlEndpoint() {
        return Optional.ofNullable(this.urlEndpoint);
    }

    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private ServiceArgs() {}

    private ServiceArgs(ServiceArgs $) {
        this.applicationIdentifier = $.applicationIdentifier;
        this.description = $.description;
        this.endpointType = $.endpointType;
        this.environmentIdentifier = $.environmentIdentifier;
        this.lambdaEndpoint = $.lambdaEndpoint;
        this.name = $.name;
        this.tags = $.tags;
        this.urlEndpoint = $.urlEndpoint;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceArgs $;

        public Builder() {
            $ = new ServiceArgs();
        }

        public Builder(ServiceArgs defaults) {
            $ = new ServiceArgs(Objects.requireNonNull(defaults));
        }

        public Builder applicationIdentifier(Output<String> applicationIdentifier) {
            $.applicationIdentifier = applicationIdentifier;
            return this;
        }

        public Builder applicationIdentifier(String applicationIdentifier) {
            return applicationIdentifier(Output.of(applicationIdentifier));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder endpointType(@Nullable Output<ServiceEndpointType> endpointType) {
            $.endpointType = endpointType;
            return this;
        }

        public Builder endpointType(ServiceEndpointType endpointType) {
            return endpointType(Output.of(endpointType));
        }

        public Builder environmentIdentifier(Output<String> environmentIdentifier) {
            $.environmentIdentifier = environmentIdentifier;
            return this;
        }

        public Builder environmentIdentifier(String environmentIdentifier) {
            return environmentIdentifier(Output.of(environmentIdentifier));
        }

        public Builder lambdaEndpoint(@Nullable Output<ServiceLambdaEndpointInputArgs> lambdaEndpoint) {
            $.lambdaEndpoint = lambdaEndpoint;
            return this;
        }

        public Builder lambdaEndpoint(ServiceLambdaEndpointInputArgs lambdaEndpoint) {
            return lambdaEndpoint(Output.of(lambdaEndpoint));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<ServiceTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<ServiceTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
         * 
         * @return builder
         * 
         */
        public Builder tags(ServiceTagArgs... tags) {
            return tags(List.of(tags));
        }

        public Builder urlEndpoint(@Nullable Output<ServiceUrlEndpointInputArgs> urlEndpoint) {
            $.urlEndpoint = urlEndpoint;
            return this;
        }

        public Builder urlEndpoint(ServiceUrlEndpointInputArgs urlEndpoint) {
            return urlEndpoint(Output.of(urlEndpoint));
        }

        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public ServiceArgs build() {
            $.applicationIdentifier = Objects.requireNonNull($.applicationIdentifier, "expected parameter 'applicationIdentifier' to be non-null");
            $.environmentIdentifier = Objects.requireNonNull($.environmentIdentifier, "expected parameter 'environmentIdentifier' to be non-null");
            return $;
        }
    }

}
