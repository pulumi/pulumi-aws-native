// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iottwinmaker;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.iottwinmaker.ComponentTypeArgs;
import com.pulumi.awsnative.iottwinmaker.outputs.ComponentTypeStatus;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource schema for AWS::IoTTwinMaker::ComponentType
 * 
 */
@ResourceType(type="aws-native:iottwinmaker:ComponentType")
public class ComponentType extends com.pulumi.resources.CustomResource {
    /**
     * The ARN of the component type.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The ARN of the component type.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * The ID of the component type.
     * 
     */
    @Export(name="componentTypeId", type=String.class, parameters={})
    private Output<String> componentTypeId;

    /**
     * @return The ID of the component type.
     * 
     */
    public Output<String> componentTypeId() {
        return this.componentTypeId;
    }
    /**
     * The date and time when the component type was created.
     * 
     */
    @Export(name="creationDateTime", type=String.class, parameters={})
    private Output<String> creationDateTime;

    /**
     * @return The date and time when the component type was created.
     * 
     */
    public Output<String> creationDateTime() {
        return this.creationDateTime;
    }
    /**
     * The description of the component type.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the component type.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Specifies the parent component type to extend.
     * 
     */
    @Export(name="extendsFrom", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> extendsFrom;

    /**
     * @return Specifies the parent component type to extend.
     * 
     */
    public Output<Optional<List<String>>> extendsFrom() {
        return Codegen.optional(this.extendsFrom);
    }
    /**
     * a Map of functions in the component type. Each function&#39;s key must be unique to this map.
     * 
     */
    @Export(name="functions", type=Object.class, parameters={})
    private Output</* @Nullable */ Object> functions;

    /**
     * @return a Map of functions in the component type. Each function&#39;s key must be unique to this map.
     * 
     */
    public Output<Optional<Object>> functions() {
        return Codegen.optional(this.functions);
    }
    /**
     * A Boolean value that specifies whether the component type is abstract.
     * 
     */
    @Export(name="isAbstract", type=Boolean.class, parameters={})
    private Output<Boolean> isAbstract;

    /**
     * @return A Boolean value that specifies whether the component type is abstract.
     * 
     */
    public Output<Boolean> isAbstract() {
        return this.isAbstract;
    }
    /**
     * A Boolean value that specifies whether the component type has a schema initializer and that the schema initializer has run.
     * 
     */
    @Export(name="isSchemaInitialized", type=Boolean.class, parameters={})
    private Output<Boolean> isSchemaInitialized;

    /**
     * @return A Boolean value that specifies whether the component type has a schema initializer and that the schema initializer has run.
     * 
     */
    public Output<Boolean> isSchemaInitialized() {
        return this.isSchemaInitialized;
    }
    /**
     * A Boolean value that specifies whether an entity can have more than one component of this type.
     * 
     */
    @Export(name="isSingleton", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> isSingleton;

    /**
     * @return A Boolean value that specifies whether an entity can have more than one component of this type.
     * 
     */
    public Output<Optional<Boolean>> isSingleton() {
        return Codegen.optional(this.isSingleton);
    }
    /**
     * An map of the property definitions in the component type. Each property definition&#39;s key must be unique to this map.
     * 
     */
    @Export(name="propertyDefinitions", type=Object.class, parameters={})
    private Output</* @Nullable */ Object> propertyDefinitions;

    /**
     * @return An map of the property definitions in the component type. Each property definition&#39;s key must be unique to this map.
     * 
     */
    public Output<Optional<Object>> propertyDefinitions() {
        return Codegen.optional(this.propertyDefinitions);
    }
    /**
     * The current status of the component type.
     * 
     */
    @Export(name="status", type=ComponentTypeStatus.class, parameters={})
    private Output<ComponentTypeStatus> status;

    /**
     * @return The current status of the component type.
     * 
     */
    public Output<ComponentTypeStatus> status() {
        return this.status;
    }
    /**
     * A map of key-value pairs to associate with a resource.
     * 
     */
    @Export(name="tags", type=Object.class, parameters={})
    private Output</* @Nullable */ Object> tags;

    /**
     * @return A map of key-value pairs to associate with a resource.
     * 
     */
    public Output<Optional<Object>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The last date and time when the component type was updated.
     * 
     */
    @Export(name="updateDateTime", type=String.class, parameters={})
    private Output<String> updateDateTime;

    /**
     * @return The last date and time when the component type was updated.
     * 
     */
    public Output<String> updateDateTime() {
        return this.updateDateTime;
    }
    /**
     * The ID of the workspace that contains the component type.
     * 
     */
    @Export(name="workspaceId", type=String.class, parameters={})
    private Output<String> workspaceId;

    /**
     * @return The ID of the workspace that contains the component type.
     * 
     */
    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ComponentType(String name) {
        this(name, ComponentTypeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ComponentType(String name, ComponentTypeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ComponentType(String name, ComponentTypeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:iottwinmaker:ComponentType", name, args == null ? ComponentTypeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ComponentType(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:iottwinmaker:ComponentType", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ComponentType get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ComponentType(name, id, options);
    }
}
