// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.logs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetLogGroupArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLogGroupArgs Empty = new GetLogGroupArgs();

    /**
     * The name of the log group. If you don&#39;t specify a name, AWS CloudFormation generates a unique ID for the log group.
     * 
     */
    @Import(name="logGroupName", required=true)
    private Output<String> logGroupName;

    /**
     * @return The name of the log group. If you don&#39;t specify a name, AWS CloudFormation generates a unique ID for the log group.
     * 
     */
    public Output<String> logGroupName() {
        return this.logGroupName;
    }

    private GetLogGroupArgs() {}

    private GetLogGroupArgs(GetLogGroupArgs $) {
        this.logGroupName = $.logGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLogGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLogGroupArgs $;

        public Builder() {
            $ = new GetLogGroupArgs();
        }

        public Builder(GetLogGroupArgs defaults) {
            $ = new GetLogGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logGroupName The name of the log group. If you don&#39;t specify a name, AWS CloudFormation generates a unique ID for the log group.
         * 
         * @return builder
         * 
         */
        public Builder logGroupName(Output<String> logGroupName) {
            $.logGroupName = logGroupName;
            return this;
        }

        /**
         * @param logGroupName The name of the log group. If you don&#39;t specify a name, AWS CloudFormation generates a unique ID for the log group.
         * 
         * @return builder
         * 
         */
        public Builder logGroupName(String logGroupName) {
            return logGroupName(Output.of(logGroupName));
        }

        public GetLogGroupArgs build() {
            $.logGroupName = Objects.requireNonNull($.logGroupName, "expected parameter 'logGroupName' to be non-null");
            return $;
        }
    }

}
