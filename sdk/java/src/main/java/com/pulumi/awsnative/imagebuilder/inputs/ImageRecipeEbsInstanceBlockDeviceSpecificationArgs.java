// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.imagebuilder.inputs;

import com.pulumi.awsnative.imagebuilder.enums.ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Amazon EBS-specific block device mapping specifications.
 * 
 */
public final class ImageRecipeEbsInstanceBlockDeviceSpecificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageRecipeEbsInstanceBlockDeviceSpecificationArgs Empty = new ImageRecipeEbsInstanceBlockDeviceSpecificationArgs();

    /**
     * Use to configure delete on termination of the associated device.
     * 
     */
    @Import(name="deleteOnTermination")
    private @Nullable Output<Boolean> deleteOnTermination;

    /**
     * @return Use to configure delete on termination of the associated device.
     * 
     */
    public Optional<Output<Boolean>> deleteOnTermination() {
        return Optional.ofNullable(this.deleteOnTermination);
    }

    /**
     * Use to configure device encryption.
     * 
     */
    @Import(name="encrypted")
    private @Nullable Output<Boolean> encrypted;

    /**
     * @return Use to configure device encryption.
     * 
     */
    public Optional<Output<Boolean>> encrypted() {
        return Optional.ofNullable(this.encrypted);
    }

    /**
     * Use to configure device IOPS.
     * 
     */
    @Import(name="iops")
    private @Nullable Output<Integer> iops;

    /**
     * @return Use to configure device IOPS.
     * 
     */
    public Optional<Output<Integer>> iops() {
        return Optional.ofNullable(this.iops);
    }

    /**
     * Use to configure the KMS key to use when encrypting the device.
     * 
     */
    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    /**
     * @return Use to configure the KMS key to use when encrypting the device.
     * 
     */
    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    /**
     * The snapshot that defines the device contents.
     * 
     */
    @Import(name="snapshotId")
    private @Nullable Output<String> snapshotId;

    /**
     * @return The snapshot that defines the device contents.
     * 
     */
    public Optional<Output<String>> snapshotId() {
        return Optional.ofNullable(this.snapshotId);
    }

    /**
     * For GP3 volumes only - The throughput in MiB/s that the volume supports.
     * 
     */
    @Import(name="throughput")
    private @Nullable Output<Integer> throughput;

    /**
     * @return For GP3 volumes only - The throughput in MiB/s that the volume supports.
     * 
     */
    public Optional<Output<Integer>> throughput() {
        return Optional.ofNullable(this.throughput);
    }

    /**
     * Use to override the device&#39;s volume size.
     * 
     */
    @Import(name="volumeSize")
    private @Nullable Output<Integer> volumeSize;

    /**
     * @return Use to override the device&#39;s volume size.
     * 
     */
    public Optional<Output<Integer>> volumeSize() {
        return Optional.ofNullable(this.volumeSize);
    }

    /**
     * Use to override the device&#39;s volume type.
     * 
     */
    @Import(name="volumeType")
    private @Nullable Output<ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType> volumeType;

    /**
     * @return Use to override the device&#39;s volume type.
     * 
     */
    public Optional<Output<ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType>> volumeType() {
        return Optional.ofNullable(this.volumeType);
    }

    private ImageRecipeEbsInstanceBlockDeviceSpecificationArgs() {}

    private ImageRecipeEbsInstanceBlockDeviceSpecificationArgs(ImageRecipeEbsInstanceBlockDeviceSpecificationArgs $) {
        this.deleteOnTermination = $.deleteOnTermination;
        this.encrypted = $.encrypted;
        this.iops = $.iops;
        this.kmsKeyId = $.kmsKeyId;
        this.snapshotId = $.snapshotId;
        this.throughput = $.throughput;
        this.volumeSize = $.volumeSize;
        this.volumeType = $.volumeType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageRecipeEbsInstanceBlockDeviceSpecificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageRecipeEbsInstanceBlockDeviceSpecificationArgs $;

        public Builder() {
            $ = new ImageRecipeEbsInstanceBlockDeviceSpecificationArgs();
        }

        public Builder(ImageRecipeEbsInstanceBlockDeviceSpecificationArgs defaults) {
            $ = new ImageRecipeEbsInstanceBlockDeviceSpecificationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deleteOnTermination Use to configure delete on termination of the associated device.
         * 
         * @return builder
         * 
         */
        public Builder deleteOnTermination(@Nullable Output<Boolean> deleteOnTermination) {
            $.deleteOnTermination = deleteOnTermination;
            return this;
        }

        /**
         * @param deleteOnTermination Use to configure delete on termination of the associated device.
         * 
         * @return builder
         * 
         */
        public Builder deleteOnTermination(Boolean deleteOnTermination) {
            return deleteOnTermination(Output.of(deleteOnTermination));
        }

        /**
         * @param encrypted Use to configure device encryption.
         * 
         * @return builder
         * 
         */
        public Builder encrypted(@Nullable Output<Boolean> encrypted) {
            $.encrypted = encrypted;
            return this;
        }

        /**
         * @param encrypted Use to configure device encryption.
         * 
         * @return builder
         * 
         */
        public Builder encrypted(Boolean encrypted) {
            return encrypted(Output.of(encrypted));
        }

        /**
         * @param iops Use to configure device IOPS.
         * 
         * @return builder
         * 
         */
        public Builder iops(@Nullable Output<Integer> iops) {
            $.iops = iops;
            return this;
        }

        /**
         * @param iops Use to configure device IOPS.
         * 
         * @return builder
         * 
         */
        public Builder iops(Integer iops) {
            return iops(Output.of(iops));
        }

        /**
         * @param kmsKeyId Use to configure the KMS key to use when encrypting the device.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId Use to configure the KMS key to use when encrypting the device.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        /**
         * @param snapshotId The snapshot that defines the device contents.
         * 
         * @return builder
         * 
         */
        public Builder snapshotId(@Nullable Output<String> snapshotId) {
            $.snapshotId = snapshotId;
            return this;
        }

        /**
         * @param snapshotId The snapshot that defines the device contents.
         * 
         * @return builder
         * 
         */
        public Builder snapshotId(String snapshotId) {
            return snapshotId(Output.of(snapshotId));
        }

        /**
         * @param throughput For GP3 volumes only - The throughput in MiB/s that the volume supports.
         * 
         * @return builder
         * 
         */
        public Builder throughput(@Nullable Output<Integer> throughput) {
            $.throughput = throughput;
            return this;
        }

        /**
         * @param throughput For GP3 volumes only - The throughput in MiB/s that the volume supports.
         * 
         * @return builder
         * 
         */
        public Builder throughput(Integer throughput) {
            return throughput(Output.of(throughput));
        }

        /**
         * @param volumeSize Use to override the device&#39;s volume size.
         * 
         * @return builder
         * 
         */
        public Builder volumeSize(@Nullable Output<Integer> volumeSize) {
            $.volumeSize = volumeSize;
            return this;
        }

        /**
         * @param volumeSize Use to override the device&#39;s volume size.
         * 
         * @return builder
         * 
         */
        public Builder volumeSize(Integer volumeSize) {
            return volumeSize(Output.of(volumeSize));
        }

        /**
         * @param volumeType Use to override the device&#39;s volume type.
         * 
         * @return builder
         * 
         */
        public Builder volumeType(@Nullable Output<ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType> volumeType) {
            $.volumeType = volumeType;
            return this;
        }

        /**
         * @param volumeType Use to override the device&#39;s volume type.
         * 
         * @return builder
         * 
         */
        public Builder volumeType(ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType volumeType) {
            return volumeType(Output.of(volumeType));
        }

        public ImageRecipeEbsInstanceBlockDeviceSpecificationArgs build() {
            return $;
        }
    }

}
