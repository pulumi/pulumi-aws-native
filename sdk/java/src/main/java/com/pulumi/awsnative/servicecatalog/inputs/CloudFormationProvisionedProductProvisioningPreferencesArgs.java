// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.servicecatalog.inputs;

import com.pulumi.awsnative.servicecatalog.enums.CloudFormationProvisionedProductProvisioningPreferencesStackSetOperationType;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudFormationProvisionedProductProvisioningPreferencesArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudFormationProvisionedProductProvisioningPreferencesArgs Empty = new CloudFormationProvisionedProductProvisioningPreferencesArgs();

    @Import(name="stackSetAccounts")
    private @Nullable Output<List<String>> stackSetAccounts;

    public Optional<Output<List<String>>> stackSetAccounts() {
        return Optional.ofNullable(this.stackSetAccounts);
    }

    @Import(name="stackSetFailureToleranceCount")
    private @Nullable Output<Integer> stackSetFailureToleranceCount;

    public Optional<Output<Integer>> stackSetFailureToleranceCount() {
        return Optional.ofNullable(this.stackSetFailureToleranceCount);
    }

    @Import(name="stackSetFailureTolerancePercentage")
    private @Nullable Output<Integer> stackSetFailureTolerancePercentage;

    public Optional<Output<Integer>> stackSetFailureTolerancePercentage() {
        return Optional.ofNullable(this.stackSetFailureTolerancePercentage);
    }

    @Import(name="stackSetMaxConcurrencyCount")
    private @Nullable Output<Integer> stackSetMaxConcurrencyCount;

    public Optional<Output<Integer>> stackSetMaxConcurrencyCount() {
        return Optional.ofNullable(this.stackSetMaxConcurrencyCount);
    }

    @Import(name="stackSetMaxConcurrencyPercentage")
    private @Nullable Output<Integer> stackSetMaxConcurrencyPercentage;

    public Optional<Output<Integer>> stackSetMaxConcurrencyPercentage() {
        return Optional.ofNullable(this.stackSetMaxConcurrencyPercentage);
    }

    @Import(name="stackSetOperationType")
    private @Nullable Output<CloudFormationProvisionedProductProvisioningPreferencesStackSetOperationType> stackSetOperationType;

    public Optional<Output<CloudFormationProvisionedProductProvisioningPreferencesStackSetOperationType>> stackSetOperationType() {
        return Optional.ofNullable(this.stackSetOperationType);
    }

    @Import(name="stackSetRegions")
    private @Nullable Output<List<String>> stackSetRegions;

    public Optional<Output<List<String>>> stackSetRegions() {
        return Optional.ofNullable(this.stackSetRegions);
    }

    private CloudFormationProvisionedProductProvisioningPreferencesArgs() {}

    private CloudFormationProvisionedProductProvisioningPreferencesArgs(CloudFormationProvisionedProductProvisioningPreferencesArgs $) {
        this.stackSetAccounts = $.stackSetAccounts;
        this.stackSetFailureToleranceCount = $.stackSetFailureToleranceCount;
        this.stackSetFailureTolerancePercentage = $.stackSetFailureTolerancePercentage;
        this.stackSetMaxConcurrencyCount = $.stackSetMaxConcurrencyCount;
        this.stackSetMaxConcurrencyPercentage = $.stackSetMaxConcurrencyPercentage;
        this.stackSetOperationType = $.stackSetOperationType;
        this.stackSetRegions = $.stackSetRegions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudFormationProvisionedProductProvisioningPreferencesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudFormationProvisionedProductProvisioningPreferencesArgs $;

        public Builder() {
            $ = new CloudFormationProvisionedProductProvisioningPreferencesArgs();
        }

        public Builder(CloudFormationProvisionedProductProvisioningPreferencesArgs defaults) {
            $ = new CloudFormationProvisionedProductProvisioningPreferencesArgs(Objects.requireNonNull(defaults));
        }

        public Builder stackSetAccounts(@Nullable Output<List<String>> stackSetAccounts) {
            $.stackSetAccounts = stackSetAccounts;
            return this;
        }

        public Builder stackSetAccounts(List<String> stackSetAccounts) {
            return stackSetAccounts(Output.of(stackSetAccounts));
        }

        public Builder stackSetAccounts(String... stackSetAccounts) {
            return stackSetAccounts(List.of(stackSetAccounts));
        }

        public Builder stackSetFailureToleranceCount(@Nullable Output<Integer> stackSetFailureToleranceCount) {
            $.stackSetFailureToleranceCount = stackSetFailureToleranceCount;
            return this;
        }

        public Builder stackSetFailureToleranceCount(Integer stackSetFailureToleranceCount) {
            return stackSetFailureToleranceCount(Output.of(stackSetFailureToleranceCount));
        }

        public Builder stackSetFailureTolerancePercentage(@Nullable Output<Integer> stackSetFailureTolerancePercentage) {
            $.stackSetFailureTolerancePercentage = stackSetFailureTolerancePercentage;
            return this;
        }

        public Builder stackSetFailureTolerancePercentage(Integer stackSetFailureTolerancePercentage) {
            return stackSetFailureTolerancePercentage(Output.of(stackSetFailureTolerancePercentage));
        }

        public Builder stackSetMaxConcurrencyCount(@Nullable Output<Integer> stackSetMaxConcurrencyCount) {
            $.stackSetMaxConcurrencyCount = stackSetMaxConcurrencyCount;
            return this;
        }

        public Builder stackSetMaxConcurrencyCount(Integer stackSetMaxConcurrencyCount) {
            return stackSetMaxConcurrencyCount(Output.of(stackSetMaxConcurrencyCount));
        }

        public Builder stackSetMaxConcurrencyPercentage(@Nullable Output<Integer> stackSetMaxConcurrencyPercentage) {
            $.stackSetMaxConcurrencyPercentage = stackSetMaxConcurrencyPercentage;
            return this;
        }

        public Builder stackSetMaxConcurrencyPercentage(Integer stackSetMaxConcurrencyPercentage) {
            return stackSetMaxConcurrencyPercentage(Output.of(stackSetMaxConcurrencyPercentage));
        }

        public Builder stackSetOperationType(@Nullable Output<CloudFormationProvisionedProductProvisioningPreferencesStackSetOperationType> stackSetOperationType) {
            $.stackSetOperationType = stackSetOperationType;
            return this;
        }

        public Builder stackSetOperationType(CloudFormationProvisionedProductProvisioningPreferencesStackSetOperationType stackSetOperationType) {
            return stackSetOperationType(Output.of(stackSetOperationType));
        }

        public Builder stackSetRegions(@Nullable Output<List<String>> stackSetRegions) {
            $.stackSetRegions = stackSetRegions;
            return this;
        }

        public Builder stackSetRegions(List<String> stackSetRegions) {
            return stackSetRegions(Output.of(stackSetRegions));
        }

        public Builder stackSetRegions(String... stackSetRegions) {
            return stackSetRegions(List.of(stackSetRegions));
        }

        public CloudFormationProvisionedProductProvisioningPreferencesArgs build() {
            return $;
        }
    }

}
