// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.configuration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetAggregationAuthorizationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAggregationAuthorizationArgs Empty = new GetAggregationAuthorizationArgs();

    /**
     * The ARN of the AggregationAuthorization.
     * 
     */
    @Import(name="aggregationAuthorizationArn", required=true)
    private Output<String> aggregationAuthorizationArn;

    /**
     * @return The ARN of the AggregationAuthorization.
     * 
     */
    public Output<String> aggregationAuthorizationArn() {
        return this.aggregationAuthorizationArn;
    }

    private GetAggregationAuthorizationArgs() {}

    private GetAggregationAuthorizationArgs(GetAggregationAuthorizationArgs $) {
        this.aggregationAuthorizationArn = $.aggregationAuthorizationArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAggregationAuthorizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAggregationAuthorizationArgs $;

        public Builder() {
            $ = new GetAggregationAuthorizationArgs();
        }

        public Builder(GetAggregationAuthorizationArgs defaults) {
            $ = new GetAggregationAuthorizationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aggregationAuthorizationArn The ARN of the AggregationAuthorization.
         * 
         * @return builder
         * 
         */
        public Builder aggregationAuthorizationArn(Output<String> aggregationAuthorizationArn) {
            $.aggregationAuthorizationArn = aggregationAuthorizationArn;
            return this;
        }

        /**
         * @param aggregationAuthorizationArn The ARN of the AggregationAuthorization.
         * 
         * @return builder
         * 
         */
        public Builder aggregationAuthorizationArn(String aggregationAuthorizationArn) {
            return aggregationAuthorizationArn(Output.of(aggregationAuthorizationArn));
        }

        public GetAggregationAuthorizationArgs build() {
            $.aggregationAuthorizationArn = Objects.requireNonNull($.aggregationAuthorizationArn, "expected parameter 'aggregationAuthorizationArn' to be non-null");
            return $;
        }
    }

}
