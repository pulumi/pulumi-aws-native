// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.detective;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MemberInvitationArgs extends com.pulumi.resources.ResourceArgs {

    public static final MemberInvitationArgs Empty = new MemberInvitationArgs();

    /**
     * When set to true, invitation emails are not sent to the member accounts. Member accounts must still accept the invitation before they are added to the behavior graph. Updating this field has no effect.
     * 
     */
    @Import(name="disableEmailNotification")
    private @Nullable Output<Boolean> disableEmailNotification;

    /**
     * @return When set to true, invitation emails are not sent to the member accounts. Member accounts must still accept the invitation before they are added to the behavior graph. Updating this field has no effect.
     * 
     */
    public Optional<Output<Boolean>> disableEmailNotification() {
        return Optional.ofNullable(this.disableEmailNotification);
    }

    /**
     * The ARN of the graph to which the member account will be invited
     * 
     */
    @Import(name="graphArn", required=true)
    private Output<String> graphArn;

    /**
     * @return The ARN of the graph to which the member account will be invited
     * 
     */
    public Output<String> graphArn() {
        return this.graphArn;
    }

    /**
     * The root email address for the account to be invited, for validation. Updating this field has no effect.
     * 
     */
    @Import(name="memberEmailAddress", required=true)
    private Output<String> memberEmailAddress;

    /**
     * @return The root email address for the account to be invited, for validation. Updating this field has no effect.
     * 
     */
    public Output<String> memberEmailAddress() {
        return this.memberEmailAddress;
    }

    /**
     * The AWS account ID to be invited to join the graph as a member
     * 
     */
    @Import(name="memberId", required=true)
    private Output<String> memberId;

    /**
     * @return The AWS account ID to be invited to join the graph as a member
     * 
     */
    public Output<String> memberId() {
        return this.memberId;
    }

    /**
     * A message to be included in the email invitation sent to the invited account. Updating this field has no effect.
     * 
     */
    @Import(name="message")
    private @Nullable Output<String> message;

    /**
     * @return A message to be included in the email invitation sent to the invited account. Updating this field has no effect.
     * 
     */
    public Optional<Output<String>> message() {
        return Optional.ofNullable(this.message);
    }

    private MemberInvitationArgs() {}

    private MemberInvitationArgs(MemberInvitationArgs $) {
        this.disableEmailNotification = $.disableEmailNotification;
        this.graphArn = $.graphArn;
        this.memberEmailAddress = $.memberEmailAddress;
        this.memberId = $.memberId;
        this.message = $.message;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MemberInvitationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MemberInvitationArgs $;

        public Builder() {
            $ = new MemberInvitationArgs();
        }

        public Builder(MemberInvitationArgs defaults) {
            $ = new MemberInvitationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disableEmailNotification When set to true, invitation emails are not sent to the member accounts. Member accounts must still accept the invitation before they are added to the behavior graph. Updating this field has no effect.
         * 
         * @return builder
         * 
         */
        public Builder disableEmailNotification(@Nullable Output<Boolean> disableEmailNotification) {
            $.disableEmailNotification = disableEmailNotification;
            return this;
        }

        /**
         * @param disableEmailNotification When set to true, invitation emails are not sent to the member accounts. Member accounts must still accept the invitation before they are added to the behavior graph. Updating this field has no effect.
         * 
         * @return builder
         * 
         */
        public Builder disableEmailNotification(Boolean disableEmailNotification) {
            return disableEmailNotification(Output.of(disableEmailNotification));
        }

        /**
         * @param graphArn The ARN of the graph to which the member account will be invited
         * 
         * @return builder
         * 
         */
        public Builder graphArn(Output<String> graphArn) {
            $.graphArn = graphArn;
            return this;
        }

        /**
         * @param graphArn The ARN of the graph to which the member account will be invited
         * 
         * @return builder
         * 
         */
        public Builder graphArn(String graphArn) {
            return graphArn(Output.of(graphArn));
        }

        /**
         * @param memberEmailAddress The root email address for the account to be invited, for validation. Updating this field has no effect.
         * 
         * @return builder
         * 
         */
        public Builder memberEmailAddress(Output<String> memberEmailAddress) {
            $.memberEmailAddress = memberEmailAddress;
            return this;
        }

        /**
         * @param memberEmailAddress The root email address for the account to be invited, for validation. Updating this field has no effect.
         * 
         * @return builder
         * 
         */
        public Builder memberEmailAddress(String memberEmailAddress) {
            return memberEmailAddress(Output.of(memberEmailAddress));
        }

        /**
         * @param memberId The AWS account ID to be invited to join the graph as a member
         * 
         * @return builder
         * 
         */
        public Builder memberId(Output<String> memberId) {
            $.memberId = memberId;
            return this;
        }

        /**
         * @param memberId The AWS account ID to be invited to join the graph as a member
         * 
         * @return builder
         * 
         */
        public Builder memberId(String memberId) {
            return memberId(Output.of(memberId));
        }

        /**
         * @param message A message to be included in the email invitation sent to the invited account. Updating this field has no effect.
         * 
         * @return builder
         * 
         */
        public Builder message(@Nullable Output<String> message) {
            $.message = message;
            return this;
        }

        /**
         * @param message A message to be included in the email invitation sent to the invited account. Updating this field has no effect.
         * 
         * @return builder
         * 
         */
        public Builder message(String message) {
            return message(Output.of(message));
        }

        public MemberInvitationArgs build() {
            $.graphArn = Objects.requireNonNull($.graphArn, "expected parameter 'graphArn' to be non-null");
            $.memberEmailAddress = Objects.requireNonNull($.memberEmailAddress, "expected parameter 'memberEmailAddress' to be non-null");
            $.memberId = Objects.requireNonNull($.memberId, "expected parameter 'memberId' to be non-null");
            return $;
        }
    }

}
