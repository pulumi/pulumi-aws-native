// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.personalize.inputs;

import com.pulumi.awsnative.personalize.enums.SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The metric to optimize during HPO.
 * 
 */
public final class SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs Empty = new SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs();

    /**
     * The name of the metric
     * 
     */
    @Import(name="metricName")
    private @Nullable Output<String> metricName;

    /**
     * @return The name of the metric
     * 
     */
    public Optional<Output<String>> metricName() {
        return Optional.ofNullable(this.metricName);
    }

    /**
     * A regular expression for finding the metric in the training job logs.
     * 
     */
    @Import(name="metricRegex")
    private @Nullable Output<String> metricRegex;

    /**
     * @return A regular expression for finding the metric in the training job logs.
     * 
     */
    public Optional<Output<String>> metricRegex() {
        return Optional.ofNullable(this.metricRegex);
    }

    /**
     * The type of the metric. Valid values are Maximize and Minimize.
     * 
     */
    @Import(name="type")
    private @Nullable Output<SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType> type;

    /**
     * @return The type of the metric. Valid values are Maximize and Minimize.
     * 
     */
    public Optional<Output<SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType>> type() {
        return Optional.ofNullable(this.type);
    }

    private SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs() {}

    private SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs $) {
        this.metricName = $.metricName;
        this.metricRegex = $.metricRegex;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs $;

        public Builder() {
            $ = new SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs();
        }

        public Builder(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs defaults) {
            $ = new SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metricName The name of the metric
         * 
         * @return builder
         * 
         */
        public Builder metricName(@Nullable Output<String> metricName) {
            $.metricName = metricName;
            return this;
        }

        /**
         * @param metricName The name of the metric
         * 
         * @return builder
         * 
         */
        public Builder metricName(String metricName) {
            return metricName(Output.of(metricName));
        }

        /**
         * @param metricRegex A regular expression for finding the metric in the training job logs.
         * 
         * @return builder
         * 
         */
        public Builder metricRegex(@Nullable Output<String> metricRegex) {
            $.metricRegex = metricRegex;
            return this;
        }

        /**
         * @param metricRegex A regular expression for finding the metric in the training job logs.
         * 
         * @return builder
         * 
         */
        public Builder metricRegex(String metricRegex) {
            return metricRegex(Output.of(metricRegex));
        }

        /**
         * @param type The type of the metric. Valid values are Maximize and Minimize.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the metric. Valid values are Maximize and Minimize.
         * 
         * @return builder
         * 
         */
        public Builder type(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType type) {
            return type(Output.of(type));
        }

        public SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs build() {
            return $;
        }
    }

}
