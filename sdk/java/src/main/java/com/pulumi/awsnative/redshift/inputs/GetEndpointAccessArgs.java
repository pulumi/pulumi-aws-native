// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.redshift.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetEndpointAccessArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEndpointAccessArgs Empty = new GetEndpointAccessArgs();

    /**
     * The name of the endpoint.
     * 
     */
    @Import(name="endpointName", required=true)
    private Output<String> endpointName;

    /**
     * @return The name of the endpoint.
     * 
     */
    public Output<String> endpointName() {
        return this.endpointName;
    }

    private GetEndpointAccessArgs() {}

    private GetEndpointAccessArgs(GetEndpointAccessArgs $) {
        this.endpointName = $.endpointName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEndpointAccessArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEndpointAccessArgs $;

        public Builder() {
            $ = new GetEndpointAccessArgs();
        }

        public Builder(GetEndpointAccessArgs defaults) {
            $ = new GetEndpointAccessArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endpointName The name of the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder endpointName(Output<String> endpointName) {
            $.endpointName = endpointName;
            return this;
        }

        /**
         * @param endpointName The name of the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder endpointName(String endpointName) {
            return endpointName(Output.of(endpointName));
        }

        public GetEndpointAccessArgs build() {
            $.endpointName = Objects.requireNonNull($.endpointName, "expected parameter 'endpointName' to be non-null");
            return $;
        }
    }

}
