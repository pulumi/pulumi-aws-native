// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ecs;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.ecs.ServiceArgs;
import com.pulumi.awsnative.ecs.enums.ServiceLaunchType;
import com.pulumi.awsnative.ecs.enums.ServicePropagateTags;
import com.pulumi.awsnative.ecs.enums.ServiceSchedulingStrategy;
import com.pulumi.awsnative.ecs.outputs.ServiceCapacityProviderStrategyItem;
import com.pulumi.awsnative.ecs.outputs.ServiceDeploymentConfiguration;
import com.pulumi.awsnative.ecs.outputs.ServiceDeploymentController;
import com.pulumi.awsnative.ecs.outputs.ServiceLoadBalancer;
import com.pulumi.awsnative.ecs.outputs.ServiceNetworkConfiguration;
import com.pulumi.awsnative.ecs.outputs.ServicePlacementConstraint;
import com.pulumi.awsnative.ecs.outputs.ServicePlacementStrategy;
import com.pulumi.awsnative.ecs.outputs.ServiceRegistry;
import com.pulumi.awsnative.ecs.outputs.ServiceTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource Type definition for AWS::ECS::Service
 * 
 */
@ResourceType(type="aws-native:ecs:Service")
public class Service extends com.pulumi.resources.CustomResource {
    @Export(name="capacityProviderStrategy", type=List.class, parameters={ServiceCapacityProviderStrategyItem.class})
    private Output</* @Nullable */ List<ServiceCapacityProviderStrategyItem>> capacityProviderStrategy;

    public Output<Optional<List<ServiceCapacityProviderStrategyItem>>> capacityProviderStrategy() {
        return Codegen.optional(this.capacityProviderStrategy);
    }
    @Export(name="cluster", type=String.class, parameters={})
    private Output</* @Nullable */ String> cluster;

    public Output<Optional<String>> cluster() {
        return Codegen.optional(this.cluster);
    }
    @Export(name="deploymentConfiguration", type=ServiceDeploymentConfiguration.class, parameters={})
    private Output</* @Nullable */ ServiceDeploymentConfiguration> deploymentConfiguration;

    public Output<Optional<ServiceDeploymentConfiguration>> deploymentConfiguration() {
        return Codegen.optional(this.deploymentConfiguration);
    }
    @Export(name="deploymentController", type=ServiceDeploymentController.class, parameters={})
    private Output</* @Nullable */ ServiceDeploymentController> deploymentController;

    public Output<Optional<ServiceDeploymentController>> deploymentController() {
        return Codegen.optional(this.deploymentController);
    }
    @Export(name="desiredCount", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> desiredCount;

    public Output<Optional<Integer>> desiredCount() {
        return Codegen.optional(this.desiredCount);
    }
    @Export(name="enableECSManagedTags", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableECSManagedTags;

    public Output<Optional<Boolean>> enableECSManagedTags() {
        return Codegen.optional(this.enableECSManagedTags);
    }
    @Export(name="enableExecuteCommand", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableExecuteCommand;

    public Output<Optional<Boolean>> enableExecuteCommand() {
        return Codegen.optional(this.enableExecuteCommand);
    }
    @Export(name="healthCheckGracePeriodSeconds", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> healthCheckGracePeriodSeconds;

    public Output<Optional<Integer>> healthCheckGracePeriodSeconds() {
        return Codegen.optional(this.healthCheckGracePeriodSeconds);
    }
    @Export(name="launchType", type=ServiceLaunchType.class, parameters={})
    private Output</* @Nullable */ ServiceLaunchType> launchType;

    public Output<Optional<ServiceLaunchType>> launchType() {
        return Codegen.optional(this.launchType);
    }
    @Export(name="loadBalancers", type=List.class, parameters={ServiceLoadBalancer.class})
    private Output</* @Nullable */ List<ServiceLoadBalancer>> loadBalancers;

    public Output<Optional<List<ServiceLoadBalancer>>> loadBalancers() {
        return Codegen.optional(this.loadBalancers);
    }
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="networkConfiguration", type=ServiceNetworkConfiguration.class, parameters={})
    private Output</* @Nullable */ ServiceNetworkConfiguration> networkConfiguration;

    public Output<Optional<ServiceNetworkConfiguration>> networkConfiguration() {
        return Codegen.optional(this.networkConfiguration);
    }
    @Export(name="placementConstraints", type=List.class, parameters={ServicePlacementConstraint.class})
    private Output</* @Nullable */ List<ServicePlacementConstraint>> placementConstraints;

    public Output<Optional<List<ServicePlacementConstraint>>> placementConstraints() {
        return Codegen.optional(this.placementConstraints);
    }
    @Export(name="placementStrategies", type=List.class, parameters={ServicePlacementStrategy.class})
    private Output</* @Nullable */ List<ServicePlacementStrategy>> placementStrategies;

    public Output<Optional<List<ServicePlacementStrategy>>> placementStrategies() {
        return Codegen.optional(this.placementStrategies);
    }
    @Export(name="platformVersion", type=String.class, parameters={})
    private Output</* @Nullable */ String> platformVersion;

    public Output<Optional<String>> platformVersion() {
        return Codegen.optional(this.platformVersion);
    }
    @Export(name="propagateTags", type=ServicePropagateTags.class, parameters={})
    private Output</* @Nullable */ ServicePropagateTags> propagateTags;

    public Output<Optional<ServicePropagateTags>> propagateTags() {
        return Codegen.optional(this.propagateTags);
    }
    @Export(name="role", type=String.class, parameters={})
    private Output</* @Nullable */ String> role;

    public Output<Optional<String>> role() {
        return Codegen.optional(this.role);
    }
    @Export(name="schedulingStrategy", type=ServiceSchedulingStrategy.class, parameters={})
    private Output</* @Nullable */ ServiceSchedulingStrategy> schedulingStrategy;

    public Output<Optional<ServiceSchedulingStrategy>> schedulingStrategy() {
        return Codegen.optional(this.schedulingStrategy);
    }
    @Export(name="serviceArn", type=String.class, parameters={})
    private Output<String> serviceArn;

    public Output<String> serviceArn() {
        return this.serviceArn;
    }
    @Export(name="serviceName", type=String.class, parameters={})
    private Output</* @Nullable */ String> serviceName;

    public Output<Optional<String>> serviceName() {
        return Codegen.optional(this.serviceName);
    }
    @Export(name="serviceRegistries", type=List.class, parameters={ServiceRegistry.class})
    private Output</* @Nullable */ List<ServiceRegistry>> serviceRegistries;

    public Output<Optional<List<ServiceRegistry>>> serviceRegistries() {
        return Codegen.optional(this.serviceRegistries);
    }
    @Export(name="tags", type=List.class, parameters={ServiceTag.class})
    private Output</* @Nullable */ List<ServiceTag>> tags;

    public Output<Optional<List<ServiceTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="taskDefinition", type=String.class, parameters={})
    private Output</* @Nullable */ String> taskDefinition;

    public Output<Optional<String>> taskDefinition() {
        return Codegen.optional(this.taskDefinition);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Service(String name) {
        this(name, ServiceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Service(String name, @Nullable ServiceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Service(String name, @Nullable ServiceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:ecs:Service", name, args == null ? ServiceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Service(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:ecs:Service", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Service get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Service(name, id, options);
    }
}
