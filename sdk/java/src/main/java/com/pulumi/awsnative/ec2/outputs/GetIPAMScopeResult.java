// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2.outputs;

import com.pulumi.awsnative.ec2.enums.IPAMScopeIpamScopeType;
import com.pulumi.awsnative.ec2.outputs.IPAMScopeTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIPAMScopeResult {
    /**
     * @return The Amazon Resource Name (ARN) of the IPAM scope.
     * 
     */
    private @Nullable String arn;
    private @Nullable String description;
    /**
     * @return The Amazon Resource Name (ARN) of the IPAM this scope is a part of.
     * 
     */
    private @Nullable String ipamArn;
    /**
     * @return Id of the IPAM scope.
     * 
     */
    private @Nullable String ipamScopeId;
    /**
     * @return Determines whether this scope contains publicly routable space or space for a private network
     * 
     */
    private @Nullable IPAMScopeIpamScopeType ipamScopeType;
    /**
     * @return Is this one of the default scopes created with the IPAM.
     * 
     */
    private @Nullable Boolean isDefault;
    /**
     * @return The number of pools that currently exist in this scope.
     * 
     */
    private @Nullable Integer poolCount;
    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    private @Nullable List<IPAMScopeTag> tags;

    private GetIPAMScopeResult() {}
    /**
     * @return The Amazon Resource Name (ARN) of the IPAM scope.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The Amazon Resource Name (ARN) of the IPAM this scope is a part of.
     * 
     */
    public Optional<String> ipamArn() {
        return Optional.ofNullable(this.ipamArn);
    }
    /**
     * @return Id of the IPAM scope.
     * 
     */
    public Optional<String> ipamScopeId() {
        return Optional.ofNullable(this.ipamScopeId);
    }
    /**
     * @return Determines whether this scope contains publicly routable space or space for a private network
     * 
     */
    public Optional<IPAMScopeIpamScopeType> ipamScopeType() {
        return Optional.ofNullable(this.ipamScopeType);
    }
    /**
     * @return Is this one of the default scopes created with the IPAM.
     * 
     */
    public Optional<Boolean> isDefault() {
        return Optional.ofNullable(this.isDefault);
    }
    /**
     * @return The number of pools that currently exist in this scope.
     * 
     */
    public Optional<Integer> poolCount() {
        return Optional.ofNullable(this.poolCount);
    }
    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public List<IPAMScopeTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIPAMScopeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String description;
        private @Nullable String ipamArn;
        private @Nullable String ipamScopeId;
        private @Nullable IPAMScopeIpamScopeType ipamScopeType;
        private @Nullable Boolean isDefault;
        private @Nullable Integer poolCount;
        private @Nullable List<IPAMScopeTag> tags;
        public Builder() {}
        public Builder(GetIPAMScopeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.description = defaults.description;
    	      this.ipamArn = defaults.ipamArn;
    	      this.ipamScopeId = defaults.ipamScopeId;
    	      this.ipamScopeType = defaults.ipamScopeType;
    	      this.isDefault = defaults.isDefault;
    	      this.poolCount = defaults.poolCount;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder ipamArn(@Nullable String ipamArn) {
            this.ipamArn = ipamArn;
            return this;
        }
        @CustomType.Setter
        public Builder ipamScopeId(@Nullable String ipamScopeId) {
            this.ipamScopeId = ipamScopeId;
            return this;
        }
        @CustomType.Setter
        public Builder ipamScopeType(@Nullable IPAMScopeIpamScopeType ipamScopeType) {
            this.ipamScopeType = ipamScopeType;
            return this;
        }
        @CustomType.Setter
        public Builder isDefault(@Nullable Boolean isDefault) {
            this.isDefault = isDefault;
            return this;
        }
        @CustomType.Setter
        public Builder poolCount(@Nullable Integer poolCount) {
            this.poolCount = poolCount;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<IPAMScopeTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(IPAMScopeTag... tags) {
            return tags(List.of(tags));
        }
        public GetIPAMScopeResult build() {
            final var o = new GetIPAMScopeResult();
            o.arn = arn;
            o.description = description;
            o.ipamArn = ipamArn;
            o.ipamScopeId = ipamScopeId;
            o.ipamScopeType = ipamScopeType;
            o.isDefault = isDefault;
            o.poolCount = poolCount;
            o.tags = tags;
            return o;
        }
    }
}
