// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.imagebuilder.outputs;

import com.pulumi.awsnative.imagebuilder.outputs.DistributionConfigurationFastLaunchLaunchTemplateSpecification;
import com.pulumi.awsnative.imagebuilder.outputs.DistributionConfigurationFastLaunchSnapshotConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DistributionConfigurationFastLaunchConfiguration {
    /**
     * @return The owner account ID for the fast-launch enabled Windows AMI.
     * 
     */
    private @Nullable String accountId;
    /**
     * @return A Boolean that represents the current state of faster launching for the Windows AMI. Set to true to start using Windows faster launching, or false to stop using it.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return The launch template that the fast-launch enabled Windows AMI uses when it launches Windows instances to create pre-provisioned snapshots.
     * 
     */
    private @Nullable DistributionConfigurationFastLaunchLaunchTemplateSpecification launchTemplate;
    /**
     * @return The maximum number of parallel instances that are launched for creating resources.
     * 
     */
    private @Nullable Integer maxParallelLaunches;
    /**
     * @return Configuration settings for managing the number of snapshots that are created from pre-provisioned instances for the Windows AMI when faster launching is enabled.
     * 
     */
    private @Nullable DistributionConfigurationFastLaunchSnapshotConfiguration snapshotConfiguration;

    private DistributionConfigurationFastLaunchConfiguration() {}
    /**
     * @return The owner account ID for the fast-launch enabled Windows AMI.
     * 
     */
    public Optional<String> accountId() {
        return Optional.ofNullable(this.accountId);
    }
    /**
     * @return A Boolean that represents the current state of faster launching for the Windows AMI. Set to true to start using Windows faster launching, or false to stop using it.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return The launch template that the fast-launch enabled Windows AMI uses when it launches Windows instances to create pre-provisioned snapshots.
     * 
     */
    public Optional<DistributionConfigurationFastLaunchLaunchTemplateSpecification> launchTemplate() {
        return Optional.ofNullable(this.launchTemplate);
    }
    /**
     * @return The maximum number of parallel instances that are launched for creating resources.
     * 
     */
    public Optional<Integer> maxParallelLaunches() {
        return Optional.ofNullable(this.maxParallelLaunches);
    }
    /**
     * @return Configuration settings for managing the number of snapshots that are created from pre-provisioned instances for the Windows AMI when faster launching is enabled.
     * 
     */
    public Optional<DistributionConfigurationFastLaunchSnapshotConfiguration> snapshotConfiguration() {
        return Optional.ofNullable(this.snapshotConfiguration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DistributionConfigurationFastLaunchConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountId;
        private @Nullable Boolean enabled;
        private @Nullable DistributionConfigurationFastLaunchLaunchTemplateSpecification launchTemplate;
        private @Nullable Integer maxParallelLaunches;
        private @Nullable DistributionConfigurationFastLaunchSnapshotConfiguration snapshotConfiguration;
        public Builder() {}
        public Builder(DistributionConfigurationFastLaunchConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.enabled = defaults.enabled;
    	      this.launchTemplate = defaults.launchTemplate;
    	      this.maxParallelLaunches = defaults.maxParallelLaunches;
    	      this.snapshotConfiguration = defaults.snapshotConfiguration;
        }

        @CustomType.Setter
        public Builder accountId(@Nullable String accountId) {
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder launchTemplate(@Nullable DistributionConfigurationFastLaunchLaunchTemplateSpecification launchTemplate) {
            this.launchTemplate = launchTemplate;
            return this;
        }
        @CustomType.Setter
        public Builder maxParallelLaunches(@Nullable Integer maxParallelLaunches) {
            this.maxParallelLaunches = maxParallelLaunches;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotConfiguration(@Nullable DistributionConfigurationFastLaunchSnapshotConfiguration snapshotConfiguration) {
            this.snapshotConfiguration = snapshotConfiguration;
            return this;
        }
        public DistributionConfigurationFastLaunchConfiguration build() {
            final var o = new DistributionConfigurationFastLaunchConfiguration();
            o.accountId = accountId;
            o.enabled = enabled;
            o.launchTemplate = launchTemplate;
            o.maxParallelLaunches = maxParallelLaunches;
            o.snapshotConfiguration = snapshotConfiguration;
            return o;
        }
    }
}
