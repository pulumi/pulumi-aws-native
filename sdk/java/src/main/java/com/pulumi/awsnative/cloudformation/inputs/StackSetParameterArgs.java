// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudformation.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class StackSetParameterArgs extends com.pulumi.resources.ResourceArgs {

    public static final StackSetParameterArgs Empty = new StackSetParameterArgs();

    /**
     * The key associated with the parameter. If you don&#39;t specify a key and value for a particular parameter, AWS CloudFormation uses the default value that is specified in your template.
     * 
     */
    @Import(name="parameterKey", required=true)
    private Output<String> parameterKey;

    /**
     * @return The key associated with the parameter. If you don&#39;t specify a key and value for a particular parameter, AWS CloudFormation uses the default value that is specified in your template.
     * 
     */
    public Output<String> parameterKey() {
        return this.parameterKey;
    }

    /**
     * The input value associated with the parameter.
     * 
     */
    @Import(name="parameterValue", required=true)
    private Output<String> parameterValue;

    /**
     * @return The input value associated with the parameter.
     * 
     */
    public Output<String> parameterValue() {
        return this.parameterValue;
    }

    private StackSetParameterArgs() {}

    private StackSetParameterArgs(StackSetParameterArgs $) {
        this.parameterKey = $.parameterKey;
        this.parameterValue = $.parameterValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StackSetParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StackSetParameterArgs $;

        public Builder() {
            $ = new StackSetParameterArgs();
        }

        public Builder(StackSetParameterArgs defaults) {
            $ = new StackSetParameterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param parameterKey The key associated with the parameter. If you don&#39;t specify a key and value for a particular parameter, AWS CloudFormation uses the default value that is specified in your template.
         * 
         * @return builder
         * 
         */
        public Builder parameterKey(Output<String> parameterKey) {
            $.parameterKey = parameterKey;
            return this;
        }

        /**
         * @param parameterKey The key associated with the parameter. If you don&#39;t specify a key and value for a particular parameter, AWS CloudFormation uses the default value that is specified in your template.
         * 
         * @return builder
         * 
         */
        public Builder parameterKey(String parameterKey) {
            return parameterKey(Output.of(parameterKey));
        }

        /**
         * @param parameterValue The input value associated with the parameter.
         * 
         * @return builder
         * 
         */
        public Builder parameterValue(Output<String> parameterValue) {
            $.parameterValue = parameterValue;
            return this;
        }

        /**
         * @param parameterValue The input value associated with the parameter.
         * 
         * @return builder
         * 
         */
        public Builder parameterValue(String parameterValue) {
            return parameterValue(Output.of(parameterValue));
        }

        public StackSetParameterArgs build() {
            $.parameterKey = Objects.requireNonNull($.parameterKey, "expected parameter 'parameterKey' to be non-null");
            $.parameterValue = Objects.requireNonNull($.parameterValue, "expected parameter 'parameterValue' to be non-null");
            return $;
        }
    }

}
