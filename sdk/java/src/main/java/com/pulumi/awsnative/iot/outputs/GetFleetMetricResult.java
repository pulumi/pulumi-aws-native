// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iot.outputs;

import com.pulumi.awsnative.iot.outputs.FleetMetricAggregationType;
import com.pulumi.awsnative.iot.outputs.FleetMetricTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFleetMetricResult {
    /**
     * @return The aggregation field to perform aggregation and metric emission
     * 
     */
    private @Nullable String aggregationField;
    private @Nullable FleetMetricAggregationType aggregationType;
    /**
     * @return The creation date of a fleet metric
     * 
     */
    private @Nullable Double creationDate;
    /**
     * @return The description of a fleet metric
     * 
     */
    private @Nullable String description;
    /**
     * @return The index name of a fleet metric
     * 
     */
    private @Nullable String indexName;
    /**
     * @return The last modified date of a fleet metric
     * 
     */
    private @Nullable Double lastModifiedDate;
    /**
     * @return The Amazon Resource Number (ARN) of a fleet metric metric
     * 
     */
    private @Nullable String metricArn;
    /**
     * @return The period of metric emission in seconds
     * 
     */
    private @Nullable Integer period;
    /**
     * @return The Fleet Indexing query used by a fleet metric
     * 
     */
    private @Nullable String queryString;
    /**
     * @return The version of a Fleet Indexing query used by a fleet metric
     * 
     */
    private @Nullable String queryVersion;
    /**
     * @return An array of key-value pairs to apply to this resource
     * 
     */
    private @Nullable List<FleetMetricTag> tags;
    /**
     * @return The unit of data points emitted by a fleet metric
     * 
     */
    private @Nullable String unit;
    /**
     * @return The version of a fleet metric
     * 
     */
    private @Nullable Double version;

    private GetFleetMetricResult() {}
    /**
     * @return The aggregation field to perform aggregation and metric emission
     * 
     */
    public Optional<String> aggregationField() {
        return Optional.ofNullable(this.aggregationField);
    }
    public Optional<FleetMetricAggregationType> aggregationType() {
        return Optional.ofNullable(this.aggregationType);
    }
    /**
     * @return The creation date of a fleet metric
     * 
     */
    public Optional<Double> creationDate() {
        return Optional.ofNullable(this.creationDate);
    }
    /**
     * @return The description of a fleet metric
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The index name of a fleet metric
     * 
     */
    public Optional<String> indexName() {
        return Optional.ofNullable(this.indexName);
    }
    /**
     * @return The last modified date of a fleet metric
     * 
     */
    public Optional<Double> lastModifiedDate() {
        return Optional.ofNullable(this.lastModifiedDate);
    }
    /**
     * @return The Amazon Resource Number (ARN) of a fleet metric metric
     * 
     */
    public Optional<String> metricArn() {
        return Optional.ofNullable(this.metricArn);
    }
    /**
     * @return The period of metric emission in seconds
     * 
     */
    public Optional<Integer> period() {
        return Optional.ofNullable(this.period);
    }
    /**
     * @return The Fleet Indexing query used by a fleet metric
     * 
     */
    public Optional<String> queryString() {
        return Optional.ofNullable(this.queryString);
    }
    /**
     * @return The version of a Fleet Indexing query used by a fleet metric
     * 
     */
    public Optional<String> queryVersion() {
        return Optional.ofNullable(this.queryVersion);
    }
    /**
     * @return An array of key-value pairs to apply to this resource
     * 
     */
    public List<FleetMetricTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return The unit of data points emitted by a fleet metric
     * 
     */
    public Optional<String> unit() {
        return Optional.ofNullable(this.unit);
    }
    /**
     * @return The version of a fleet metric
     * 
     */
    public Optional<Double> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetMetricResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String aggregationField;
        private @Nullable FleetMetricAggregationType aggregationType;
        private @Nullable Double creationDate;
        private @Nullable String description;
        private @Nullable String indexName;
        private @Nullable Double lastModifiedDate;
        private @Nullable String metricArn;
        private @Nullable Integer period;
        private @Nullable String queryString;
        private @Nullable String queryVersion;
        private @Nullable List<FleetMetricTag> tags;
        private @Nullable String unit;
        private @Nullable Double version;
        public Builder() {}
        public Builder(GetFleetMetricResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregationField = defaults.aggregationField;
    	      this.aggregationType = defaults.aggregationType;
    	      this.creationDate = defaults.creationDate;
    	      this.description = defaults.description;
    	      this.indexName = defaults.indexName;
    	      this.lastModifiedDate = defaults.lastModifiedDate;
    	      this.metricArn = defaults.metricArn;
    	      this.period = defaults.period;
    	      this.queryString = defaults.queryString;
    	      this.queryVersion = defaults.queryVersion;
    	      this.tags = defaults.tags;
    	      this.unit = defaults.unit;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder aggregationField(@Nullable String aggregationField) {
            this.aggregationField = aggregationField;
            return this;
        }
        @CustomType.Setter
        public Builder aggregationType(@Nullable FleetMetricAggregationType aggregationType) {
            this.aggregationType = aggregationType;
            return this;
        }
        @CustomType.Setter
        public Builder creationDate(@Nullable Double creationDate) {
            this.creationDate = creationDate;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder indexName(@Nullable String indexName) {
            this.indexName = indexName;
            return this;
        }
        @CustomType.Setter
        public Builder lastModifiedDate(@Nullable Double lastModifiedDate) {
            this.lastModifiedDate = lastModifiedDate;
            return this;
        }
        @CustomType.Setter
        public Builder metricArn(@Nullable String metricArn) {
            this.metricArn = metricArn;
            return this;
        }
        @CustomType.Setter
        public Builder period(@Nullable Integer period) {
            this.period = period;
            return this;
        }
        @CustomType.Setter
        public Builder queryString(@Nullable String queryString) {
            this.queryString = queryString;
            return this;
        }
        @CustomType.Setter
        public Builder queryVersion(@Nullable String queryVersion) {
            this.queryVersion = queryVersion;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<FleetMetricTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(FleetMetricTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder unit(@Nullable String unit) {
            this.unit = unit;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable Double version) {
            this.version = version;
            return this;
        }
        public GetFleetMetricResult build() {
            final var o = new GetFleetMetricResult();
            o.aggregationField = aggregationField;
            o.aggregationType = aggregationType;
            o.creationDate = creationDate;
            o.description = description;
            o.indexName = indexName;
            o.lastModifiedDate = lastModifiedDate;
            o.metricArn = metricArn;
            o.period = period;
            o.queryString = queryString;
            o.queryVersion = queryVersion;
            o.tags = tags;
            o.unit = unit;
            o.version = version;
            return o;
        }
    }
}
