// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.gamelift;

import com.pulumi.awsnative.gamelift.enums.GameServerGroupBalancingStrategy;
import com.pulumi.awsnative.gamelift.enums.GameServerGroupDeleteOption;
import com.pulumi.awsnative.gamelift.enums.GameServerGroupGameServerProtectionPolicy;
import com.pulumi.awsnative.gamelift.inputs.GameServerGroupAutoScalingPolicyArgs;
import com.pulumi.awsnative.gamelift.inputs.GameServerGroupInstanceDefinitionArgs;
import com.pulumi.awsnative.gamelift.inputs.GameServerGroupLaunchTemplateArgs;
import com.pulumi.awsnative.gamelift.inputs.GameServerGroupTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GameServerGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final GameServerGroupArgs Empty = new GameServerGroupArgs();

    /**
     * Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting
     * 
     */
    @Import(name="autoScalingPolicy")
    private @Nullable Output<GameServerGroupAutoScalingPolicyArgs> autoScalingPolicy;

    /**
     * @return Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting
     * 
     */
    public Optional<Output<GameServerGroupAutoScalingPolicyArgs>> autoScalingPolicy() {
        return Optional.ofNullable(this.autoScalingPolicy);
    }

    /**
     * The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.
     * 
     */
    @Import(name="balancingStrategy")
    private @Nullable Output<GameServerGroupBalancingStrategy> balancingStrategy;

    /**
     * @return The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.
     * 
     */
    public Optional<Output<GameServerGroupBalancingStrategy>> balancingStrategy() {
        return Optional.ofNullable(this.balancingStrategy);
    }

    /**
     * The type of delete to perform.
     * 
     */
    @Import(name="deleteOption")
    private @Nullable Output<GameServerGroupDeleteOption> deleteOption;

    /**
     * @return The type of delete to perform.
     * 
     */
    public Optional<Output<GameServerGroupDeleteOption>> deleteOption() {
        return Optional.ofNullable(this.deleteOption);
    }

    /**
     * An identifier for the new game server group.
     * 
     */
    @Import(name="gameServerGroupName")
    private @Nullable Output<String> gameServerGroupName;

    /**
     * @return An identifier for the new game server group.
     * 
     */
    public Optional<Output<String>> gameServerGroupName() {
        return Optional.ofNullable(this.gameServerGroupName);
    }

    /**
     * A flag that indicates whether instances in the game server group are protected from early termination.
     * 
     */
    @Import(name="gameServerProtectionPolicy")
    private @Nullable Output<GameServerGroupGameServerProtectionPolicy> gameServerProtectionPolicy;

    /**
     * @return A flag that indicates whether instances in the game server group are protected from early termination.
     * 
     */
    public Optional<Output<GameServerGroupGameServerProtectionPolicy>> gameServerProtectionPolicy() {
        return Optional.ofNullable(this.gameServerProtectionPolicy);
    }

    /**
     * A set of EC2 instance types to use when creating instances in the group.
     * 
     */
    @Import(name="instanceDefinitions", required=true)
    private Output<List<GameServerGroupInstanceDefinitionArgs>> instanceDefinitions;

    /**
     * @return A set of EC2 instance types to use when creating instances in the group.
     * 
     */
    public Output<List<GameServerGroupInstanceDefinitionArgs>> instanceDefinitions() {
        return this.instanceDefinitions;
    }

    /**
     * The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group.
     * 
     */
    @Import(name="launchTemplate", required=true)
    private Output<GameServerGroupLaunchTemplateArgs> launchTemplate;

    /**
     * @return The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group.
     * 
     */
    public Output<GameServerGroupLaunchTemplateArgs> launchTemplate() {
        return this.launchTemplate;
    }

    /**
     * The maximum number of instances allowed in the EC2 Auto Scaling group.
     * 
     */
    @Import(name="maxSize")
    private @Nullable Output<Double> maxSize;

    /**
     * @return The maximum number of instances allowed in the EC2 Auto Scaling group.
     * 
     */
    public Optional<Output<Double>> maxSize() {
        return Optional.ofNullable(this.maxSize);
    }

    /**
     * The minimum number of instances allowed in the EC2 Auto Scaling group.
     * 
     */
    @Import(name="minSize")
    private @Nullable Output<Double> minSize;

    /**
     * @return The minimum number of instances allowed in the EC2 Auto Scaling group.
     * 
     */
    public Optional<Output<Double>> minSize() {
        return Optional.ofNullable(this.minSize);
    }

    /**
     * The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    /**
     * A list of labels to assign to the new game server group resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<GameServerGroupTagArgs>> tags;

    /**
     * @return A list of labels to assign to the new game server group resource.
     * 
     */
    public Optional<Output<List<GameServerGroupTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A list of virtual private cloud (VPC) subnets to use with instances in the game server group.
     * 
     */
    @Import(name="vpcSubnets")
    private @Nullable Output<List<String>> vpcSubnets;

    /**
     * @return A list of virtual private cloud (VPC) subnets to use with instances in the game server group.
     * 
     */
    public Optional<Output<List<String>>> vpcSubnets() {
        return Optional.ofNullable(this.vpcSubnets);
    }

    private GameServerGroupArgs() {}

    private GameServerGroupArgs(GameServerGroupArgs $) {
        this.autoScalingPolicy = $.autoScalingPolicy;
        this.balancingStrategy = $.balancingStrategy;
        this.deleteOption = $.deleteOption;
        this.gameServerGroupName = $.gameServerGroupName;
        this.gameServerProtectionPolicy = $.gameServerProtectionPolicy;
        this.instanceDefinitions = $.instanceDefinitions;
        this.launchTemplate = $.launchTemplate;
        this.maxSize = $.maxSize;
        this.minSize = $.minSize;
        this.roleArn = $.roleArn;
        this.tags = $.tags;
        this.vpcSubnets = $.vpcSubnets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GameServerGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GameServerGroupArgs $;

        public Builder() {
            $ = new GameServerGroupArgs();
        }

        public Builder(GameServerGroupArgs defaults) {
            $ = new GameServerGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoScalingPolicy Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting
         * 
         * @return builder
         * 
         */
        public Builder autoScalingPolicy(@Nullable Output<GameServerGroupAutoScalingPolicyArgs> autoScalingPolicy) {
            $.autoScalingPolicy = autoScalingPolicy;
            return this;
        }

        /**
         * @param autoScalingPolicy Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting
         * 
         * @return builder
         * 
         */
        public Builder autoScalingPolicy(GameServerGroupAutoScalingPolicyArgs autoScalingPolicy) {
            return autoScalingPolicy(Output.of(autoScalingPolicy));
        }

        /**
         * @param balancingStrategy The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.
         * 
         * @return builder
         * 
         */
        public Builder balancingStrategy(@Nullable Output<GameServerGroupBalancingStrategy> balancingStrategy) {
            $.balancingStrategy = balancingStrategy;
            return this;
        }

        /**
         * @param balancingStrategy The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.
         * 
         * @return builder
         * 
         */
        public Builder balancingStrategy(GameServerGroupBalancingStrategy balancingStrategy) {
            return balancingStrategy(Output.of(balancingStrategy));
        }

        /**
         * @param deleteOption The type of delete to perform.
         * 
         * @return builder
         * 
         */
        public Builder deleteOption(@Nullable Output<GameServerGroupDeleteOption> deleteOption) {
            $.deleteOption = deleteOption;
            return this;
        }

        /**
         * @param deleteOption The type of delete to perform.
         * 
         * @return builder
         * 
         */
        public Builder deleteOption(GameServerGroupDeleteOption deleteOption) {
            return deleteOption(Output.of(deleteOption));
        }

        /**
         * @param gameServerGroupName An identifier for the new game server group.
         * 
         * @return builder
         * 
         */
        public Builder gameServerGroupName(@Nullable Output<String> gameServerGroupName) {
            $.gameServerGroupName = gameServerGroupName;
            return this;
        }

        /**
         * @param gameServerGroupName An identifier for the new game server group.
         * 
         * @return builder
         * 
         */
        public Builder gameServerGroupName(String gameServerGroupName) {
            return gameServerGroupName(Output.of(gameServerGroupName));
        }

        /**
         * @param gameServerProtectionPolicy A flag that indicates whether instances in the game server group are protected from early termination.
         * 
         * @return builder
         * 
         */
        public Builder gameServerProtectionPolicy(@Nullable Output<GameServerGroupGameServerProtectionPolicy> gameServerProtectionPolicy) {
            $.gameServerProtectionPolicy = gameServerProtectionPolicy;
            return this;
        }

        /**
         * @param gameServerProtectionPolicy A flag that indicates whether instances in the game server group are protected from early termination.
         * 
         * @return builder
         * 
         */
        public Builder gameServerProtectionPolicy(GameServerGroupGameServerProtectionPolicy gameServerProtectionPolicy) {
            return gameServerProtectionPolicy(Output.of(gameServerProtectionPolicy));
        }

        /**
         * @param instanceDefinitions A set of EC2 instance types to use when creating instances in the group.
         * 
         * @return builder
         * 
         */
        public Builder instanceDefinitions(Output<List<GameServerGroupInstanceDefinitionArgs>> instanceDefinitions) {
            $.instanceDefinitions = instanceDefinitions;
            return this;
        }

        /**
         * @param instanceDefinitions A set of EC2 instance types to use when creating instances in the group.
         * 
         * @return builder
         * 
         */
        public Builder instanceDefinitions(List<GameServerGroupInstanceDefinitionArgs> instanceDefinitions) {
            return instanceDefinitions(Output.of(instanceDefinitions));
        }

        /**
         * @param instanceDefinitions A set of EC2 instance types to use when creating instances in the group.
         * 
         * @return builder
         * 
         */
        public Builder instanceDefinitions(GameServerGroupInstanceDefinitionArgs... instanceDefinitions) {
            return instanceDefinitions(List.of(instanceDefinitions));
        }

        /**
         * @param launchTemplate The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group.
         * 
         * @return builder
         * 
         */
        public Builder launchTemplate(Output<GameServerGroupLaunchTemplateArgs> launchTemplate) {
            $.launchTemplate = launchTemplate;
            return this;
        }

        /**
         * @param launchTemplate The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group.
         * 
         * @return builder
         * 
         */
        public Builder launchTemplate(GameServerGroupLaunchTemplateArgs launchTemplate) {
            return launchTemplate(Output.of(launchTemplate));
        }

        /**
         * @param maxSize The maximum number of instances allowed in the EC2 Auto Scaling group.
         * 
         * @return builder
         * 
         */
        public Builder maxSize(@Nullable Output<Double> maxSize) {
            $.maxSize = maxSize;
            return this;
        }

        /**
         * @param maxSize The maximum number of instances allowed in the EC2 Auto Scaling group.
         * 
         * @return builder
         * 
         */
        public Builder maxSize(Double maxSize) {
            return maxSize(Output.of(maxSize));
        }

        /**
         * @param minSize The minimum number of instances allowed in the EC2 Auto Scaling group.
         * 
         * @return builder
         * 
         */
        public Builder minSize(@Nullable Output<Double> minSize) {
            $.minSize = minSize;
            return this;
        }

        /**
         * @param minSize The minimum number of instances allowed in the EC2 Auto Scaling group.
         * 
         * @return builder
         * 
         */
        public Builder minSize(Double minSize) {
            return minSize(Output.of(minSize));
        }

        /**
         * @param roleArn The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param tags A list of labels to assign to the new game server group resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<GameServerGroupTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A list of labels to assign to the new game server group resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<GameServerGroupTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A list of labels to assign to the new game server group resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(GameServerGroupTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param vpcSubnets A list of virtual private cloud (VPC) subnets to use with instances in the game server group.
         * 
         * @return builder
         * 
         */
        public Builder vpcSubnets(@Nullable Output<List<String>> vpcSubnets) {
            $.vpcSubnets = vpcSubnets;
            return this;
        }

        /**
         * @param vpcSubnets A list of virtual private cloud (VPC) subnets to use with instances in the game server group.
         * 
         * @return builder
         * 
         */
        public Builder vpcSubnets(List<String> vpcSubnets) {
            return vpcSubnets(Output.of(vpcSubnets));
        }

        /**
         * @param vpcSubnets A list of virtual private cloud (VPC) subnets to use with instances in the game server group.
         * 
         * @return builder
         * 
         */
        public Builder vpcSubnets(String... vpcSubnets) {
            return vpcSubnets(List.of(vpcSubnets));
        }

        public GameServerGroupArgs build() {
            $.instanceDefinitions = Objects.requireNonNull($.instanceDefinitions, "expected parameter 'instanceDefinitions' to be non-null");
            $.launchTemplate = Objects.requireNonNull($.launchTemplate, "expected parameter 'launchTemplate' to be non-null");
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            return $;
        }
    }

}
