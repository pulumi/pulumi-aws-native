// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.stepfunctions;

import com.pulumi.awsnative.stepfunctions.enums.StateMachineType;
import com.pulumi.awsnative.stepfunctions.inputs.StateMachineDefinitionArgs;
import com.pulumi.awsnative.stepfunctions.inputs.StateMachineDefinitionSubstitutionsArgs;
import com.pulumi.awsnative.stepfunctions.inputs.StateMachineLoggingConfigurationArgs;
import com.pulumi.awsnative.stepfunctions.inputs.StateMachineS3LocationArgs;
import com.pulumi.awsnative.stepfunctions.inputs.StateMachineTagsEntryArgs;
import com.pulumi.awsnative.stepfunctions.inputs.StateMachineTracingConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StateMachineArgs extends com.pulumi.resources.ResourceArgs {

    public static final StateMachineArgs Empty = new StateMachineArgs();

    @Import(name="definition")
    private @Nullable Output<StateMachineDefinitionArgs> definition;

    public Optional<Output<StateMachineDefinitionArgs>> definition() {
        return Optional.ofNullable(this.definition);
    }

    @Import(name="definitionS3Location")
    private @Nullable Output<StateMachineS3LocationArgs> definitionS3Location;

    public Optional<Output<StateMachineS3LocationArgs>> definitionS3Location() {
        return Optional.ofNullable(this.definitionS3Location);
    }

    @Import(name="definitionString")
    private @Nullable Output<String> definitionString;

    public Optional<Output<String>> definitionString() {
        return Optional.ofNullable(this.definitionString);
    }

    @Import(name="definitionSubstitutions")
    private @Nullable Output<StateMachineDefinitionSubstitutionsArgs> definitionSubstitutions;

    public Optional<Output<StateMachineDefinitionSubstitutionsArgs>> definitionSubstitutions() {
        return Optional.ofNullable(this.definitionSubstitutions);
    }

    @Import(name="loggingConfiguration")
    private @Nullable Output<StateMachineLoggingConfigurationArgs> loggingConfiguration;

    public Optional<Output<StateMachineLoggingConfigurationArgs>> loggingConfiguration() {
        return Optional.ofNullable(this.loggingConfiguration);
    }

    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    public Output<String> roleArn() {
        return this.roleArn;
    }

    @Import(name="stateMachineName")
    private @Nullable Output<String> stateMachineName;

    public Optional<Output<String>> stateMachineName() {
        return Optional.ofNullable(this.stateMachineName);
    }

    @Import(name="stateMachineType")
    private @Nullable Output<StateMachineType> stateMachineType;

    public Optional<Output<StateMachineType>> stateMachineType() {
        return Optional.ofNullable(this.stateMachineType);
    }

    @Import(name="tags")
    private @Nullable Output<List<StateMachineTagsEntryArgs>> tags;

    public Optional<Output<List<StateMachineTagsEntryArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="tracingConfiguration")
    private @Nullable Output<StateMachineTracingConfigurationArgs> tracingConfiguration;

    public Optional<Output<StateMachineTracingConfigurationArgs>> tracingConfiguration() {
        return Optional.ofNullable(this.tracingConfiguration);
    }

    private StateMachineArgs() {}

    private StateMachineArgs(StateMachineArgs $) {
        this.definition = $.definition;
        this.definitionS3Location = $.definitionS3Location;
        this.definitionString = $.definitionString;
        this.definitionSubstitutions = $.definitionSubstitutions;
        this.loggingConfiguration = $.loggingConfiguration;
        this.roleArn = $.roleArn;
        this.stateMachineName = $.stateMachineName;
        this.stateMachineType = $.stateMachineType;
        this.tags = $.tags;
        this.tracingConfiguration = $.tracingConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StateMachineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StateMachineArgs $;

        public Builder() {
            $ = new StateMachineArgs();
        }

        public Builder(StateMachineArgs defaults) {
            $ = new StateMachineArgs(Objects.requireNonNull(defaults));
        }

        public Builder definition(@Nullable Output<StateMachineDefinitionArgs> definition) {
            $.definition = definition;
            return this;
        }

        public Builder definition(StateMachineDefinitionArgs definition) {
            return definition(Output.of(definition));
        }

        public Builder definitionS3Location(@Nullable Output<StateMachineS3LocationArgs> definitionS3Location) {
            $.definitionS3Location = definitionS3Location;
            return this;
        }

        public Builder definitionS3Location(StateMachineS3LocationArgs definitionS3Location) {
            return definitionS3Location(Output.of(definitionS3Location));
        }

        public Builder definitionString(@Nullable Output<String> definitionString) {
            $.definitionString = definitionString;
            return this;
        }

        public Builder definitionString(String definitionString) {
            return definitionString(Output.of(definitionString));
        }

        public Builder definitionSubstitutions(@Nullable Output<StateMachineDefinitionSubstitutionsArgs> definitionSubstitutions) {
            $.definitionSubstitutions = definitionSubstitutions;
            return this;
        }

        public Builder definitionSubstitutions(StateMachineDefinitionSubstitutionsArgs definitionSubstitutions) {
            return definitionSubstitutions(Output.of(definitionSubstitutions));
        }

        public Builder loggingConfiguration(@Nullable Output<StateMachineLoggingConfigurationArgs> loggingConfiguration) {
            $.loggingConfiguration = loggingConfiguration;
            return this;
        }

        public Builder loggingConfiguration(StateMachineLoggingConfigurationArgs loggingConfiguration) {
            return loggingConfiguration(Output.of(loggingConfiguration));
        }

        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder stateMachineName(@Nullable Output<String> stateMachineName) {
            $.stateMachineName = stateMachineName;
            return this;
        }

        public Builder stateMachineName(String stateMachineName) {
            return stateMachineName(Output.of(stateMachineName));
        }

        public Builder stateMachineType(@Nullable Output<StateMachineType> stateMachineType) {
            $.stateMachineType = stateMachineType;
            return this;
        }

        public Builder stateMachineType(StateMachineType stateMachineType) {
            return stateMachineType(Output.of(stateMachineType));
        }

        public Builder tags(@Nullable Output<List<StateMachineTagsEntryArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<StateMachineTagsEntryArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(StateMachineTagsEntryArgs... tags) {
            return tags(List.of(tags));
        }

        public Builder tracingConfiguration(@Nullable Output<StateMachineTracingConfigurationArgs> tracingConfiguration) {
            $.tracingConfiguration = tracingConfiguration;
            return this;
        }

        public Builder tracingConfiguration(StateMachineTracingConfigurationArgs tracingConfiguration) {
            return tracingConfiguration(Output.of(tracingConfiguration));
        }

        public StateMachineArgs build() {
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            return $;
        }
    }

}
