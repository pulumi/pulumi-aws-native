// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GatewayRouteTableAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayRouteTableAssociationArgs Empty = new GatewayRouteTableAssociationArgs();

    /**
     * The ID of the gateway.
     * 
     */
    @Import(name="gatewayId", required=true)
    private Output<String> gatewayId;

    /**
     * @return The ID of the gateway.
     * 
     */
    public Output<String> gatewayId() {
        return this.gatewayId;
    }

    /**
     * The ID of the route table.
     * 
     */
    @Import(name="routeTableId", required=true)
    private Output<String> routeTableId;

    /**
     * @return The ID of the route table.
     * 
     */
    public Output<String> routeTableId() {
        return this.routeTableId;
    }

    private GatewayRouteTableAssociationArgs() {}

    private GatewayRouteTableAssociationArgs(GatewayRouteTableAssociationArgs $) {
        this.gatewayId = $.gatewayId;
        this.routeTableId = $.routeTableId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayRouteTableAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayRouteTableAssociationArgs $;

        public Builder() {
            $ = new GatewayRouteTableAssociationArgs();
        }

        public Builder(GatewayRouteTableAssociationArgs defaults) {
            $ = new GatewayRouteTableAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gatewayId The ID of the gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayId(Output<String> gatewayId) {
            $.gatewayId = gatewayId;
            return this;
        }

        /**
         * @param gatewayId The ID of the gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayId(String gatewayId) {
            return gatewayId(Output.of(gatewayId));
        }

        /**
         * @param routeTableId The ID of the route table.
         * 
         * @return builder
         * 
         */
        public Builder routeTableId(Output<String> routeTableId) {
            $.routeTableId = routeTableId;
            return this;
        }

        /**
         * @param routeTableId The ID of the route table.
         * 
         * @return builder
         * 
         */
        public Builder routeTableId(String routeTableId) {
            return routeTableId(Output.of(routeTableId));
        }

        public GatewayRouteTableAssociationArgs build() {
            $.gatewayId = Objects.requireNonNull($.gatewayId, "expected parameter 'gatewayId' to be non-null");
            $.routeTableId = Objects.requireNonNull($.routeTableId, "expected parameter 'routeTableId' to be non-null");
            return $;
        }
    }

}
