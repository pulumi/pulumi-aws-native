// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.appflow.inputs;

import com.pulumi.awsnative.appflow.enums.FlowScheduledTriggerPropertiesDataPullMode;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Details required for scheduled trigger type
 * 
 */
public final class FlowScheduledTriggerPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlowScheduledTriggerPropertiesArgs Empty = new FlowScheduledTriggerPropertiesArgs();

    @Import(name="dataPullMode")
    private @Nullable Output<FlowScheduledTriggerPropertiesDataPullMode> dataPullMode;

    public Optional<Output<FlowScheduledTriggerPropertiesDataPullMode>> dataPullMode() {
        return Optional.ofNullable(this.dataPullMode);
    }

    @Import(name="scheduleEndTime")
    private @Nullable Output<Double> scheduleEndTime;

    public Optional<Output<Double>> scheduleEndTime() {
        return Optional.ofNullable(this.scheduleEndTime);
    }

    @Import(name="scheduleExpression", required=true)
    private Output<String> scheduleExpression;

    public Output<String> scheduleExpression() {
        return this.scheduleExpression;
    }

    @Import(name="scheduleOffset")
    private @Nullable Output<Double> scheduleOffset;

    public Optional<Output<Double>> scheduleOffset() {
        return Optional.ofNullable(this.scheduleOffset);
    }

    @Import(name="scheduleStartTime")
    private @Nullable Output<Double> scheduleStartTime;

    public Optional<Output<Double>> scheduleStartTime() {
        return Optional.ofNullable(this.scheduleStartTime);
    }

    @Import(name="timeZone")
    private @Nullable Output<String> timeZone;

    public Optional<Output<String>> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    private FlowScheduledTriggerPropertiesArgs() {}

    private FlowScheduledTriggerPropertiesArgs(FlowScheduledTriggerPropertiesArgs $) {
        this.dataPullMode = $.dataPullMode;
        this.scheduleEndTime = $.scheduleEndTime;
        this.scheduleExpression = $.scheduleExpression;
        this.scheduleOffset = $.scheduleOffset;
        this.scheduleStartTime = $.scheduleStartTime;
        this.timeZone = $.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowScheduledTriggerPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowScheduledTriggerPropertiesArgs $;

        public Builder() {
            $ = new FlowScheduledTriggerPropertiesArgs();
        }

        public Builder(FlowScheduledTriggerPropertiesArgs defaults) {
            $ = new FlowScheduledTriggerPropertiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder dataPullMode(@Nullable Output<FlowScheduledTriggerPropertiesDataPullMode> dataPullMode) {
            $.dataPullMode = dataPullMode;
            return this;
        }

        public Builder dataPullMode(FlowScheduledTriggerPropertiesDataPullMode dataPullMode) {
            return dataPullMode(Output.of(dataPullMode));
        }

        public Builder scheduleEndTime(@Nullable Output<Double> scheduleEndTime) {
            $.scheduleEndTime = scheduleEndTime;
            return this;
        }

        public Builder scheduleEndTime(Double scheduleEndTime) {
            return scheduleEndTime(Output.of(scheduleEndTime));
        }

        public Builder scheduleExpression(Output<String> scheduleExpression) {
            $.scheduleExpression = scheduleExpression;
            return this;
        }

        public Builder scheduleExpression(String scheduleExpression) {
            return scheduleExpression(Output.of(scheduleExpression));
        }

        public Builder scheduleOffset(@Nullable Output<Double> scheduleOffset) {
            $.scheduleOffset = scheduleOffset;
            return this;
        }

        public Builder scheduleOffset(Double scheduleOffset) {
            return scheduleOffset(Output.of(scheduleOffset));
        }

        public Builder scheduleStartTime(@Nullable Output<Double> scheduleStartTime) {
            $.scheduleStartTime = scheduleStartTime;
            return this;
        }

        public Builder scheduleStartTime(Double scheduleStartTime) {
            return scheduleStartTime(Output.of(scheduleStartTime));
        }

        public Builder timeZone(@Nullable Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        public FlowScheduledTriggerPropertiesArgs build() {
            $.scheduleExpression = Objects.requireNonNull($.scheduleExpression, "expected parameter 'scheduleExpression' to be non-null");
            return $;
        }
    }

}
