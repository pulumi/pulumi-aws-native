// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.connect;

import com.pulumi.awsnative.connect.inputs.QuickConnectConfigArgs;
import com.pulumi.awsnative.connect.inputs.QuickConnectTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QuickConnectArgs extends com.pulumi.resources.ResourceArgs {

    public static final QuickConnectArgs Empty = new QuickConnectArgs();

    /**
     * The description of the quick connect.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the quick connect.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The identifier of the Amazon Connect instance.
     * 
     */
    @Import(name="instanceArn", required=true)
    private Output<String> instanceArn;

    /**
     * @return The identifier of the Amazon Connect instance.
     * 
     */
    public Output<String> instanceArn() {
        return this.instanceArn;
    }

    /**
     * The name of the quick connect.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the quick connect.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Configuration settings for the quick connect.
     * 
     */
    @Import(name="quickConnectConfig", required=true)
    private Output<QuickConnectConfigArgs> quickConnectConfig;

    /**
     * @return Configuration settings for the quick connect.
     * 
     */
    public Output<QuickConnectConfigArgs> quickConnectConfig() {
        return this.quickConnectConfig;
    }

    /**
     * One or more tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<QuickConnectTagArgs>> tags;

    /**
     * @return One or more tags.
     * 
     */
    public Optional<Output<List<QuickConnectTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private QuickConnectArgs() {}

    private QuickConnectArgs(QuickConnectArgs $) {
        this.description = $.description;
        this.instanceArn = $.instanceArn;
        this.name = $.name;
        this.quickConnectConfig = $.quickConnectConfig;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QuickConnectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QuickConnectArgs $;

        public Builder() {
            $ = new QuickConnectArgs();
        }

        public Builder(QuickConnectArgs defaults) {
            $ = new QuickConnectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the quick connect.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the quick connect.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param instanceArn The identifier of the Amazon Connect instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceArn(Output<String> instanceArn) {
            $.instanceArn = instanceArn;
            return this;
        }

        /**
         * @param instanceArn The identifier of the Amazon Connect instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceArn(String instanceArn) {
            return instanceArn(Output.of(instanceArn));
        }

        /**
         * @param name The name of the quick connect.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the quick connect.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param quickConnectConfig Configuration settings for the quick connect.
         * 
         * @return builder
         * 
         */
        public Builder quickConnectConfig(Output<QuickConnectConfigArgs> quickConnectConfig) {
            $.quickConnectConfig = quickConnectConfig;
            return this;
        }

        /**
         * @param quickConnectConfig Configuration settings for the quick connect.
         * 
         * @return builder
         * 
         */
        public Builder quickConnectConfig(QuickConnectConfigArgs quickConnectConfig) {
            return quickConnectConfig(Output.of(quickConnectConfig));
        }

        /**
         * @param tags One or more tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<QuickConnectTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags One or more tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<QuickConnectTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags One or more tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(QuickConnectTagArgs... tags) {
            return tags(List.of(tags));
        }

        public QuickConnectArgs build() {
            $.instanceArn = Objects.requireNonNull($.instanceArn, "expected parameter 'instanceArn' to be non-null");
            $.quickConnectConfig = Objects.requireNonNull($.quickConnectConfig, "expected parameter 'quickConnectConfig' to be non-null");
            return $;
        }
    }

}
