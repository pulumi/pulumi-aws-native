// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.acmpca.outputs;

import com.pulumi.awsnative.acmpca.outputs.CertificateCustomExtension;
import com.pulumi.awsnative.acmpca.outputs.CertificateExtendedKeyUsage;
import com.pulumi.awsnative.acmpca.outputs.CertificateGeneralName;
import com.pulumi.awsnative.acmpca.outputs.CertificateKeyUsage;
import com.pulumi.awsnative.acmpca.outputs.CertificatePolicyInformation;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CertificateExtensions {
    private @Nullable List<CertificatePolicyInformation> certificatePolicies;
    private @Nullable List<CertificateCustomExtension> customExtensions;
    private @Nullable List<CertificateExtendedKeyUsage> extendedKeyUsage;
    private @Nullable CertificateKeyUsage keyUsage;
    private @Nullable List<CertificateGeneralName> subjectAlternativeNames;

    private CertificateExtensions() {}
    public List<CertificatePolicyInformation> certificatePolicies() {
        return this.certificatePolicies == null ? List.of() : this.certificatePolicies;
    }
    public List<CertificateCustomExtension> customExtensions() {
        return this.customExtensions == null ? List.of() : this.customExtensions;
    }
    public List<CertificateExtendedKeyUsage> extendedKeyUsage() {
        return this.extendedKeyUsage == null ? List.of() : this.extendedKeyUsage;
    }
    public Optional<CertificateKeyUsage> keyUsage() {
        return Optional.ofNullable(this.keyUsage);
    }
    public List<CertificateGeneralName> subjectAlternativeNames() {
        return this.subjectAlternativeNames == null ? List.of() : this.subjectAlternativeNames;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateExtensions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<CertificatePolicyInformation> certificatePolicies;
        private @Nullable List<CertificateCustomExtension> customExtensions;
        private @Nullable List<CertificateExtendedKeyUsage> extendedKeyUsage;
        private @Nullable CertificateKeyUsage keyUsage;
        private @Nullable List<CertificateGeneralName> subjectAlternativeNames;
        public Builder() {}
        public Builder(CertificateExtensions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificatePolicies = defaults.certificatePolicies;
    	      this.customExtensions = defaults.customExtensions;
    	      this.extendedKeyUsage = defaults.extendedKeyUsage;
    	      this.keyUsage = defaults.keyUsage;
    	      this.subjectAlternativeNames = defaults.subjectAlternativeNames;
        }

        @CustomType.Setter
        public Builder certificatePolicies(@Nullable List<CertificatePolicyInformation> certificatePolicies) {
            this.certificatePolicies = certificatePolicies;
            return this;
        }
        public Builder certificatePolicies(CertificatePolicyInformation... certificatePolicies) {
            return certificatePolicies(List.of(certificatePolicies));
        }
        @CustomType.Setter
        public Builder customExtensions(@Nullable List<CertificateCustomExtension> customExtensions) {
            this.customExtensions = customExtensions;
            return this;
        }
        public Builder customExtensions(CertificateCustomExtension... customExtensions) {
            return customExtensions(List.of(customExtensions));
        }
        @CustomType.Setter
        public Builder extendedKeyUsage(@Nullable List<CertificateExtendedKeyUsage> extendedKeyUsage) {
            this.extendedKeyUsage = extendedKeyUsage;
            return this;
        }
        public Builder extendedKeyUsage(CertificateExtendedKeyUsage... extendedKeyUsage) {
            return extendedKeyUsage(List.of(extendedKeyUsage));
        }
        @CustomType.Setter
        public Builder keyUsage(@Nullable CertificateKeyUsage keyUsage) {
            this.keyUsage = keyUsage;
            return this;
        }
        @CustomType.Setter
        public Builder subjectAlternativeNames(@Nullable List<CertificateGeneralName> subjectAlternativeNames) {
            this.subjectAlternativeNames = subjectAlternativeNames;
            return this;
        }
        public Builder subjectAlternativeNames(CertificateGeneralName... subjectAlternativeNames) {
            return subjectAlternativeNames(List.of(subjectAlternativeNames));
        }
        public CertificateExtensions build() {
            final var o = new CertificateExtensions();
            o.certificatePolicies = certificatePolicies;
            o.customExtensions = customExtensions;
            o.extendedKeyUsage = extendedKeyUsage;
            o.keyUsage = keyUsage;
            o.subjectAlternativeNames = subjectAlternativeNames;
            return o;
        }
    }
}
