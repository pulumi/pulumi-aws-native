// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.connect;

import com.pulumi.awsnative.connect.inputs.PhoneNumberTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PhoneNumberArgs extends com.pulumi.resources.ResourceArgs {

    public static final PhoneNumberArgs Empty = new PhoneNumberArgs();

    /**
     * The phone number country code.
     * 
     */
    @Import(name="countryCode", required=true)
    private Output<String> countryCode;

    /**
     * @return The phone number country code.
     * 
     */
    public Output<String> countryCode() {
        return this.countryCode;
    }

    /**
     * The description of the phone number.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the phone number.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The phone number prefix.
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    /**
     * @return The phone number prefix.
     * 
     */
    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * One or more tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<PhoneNumberTagArgs>> tags;

    /**
     * @return One or more tags.
     * 
     */
    public Optional<Output<List<PhoneNumberTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The ARN of the Amazon Connect instance the phone number is claimed to.
     * 
     */
    @Import(name="targetArn", required=true)
    private Output<String> targetArn;

    /**
     * @return The ARN of the Amazon Connect instance the phone number is claimed to.
     * 
     */
    public Output<String> targetArn() {
        return this.targetArn;
    }

    /**
     * The phone number type, either TOLL_FREE or DID.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The phone number type, either TOLL_FREE or DID.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private PhoneNumberArgs() {}

    private PhoneNumberArgs(PhoneNumberArgs $) {
        this.countryCode = $.countryCode;
        this.description = $.description;
        this.prefix = $.prefix;
        this.tags = $.tags;
        this.targetArn = $.targetArn;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PhoneNumberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PhoneNumberArgs $;

        public Builder() {
            $ = new PhoneNumberArgs();
        }

        public Builder(PhoneNumberArgs defaults) {
            $ = new PhoneNumberArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param countryCode The phone number country code.
         * 
         * @return builder
         * 
         */
        public Builder countryCode(Output<String> countryCode) {
            $.countryCode = countryCode;
            return this;
        }

        /**
         * @param countryCode The phone number country code.
         * 
         * @return builder
         * 
         */
        public Builder countryCode(String countryCode) {
            return countryCode(Output.of(countryCode));
        }

        /**
         * @param description The description of the phone number.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the phone number.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param prefix The phone number prefix.
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix The phone number prefix.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param tags One or more tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<PhoneNumberTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags One or more tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<PhoneNumberTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags One or more tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(PhoneNumberTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param targetArn The ARN of the Amazon Connect instance the phone number is claimed to.
         * 
         * @return builder
         * 
         */
        public Builder targetArn(Output<String> targetArn) {
            $.targetArn = targetArn;
            return this;
        }

        /**
         * @param targetArn The ARN of the Amazon Connect instance the phone number is claimed to.
         * 
         * @return builder
         * 
         */
        public Builder targetArn(String targetArn) {
            return targetArn(Output.of(targetArn));
        }

        /**
         * @param type The phone number type, either TOLL_FREE or DID.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The phone number type, either TOLL_FREE or DID.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public PhoneNumberArgs build() {
            $.countryCode = Objects.requireNonNull($.countryCode, "expected parameter 'countryCode' to be non-null");
            $.targetArn = Objects.requireNonNull($.targetArn, "expected parameter 'targetArn' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
