// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.inputs;

import com.pulumi.awsnative.sagemaker.enums.MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatus;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Summary of information about monitoring job
 * 
 */
public final class MonitoringScheduleMonitoringExecutionSummaryArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitoringScheduleMonitoringExecutionSummaryArgs Empty = new MonitoringScheduleMonitoringExecutionSummaryArgs();

    /**
     * The time at which the monitoring job was created.
     * 
     */
    @Import(name="creationTime", required=true)
    private Output<String> creationTime;

    /**
     * @return The time at which the monitoring job was created.
     * 
     */
    public Output<String> creationTime() {
        return this.creationTime;
    }

    @Import(name="endpointName")
    private @Nullable Output<String> endpointName;

    public Optional<Output<String>> endpointName() {
        return Optional.ofNullable(this.endpointName);
    }

    /**
     * Contains the reason a monitoring job failed, if it failed.
     * 
     */
    @Import(name="failureReason")
    private @Nullable Output<String> failureReason;

    /**
     * @return Contains the reason a monitoring job failed, if it failed.
     * 
     */
    public Optional<Output<String>> failureReason() {
        return Optional.ofNullable(this.failureReason);
    }

    /**
     * A timestamp that indicates the last time the monitoring job was modified.
     * 
     */
    @Import(name="lastModifiedTime", required=true)
    private Output<String> lastModifiedTime;

    /**
     * @return A timestamp that indicates the last time the monitoring job was modified.
     * 
     */
    public Output<String> lastModifiedTime() {
        return this.lastModifiedTime;
    }

    /**
     * The status of the monitoring job.
     * 
     */
    @Import(name="monitoringExecutionStatus", required=true)
    private Output<MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatus> monitoringExecutionStatus;

    /**
     * @return The status of the monitoring job.
     * 
     */
    public Output<MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatus> monitoringExecutionStatus() {
        return this.monitoringExecutionStatus;
    }

    @Import(name="monitoringScheduleName", required=true)
    private Output<String> monitoringScheduleName;

    public Output<String> monitoringScheduleName() {
        return this.monitoringScheduleName;
    }

    /**
     * The Amazon Resource Name (ARN) of the monitoring job.
     * 
     */
    @Import(name="processingJobArn")
    private @Nullable Output<String> processingJobArn;

    /**
     * @return The Amazon Resource Name (ARN) of the monitoring job.
     * 
     */
    public Optional<Output<String>> processingJobArn() {
        return Optional.ofNullable(this.processingJobArn);
    }

    /**
     * The time the monitoring job was scheduled.
     * 
     */
    @Import(name="scheduledTime", required=true)
    private Output<String> scheduledTime;

    /**
     * @return The time the monitoring job was scheduled.
     * 
     */
    public Output<String> scheduledTime() {
        return this.scheduledTime;
    }

    private MonitoringScheduleMonitoringExecutionSummaryArgs() {}

    private MonitoringScheduleMonitoringExecutionSummaryArgs(MonitoringScheduleMonitoringExecutionSummaryArgs $) {
        this.creationTime = $.creationTime;
        this.endpointName = $.endpointName;
        this.failureReason = $.failureReason;
        this.lastModifiedTime = $.lastModifiedTime;
        this.monitoringExecutionStatus = $.monitoringExecutionStatus;
        this.monitoringScheduleName = $.monitoringScheduleName;
        this.processingJobArn = $.processingJobArn;
        this.scheduledTime = $.scheduledTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitoringScheduleMonitoringExecutionSummaryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoringScheduleMonitoringExecutionSummaryArgs $;

        public Builder() {
            $ = new MonitoringScheduleMonitoringExecutionSummaryArgs();
        }

        public Builder(MonitoringScheduleMonitoringExecutionSummaryArgs defaults) {
            $ = new MonitoringScheduleMonitoringExecutionSummaryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param creationTime The time at which the monitoring job was created.
         * 
         * @return builder
         * 
         */
        public Builder creationTime(Output<String> creationTime) {
            $.creationTime = creationTime;
            return this;
        }

        /**
         * @param creationTime The time at which the monitoring job was created.
         * 
         * @return builder
         * 
         */
        public Builder creationTime(String creationTime) {
            return creationTime(Output.of(creationTime));
        }

        public Builder endpointName(@Nullable Output<String> endpointName) {
            $.endpointName = endpointName;
            return this;
        }

        public Builder endpointName(String endpointName) {
            return endpointName(Output.of(endpointName));
        }

        /**
         * @param failureReason Contains the reason a monitoring job failed, if it failed.
         * 
         * @return builder
         * 
         */
        public Builder failureReason(@Nullable Output<String> failureReason) {
            $.failureReason = failureReason;
            return this;
        }

        /**
         * @param failureReason Contains the reason a monitoring job failed, if it failed.
         * 
         * @return builder
         * 
         */
        public Builder failureReason(String failureReason) {
            return failureReason(Output.of(failureReason));
        }

        /**
         * @param lastModifiedTime A timestamp that indicates the last time the monitoring job was modified.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedTime(Output<String> lastModifiedTime) {
            $.lastModifiedTime = lastModifiedTime;
            return this;
        }

        /**
         * @param lastModifiedTime A timestamp that indicates the last time the monitoring job was modified.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedTime(String lastModifiedTime) {
            return lastModifiedTime(Output.of(lastModifiedTime));
        }

        /**
         * @param monitoringExecutionStatus The status of the monitoring job.
         * 
         * @return builder
         * 
         */
        public Builder monitoringExecutionStatus(Output<MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatus> monitoringExecutionStatus) {
            $.monitoringExecutionStatus = monitoringExecutionStatus;
            return this;
        }

        /**
         * @param monitoringExecutionStatus The status of the monitoring job.
         * 
         * @return builder
         * 
         */
        public Builder monitoringExecutionStatus(MonitoringScheduleMonitoringExecutionSummaryMonitoringExecutionStatus monitoringExecutionStatus) {
            return monitoringExecutionStatus(Output.of(monitoringExecutionStatus));
        }

        public Builder monitoringScheduleName(Output<String> monitoringScheduleName) {
            $.monitoringScheduleName = monitoringScheduleName;
            return this;
        }

        public Builder monitoringScheduleName(String monitoringScheduleName) {
            return monitoringScheduleName(Output.of(monitoringScheduleName));
        }

        /**
         * @param processingJobArn The Amazon Resource Name (ARN) of the monitoring job.
         * 
         * @return builder
         * 
         */
        public Builder processingJobArn(@Nullable Output<String> processingJobArn) {
            $.processingJobArn = processingJobArn;
            return this;
        }

        /**
         * @param processingJobArn The Amazon Resource Name (ARN) of the monitoring job.
         * 
         * @return builder
         * 
         */
        public Builder processingJobArn(String processingJobArn) {
            return processingJobArn(Output.of(processingJobArn));
        }

        /**
         * @param scheduledTime The time the monitoring job was scheduled.
         * 
         * @return builder
         * 
         */
        public Builder scheduledTime(Output<String> scheduledTime) {
            $.scheduledTime = scheduledTime;
            return this;
        }

        /**
         * @param scheduledTime The time the monitoring job was scheduled.
         * 
         * @return builder
         * 
         */
        public Builder scheduledTime(String scheduledTime) {
            return scheduledTime(Output.of(scheduledTime));
        }

        public MonitoringScheduleMonitoringExecutionSummaryArgs build() {
            $.creationTime = Objects.requireNonNull($.creationTime, "expected parameter 'creationTime' to be non-null");
            $.lastModifiedTime = Objects.requireNonNull($.lastModifiedTime, "expected parameter 'lastModifiedTime' to be non-null");
            $.monitoringExecutionStatus = Objects.requireNonNull($.monitoringExecutionStatus, "expected parameter 'monitoringExecutionStatus' to be non-null");
            $.monitoringScheduleName = Objects.requireNonNull($.monitoringScheduleName, "expected parameter 'monitoringScheduleName' to be non-null");
            $.scheduledTime = Objects.requireNonNull($.scheduledTime, "expected parameter 'scheduledTime' to be non-null");
            return $;
        }
    }

}
