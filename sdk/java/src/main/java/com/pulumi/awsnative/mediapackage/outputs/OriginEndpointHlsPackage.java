// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.mediapackage.outputs;

import com.pulumi.awsnative.mediapackage.enums.OriginEndpointAdsOnDeliveryRestrictions;
import com.pulumi.awsnative.mediapackage.enums.OriginEndpointHlsPackageAdMarkers;
import com.pulumi.awsnative.mediapackage.enums.OriginEndpointHlsPackageAdTriggersItem;
import com.pulumi.awsnative.mediapackage.enums.OriginEndpointHlsPackagePlaylistType;
import com.pulumi.awsnative.mediapackage.outputs.OriginEndpointHlsEncryption;
import com.pulumi.awsnative.mediapackage.outputs.OriginEndpointStreamSelection;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OriginEndpointHlsPackage {
    /**
     * @return This setting controls how ad markers are included in the packaged OriginEndpoint. &#34;NONE&#34; will omit all SCTE-35 ad markers from the output. &#34;PASSTHROUGH&#34; causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. &#34;SCTE35_ENHANCED&#34; generates ad markers and blackout tags based on SCTE-35 messages in the input source. &#34;DATERANGE&#34; inserts EXT-X-DATERANGE tags to signal ad and program transition events in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value that is greater than 0.
     * 
     */
    private @Nullable OriginEndpointHlsPackageAdMarkers adMarkers;
    /**
     * @return A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
     * 
     */
    private @Nullable List<OriginEndpointHlsPackageAdTriggersItem> adTriggers;
    private @Nullable OriginEndpointAdsOnDeliveryRestrictions adsOnDeliveryRestrictions;
    private @Nullable OriginEndpointHlsEncryption encryption;
    /**
     * @return When enabled, an I-Frame only stream will be included in the output.
     * 
     */
    private @Nullable Boolean includeIframeOnlyStream;
    /**
     * @return The HTTP Live Streaming (HLS) playlist type. When either &#34;EVENT&#34; or &#34;VOD&#34; is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will be included in the media playlist.
     * 
     */
    private @Nullable OriginEndpointHlsPackagePlaylistType playlistType;
    /**
     * @return Time window (in seconds) contained in each parent manifest.
     * 
     */
    private @Nullable Integer playlistWindowSeconds;
    /**
     * @return The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output.
     * 
     */
    private @Nullable Integer programDateTimeIntervalSeconds;
    /**
     * @return Duration (in seconds) of each fragment. Actual fragments will be rounded to the nearest multiple of the source fragment duration.
     * 
     */
    private @Nullable Integer segmentDurationSeconds;
    private @Nullable OriginEndpointStreamSelection streamSelection;
    /**
     * @return When enabled, audio streams will be placed in rendition groups in the output.
     * 
     */
    private @Nullable Boolean useAudioRenditionGroup;

    private OriginEndpointHlsPackage() {}
    /**
     * @return This setting controls how ad markers are included in the packaged OriginEndpoint. &#34;NONE&#34; will omit all SCTE-35 ad markers from the output. &#34;PASSTHROUGH&#34; causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. &#34;SCTE35_ENHANCED&#34; generates ad markers and blackout tags based on SCTE-35 messages in the input source. &#34;DATERANGE&#34; inserts EXT-X-DATERANGE tags to signal ad and program transition events in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value that is greater than 0.
     * 
     */
    public Optional<OriginEndpointHlsPackageAdMarkers> adMarkers() {
        return Optional.ofNullable(this.adMarkers);
    }
    /**
     * @return A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no ad markers are output.  Specify multiple items to create ad markers for all of the included message types.
     * 
     */
    public List<OriginEndpointHlsPackageAdTriggersItem> adTriggers() {
        return this.adTriggers == null ? List.of() : this.adTriggers;
    }
    public Optional<OriginEndpointAdsOnDeliveryRestrictions> adsOnDeliveryRestrictions() {
        return Optional.ofNullable(this.adsOnDeliveryRestrictions);
    }
    public Optional<OriginEndpointHlsEncryption> encryption() {
        return Optional.ofNullable(this.encryption);
    }
    /**
     * @return When enabled, an I-Frame only stream will be included in the output.
     * 
     */
    public Optional<Boolean> includeIframeOnlyStream() {
        return Optional.ofNullable(this.includeIframeOnlyStream);
    }
    /**
     * @return The HTTP Live Streaming (HLS) playlist type. When either &#34;EVENT&#34; or &#34;VOD&#34; is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will be included in the media playlist.
     * 
     */
    public Optional<OriginEndpointHlsPackagePlaylistType> playlistType() {
        return Optional.ofNullable(this.playlistType);
    }
    /**
     * @return Time window (in seconds) contained in each parent manifest.
     * 
     */
    public Optional<Integer> playlistWindowSeconds() {
        return Optional.ofNullable(this.playlistWindowSeconds);
    }
    /**
     * @return The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output.
     * 
     */
    public Optional<Integer> programDateTimeIntervalSeconds() {
        return Optional.ofNullable(this.programDateTimeIntervalSeconds);
    }
    /**
     * @return Duration (in seconds) of each fragment. Actual fragments will be rounded to the nearest multiple of the source fragment duration.
     * 
     */
    public Optional<Integer> segmentDurationSeconds() {
        return Optional.ofNullable(this.segmentDurationSeconds);
    }
    public Optional<OriginEndpointStreamSelection> streamSelection() {
        return Optional.ofNullable(this.streamSelection);
    }
    /**
     * @return When enabled, audio streams will be placed in rendition groups in the output.
     * 
     */
    public Optional<Boolean> useAudioRenditionGroup() {
        return Optional.ofNullable(this.useAudioRenditionGroup);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OriginEndpointHlsPackage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable OriginEndpointHlsPackageAdMarkers adMarkers;
        private @Nullable List<OriginEndpointHlsPackageAdTriggersItem> adTriggers;
        private @Nullable OriginEndpointAdsOnDeliveryRestrictions adsOnDeliveryRestrictions;
        private @Nullable OriginEndpointHlsEncryption encryption;
        private @Nullable Boolean includeIframeOnlyStream;
        private @Nullable OriginEndpointHlsPackagePlaylistType playlistType;
        private @Nullable Integer playlistWindowSeconds;
        private @Nullable Integer programDateTimeIntervalSeconds;
        private @Nullable Integer segmentDurationSeconds;
        private @Nullable OriginEndpointStreamSelection streamSelection;
        private @Nullable Boolean useAudioRenditionGroup;
        public Builder() {}
        public Builder(OriginEndpointHlsPackage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adMarkers = defaults.adMarkers;
    	      this.adTriggers = defaults.adTriggers;
    	      this.adsOnDeliveryRestrictions = defaults.adsOnDeliveryRestrictions;
    	      this.encryption = defaults.encryption;
    	      this.includeIframeOnlyStream = defaults.includeIframeOnlyStream;
    	      this.playlistType = defaults.playlistType;
    	      this.playlistWindowSeconds = defaults.playlistWindowSeconds;
    	      this.programDateTimeIntervalSeconds = defaults.programDateTimeIntervalSeconds;
    	      this.segmentDurationSeconds = defaults.segmentDurationSeconds;
    	      this.streamSelection = defaults.streamSelection;
    	      this.useAudioRenditionGroup = defaults.useAudioRenditionGroup;
        }

        @CustomType.Setter
        public Builder adMarkers(@Nullable OriginEndpointHlsPackageAdMarkers adMarkers) {
            this.adMarkers = adMarkers;
            return this;
        }
        @CustomType.Setter
        public Builder adTriggers(@Nullable List<OriginEndpointHlsPackageAdTriggersItem> adTriggers) {
            this.adTriggers = adTriggers;
            return this;
        }
        public Builder adTriggers(OriginEndpointHlsPackageAdTriggersItem... adTriggers) {
            return adTriggers(List.of(adTriggers));
        }
        @CustomType.Setter
        public Builder adsOnDeliveryRestrictions(@Nullable OriginEndpointAdsOnDeliveryRestrictions adsOnDeliveryRestrictions) {
            this.adsOnDeliveryRestrictions = adsOnDeliveryRestrictions;
            return this;
        }
        @CustomType.Setter
        public Builder encryption(@Nullable OriginEndpointHlsEncryption encryption) {
            this.encryption = encryption;
            return this;
        }
        @CustomType.Setter
        public Builder includeIframeOnlyStream(@Nullable Boolean includeIframeOnlyStream) {
            this.includeIframeOnlyStream = includeIframeOnlyStream;
            return this;
        }
        @CustomType.Setter
        public Builder playlistType(@Nullable OriginEndpointHlsPackagePlaylistType playlistType) {
            this.playlistType = playlistType;
            return this;
        }
        @CustomType.Setter
        public Builder playlistWindowSeconds(@Nullable Integer playlistWindowSeconds) {
            this.playlistWindowSeconds = playlistWindowSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder programDateTimeIntervalSeconds(@Nullable Integer programDateTimeIntervalSeconds) {
            this.programDateTimeIntervalSeconds = programDateTimeIntervalSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder segmentDurationSeconds(@Nullable Integer segmentDurationSeconds) {
            this.segmentDurationSeconds = segmentDurationSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder streamSelection(@Nullable OriginEndpointStreamSelection streamSelection) {
            this.streamSelection = streamSelection;
            return this;
        }
        @CustomType.Setter
        public Builder useAudioRenditionGroup(@Nullable Boolean useAudioRenditionGroup) {
            this.useAudioRenditionGroup = useAudioRenditionGroup;
            return this;
        }
        public OriginEndpointHlsPackage build() {
            final var o = new OriginEndpointHlsPackage();
            o.adMarkers = adMarkers;
            o.adTriggers = adTriggers;
            o.adsOnDeliveryRestrictions = adsOnDeliveryRestrictions;
            o.encryption = encryption;
            o.includeIframeOnlyStream = includeIframeOnlyStream;
            o.playlistType = playlistType;
            o.playlistWindowSeconds = playlistWindowSeconds;
            o.programDateTimeIntervalSeconds = programDateTimeIntervalSeconds;
            o.segmentDurationSeconds = segmentDurationSeconds;
            o.streamSelection = streamSelection;
            o.useAudioRenditionGroup = useAudioRenditionGroup;
            return o;
        }
    }
}
