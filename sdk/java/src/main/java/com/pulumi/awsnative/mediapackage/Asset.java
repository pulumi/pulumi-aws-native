// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.mediapackage;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.mediapackage.AssetArgs;
import com.pulumi.awsnative.mediapackage.outputs.AssetEgressEndpoint;
import com.pulumi.awsnative.mediapackage.outputs.AssetTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource schema for AWS::MediaPackage::Asset
 * 
 */
@ResourceType(type="aws-native:mediapackage:Asset")
public class Asset extends com.pulumi.resources.CustomResource {
    /**
     * The ARN of the Asset.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The ARN of the Asset.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * The time the Asset was initially submitted for Ingest.
     * 
     */
    @Export(name="createdAt", type=String.class, parameters={})
    private Output<String> createdAt;

    /**
     * @return The time the Asset was initially submitted for Ingest.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * The list of egress endpoints available for the Asset.
     * 
     */
    @Export(name="egressEndpoints", type=List.class, parameters={AssetEgressEndpoint.class})
    private Output<List<AssetEgressEndpoint>> egressEndpoints;

    /**
     * @return The list of egress endpoints available for the Asset.
     * 
     */
    public Output<List<AssetEgressEndpoint>> egressEndpoints() {
        return this.egressEndpoints;
    }
    /**
     * The ID of the PackagingGroup for the Asset.
     * 
     */
    @Export(name="packagingGroupId", type=String.class, parameters={})
    private Output<String> packagingGroupId;

    /**
     * @return The ID of the PackagingGroup for the Asset.
     * 
     */
    public Output<String> packagingGroupId() {
        return this.packagingGroupId;
    }
    /**
     * The resource ID to include in SPEKE key requests.
     * 
     */
    @Export(name="resourceId", type=String.class, parameters={})
    private Output</* @Nullable */ String> resourceId;

    /**
     * @return The resource ID to include in SPEKE key requests.
     * 
     */
    public Output<Optional<String>> resourceId() {
        return Codegen.optional(this.resourceId);
    }
    /**
     * ARN of the source object in S3.
     * 
     */
    @Export(name="sourceArn", type=String.class, parameters={})
    private Output<String> sourceArn;

    /**
     * @return ARN of the source object in S3.
     * 
     */
    public Output<String> sourceArn() {
        return this.sourceArn;
    }
    /**
     * The IAM role_arn used to access the source S3 bucket.
     * 
     */
    @Export(name="sourceRoleArn", type=String.class, parameters={})
    private Output<String> sourceRoleArn;

    /**
     * @return The IAM role_arn used to access the source S3 bucket.
     * 
     */
    public Output<String> sourceRoleArn() {
        return this.sourceRoleArn;
    }
    /**
     * A collection of tags associated with a resource
     * 
     */
    @Export(name="tags", type=List.class, parameters={AssetTag.class})
    private Output</* @Nullable */ List<AssetTag>> tags;

    /**
     * @return A collection of tags associated with a resource
     * 
     */
    public Output<Optional<List<AssetTag>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Asset(String name) {
        this(name, AssetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Asset(String name, AssetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Asset(String name, AssetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:mediapackage:Asset", name, args == null ? AssetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Asset(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:mediapackage:Asset", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Asset get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Asset(name, id, options);
    }
}
