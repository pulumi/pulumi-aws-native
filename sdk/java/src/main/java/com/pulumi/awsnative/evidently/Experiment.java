// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.evidently;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.evidently.ExperimentArgs;
import com.pulumi.awsnative.evidently.outputs.ExperimentMetricGoalObject;
import com.pulumi.awsnative.evidently.outputs.ExperimentOnlineAbConfigObject;
import com.pulumi.awsnative.evidently.outputs.ExperimentRunningStatusObject;
import com.pulumi.awsnative.evidently.outputs.ExperimentTag;
import com.pulumi.awsnative.evidently.outputs.ExperimentTreatmentObject;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource Type definition for AWS::Evidently::Experiment.
 * 
 */
@ResourceType(type="aws-native:evidently:Experiment")
public class Experiment extends com.pulumi.resources.CustomResource {
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="metricGoals", type=List.class, parameters={ExperimentMetricGoalObject.class})
    private Output<List<ExperimentMetricGoalObject>> metricGoals;

    public Output<List<ExperimentMetricGoalObject>> metricGoals() {
        return this.metricGoals;
    }
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="onlineAbConfig", type=ExperimentOnlineAbConfigObject.class, parameters={})
    private Output<ExperimentOnlineAbConfigObject> onlineAbConfig;

    public Output<ExperimentOnlineAbConfigObject> onlineAbConfig() {
        return this.onlineAbConfig;
    }
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    @Export(name="randomizationSalt", type=String.class, parameters={})
    private Output</* @Nullable */ String> randomizationSalt;

    public Output<Optional<String>> randomizationSalt() {
        return Codegen.optional(this.randomizationSalt);
    }
    /**
     * Start Experiment. Default is False
     * 
     */
    @Export(name="runningStatus", type=ExperimentRunningStatusObject.class, parameters={})
    private Output</* @Nullable */ ExperimentRunningStatusObject> runningStatus;

    /**
     * @return Start Experiment. Default is False
     * 
     */
    public Output<Optional<ExperimentRunningStatusObject>> runningStatus() {
        return Codegen.optional(this.runningStatus);
    }
    @Export(name="samplingRate", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> samplingRate;

    public Output<Optional<Integer>> samplingRate() {
        return Codegen.optional(this.samplingRate);
    }
    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Export(name="tags", type=List.class, parameters={ExperimentTag.class})
    private Output</* @Nullable */ List<ExperimentTag>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public Output<Optional<List<ExperimentTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="treatments", type=List.class, parameters={ExperimentTreatmentObject.class})
    private Output<List<ExperimentTreatmentObject>> treatments;

    public Output<List<ExperimentTreatmentObject>> treatments() {
        return this.treatments;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Experiment(String name) {
        this(name, ExperimentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Experiment(String name, ExperimentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Experiment(String name, ExperimentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:evidently:Experiment", name, args == null ? ExperimentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Experiment(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:evidently:Experiment", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Experiment get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Experiment(name, id, options);
    }
}
