// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.rds;

import com.pulumi.awsnative.rds.inputs.DBSubnetGroupTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DBSubnetGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final DBSubnetGroupArgs Empty = new DBSubnetGroupArgs();

    @Import(name="dBSubnetGroupDescription", required=true)
    private Output<String> dBSubnetGroupDescription;

    public Output<String> dBSubnetGroupDescription() {
        return this.dBSubnetGroupDescription;
    }

    @Import(name="dBSubnetGroupName")
    private @Nullable Output<String> dBSubnetGroupName;

    public Optional<Output<String>> dBSubnetGroupName() {
        return Optional.ofNullable(this.dBSubnetGroupName);
    }

    @Import(name="subnetIds", required=true)
    private Output<List<String>> subnetIds;

    public Output<List<String>> subnetIds() {
        return this.subnetIds;
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<DBSubnetGroupTagArgs>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public Optional<Output<List<DBSubnetGroupTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DBSubnetGroupArgs() {}

    private DBSubnetGroupArgs(DBSubnetGroupArgs $) {
        this.dBSubnetGroupDescription = $.dBSubnetGroupDescription;
        this.dBSubnetGroupName = $.dBSubnetGroupName;
        this.subnetIds = $.subnetIds;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DBSubnetGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DBSubnetGroupArgs $;

        public Builder() {
            $ = new DBSubnetGroupArgs();
        }

        public Builder(DBSubnetGroupArgs defaults) {
            $ = new DBSubnetGroupArgs(Objects.requireNonNull(defaults));
        }

        public Builder dBSubnetGroupDescription(Output<String> dBSubnetGroupDescription) {
            $.dBSubnetGroupDescription = dBSubnetGroupDescription;
            return this;
        }

        public Builder dBSubnetGroupDescription(String dBSubnetGroupDescription) {
            return dBSubnetGroupDescription(Output.of(dBSubnetGroupDescription));
        }

        public Builder dBSubnetGroupName(@Nullable Output<String> dBSubnetGroupName) {
            $.dBSubnetGroupName = dBSubnetGroupName;
            return this;
        }

        public Builder dBSubnetGroupName(String dBSubnetGroupName) {
            return dBSubnetGroupName(Output.of(dBSubnetGroupName));
        }

        public Builder subnetIds(Output<List<String>> subnetIds) {
            $.subnetIds = subnetIds;
            return this;
        }

        public Builder subnetIds(List<String> subnetIds) {
            return subnetIds(Output.of(subnetIds));
        }

        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<DBSubnetGroupTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<DBSubnetGroupTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(DBSubnetGroupTagArgs... tags) {
            return tags(List.of(tags));
        }

        public DBSubnetGroupArgs build() {
            $.dBSubnetGroupDescription = Objects.requireNonNull($.dBSubnetGroupDescription, "expected parameter 'dBSubnetGroupDescription' to be non-null");
            $.subnetIds = Objects.requireNonNull($.subnetIds, "expected parameter 'subnetIds' to be non-null");
            return $;
        }
    }

}
