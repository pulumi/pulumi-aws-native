// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.imagebuilder;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.imagebuilder.ImagePipelineArgs;
import com.pulumi.awsnative.imagebuilder.enums.ImagePipelineStatus;
import com.pulumi.awsnative.imagebuilder.outputs.ImagePipelineImageTestsConfiguration;
import com.pulumi.awsnative.imagebuilder.outputs.ImagePipelineSchedule;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource schema for AWS::ImageBuilder::ImagePipeline
 * 
 */
@ResourceType(type="aws-native:imagebuilder:ImagePipeline")
public class ImagePipeline extends com.pulumi.resources.CustomResource {
    /**
     * The Amazon Resource Name (ARN) of the image pipeline.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) of the image pipeline.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.
     * 
     */
    @Export(name="containerRecipeArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> containerRecipeArn;

    /**
     * @return The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.
     * 
     */
    public Output<Optional<String>> containerRecipeArn() {
        return Codegen.optional(this.containerRecipeArn);
    }
    /**
     * The description of the image pipeline.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the image pipeline.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The Amazon Resource Name (ARN) of the distribution configuration associated with this image pipeline.
     * 
     */
    @Export(name="distributionConfigurationArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> distributionConfigurationArn;

    /**
     * @return The Amazon Resource Name (ARN) of the distribution configuration associated with this image pipeline.
     * 
     */
    public Output<Optional<String>> distributionConfigurationArn() {
        return Codegen.optional(this.distributionConfigurationArn);
    }
    /**
     * Collects additional information about the image being created, including the operating system (OS) version and package list.
     * 
     */
    @Export(name="enhancedImageMetadataEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enhancedImageMetadataEnabled;

    /**
     * @return Collects additional information about the image being created, including the operating system (OS) version and package list.
     * 
     */
    public Output<Optional<Boolean>> enhancedImageMetadataEnabled() {
        return Codegen.optional(this.enhancedImageMetadataEnabled);
    }
    /**
     * The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.
     * 
     */
    @Export(name="imageRecipeArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> imageRecipeArn;

    /**
     * @return The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.
     * 
     */
    public Output<Optional<String>> imageRecipeArn() {
        return Codegen.optional(this.imageRecipeArn);
    }
    /**
     * The image tests configuration of the image pipeline.
     * 
     */
    @Export(name="imageTestsConfiguration", type=ImagePipelineImageTestsConfiguration.class, parameters={})
    private Output</* @Nullable */ ImagePipelineImageTestsConfiguration> imageTestsConfiguration;

    /**
     * @return The image tests configuration of the image pipeline.
     * 
     */
    public Output<Optional<ImagePipelineImageTestsConfiguration>> imageTestsConfiguration() {
        return Codegen.optional(this.imageTestsConfiguration);
    }
    /**
     * The Amazon Resource Name (ARN) of the infrastructure configuration associated with this image pipeline.
     * 
     */
    @Export(name="infrastructureConfigurationArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> infrastructureConfigurationArn;

    /**
     * @return The Amazon Resource Name (ARN) of the infrastructure configuration associated with this image pipeline.
     * 
     */
    public Output<Optional<String>> infrastructureConfigurationArn() {
        return Codegen.optional(this.infrastructureConfigurationArn);
    }
    /**
     * The name of the image pipeline.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output</* @Nullable */ String> name;

    /**
     * @return The name of the image pipeline.
     * 
     */
    public Output<Optional<String>> name() {
        return Codegen.optional(this.name);
    }
    /**
     * The schedule of the image pipeline.
     * 
     */
    @Export(name="schedule", type=ImagePipelineSchedule.class, parameters={})
    private Output</* @Nullable */ ImagePipelineSchedule> schedule;

    /**
     * @return The schedule of the image pipeline.
     * 
     */
    public Output<Optional<ImagePipelineSchedule>> schedule() {
        return Codegen.optional(this.schedule);
    }
    /**
     * The status of the image pipeline.
     * 
     */
    @Export(name="status", type=ImagePipelineStatus.class, parameters={})
    private Output</* @Nullable */ ImagePipelineStatus> status;

    /**
     * @return The status of the image pipeline.
     * 
     */
    public Output<Optional<ImagePipelineStatus>> status() {
        return Codegen.optional(this.status);
    }
    /**
     * The tags of this image pipeline.
     * 
     */
    @Export(name="tags", type=Object.class, parameters={})
    private Output</* @Nullable */ Object> tags;

    /**
     * @return The tags of this image pipeline.
     * 
     */
    public Output<Optional<Object>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ImagePipeline(String name) {
        this(name, ImagePipelineArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ImagePipeline(String name, @Nullable ImagePipelineArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ImagePipeline(String name, @Nullable ImagePipelineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:imagebuilder:ImagePipeline", name, args == null ? ImagePipelineArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ImagePipeline(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:imagebuilder:ImagePipeline", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ImagePipeline get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ImagePipeline(name, id, options);
    }
}
