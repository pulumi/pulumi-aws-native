// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.fms.outputs;

import com.pulumi.awsnative.fms.outputs.PolicyIEMap;
import com.pulumi.awsnative.fms.outputs.PolicyResourceTag;
import com.pulumi.awsnative.fms.outputs.PolicyTag;
import com.pulumi.awsnative.fms.outputs.SecurityServicePolicyDataProperties;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPolicyResult {
    private @Nullable String arn;
    private @Nullable PolicyIEMap excludeMap;
    private @Nullable Boolean excludeResourceTags;
    private @Nullable String id;
    private @Nullable PolicyIEMap includeMap;
    private @Nullable String policyName;
    private @Nullable Boolean remediationEnabled;
    private @Nullable List<PolicyResourceTag> resourceTags;
    private @Nullable String resourceType;
    private @Nullable List<String> resourceTypeList;
    private @Nullable Boolean resourcesCleanUp;
    private @Nullable SecurityServicePolicyDataProperties securityServicePolicyData;
    private @Nullable List<PolicyTag> tags;

    private GetPolicyResult() {}
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public Optional<PolicyIEMap> excludeMap() {
        return Optional.ofNullable(this.excludeMap);
    }
    public Optional<Boolean> excludeResourceTags() {
        return Optional.ofNullable(this.excludeResourceTags);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<PolicyIEMap> includeMap() {
        return Optional.ofNullable(this.includeMap);
    }
    public Optional<String> policyName() {
        return Optional.ofNullable(this.policyName);
    }
    public Optional<Boolean> remediationEnabled() {
        return Optional.ofNullable(this.remediationEnabled);
    }
    public List<PolicyResourceTag> resourceTags() {
        return this.resourceTags == null ? List.of() : this.resourceTags;
    }
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    public List<String> resourceTypeList() {
        return this.resourceTypeList == null ? List.of() : this.resourceTypeList;
    }
    public Optional<Boolean> resourcesCleanUp() {
        return Optional.ofNullable(this.resourcesCleanUp);
    }
    public Optional<SecurityServicePolicyDataProperties> securityServicePolicyData() {
        return Optional.ofNullable(this.securityServicePolicyData);
    }
    public List<PolicyTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPolicyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable PolicyIEMap excludeMap;
        private @Nullable Boolean excludeResourceTags;
        private @Nullable String id;
        private @Nullable PolicyIEMap includeMap;
        private @Nullable String policyName;
        private @Nullable Boolean remediationEnabled;
        private @Nullable List<PolicyResourceTag> resourceTags;
        private @Nullable String resourceType;
        private @Nullable List<String> resourceTypeList;
        private @Nullable Boolean resourcesCleanUp;
        private @Nullable SecurityServicePolicyDataProperties securityServicePolicyData;
        private @Nullable List<PolicyTag> tags;
        public Builder() {}
        public Builder(GetPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.excludeMap = defaults.excludeMap;
    	      this.excludeResourceTags = defaults.excludeResourceTags;
    	      this.id = defaults.id;
    	      this.includeMap = defaults.includeMap;
    	      this.policyName = defaults.policyName;
    	      this.remediationEnabled = defaults.remediationEnabled;
    	      this.resourceTags = defaults.resourceTags;
    	      this.resourceType = defaults.resourceType;
    	      this.resourceTypeList = defaults.resourceTypeList;
    	      this.resourcesCleanUp = defaults.resourcesCleanUp;
    	      this.securityServicePolicyData = defaults.securityServicePolicyData;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder excludeMap(@Nullable PolicyIEMap excludeMap) {
            this.excludeMap = excludeMap;
            return this;
        }
        @CustomType.Setter
        public Builder excludeResourceTags(@Nullable Boolean excludeResourceTags) {
            this.excludeResourceTags = excludeResourceTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder includeMap(@Nullable PolicyIEMap includeMap) {
            this.includeMap = includeMap;
            return this;
        }
        @CustomType.Setter
        public Builder policyName(@Nullable String policyName) {
            this.policyName = policyName;
            return this;
        }
        @CustomType.Setter
        public Builder remediationEnabled(@Nullable Boolean remediationEnabled) {
            this.remediationEnabled = remediationEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTags(@Nullable List<PolicyResourceTag> resourceTags) {
            this.resourceTags = resourceTags;
            return this;
        }
        public Builder resourceTags(PolicyResourceTag... resourceTags) {
            return resourceTags(List.of(resourceTags));
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypeList(@Nullable List<String> resourceTypeList) {
            this.resourceTypeList = resourceTypeList;
            return this;
        }
        public Builder resourceTypeList(String... resourceTypeList) {
            return resourceTypeList(List.of(resourceTypeList));
        }
        @CustomType.Setter
        public Builder resourcesCleanUp(@Nullable Boolean resourcesCleanUp) {
            this.resourcesCleanUp = resourcesCleanUp;
            return this;
        }
        @CustomType.Setter
        public Builder securityServicePolicyData(@Nullable SecurityServicePolicyDataProperties securityServicePolicyData) {
            this.securityServicePolicyData = securityServicePolicyData;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<PolicyTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(PolicyTag... tags) {
            return tags(List.of(tags));
        }
        public GetPolicyResult build() {
            final var o = new GetPolicyResult();
            o.arn = arn;
            o.excludeMap = excludeMap;
            o.excludeResourceTags = excludeResourceTags;
            o.id = id;
            o.includeMap = includeMap;
            o.policyName = policyName;
            o.remediationEnabled = remediationEnabled;
            o.resourceTags = resourceTags;
            o.resourceType = resourceType;
            o.resourceTypeList = resourceTypeList;
            o.resourcesCleanUp = resourcesCleanUp;
            o.securityServicePolicyData = securityServicePolicyData;
            o.tags = tags;
            return o;
        }
    }
}
