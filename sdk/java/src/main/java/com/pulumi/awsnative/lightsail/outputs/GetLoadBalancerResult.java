// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lightsail.outputs;

import com.pulumi.awsnative.lightsail.outputs.LoadBalancerTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLoadBalancerResult {
    /**
     * @return The names of the instances attached to the load balancer.
     * 
     */
    private @Nullable List<String> attachedInstances;
    /**
     * @return The path you provided to perform the load balancer health check. If you didn&#39;t specify a health check path, Lightsail uses the root path of your website (e.g., &#34;/&#34;).
     * 
     */
    private @Nullable String healthCheckPath;
    private @Nullable String loadBalancerArn;
    /**
     * @return Configuration option to enable session stickiness.
     * 
     */
    private @Nullable Boolean sessionStickinessEnabled;
    /**
     * @return Configuration option to adjust session stickiness cookie duration parameter.
     * 
     */
    private @Nullable String sessionStickinessLBCookieDurationSeconds;
    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    private @Nullable List<LoadBalancerTag> tags;
    /**
     * @return The name of the TLS policy to apply to the load balancer.
     * 
     */
    private @Nullable String tlsPolicyName;

    private GetLoadBalancerResult() {}
    /**
     * @return The names of the instances attached to the load balancer.
     * 
     */
    public List<String> attachedInstances() {
        return this.attachedInstances == null ? List.of() : this.attachedInstances;
    }
    /**
     * @return The path you provided to perform the load balancer health check. If you didn&#39;t specify a health check path, Lightsail uses the root path of your website (e.g., &#34;/&#34;).
     * 
     */
    public Optional<String> healthCheckPath() {
        return Optional.ofNullable(this.healthCheckPath);
    }
    public Optional<String> loadBalancerArn() {
        return Optional.ofNullable(this.loadBalancerArn);
    }
    /**
     * @return Configuration option to enable session stickiness.
     * 
     */
    public Optional<Boolean> sessionStickinessEnabled() {
        return Optional.ofNullable(this.sessionStickinessEnabled);
    }
    /**
     * @return Configuration option to adjust session stickiness cookie duration parameter.
     * 
     */
    public Optional<String> sessionStickinessLBCookieDurationSeconds() {
        return Optional.ofNullable(this.sessionStickinessLBCookieDurationSeconds);
    }
    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public List<LoadBalancerTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return The name of the TLS policy to apply to the load balancer.
     * 
     */
    public Optional<String> tlsPolicyName() {
        return Optional.ofNullable(this.tlsPolicyName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoadBalancerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> attachedInstances;
        private @Nullable String healthCheckPath;
        private @Nullable String loadBalancerArn;
        private @Nullable Boolean sessionStickinessEnabled;
        private @Nullable String sessionStickinessLBCookieDurationSeconds;
        private @Nullable List<LoadBalancerTag> tags;
        private @Nullable String tlsPolicyName;
        public Builder() {}
        public Builder(GetLoadBalancerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attachedInstances = defaults.attachedInstances;
    	      this.healthCheckPath = defaults.healthCheckPath;
    	      this.loadBalancerArn = defaults.loadBalancerArn;
    	      this.sessionStickinessEnabled = defaults.sessionStickinessEnabled;
    	      this.sessionStickinessLBCookieDurationSeconds = defaults.sessionStickinessLBCookieDurationSeconds;
    	      this.tags = defaults.tags;
    	      this.tlsPolicyName = defaults.tlsPolicyName;
        }

        @CustomType.Setter
        public Builder attachedInstances(@Nullable List<String> attachedInstances) {
            this.attachedInstances = attachedInstances;
            return this;
        }
        public Builder attachedInstances(String... attachedInstances) {
            return attachedInstances(List.of(attachedInstances));
        }
        @CustomType.Setter
        public Builder healthCheckPath(@Nullable String healthCheckPath) {
            this.healthCheckPath = healthCheckPath;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerArn(@Nullable String loadBalancerArn) {
            this.loadBalancerArn = loadBalancerArn;
            return this;
        }
        @CustomType.Setter
        public Builder sessionStickinessEnabled(@Nullable Boolean sessionStickinessEnabled) {
            this.sessionStickinessEnabled = sessionStickinessEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder sessionStickinessLBCookieDurationSeconds(@Nullable String sessionStickinessLBCookieDurationSeconds) {
            this.sessionStickinessLBCookieDurationSeconds = sessionStickinessLBCookieDurationSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<LoadBalancerTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(LoadBalancerTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tlsPolicyName(@Nullable String tlsPolicyName) {
            this.tlsPolicyName = tlsPolicyName;
            return this;
        }
        public GetLoadBalancerResult build() {
            final var o = new GetLoadBalancerResult();
            o.attachedInstances = attachedInstances;
            o.healthCheckPath = healthCheckPath;
            o.loadBalancerArn = loadBalancerArn;
            o.sessionStickinessEnabled = sessionStickinessEnabled;
            o.sessionStickinessLBCookieDurationSeconds = sessionStickinessLBCookieDurationSeconds;
            o.tags = tags;
            o.tlsPolicyName = tlsPolicyName;
            return o;
        }
    }
}
