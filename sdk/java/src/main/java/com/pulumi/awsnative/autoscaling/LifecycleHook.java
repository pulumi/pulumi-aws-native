// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.autoscaling;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.autoscaling.LifecycleHookArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource Type definition for AWS::AutoScaling::LifecycleHook
 * 
 */
@ResourceType(type="aws-native:autoscaling:LifecycleHook")
public class LifecycleHook extends com.pulumi.resources.CustomResource {
    /**
     * The name of the Auto Scaling group for the lifecycle hook.
     * 
     */
    @Export(name="autoScalingGroupName", type=String.class, parameters={})
    private Output<String> autoScalingGroupName;

    /**
     * @return The name of the Auto Scaling group for the lifecycle hook.
     * 
     */
    public Output<String> autoScalingGroupName() {
        return this.autoScalingGroupName;
    }
    /**
     * The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs. The valid values are CONTINUE and ABANDON (default).
     * 
     */
    @Export(name="defaultResult", type=String.class, parameters={})
    private Output</* @Nullable */ String> defaultResult;

    /**
     * @return The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs. The valid values are CONTINUE and ABANDON (default).
     * 
     */
    public Output<Optional<String>> defaultResult() {
        return Codegen.optional(this.defaultResult);
    }
    /**
     * The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from 30 to 7200 seconds. The default value is 3600 seconds (1 hour). If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the action that you specified in the DefaultResult property.
     * 
     */
    @Export(name="heartbeatTimeout", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> heartbeatTimeout;

    /**
     * @return The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from 30 to 7200 seconds. The default value is 3600 seconds (1 hour). If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the action that you specified in the DefaultResult property.
     * 
     */
    public Output<Optional<Integer>> heartbeatTimeout() {
        return Codegen.optional(this.heartbeatTimeout);
    }
    /**
     * The name of the lifecycle hook.
     * 
     */
    @Export(name="lifecycleHookName", type=String.class, parameters={})
    private Output</* @Nullable */ String> lifecycleHookName;

    /**
     * @return The name of the lifecycle hook.
     * 
     */
    public Output<Optional<String>> lifecycleHookName() {
        return Codegen.optional(this.lifecycleHookName);
    }
    /**
     * The instance state to which you want to attach the lifecycle hook.
     * 
     */
    @Export(name="lifecycleTransition", type=String.class, parameters={})
    private Output<String> lifecycleTransition;

    /**
     * @return The instance state to which you want to attach the lifecycle hook.
     * 
     */
    public Output<String> lifecycleTransition() {
        return this.lifecycleTransition;
    }
    /**
     * Additional information that is included any time Amazon EC2 Auto Scaling sends a message to the notification target.
     * 
     */
    @Export(name="notificationMetadata", type=String.class, parameters={})
    private Output</* @Nullable */ String> notificationMetadata;

    /**
     * @return Additional information that is included any time Amazon EC2 Auto Scaling sends a message to the notification target.
     * 
     */
    public Output<Optional<String>> notificationMetadata() {
        return Codegen.optional(this.notificationMetadata);
    }
    /**
     * The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling uses to notify you when an instance is in the transition state for the lifecycle hook. You can specify an Amazon SQS queue or an Amazon SNS topic. The notification message includes the following information: lifecycle action token, user account ID, Auto Scaling group name, lifecycle hook name, instance ID, lifecycle transition, and notification metadata.
     * 
     */
    @Export(name="notificationTargetARN", type=String.class, parameters={})
    private Output</* @Nullable */ String> notificationTargetARN;

    /**
     * @return The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling uses to notify you when an instance is in the transition state for the lifecycle hook. You can specify an Amazon SQS queue or an Amazon SNS topic. The notification message includes the following information: lifecycle action token, user account ID, Auto Scaling group name, lifecycle hook name, instance ID, lifecycle transition, and notification metadata.
     * 
     */
    public Output<Optional<String>> notificationTargetARN() {
        return Codegen.optional(this.notificationTargetARN);
    }
    /**
     * The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target, for example, an Amazon SNS topic or an Amazon SQS queue.
     * 
     */
    @Export(name="roleARN", type=String.class, parameters={})
    private Output</* @Nullable */ String> roleARN;

    /**
     * @return The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target, for example, an Amazon SNS topic or an Amazon SQS queue.
     * 
     */
    public Output<Optional<String>> roleARN() {
        return Codegen.optional(this.roleARN);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LifecycleHook(String name) {
        this(name, LifecycleHookArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LifecycleHook(String name, LifecycleHookArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LifecycleHook(String name, LifecycleHookArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:autoscaling:LifecycleHook", name, args == null ? LifecycleHookArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LifecycleHook(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:autoscaling:LifecycleHook", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LifecycleHook get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LifecycleHook(name, id, options);
    }
}
