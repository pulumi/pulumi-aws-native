// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cassandra.outputs;

import com.pulumi.awsnative.cassandra.outputs.TableBillingMode;
import com.pulumi.awsnative.cassandra.outputs.TableColumn;
import com.pulumi.awsnative.cassandra.outputs.TableEncryptionSpecification;
import com.pulumi.awsnative.cassandra.outputs.TableTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTableResult {
    private @Nullable TableBillingMode billingMode;
    /**
     * @return Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.
     * 
     */
    private @Nullable Integer defaultTimeToLive;
    private @Nullable TableEncryptionSpecification encryptionSpecification;
    /**
     * @return Indicates whether point in time recovery is enabled (true) or disabled (false) on the table
     * 
     */
    private @Nullable Boolean pointInTimeRecoveryEnabled;
    /**
     * @return Non-key columns of the table
     * 
     */
    private @Nullable List<TableColumn> regularColumns;
    /**
     * @return An array of key-value pairs to apply to this resource
     * 
     */
    private @Nullable List<TableTag> tags;

    private GetTableResult() {}
    public Optional<TableBillingMode> billingMode() {
        return Optional.ofNullable(this.billingMode);
    }
    /**
     * @return Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.
     * 
     */
    public Optional<Integer> defaultTimeToLive() {
        return Optional.ofNullable(this.defaultTimeToLive);
    }
    public Optional<TableEncryptionSpecification> encryptionSpecification() {
        return Optional.ofNullable(this.encryptionSpecification);
    }
    /**
     * @return Indicates whether point in time recovery is enabled (true) or disabled (false) on the table
     * 
     */
    public Optional<Boolean> pointInTimeRecoveryEnabled() {
        return Optional.ofNullable(this.pointInTimeRecoveryEnabled);
    }
    /**
     * @return Non-key columns of the table
     * 
     */
    public List<TableColumn> regularColumns() {
        return this.regularColumns == null ? List.of() : this.regularColumns;
    }
    /**
     * @return An array of key-value pairs to apply to this resource
     * 
     */
    public List<TableTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTableResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable TableBillingMode billingMode;
        private @Nullable Integer defaultTimeToLive;
        private @Nullable TableEncryptionSpecification encryptionSpecification;
        private @Nullable Boolean pointInTimeRecoveryEnabled;
        private @Nullable List<TableColumn> regularColumns;
        private @Nullable List<TableTag> tags;
        public Builder() {}
        public Builder(GetTableResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.billingMode = defaults.billingMode;
    	      this.defaultTimeToLive = defaults.defaultTimeToLive;
    	      this.encryptionSpecification = defaults.encryptionSpecification;
    	      this.pointInTimeRecoveryEnabled = defaults.pointInTimeRecoveryEnabled;
    	      this.regularColumns = defaults.regularColumns;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder billingMode(@Nullable TableBillingMode billingMode) {
            this.billingMode = billingMode;
            return this;
        }
        @CustomType.Setter
        public Builder defaultTimeToLive(@Nullable Integer defaultTimeToLive) {
            this.defaultTimeToLive = defaultTimeToLive;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionSpecification(@Nullable TableEncryptionSpecification encryptionSpecification) {
            this.encryptionSpecification = encryptionSpecification;
            return this;
        }
        @CustomType.Setter
        public Builder pointInTimeRecoveryEnabled(@Nullable Boolean pointInTimeRecoveryEnabled) {
            this.pointInTimeRecoveryEnabled = pointInTimeRecoveryEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder regularColumns(@Nullable List<TableColumn> regularColumns) {
            this.regularColumns = regularColumns;
            return this;
        }
        public Builder regularColumns(TableColumn... regularColumns) {
            return regularColumns(List.of(regularColumns));
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<TableTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(TableTag... tags) {
            return tags(List.of(tags));
        }
        public GetTableResult build() {
            final var o = new GetTableResult();
            o.billingMode = billingMode;
            o.defaultTimeToLive = defaultTimeToLive;
            o.encryptionSpecification = encryptionSpecification;
            o.pointInTimeRecoveryEnabled = pointInTimeRecoveryEnabled;
            o.regularColumns = regularColumns;
            o.tags = tags;
            return o;
        }
    }
}
