// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.databrew.outputs;

import com.pulumi.awsnative.databrew.enums.JobEncryptionMode;
import com.pulumi.awsnative.databrew.enums.JobLogSubscription;
import com.pulumi.awsnative.databrew.outputs.JobDataCatalogOutput;
import com.pulumi.awsnative.databrew.outputs.JobDatabaseOutput;
import com.pulumi.awsnative.databrew.outputs.JobOutput;
import com.pulumi.awsnative.databrew.outputs.JobOutputLocation;
import com.pulumi.awsnative.databrew.outputs.JobProfileConfiguration;
import com.pulumi.awsnative.databrew.outputs.JobRecipe;
import com.pulumi.awsnative.databrew.outputs.JobSample;
import com.pulumi.awsnative.databrew.outputs.JobValidationConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetJobResult {
    private @Nullable List<JobDataCatalogOutput> dataCatalogOutputs;
    private @Nullable List<JobDatabaseOutput> databaseOutputs;
    /**
     * @return Dataset name
     * 
     */
    private @Nullable String datasetName;
    /**
     * @return Encryption Key Arn
     * 
     */
    private @Nullable String encryptionKeyArn;
    /**
     * @return Encryption mode
     * 
     */
    private @Nullable JobEncryptionMode encryptionMode;
    /**
     * @return Job Sample
     * 
     */
    private @Nullable JobSample jobSample;
    /**
     * @return Log subscription
     * 
     */
    private @Nullable JobLogSubscription logSubscription;
    /**
     * @return Max capacity
     * 
     */
    private @Nullable Integer maxCapacity;
    /**
     * @return Max retries
     * 
     */
    private @Nullable Integer maxRetries;
    /**
     * @return Output location
     * 
     */
    private @Nullable JobOutputLocation outputLocation;
    private @Nullable List<JobOutput> outputs;
    /**
     * @return Profile Job configuration
     * 
     */
    private @Nullable JobProfileConfiguration profileConfiguration;
    /**
     * @return Project name
     * 
     */
    private @Nullable String projectName;
    private @Nullable JobRecipe recipe;
    /**
     * @return Role arn
     * 
     */
    private @Nullable String roleArn;
    /**
     * @return Timeout
     * 
     */
    private @Nullable Integer timeout;
    /**
     * @return Data quality rules configuration
     * 
     */
    private @Nullable List<JobValidationConfiguration> validationConfigurations;

    private GetJobResult() {}
    public List<JobDataCatalogOutput> dataCatalogOutputs() {
        return this.dataCatalogOutputs == null ? List.of() : this.dataCatalogOutputs;
    }
    public List<JobDatabaseOutput> databaseOutputs() {
        return this.databaseOutputs == null ? List.of() : this.databaseOutputs;
    }
    /**
     * @return Dataset name
     * 
     */
    public Optional<String> datasetName() {
        return Optional.ofNullable(this.datasetName);
    }
    /**
     * @return Encryption Key Arn
     * 
     */
    public Optional<String> encryptionKeyArn() {
        return Optional.ofNullable(this.encryptionKeyArn);
    }
    /**
     * @return Encryption mode
     * 
     */
    public Optional<JobEncryptionMode> encryptionMode() {
        return Optional.ofNullable(this.encryptionMode);
    }
    /**
     * @return Job Sample
     * 
     */
    public Optional<JobSample> jobSample() {
        return Optional.ofNullable(this.jobSample);
    }
    /**
     * @return Log subscription
     * 
     */
    public Optional<JobLogSubscription> logSubscription() {
        return Optional.ofNullable(this.logSubscription);
    }
    /**
     * @return Max capacity
     * 
     */
    public Optional<Integer> maxCapacity() {
        return Optional.ofNullable(this.maxCapacity);
    }
    /**
     * @return Max retries
     * 
     */
    public Optional<Integer> maxRetries() {
        return Optional.ofNullable(this.maxRetries);
    }
    /**
     * @return Output location
     * 
     */
    public Optional<JobOutputLocation> outputLocation() {
        return Optional.ofNullable(this.outputLocation);
    }
    public List<JobOutput> outputs() {
        return this.outputs == null ? List.of() : this.outputs;
    }
    /**
     * @return Profile Job configuration
     * 
     */
    public Optional<JobProfileConfiguration> profileConfiguration() {
        return Optional.ofNullable(this.profileConfiguration);
    }
    /**
     * @return Project name
     * 
     */
    public Optional<String> projectName() {
        return Optional.ofNullable(this.projectName);
    }
    public Optional<JobRecipe> recipe() {
        return Optional.ofNullable(this.recipe);
    }
    /**
     * @return Role arn
     * 
     */
    public Optional<String> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }
    /**
     * @return Timeout
     * 
     */
    public Optional<Integer> timeout() {
        return Optional.ofNullable(this.timeout);
    }
    /**
     * @return Data quality rules configuration
     * 
     */
    public List<JobValidationConfiguration> validationConfigurations() {
        return this.validationConfigurations == null ? List.of() : this.validationConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<JobDataCatalogOutput> dataCatalogOutputs;
        private @Nullable List<JobDatabaseOutput> databaseOutputs;
        private @Nullable String datasetName;
        private @Nullable String encryptionKeyArn;
        private @Nullable JobEncryptionMode encryptionMode;
        private @Nullable JobSample jobSample;
        private @Nullable JobLogSubscription logSubscription;
        private @Nullable Integer maxCapacity;
        private @Nullable Integer maxRetries;
        private @Nullable JobOutputLocation outputLocation;
        private @Nullable List<JobOutput> outputs;
        private @Nullable JobProfileConfiguration profileConfiguration;
        private @Nullable String projectName;
        private @Nullable JobRecipe recipe;
        private @Nullable String roleArn;
        private @Nullable Integer timeout;
        private @Nullable List<JobValidationConfiguration> validationConfigurations;
        public Builder() {}
        public Builder(GetJobResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataCatalogOutputs = defaults.dataCatalogOutputs;
    	      this.databaseOutputs = defaults.databaseOutputs;
    	      this.datasetName = defaults.datasetName;
    	      this.encryptionKeyArn = defaults.encryptionKeyArn;
    	      this.encryptionMode = defaults.encryptionMode;
    	      this.jobSample = defaults.jobSample;
    	      this.logSubscription = defaults.logSubscription;
    	      this.maxCapacity = defaults.maxCapacity;
    	      this.maxRetries = defaults.maxRetries;
    	      this.outputLocation = defaults.outputLocation;
    	      this.outputs = defaults.outputs;
    	      this.profileConfiguration = defaults.profileConfiguration;
    	      this.projectName = defaults.projectName;
    	      this.recipe = defaults.recipe;
    	      this.roleArn = defaults.roleArn;
    	      this.timeout = defaults.timeout;
    	      this.validationConfigurations = defaults.validationConfigurations;
        }

        @CustomType.Setter
        public Builder dataCatalogOutputs(@Nullable List<JobDataCatalogOutput> dataCatalogOutputs) {
            this.dataCatalogOutputs = dataCatalogOutputs;
            return this;
        }
        public Builder dataCatalogOutputs(JobDataCatalogOutput... dataCatalogOutputs) {
            return dataCatalogOutputs(List.of(dataCatalogOutputs));
        }
        @CustomType.Setter
        public Builder databaseOutputs(@Nullable List<JobDatabaseOutput> databaseOutputs) {
            this.databaseOutputs = databaseOutputs;
            return this;
        }
        public Builder databaseOutputs(JobDatabaseOutput... databaseOutputs) {
            return databaseOutputs(List.of(databaseOutputs));
        }
        @CustomType.Setter
        public Builder datasetName(@Nullable String datasetName) {
            this.datasetName = datasetName;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionKeyArn(@Nullable String encryptionKeyArn) {
            this.encryptionKeyArn = encryptionKeyArn;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionMode(@Nullable JobEncryptionMode encryptionMode) {
            this.encryptionMode = encryptionMode;
            return this;
        }
        @CustomType.Setter
        public Builder jobSample(@Nullable JobSample jobSample) {
            this.jobSample = jobSample;
            return this;
        }
        @CustomType.Setter
        public Builder logSubscription(@Nullable JobLogSubscription logSubscription) {
            this.logSubscription = logSubscription;
            return this;
        }
        @CustomType.Setter
        public Builder maxCapacity(@Nullable Integer maxCapacity) {
            this.maxCapacity = maxCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder maxRetries(@Nullable Integer maxRetries) {
            this.maxRetries = maxRetries;
            return this;
        }
        @CustomType.Setter
        public Builder outputLocation(@Nullable JobOutputLocation outputLocation) {
            this.outputLocation = outputLocation;
            return this;
        }
        @CustomType.Setter
        public Builder outputs(@Nullable List<JobOutput> outputs) {
            this.outputs = outputs;
            return this;
        }
        public Builder outputs(JobOutput... outputs) {
            return outputs(List.of(outputs));
        }
        @CustomType.Setter
        public Builder profileConfiguration(@Nullable JobProfileConfiguration profileConfiguration) {
            this.profileConfiguration = profileConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder projectName(@Nullable String projectName) {
            this.projectName = projectName;
            return this;
        }
        @CustomType.Setter
        public Builder recipe(@Nullable JobRecipe recipe) {
            this.recipe = recipe;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(@Nullable String roleArn) {
            this.roleArn = roleArn;
            return this;
        }
        @CustomType.Setter
        public Builder timeout(@Nullable Integer timeout) {
            this.timeout = timeout;
            return this;
        }
        @CustomType.Setter
        public Builder validationConfigurations(@Nullable List<JobValidationConfiguration> validationConfigurations) {
            this.validationConfigurations = validationConfigurations;
            return this;
        }
        public Builder validationConfigurations(JobValidationConfiguration... validationConfigurations) {
            return validationConfigurations(List.of(validationConfigurations));
        }
        public GetJobResult build() {
            final var o = new GetJobResult();
            o.dataCatalogOutputs = dataCatalogOutputs;
            o.databaseOutputs = databaseOutputs;
            o.datasetName = datasetName;
            o.encryptionKeyArn = encryptionKeyArn;
            o.encryptionMode = encryptionMode;
            o.jobSample = jobSample;
            o.logSubscription = logSubscription;
            o.maxCapacity = maxCapacity;
            o.maxRetries = maxRetries;
            o.outputLocation = outputLocation;
            o.outputs = outputs;
            o.profileConfiguration = profileConfiguration;
            o.projectName = projectName;
            o.recipe = recipe;
            o.roleArn = roleArn;
            o.timeout = timeout;
            o.validationConfigurations = validationConfigurations;
            return o;
        }
    }
}
