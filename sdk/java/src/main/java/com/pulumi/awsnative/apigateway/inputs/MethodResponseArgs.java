// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.apigateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MethodResponseArgs extends com.pulumi.resources.ResourceArgs {

    public static final MethodResponseArgs Empty = new MethodResponseArgs();

    /**
     * The resources used for the response&#39;s content type. Specify response models as key-value pairs (string-to-string maps), with a content type as the key and a Model resource name as the value.
     * 
     */
    @Import(name="responseModels")
    private @Nullable Output<Object> responseModels;

    /**
     * @return The resources used for the response&#39;s content type. Specify response models as key-value pairs (string-to-string maps), with a content type as the key and a Model resource name as the value.
     * 
     */
    public Optional<Output<Object>> responseModels() {
        return Optional.ofNullable(this.responseModels);
    }

    /**
     * Response parameters that API Gateway sends to the client that called a method. Specify response parameters as key-value pairs (string-to-Boolean maps), with a destination as the key and a Boolean as the value.
     * 
     */
    @Import(name="responseParameters")
    private @Nullable Output<Object> responseParameters;

    /**
     * @return Response parameters that API Gateway sends to the client that called a method. Specify response parameters as key-value pairs (string-to-Boolean maps), with a destination as the key and a Boolean as the value.
     * 
     */
    public Optional<Output<Object>> responseParameters() {
        return Optional.ofNullable(this.responseParameters);
    }

    /**
     * The method response&#39;s status code, which you map to an IntegrationResponse.
     * 
     */
    @Import(name="statusCode", required=true)
    private Output<String> statusCode;

    /**
     * @return The method response&#39;s status code, which you map to an IntegrationResponse.
     * 
     */
    public Output<String> statusCode() {
        return this.statusCode;
    }

    private MethodResponseArgs() {}

    private MethodResponseArgs(MethodResponseArgs $) {
        this.responseModels = $.responseModels;
        this.responseParameters = $.responseParameters;
        this.statusCode = $.statusCode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MethodResponseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MethodResponseArgs $;

        public Builder() {
            $ = new MethodResponseArgs();
        }

        public Builder(MethodResponseArgs defaults) {
            $ = new MethodResponseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param responseModels The resources used for the response&#39;s content type. Specify response models as key-value pairs (string-to-string maps), with a content type as the key and a Model resource name as the value.
         * 
         * @return builder
         * 
         */
        public Builder responseModels(@Nullable Output<Object> responseModels) {
            $.responseModels = responseModels;
            return this;
        }

        /**
         * @param responseModels The resources used for the response&#39;s content type. Specify response models as key-value pairs (string-to-string maps), with a content type as the key and a Model resource name as the value.
         * 
         * @return builder
         * 
         */
        public Builder responseModels(Object responseModels) {
            return responseModels(Output.of(responseModels));
        }

        /**
         * @param responseParameters Response parameters that API Gateway sends to the client that called a method. Specify response parameters as key-value pairs (string-to-Boolean maps), with a destination as the key and a Boolean as the value.
         * 
         * @return builder
         * 
         */
        public Builder responseParameters(@Nullable Output<Object> responseParameters) {
            $.responseParameters = responseParameters;
            return this;
        }

        /**
         * @param responseParameters Response parameters that API Gateway sends to the client that called a method. Specify response parameters as key-value pairs (string-to-Boolean maps), with a destination as the key and a Boolean as the value.
         * 
         * @return builder
         * 
         */
        public Builder responseParameters(Object responseParameters) {
            return responseParameters(Output.of(responseParameters));
        }

        /**
         * @param statusCode The method response&#39;s status code, which you map to an IntegrationResponse.
         * 
         * @return builder
         * 
         */
        public Builder statusCode(Output<String> statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        /**
         * @param statusCode The method response&#39;s status code, which you map to an IntegrationResponse.
         * 
         * @return builder
         * 
         */
        public Builder statusCode(String statusCode) {
            return statusCode(Output.of(statusCode));
        }

        public MethodResponseArgs build() {
            $.statusCode = Objects.requireNonNull($.statusCode, "expected parameter 'statusCode' to be non-null");
            return $;
        }
    }

}
