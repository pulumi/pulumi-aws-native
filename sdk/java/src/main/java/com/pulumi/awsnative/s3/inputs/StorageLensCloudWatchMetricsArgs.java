// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


/**
 * CloudWatch metrics settings for the Amazon S3 Storage Lens metrics export.
 * 
 */
public final class StorageLensCloudWatchMetricsArgs extends com.pulumi.resources.ResourceArgs {

    public static final StorageLensCloudWatchMetricsArgs Empty = new StorageLensCloudWatchMetricsArgs();

    /**
     * Specifies whether CloudWatch metrics are enabled or disabled.
     * 
     */
    @Import(name="isEnabled", required=true)
    private Output<Boolean> isEnabled;

    /**
     * @return Specifies whether CloudWatch metrics are enabled or disabled.
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }

    private StorageLensCloudWatchMetricsArgs() {}

    private StorageLensCloudWatchMetricsArgs(StorageLensCloudWatchMetricsArgs $) {
        this.isEnabled = $.isEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageLensCloudWatchMetricsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageLensCloudWatchMetricsArgs $;

        public Builder() {
            $ = new StorageLensCloudWatchMetricsArgs();
        }

        public Builder(StorageLensCloudWatchMetricsArgs defaults) {
            $ = new StorageLensCloudWatchMetricsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param isEnabled Specifies whether CloudWatch metrics are enabled or disabled.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled Specifies whether CloudWatch metrics are enabled or disabled.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        public StorageLensCloudWatchMetricsArgs build() {
            $.isEnabled = Objects.requireNonNull($.isEnabled, "expected parameter 'isEnabled' to be non-null");
            return $;
        }
    }

}
