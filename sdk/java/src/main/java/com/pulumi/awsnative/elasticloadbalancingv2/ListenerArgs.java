// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.elasticloadbalancingv2;

import com.pulumi.awsnative.elasticloadbalancingv2.inputs.ListenerActionArgs;
import com.pulumi.awsnative.elasticloadbalancingv2.inputs.ListenerCertificateArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListenerArgs extends com.pulumi.resources.ResourceArgs {

    public static final ListenerArgs Empty = new ListenerArgs();

    @Import(name="alpnPolicy")
    private @Nullable Output<List<String>> alpnPolicy;

    public Optional<Output<List<String>>> alpnPolicy() {
        return Optional.ofNullable(this.alpnPolicy);
    }

    @Import(name="certificates")
    private @Nullable Output<List<ListenerCertificateArgs>> certificates;

    public Optional<Output<List<ListenerCertificateArgs>>> certificates() {
        return Optional.ofNullable(this.certificates);
    }

    @Import(name="defaultActions", required=true)
    private Output<List<ListenerActionArgs>> defaultActions;

    public Output<List<ListenerActionArgs>> defaultActions() {
        return this.defaultActions;
    }

    @Import(name="loadBalancerArn", required=true)
    private Output<String> loadBalancerArn;

    public Output<String> loadBalancerArn() {
        return this.loadBalancerArn;
    }

    @Import(name="port")
    private @Nullable Output<Integer> port;

    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    @Import(name="sslPolicy")
    private @Nullable Output<String> sslPolicy;

    public Optional<Output<String>> sslPolicy() {
        return Optional.ofNullable(this.sslPolicy);
    }

    private ListenerArgs() {}

    private ListenerArgs(ListenerArgs $) {
        this.alpnPolicy = $.alpnPolicy;
        this.certificates = $.certificates;
        this.defaultActions = $.defaultActions;
        this.loadBalancerArn = $.loadBalancerArn;
        this.port = $.port;
        this.protocol = $.protocol;
        this.sslPolicy = $.sslPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListenerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListenerArgs $;

        public Builder() {
            $ = new ListenerArgs();
        }

        public Builder(ListenerArgs defaults) {
            $ = new ListenerArgs(Objects.requireNonNull(defaults));
        }

        public Builder alpnPolicy(@Nullable Output<List<String>> alpnPolicy) {
            $.alpnPolicy = alpnPolicy;
            return this;
        }

        public Builder alpnPolicy(List<String> alpnPolicy) {
            return alpnPolicy(Output.of(alpnPolicy));
        }

        public Builder alpnPolicy(String... alpnPolicy) {
            return alpnPolicy(List.of(alpnPolicy));
        }

        public Builder certificates(@Nullable Output<List<ListenerCertificateArgs>> certificates) {
            $.certificates = certificates;
            return this;
        }

        public Builder certificates(List<ListenerCertificateArgs> certificates) {
            return certificates(Output.of(certificates));
        }

        public Builder certificates(ListenerCertificateArgs... certificates) {
            return certificates(List.of(certificates));
        }

        public Builder defaultActions(Output<List<ListenerActionArgs>> defaultActions) {
            $.defaultActions = defaultActions;
            return this;
        }

        public Builder defaultActions(List<ListenerActionArgs> defaultActions) {
            return defaultActions(Output.of(defaultActions));
        }

        public Builder defaultActions(ListenerActionArgs... defaultActions) {
            return defaultActions(List.of(defaultActions));
        }

        public Builder loadBalancerArn(Output<String> loadBalancerArn) {
            $.loadBalancerArn = loadBalancerArn;
            return this;
        }

        public Builder loadBalancerArn(String loadBalancerArn) {
            return loadBalancerArn(Output.of(loadBalancerArn));
        }

        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        public Builder sslPolicy(@Nullable Output<String> sslPolicy) {
            $.sslPolicy = sslPolicy;
            return this;
        }

        public Builder sslPolicy(String sslPolicy) {
            return sslPolicy(Output.of(sslPolicy));
        }

        public ListenerArgs build() {
            $.defaultActions = Objects.requireNonNull($.defaultActions, "expected parameter 'defaultActions' to be non-null");
            $.loadBalancerArn = Objects.requireNonNull($.loadBalancerArn, "expected parameter 'loadBalancerArn' to be non-null");
            return $;
        }
    }

}
