// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lambda;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.lambda.EventSourceMappingArgs;
import com.pulumi.awsnative.lambda.enums.EventSourceMappingFunctionResponseTypesItem;
import com.pulumi.awsnative.lambda.outputs.EventSourceMappingDestinationConfig;
import com.pulumi.awsnative.lambda.outputs.EventSourceMappingFilterCriteria;
import com.pulumi.awsnative.lambda.outputs.EventSourceMappingSelfManagedEventSource;
import com.pulumi.awsnative.lambda.outputs.EventSourceMappingSourceAccessConfiguration;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource Type definition for AWS::Lambda::EventSourceMapping
 * 
 */
@ResourceType(type="aws-native:lambda:EventSourceMapping")
public class EventSourceMapping extends com.pulumi.resources.CustomResource {
    /**
     * The maximum number of items to retrieve in a single batch.
     * 
     */
    @Export(name="batchSize", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> batchSize;

    /**
     * @return The maximum number of items to retrieve in a single batch.
     * 
     */
    public Output<Optional<Integer>> batchSize() {
        return Codegen.optional(this.batchSize);
    }
    /**
     * (Streams) If the function returns an error, split the batch in two and retry.
     * 
     */
    @Export(name="bisectBatchOnFunctionError", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> bisectBatchOnFunctionError;

    /**
     * @return (Streams) If the function returns an error, split the batch in two and retry.
     * 
     */
    public Output<Optional<Boolean>> bisectBatchOnFunctionError() {
        return Codegen.optional(this.bisectBatchOnFunctionError);
    }
    /**
     * (Streams) An Amazon SQS queue or Amazon SNS topic destination for discarded records.
     * 
     */
    @Export(name="destinationConfig", type=EventSourceMappingDestinationConfig.class, parameters={})
    private Output</* @Nullable */ EventSourceMappingDestinationConfig> destinationConfig;

    /**
     * @return (Streams) An Amazon SQS queue or Amazon SNS topic destination for discarded records.
     * 
     */
    public Output<Optional<EventSourceMappingDestinationConfig>> destinationConfig() {
        return Codegen.optional(this.destinationConfig);
    }
    /**
     * Disables the event source mapping to pause polling and invocation.
     * 
     */
    @Export(name="enabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Disables the event source mapping to pause polling and invocation.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * The Amazon Resource Name (ARN) of the event source.
     * 
     */
    @Export(name="eventSourceArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> eventSourceArn;

    /**
     * @return The Amazon Resource Name (ARN) of the event source.
     * 
     */
    public Output<Optional<String>> eventSourceArn() {
        return Codegen.optional(this.eventSourceArn);
    }
    /**
     * The filter criteria to control event filtering.
     * 
     */
    @Export(name="filterCriteria", type=EventSourceMappingFilterCriteria.class, parameters={})
    private Output</* @Nullable */ EventSourceMappingFilterCriteria> filterCriteria;

    /**
     * @return The filter criteria to control event filtering.
     * 
     */
    public Output<Optional<EventSourceMappingFilterCriteria>> filterCriteria() {
        return Codegen.optional(this.filterCriteria);
    }
    /**
     * The name of the Lambda function.
     * 
     */
    @Export(name="functionName", type=String.class, parameters={})
    private Output<String> functionName;

    /**
     * @return The name of the Lambda function.
     * 
     */
    public Output<String> functionName() {
        return this.functionName;
    }
    /**
     * (Streams) A list of response types supported by the function.
     * 
     */
    @Export(name="functionResponseTypes", type=List.class, parameters={EventSourceMappingFunctionResponseTypesItem.class})
    private Output</* @Nullable */ List<EventSourceMappingFunctionResponseTypesItem>> functionResponseTypes;

    /**
     * @return (Streams) A list of response types supported by the function.
     * 
     */
    public Output<Optional<List<EventSourceMappingFunctionResponseTypesItem>>> functionResponseTypes() {
        return Codegen.optional(this.functionResponseTypes);
    }
    /**
     * (Streams) The maximum amount of time to gather records before invoking the function, in seconds.
     * 
     */
    @Export(name="maximumBatchingWindowInSeconds", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> maximumBatchingWindowInSeconds;

    /**
     * @return (Streams) The maximum amount of time to gather records before invoking the function, in seconds.
     * 
     */
    public Output<Optional<Integer>> maximumBatchingWindowInSeconds() {
        return Codegen.optional(this.maximumBatchingWindowInSeconds);
    }
    /**
     * (Streams) The maximum age of a record that Lambda sends to a function for processing.
     * 
     */
    @Export(name="maximumRecordAgeInSeconds", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> maximumRecordAgeInSeconds;

    /**
     * @return (Streams) The maximum age of a record that Lambda sends to a function for processing.
     * 
     */
    public Output<Optional<Integer>> maximumRecordAgeInSeconds() {
        return Codegen.optional(this.maximumRecordAgeInSeconds);
    }
    /**
     * (Streams) The maximum number of times to retry when the function returns an error.
     * 
     */
    @Export(name="maximumRetryAttempts", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> maximumRetryAttempts;

    /**
     * @return (Streams) The maximum number of times to retry when the function returns an error.
     * 
     */
    public Output<Optional<Integer>> maximumRetryAttempts() {
        return Codegen.optional(this.maximumRetryAttempts);
    }
    /**
     * (Streams) The number of batches to process from each shard concurrently.
     * 
     */
    @Export(name="parallelizationFactor", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> parallelizationFactor;

    /**
     * @return (Streams) The number of batches to process from each shard concurrently.
     * 
     */
    public Output<Optional<Integer>> parallelizationFactor() {
        return Codegen.optional(this.parallelizationFactor);
    }
    /**
     * (ActiveMQ) A list of ActiveMQ queues.
     * 
     */
    @Export(name="queues", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> queues;

    /**
     * @return (ActiveMQ) A list of ActiveMQ queues.
     * 
     */
    public Output<Optional<List<String>>> queues() {
        return Codegen.optional(this.queues);
    }
    /**
     * Self-managed event source endpoints.
     * 
     */
    @Export(name="selfManagedEventSource", type=EventSourceMappingSelfManagedEventSource.class, parameters={})
    private Output</* @Nullable */ EventSourceMappingSelfManagedEventSource> selfManagedEventSource;

    /**
     * @return Self-managed event source endpoints.
     * 
     */
    public Output<Optional<EventSourceMappingSelfManagedEventSource>> selfManagedEventSource() {
        return Codegen.optional(this.selfManagedEventSource);
    }
    /**
     * A list of SourceAccessConfiguration.
     * 
     */
    @Export(name="sourceAccessConfigurations", type=List.class, parameters={EventSourceMappingSourceAccessConfiguration.class})
    private Output</* @Nullable */ List<EventSourceMappingSourceAccessConfiguration>> sourceAccessConfigurations;

    /**
     * @return A list of SourceAccessConfiguration.
     * 
     */
    public Output<Optional<List<EventSourceMappingSourceAccessConfiguration>>> sourceAccessConfigurations() {
        return Codegen.optional(this.sourceAccessConfigurations);
    }
    /**
     * The position in a stream from which to start reading. Required for Amazon Kinesis and Amazon DynamoDB Streams sources.
     * 
     */
    @Export(name="startingPosition", type=String.class, parameters={})
    private Output</* @Nullable */ String> startingPosition;

    /**
     * @return The position in a stream from which to start reading. Required for Amazon Kinesis and Amazon DynamoDB Streams sources.
     * 
     */
    public Output<Optional<String>> startingPosition() {
        return Codegen.optional(this.startingPosition);
    }
    /**
     * With StartingPosition set to AT_TIMESTAMP, the time from which to start reading, in Unix time seconds.
     * 
     */
    @Export(name="startingPositionTimestamp", type=Double.class, parameters={})
    private Output</* @Nullable */ Double> startingPositionTimestamp;

    /**
     * @return With StartingPosition set to AT_TIMESTAMP, the time from which to start reading, in Unix time seconds.
     * 
     */
    public Output<Optional<Double>> startingPositionTimestamp() {
        return Codegen.optional(this.startingPositionTimestamp);
    }
    /**
     * (Kafka) A list of Kafka topics.
     * 
     */
    @Export(name="topics", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> topics;

    /**
     * @return (Kafka) A list of Kafka topics.
     * 
     */
    public Output<Optional<List<String>>> topics() {
        return Codegen.optional(this.topics);
    }
    /**
     * (Streams) Tumbling window (non-overlapping time window) duration to perform aggregations.
     * 
     */
    @Export(name="tumblingWindowInSeconds", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> tumblingWindowInSeconds;

    /**
     * @return (Streams) Tumbling window (non-overlapping time window) duration to perform aggregations.
     * 
     */
    public Output<Optional<Integer>> tumblingWindowInSeconds() {
        return Codegen.optional(this.tumblingWindowInSeconds);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EventSourceMapping(String name) {
        this(name, EventSourceMappingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EventSourceMapping(String name, EventSourceMappingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EventSourceMapping(String name, EventSourceMappingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:lambda:EventSourceMapping", name, args == null ? EventSourceMappingArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private EventSourceMapping(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:lambda:EventSourceMapping", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EventSourceMapping get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EventSourceMapping(name, id, options);
    }
}
