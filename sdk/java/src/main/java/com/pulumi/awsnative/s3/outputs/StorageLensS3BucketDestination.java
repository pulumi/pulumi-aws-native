// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.outputs;

import com.pulumi.awsnative.s3.enums.StorageLensS3BucketDestinationFormat;
import com.pulumi.awsnative.s3.enums.StorageLensS3BucketDestinationOutputSchemaVersion;
import com.pulumi.awsnative.s3.outputs.StorageLensEncryption;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StorageLensS3BucketDestination {
    /**
     * @return The AWS account ID that owns the destination S3 bucket.
     * 
     */
    private String accountId;
    /**
     * @return The ARN of the bucket to which Amazon S3 Storage Lens exports will be placed.
     * 
     */
    private String arn;
    private @Nullable StorageLensEncryption encryption;
    /**
     * @return Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export.
     * 
     */
    private StorageLensS3BucketDestinationFormat format;
    /**
     * @return The version of the output schema to use when exporting Amazon S3 Storage Lens metrics.
     * 
     */
    private StorageLensS3BucketDestinationOutputSchemaVersion outputSchemaVersion;
    /**
     * @return The prefix to use for Amazon S3 Storage Lens export.
     * 
     */
    private @Nullable String prefix;

    private StorageLensS3BucketDestination() {}
    /**
     * @return The AWS account ID that owns the destination S3 bucket.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return The ARN of the bucket to which Amazon S3 Storage Lens exports will be placed.
     * 
     */
    public String arn() {
        return this.arn;
    }
    public Optional<StorageLensEncryption> encryption() {
        return Optional.ofNullable(this.encryption);
    }
    /**
     * @return Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export.
     * 
     */
    public StorageLensS3BucketDestinationFormat format() {
        return this.format;
    }
    /**
     * @return The version of the output schema to use when exporting Amazon S3 Storage Lens metrics.
     * 
     */
    public StorageLensS3BucketDestinationOutputSchemaVersion outputSchemaVersion() {
        return this.outputSchemaVersion;
    }
    /**
     * @return The prefix to use for Amazon S3 Storage Lens export.
     * 
     */
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StorageLensS3BucketDestination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String arn;
        private @Nullable StorageLensEncryption encryption;
        private StorageLensS3BucketDestinationFormat format;
        private StorageLensS3BucketDestinationOutputSchemaVersion outputSchemaVersion;
        private @Nullable String prefix;
        public Builder() {}
        public Builder(StorageLensS3BucketDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.arn = defaults.arn;
    	      this.encryption = defaults.encryption;
    	      this.format = defaults.format;
    	      this.outputSchemaVersion = defaults.outputSchemaVersion;
    	      this.prefix = defaults.prefix;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }
        @CustomType.Setter
        public Builder arn(String arn) {
            this.arn = Objects.requireNonNull(arn);
            return this;
        }
        @CustomType.Setter
        public Builder encryption(@Nullable StorageLensEncryption encryption) {
            this.encryption = encryption;
            return this;
        }
        @CustomType.Setter
        public Builder format(StorageLensS3BucketDestinationFormat format) {
            this.format = Objects.requireNonNull(format);
            return this;
        }
        @CustomType.Setter
        public Builder outputSchemaVersion(StorageLensS3BucketDestinationOutputSchemaVersion outputSchemaVersion) {
            this.outputSchemaVersion = Objects.requireNonNull(outputSchemaVersion);
            return this;
        }
        @CustomType.Setter
        public Builder prefix(@Nullable String prefix) {
            this.prefix = prefix;
            return this;
        }
        public StorageLensS3BucketDestination build() {
            final var o = new StorageLensS3BucketDestination();
            o.accountId = accountId;
            o.arn = arn;
            o.encryption = encryption;
            o.format = format;
            o.outputSchemaVersion = outputSchemaVersion;
            o.prefix = prefix;
            return o;
        }
    }
}
