// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.databrew.outputs;

import com.pulumi.awsnative.databrew.outputs.DatasetFilterValue;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class DatasetFilterExpression {
    /**
     * @return Filtering expression for a parameter
     * 
     */
    private String expression;
    private List<DatasetFilterValue> valuesMap;

    private DatasetFilterExpression() {}
    /**
     * @return Filtering expression for a parameter
     * 
     */
    public String expression() {
        return this.expression;
    }
    public List<DatasetFilterValue> valuesMap() {
        return this.valuesMap;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetFilterExpression defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String expression;
        private List<DatasetFilterValue> valuesMap;
        public Builder() {}
        public Builder(DatasetFilterExpression defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expression = defaults.expression;
    	      this.valuesMap = defaults.valuesMap;
        }

        @CustomType.Setter
        public Builder expression(String expression) {
            this.expression = Objects.requireNonNull(expression);
            return this;
        }
        @CustomType.Setter
        public Builder valuesMap(List<DatasetFilterValue> valuesMap) {
            this.valuesMap = Objects.requireNonNull(valuesMap);
            return this;
        }
        public Builder valuesMap(DatasetFilterValue... valuesMap) {
            return valuesMap(List.of(valuesMap));
        }
        public DatasetFilterExpression build() {
            final var o = new DatasetFilterExpression();
            o.expression = expression;
            o.valuesMap = valuesMap;
            return o;
        }
    }
}
