// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.personalize.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The Amazon S3 bucket that contains the training data to import.
 * 
 */
public final class DatasetImportJobDataSourcePropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatasetImportJobDataSourcePropertiesArgs Empty = new DatasetImportJobDataSourcePropertiesArgs();

    /**
     * The path to the Amazon S3 bucket where the data that you want to upload to your dataset is stored.
     * 
     */
    @Import(name="dataLocation")
    private @Nullable Output<String> dataLocation;

    /**
     * @return The path to the Amazon S3 bucket where the data that you want to upload to your dataset is stored.
     * 
     */
    public Optional<Output<String>> dataLocation() {
        return Optional.ofNullable(this.dataLocation);
    }

    private DatasetImportJobDataSourcePropertiesArgs() {}

    private DatasetImportJobDataSourcePropertiesArgs(DatasetImportJobDataSourcePropertiesArgs $) {
        this.dataLocation = $.dataLocation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetImportJobDataSourcePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetImportJobDataSourcePropertiesArgs $;

        public Builder() {
            $ = new DatasetImportJobDataSourcePropertiesArgs();
        }

        public Builder(DatasetImportJobDataSourcePropertiesArgs defaults) {
            $ = new DatasetImportJobDataSourcePropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataLocation The path to the Amazon S3 bucket where the data that you want to upload to your dataset is stored.
         * 
         * @return builder
         * 
         */
        public Builder dataLocation(@Nullable Output<String> dataLocation) {
            $.dataLocation = dataLocation;
            return this;
        }

        /**
         * @param dataLocation The path to the Amazon S3 bucket where the data that you want to upload to your dataset is stored.
         * 
         * @return builder
         * 
         */
        public Builder dataLocation(String dataLocation) {
            return dataLocation(Output.of(dataLocation));
        }

        public DatasetImportJobDataSourcePropertiesArgs build() {
            return $;
        }
    }

}
