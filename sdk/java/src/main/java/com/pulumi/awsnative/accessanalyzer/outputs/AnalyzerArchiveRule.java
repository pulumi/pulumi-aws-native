// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.accessanalyzer.outputs;

import com.pulumi.awsnative.accessanalyzer.outputs.AnalyzerFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class AnalyzerArchiveRule {
    private List<AnalyzerFilter> filter;
    /**
     * @return The archive rule name
     * 
     */
    private String ruleName;

    private AnalyzerArchiveRule() {}
    public List<AnalyzerFilter> filter() {
        return this.filter;
    }
    /**
     * @return The archive rule name
     * 
     */
    public String ruleName() {
        return this.ruleName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AnalyzerArchiveRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<AnalyzerFilter> filter;
        private String ruleName;
        public Builder() {}
        public Builder(AnalyzerArchiveRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filter = defaults.filter;
    	      this.ruleName = defaults.ruleName;
        }

        @CustomType.Setter
        public Builder filter(List<AnalyzerFilter> filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }
        public Builder filter(AnalyzerFilter... filter) {
            return filter(List.of(filter));
        }
        @CustomType.Setter
        public Builder ruleName(String ruleName) {
            this.ruleName = Objects.requireNonNull(ruleName);
            return this;
        }
        public AnalyzerArchiveRule build() {
            final var o = new AnalyzerArchiveRule();
            o.filter = filter;
            o.ruleName = ruleName;
            return o;
        }
    }
}
