// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.refactorspaces.inputs;

import com.pulumi.awsnative.refactorspaces.enums.RouteActivationState;
import com.pulumi.awsnative.refactorspaces.enums.RouteMethod;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteUriPathRouteInputArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouteUriPathRouteInputArgs Empty = new RouteUriPathRouteInputArgs();

    @Import(name="activationState", required=true)
    private Output<RouteActivationState> activationState;

    public Output<RouteActivationState> activationState() {
        return this.activationState;
    }

    @Import(name="includeChildPaths")
    private @Nullable Output<Boolean> includeChildPaths;

    public Optional<Output<Boolean>> includeChildPaths() {
        return Optional.ofNullable(this.includeChildPaths);
    }

    @Import(name="methods")
    private @Nullable Output<List<RouteMethod>> methods;

    public Optional<Output<List<RouteMethod>>> methods() {
        return Optional.ofNullable(this.methods);
    }

    @Import(name="sourcePath")
    private @Nullable Output<String> sourcePath;

    public Optional<Output<String>> sourcePath() {
        return Optional.ofNullable(this.sourcePath);
    }

    private RouteUriPathRouteInputArgs() {}

    private RouteUriPathRouteInputArgs(RouteUriPathRouteInputArgs $) {
        this.activationState = $.activationState;
        this.includeChildPaths = $.includeChildPaths;
        this.methods = $.methods;
        this.sourcePath = $.sourcePath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteUriPathRouteInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteUriPathRouteInputArgs $;

        public Builder() {
            $ = new RouteUriPathRouteInputArgs();
        }

        public Builder(RouteUriPathRouteInputArgs defaults) {
            $ = new RouteUriPathRouteInputArgs(Objects.requireNonNull(defaults));
        }

        public Builder activationState(Output<RouteActivationState> activationState) {
            $.activationState = activationState;
            return this;
        }

        public Builder activationState(RouteActivationState activationState) {
            return activationState(Output.of(activationState));
        }

        public Builder includeChildPaths(@Nullable Output<Boolean> includeChildPaths) {
            $.includeChildPaths = includeChildPaths;
            return this;
        }

        public Builder includeChildPaths(Boolean includeChildPaths) {
            return includeChildPaths(Output.of(includeChildPaths));
        }

        public Builder methods(@Nullable Output<List<RouteMethod>> methods) {
            $.methods = methods;
            return this;
        }

        public Builder methods(List<RouteMethod> methods) {
            return methods(Output.of(methods));
        }

        public Builder methods(RouteMethod... methods) {
            return methods(List.of(methods));
        }

        public Builder sourcePath(@Nullable Output<String> sourcePath) {
            $.sourcePath = sourcePath;
            return this;
        }

        public Builder sourcePath(String sourcePath) {
            return sourcePath(Output.of(sourcePath));
        }

        public RouteUriPathRouteInputArgs build() {
            $.activationState = Objects.requireNonNull($.activationState, "expected parameter 'activationState' to be non-null");
            return $;
        }
    }

}
