// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2;

import com.pulumi.awsnative.ec2.inputs.TransitGatewayTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransitGatewayArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransitGatewayArgs Empty = new TransitGatewayArgs();

    @Import(name="amazonSideAsn")
    private @Nullable Output<Integer> amazonSideAsn;

    public Optional<Output<Integer>> amazonSideAsn() {
        return Optional.ofNullable(this.amazonSideAsn);
    }

    @Import(name="associationDefaultRouteTableId")
    private @Nullable Output<String> associationDefaultRouteTableId;

    public Optional<Output<String>> associationDefaultRouteTableId() {
        return Optional.ofNullable(this.associationDefaultRouteTableId);
    }

    @Import(name="autoAcceptSharedAttachments")
    private @Nullable Output<String> autoAcceptSharedAttachments;

    public Optional<Output<String>> autoAcceptSharedAttachments() {
        return Optional.ofNullable(this.autoAcceptSharedAttachments);
    }

    @Import(name="defaultRouteTableAssociation")
    private @Nullable Output<String> defaultRouteTableAssociation;

    public Optional<Output<String>> defaultRouteTableAssociation() {
        return Optional.ofNullable(this.defaultRouteTableAssociation);
    }

    @Import(name="defaultRouteTablePropagation")
    private @Nullable Output<String> defaultRouteTablePropagation;

    public Optional<Output<String>> defaultRouteTablePropagation() {
        return Optional.ofNullable(this.defaultRouteTablePropagation);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="dnsSupport")
    private @Nullable Output<String> dnsSupport;

    public Optional<Output<String>> dnsSupport() {
        return Optional.ofNullable(this.dnsSupport);
    }

    @Import(name="multicastSupport")
    private @Nullable Output<String> multicastSupport;

    public Optional<Output<String>> multicastSupport() {
        return Optional.ofNullable(this.multicastSupport);
    }

    @Import(name="propagationDefaultRouteTableId")
    private @Nullable Output<String> propagationDefaultRouteTableId;

    public Optional<Output<String>> propagationDefaultRouteTableId() {
        return Optional.ofNullable(this.propagationDefaultRouteTableId);
    }

    @Import(name="tags")
    private @Nullable Output<List<TransitGatewayTagArgs>> tags;

    public Optional<Output<List<TransitGatewayTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="transitGatewayCidrBlocks")
    private @Nullable Output<List<String>> transitGatewayCidrBlocks;

    public Optional<Output<List<String>>> transitGatewayCidrBlocks() {
        return Optional.ofNullable(this.transitGatewayCidrBlocks);
    }

    @Import(name="vpnEcmpSupport")
    private @Nullable Output<String> vpnEcmpSupport;

    public Optional<Output<String>> vpnEcmpSupport() {
        return Optional.ofNullable(this.vpnEcmpSupport);
    }

    private TransitGatewayArgs() {}

    private TransitGatewayArgs(TransitGatewayArgs $) {
        this.amazonSideAsn = $.amazonSideAsn;
        this.associationDefaultRouteTableId = $.associationDefaultRouteTableId;
        this.autoAcceptSharedAttachments = $.autoAcceptSharedAttachments;
        this.defaultRouteTableAssociation = $.defaultRouteTableAssociation;
        this.defaultRouteTablePropagation = $.defaultRouteTablePropagation;
        this.description = $.description;
        this.dnsSupport = $.dnsSupport;
        this.multicastSupport = $.multicastSupport;
        this.propagationDefaultRouteTableId = $.propagationDefaultRouteTableId;
        this.tags = $.tags;
        this.transitGatewayCidrBlocks = $.transitGatewayCidrBlocks;
        this.vpnEcmpSupport = $.vpnEcmpSupport;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransitGatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransitGatewayArgs $;

        public Builder() {
            $ = new TransitGatewayArgs();
        }

        public Builder(TransitGatewayArgs defaults) {
            $ = new TransitGatewayArgs(Objects.requireNonNull(defaults));
        }

        public Builder amazonSideAsn(@Nullable Output<Integer> amazonSideAsn) {
            $.amazonSideAsn = amazonSideAsn;
            return this;
        }

        public Builder amazonSideAsn(Integer amazonSideAsn) {
            return amazonSideAsn(Output.of(amazonSideAsn));
        }

        public Builder associationDefaultRouteTableId(@Nullable Output<String> associationDefaultRouteTableId) {
            $.associationDefaultRouteTableId = associationDefaultRouteTableId;
            return this;
        }

        public Builder associationDefaultRouteTableId(String associationDefaultRouteTableId) {
            return associationDefaultRouteTableId(Output.of(associationDefaultRouteTableId));
        }

        public Builder autoAcceptSharedAttachments(@Nullable Output<String> autoAcceptSharedAttachments) {
            $.autoAcceptSharedAttachments = autoAcceptSharedAttachments;
            return this;
        }

        public Builder autoAcceptSharedAttachments(String autoAcceptSharedAttachments) {
            return autoAcceptSharedAttachments(Output.of(autoAcceptSharedAttachments));
        }

        public Builder defaultRouteTableAssociation(@Nullable Output<String> defaultRouteTableAssociation) {
            $.defaultRouteTableAssociation = defaultRouteTableAssociation;
            return this;
        }

        public Builder defaultRouteTableAssociation(String defaultRouteTableAssociation) {
            return defaultRouteTableAssociation(Output.of(defaultRouteTableAssociation));
        }

        public Builder defaultRouteTablePropagation(@Nullable Output<String> defaultRouteTablePropagation) {
            $.defaultRouteTablePropagation = defaultRouteTablePropagation;
            return this;
        }

        public Builder defaultRouteTablePropagation(String defaultRouteTablePropagation) {
            return defaultRouteTablePropagation(Output.of(defaultRouteTablePropagation));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder dnsSupport(@Nullable Output<String> dnsSupport) {
            $.dnsSupport = dnsSupport;
            return this;
        }

        public Builder dnsSupport(String dnsSupport) {
            return dnsSupport(Output.of(dnsSupport));
        }

        public Builder multicastSupport(@Nullable Output<String> multicastSupport) {
            $.multicastSupport = multicastSupport;
            return this;
        }

        public Builder multicastSupport(String multicastSupport) {
            return multicastSupport(Output.of(multicastSupport));
        }

        public Builder propagationDefaultRouteTableId(@Nullable Output<String> propagationDefaultRouteTableId) {
            $.propagationDefaultRouteTableId = propagationDefaultRouteTableId;
            return this;
        }

        public Builder propagationDefaultRouteTableId(String propagationDefaultRouteTableId) {
            return propagationDefaultRouteTableId(Output.of(propagationDefaultRouteTableId));
        }

        public Builder tags(@Nullable Output<List<TransitGatewayTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<TransitGatewayTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(TransitGatewayTagArgs... tags) {
            return tags(List.of(tags));
        }

        public Builder transitGatewayCidrBlocks(@Nullable Output<List<String>> transitGatewayCidrBlocks) {
            $.transitGatewayCidrBlocks = transitGatewayCidrBlocks;
            return this;
        }

        public Builder transitGatewayCidrBlocks(List<String> transitGatewayCidrBlocks) {
            return transitGatewayCidrBlocks(Output.of(transitGatewayCidrBlocks));
        }

        public Builder transitGatewayCidrBlocks(String... transitGatewayCidrBlocks) {
            return transitGatewayCidrBlocks(List.of(transitGatewayCidrBlocks));
        }

        public Builder vpnEcmpSupport(@Nullable Output<String> vpnEcmpSupport) {
            $.vpnEcmpSupport = vpnEcmpSupport;
            return this;
        }

        public Builder vpnEcmpSupport(String vpnEcmpSupport) {
            return vpnEcmpSupport(Output.of(vpnEcmpSupport));
        }

        public TransitGatewayArgs build() {
            return $;
        }
    }

}
