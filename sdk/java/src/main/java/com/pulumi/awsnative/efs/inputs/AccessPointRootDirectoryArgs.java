// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.efs.inputs;

import com.pulumi.awsnative.efs.inputs.AccessPointCreationInfoArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessPointRootDirectoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessPointRootDirectoryArgs Empty = new AccessPointRootDirectoryArgs();

    /**
     * (Optional) Specifies the POSIX IDs and permissions to apply to the access point&#39;s RootDirectory. If the RootDirectory&gt;Path specified does not exist, EFS creates the root directory using the CreationInfo settings when a client connects to an access point. When specifying the CreationInfo, you must provide values for all properties.   If you do not provide CreationInfo and the specified RootDirectory&gt;Path does not exist, attempts to mount the file system using the access point will fail.
     * 
     */
    @Import(name="creationInfo")
    private @Nullable Output<AccessPointCreationInfoArgs> creationInfo;

    /**
     * @return (Optional) Specifies the POSIX IDs and permissions to apply to the access point&#39;s RootDirectory. If the RootDirectory&gt;Path specified does not exist, EFS creates the root directory using the CreationInfo settings when a client connects to an access point. When specifying the CreationInfo, you must provide values for all properties.   If you do not provide CreationInfo and the specified RootDirectory&gt;Path does not exist, attempts to mount the file system using the access point will fail.
     * 
     */
    public Optional<Output<AccessPointCreationInfoArgs>> creationInfo() {
        return Optional.ofNullable(this.creationInfo);
    }

    /**
     * Specifies the path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide the CreationInfo.
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return Specifies the path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide the CreationInfo.
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    private AccessPointRootDirectoryArgs() {}

    private AccessPointRootDirectoryArgs(AccessPointRootDirectoryArgs $) {
        this.creationInfo = $.creationInfo;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessPointRootDirectoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessPointRootDirectoryArgs $;

        public Builder() {
            $ = new AccessPointRootDirectoryArgs();
        }

        public Builder(AccessPointRootDirectoryArgs defaults) {
            $ = new AccessPointRootDirectoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param creationInfo (Optional) Specifies the POSIX IDs and permissions to apply to the access point&#39;s RootDirectory. If the RootDirectory&gt;Path specified does not exist, EFS creates the root directory using the CreationInfo settings when a client connects to an access point. When specifying the CreationInfo, you must provide values for all properties.   If you do not provide CreationInfo and the specified RootDirectory&gt;Path does not exist, attempts to mount the file system using the access point will fail.
         * 
         * @return builder
         * 
         */
        public Builder creationInfo(@Nullable Output<AccessPointCreationInfoArgs> creationInfo) {
            $.creationInfo = creationInfo;
            return this;
        }

        /**
         * @param creationInfo (Optional) Specifies the POSIX IDs and permissions to apply to the access point&#39;s RootDirectory. If the RootDirectory&gt;Path specified does not exist, EFS creates the root directory using the CreationInfo settings when a client connects to an access point. When specifying the CreationInfo, you must provide values for all properties.   If you do not provide CreationInfo and the specified RootDirectory&gt;Path does not exist, attempts to mount the file system using the access point will fail.
         * 
         * @return builder
         * 
         */
        public Builder creationInfo(AccessPointCreationInfoArgs creationInfo) {
            return creationInfo(Output.of(creationInfo));
        }

        /**
         * @param path Specifies the path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide the CreationInfo.
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Specifies the path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide the CreationInfo.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        public AccessPointRootDirectoryArgs build() {
            return $;
        }
    }

}
