// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.nimblestudio.inputs;

import com.pulumi.awsnative.nimblestudio.inputs.StudioComponentActiveDirectoryComputerAttributeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * &lt;p&gt;The configuration for a Microsoft Active Directory (Microsoft AD) studio resource.&lt;/p&gt;
 * 
 */
public final class StudioComponentActiveDirectoryConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final StudioComponentActiveDirectoryConfigurationArgs Empty = new StudioComponentActiveDirectoryConfigurationArgs();

    /**
     * &lt;p&gt;A collection of custom attributes for an Active Directory computer.&lt;/p&gt;
     * 
     */
    @Import(name="computerAttributes")
    private @Nullable Output<List<StudioComponentActiveDirectoryComputerAttributeArgs>> computerAttributes;

    /**
     * @return &lt;p&gt;A collection of custom attributes for an Active Directory computer.&lt;/p&gt;
     * 
     */
    public Optional<Output<List<StudioComponentActiveDirectoryComputerAttributeArgs>>> computerAttributes() {
        return Optional.ofNullable(this.computerAttributes);
    }

    /**
     * &lt;p&gt;The directory ID of the Directory Service for Microsoft Active Directory to access using this studio component.&lt;/p&gt;
     * 
     */
    @Import(name="directoryId")
    private @Nullable Output<String> directoryId;

    /**
     * @return &lt;p&gt;The directory ID of the Directory Service for Microsoft Active Directory to access using this studio component.&lt;/p&gt;
     * 
     */
    public Optional<Output<String>> directoryId() {
        return Optional.ofNullable(this.directoryId);
    }

    /**
     * &lt;p&gt;The distinguished name (DN) and organizational unit (OU) of an Active Directory computer.&lt;/p&gt;
     * 
     */
    @Import(name="organizationalUnitDistinguishedName")
    private @Nullable Output<String> organizationalUnitDistinguishedName;

    /**
     * @return &lt;p&gt;The distinguished name (DN) and organizational unit (OU) of an Active Directory computer.&lt;/p&gt;
     * 
     */
    public Optional<Output<String>> organizationalUnitDistinguishedName() {
        return Optional.ofNullable(this.organizationalUnitDistinguishedName);
    }

    private StudioComponentActiveDirectoryConfigurationArgs() {}

    private StudioComponentActiveDirectoryConfigurationArgs(StudioComponentActiveDirectoryConfigurationArgs $) {
        this.computerAttributes = $.computerAttributes;
        this.directoryId = $.directoryId;
        this.organizationalUnitDistinguishedName = $.organizationalUnitDistinguishedName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StudioComponentActiveDirectoryConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StudioComponentActiveDirectoryConfigurationArgs $;

        public Builder() {
            $ = new StudioComponentActiveDirectoryConfigurationArgs();
        }

        public Builder(StudioComponentActiveDirectoryConfigurationArgs defaults) {
            $ = new StudioComponentActiveDirectoryConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param computerAttributes &lt;p&gt;A collection of custom attributes for an Active Directory computer.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder computerAttributes(@Nullable Output<List<StudioComponentActiveDirectoryComputerAttributeArgs>> computerAttributes) {
            $.computerAttributes = computerAttributes;
            return this;
        }

        /**
         * @param computerAttributes &lt;p&gt;A collection of custom attributes for an Active Directory computer.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder computerAttributes(List<StudioComponentActiveDirectoryComputerAttributeArgs> computerAttributes) {
            return computerAttributes(Output.of(computerAttributes));
        }

        /**
         * @param computerAttributes &lt;p&gt;A collection of custom attributes for an Active Directory computer.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder computerAttributes(StudioComponentActiveDirectoryComputerAttributeArgs... computerAttributes) {
            return computerAttributes(List.of(computerAttributes));
        }

        /**
         * @param directoryId &lt;p&gt;The directory ID of the Directory Service for Microsoft Active Directory to access using this studio component.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder directoryId(@Nullable Output<String> directoryId) {
            $.directoryId = directoryId;
            return this;
        }

        /**
         * @param directoryId &lt;p&gt;The directory ID of the Directory Service for Microsoft Active Directory to access using this studio component.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder directoryId(String directoryId) {
            return directoryId(Output.of(directoryId));
        }

        /**
         * @param organizationalUnitDistinguishedName &lt;p&gt;The distinguished name (DN) and organizational unit (OU) of an Active Directory computer.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder organizationalUnitDistinguishedName(@Nullable Output<String> organizationalUnitDistinguishedName) {
            $.organizationalUnitDistinguishedName = organizationalUnitDistinguishedName;
            return this;
        }

        /**
         * @param organizationalUnitDistinguishedName &lt;p&gt;The distinguished name (DN) and organizational unit (OU) of an Active Directory computer.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder organizationalUnitDistinguishedName(String organizationalUnitDistinguishedName) {
            return organizationalUnitDistinguishedName(Output.of(organizationalUnitDistinguishedName));
        }

        public StudioComponentActiveDirectoryConfigurationArgs build() {
            return $;
        }
    }

}
