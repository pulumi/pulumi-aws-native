// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudformation.outputs;

import com.pulumi.awsnative.cloudformation.enums.ResourceVersionProvisioningType;
import com.pulumi.awsnative.cloudformation.enums.ResourceVersionVisibility;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetResourceVersionResult {
    /**
     * @return The Amazon Resource Name (ARN) of the type, here the ResourceVersion. This is used to uniquely identify a ResourceVersion resource
     * 
     */
    private @Nullable String arn;
    /**
     * @return Indicates if this type version is the current default version
     * 
     */
    private @Nullable Boolean isDefaultVersion;
    /**
     * @return The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.
     * 
     */
    private @Nullable ResourceVersionProvisioningType provisioningType;
    /**
     * @return The Amazon Resource Name (ARN) of the type without the versionID.
     * 
     */
    private @Nullable String typeArn;
    /**
     * @return The ID of the version of the type represented by this resource instance.
     * 
     */
    private @Nullable String versionId;
    /**
     * @return The scope at which the type is visible and usable in CloudFormation operations.
     * 
     * Valid values include:
     * 
     * PRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE.
     * 
     * PUBLIC: The type is publically visible and usable within any Amazon account.
     * 
     */
    private @Nullable ResourceVersionVisibility visibility;

    private GetResourceVersionResult() {}
    /**
     * @return The Amazon Resource Name (ARN) of the type, here the ResourceVersion. This is used to uniquely identify a ResourceVersion resource
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Indicates if this type version is the current default version
     * 
     */
    public Optional<Boolean> isDefaultVersion() {
        return Optional.ofNullable(this.isDefaultVersion);
    }
    /**
     * @return The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.
     * 
     */
    public Optional<ResourceVersionProvisioningType> provisioningType() {
        return Optional.ofNullable(this.provisioningType);
    }
    /**
     * @return The Amazon Resource Name (ARN) of the type without the versionID.
     * 
     */
    public Optional<String> typeArn() {
        return Optional.ofNullable(this.typeArn);
    }
    /**
     * @return The ID of the version of the type represented by this resource instance.
     * 
     */
    public Optional<String> versionId() {
        return Optional.ofNullable(this.versionId);
    }
    /**
     * @return The scope at which the type is visible and usable in CloudFormation operations.
     * 
     * Valid values include:
     * 
     * PRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE.
     * 
     * PUBLIC: The type is publically visible and usable within any Amazon account.
     * 
     */
    public Optional<ResourceVersionVisibility> visibility() {
        return Optional.ofNullable(this.visibility);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourceVersionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable Boolean isDefaultVersion;
        private @Nullable ResourceVersionProvisioningType provisioningType;
        private @Nullable String typeArn;
        private @Nullable String versionId;
        private @Nullable ResourceVersionVisibility visibility;
        public Builder() {}
        public Builder(GetResourceVersionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.isDefaultVersion = defaults.isDefaultVersion;
    	      this.provisioningType = defaults.provisioningType;
    	      this.typeArn = defaults.typeArn;
    	      this.versionId = defaults.versionId;
    	      this.visibility = defaults.visibility;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder isDefaultVersion(@Nullable Boolean isDefaultVersion) {
            this.isDefaultVersion = isDefaultVersion;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningType(@Nullable ResourceVersionProvisioningType provisioningType) {
            this.provisioningType = provisioningType;
            return this;
        }
        @CustomType.Setter
        public Builder typeArn(@Nullable String typeArn) {
            this.typeArn = typeArn;
            return this;
        }
        @CustomType.Setter
        public Builder versionId(@Nullable String versionId) {
            this.versionId = versionId;
            return this;
        }
        @CustomType.Setter
        public Builder visibility(@Nullable ResourceVersionVisibility visibility) {
            this.visibility = visibility;
            return this;
        }
        public GetResourceVersionResult build() {
            final var o = new GetResourceVersionResult();
            o.arn = arn;
            o.isDefaultVersion = isDefaultVersion;
            o.provisioningType = provisioningType;
            o.typeArn = typeArn;
            o.versionId = versionId;
            o.visibility = visibility;
            return o;
        }
    }
}
