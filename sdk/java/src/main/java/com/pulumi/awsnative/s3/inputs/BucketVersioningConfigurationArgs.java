// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.enums.BucketVersioningConfigurationStatus;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


/**
 * Describes the versioning state of an Amazon S3 bucket.
 * 
 */
public final class BucketVersioningConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketVersioningConfigurationArgs Empty = new BucketVersioningConfigurationArgs();

    /**
     * The versioning state of the bucket.
     * 
     */
    @Import(name="status", required=true)
    private Output<BucketVersioningConfigurationStatus> status;

    /**
     * @return The versioning state of the bucket.
     * 
     */
    public Output<BucketVersioningConfigurationStatus> status() {
        return this.status;
    }

    private BucketVersioningConfigurationArgs() {}

    private BucketVersioningConfigurationArgs(BucketVersioningConfigurationArgs $) {
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketVersioningConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketVersioningConfigurationArgs $;

        public Builder() {
            $ = new BucketVersioningConfigurationArgs();
        }

        public Builder(BucketVersioningConfigurationArgs defaults) {
            $ = new BucketVersioningConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param status The versioning state of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder status(Output<BucketVersioningConfigurationStatus> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The versioning state of the bucket.
         * 
         * @return builder
         * 
         */
        public Builder status(BucketVersioningConfigurationStatus status) {
            return status(Output.of(status));
        }

        public BucketVersioningConfigurationArgs build() {
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
