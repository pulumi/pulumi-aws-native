// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotevents.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A structure that contains timestamp information. For more information, see [TimeInNanos](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_TimeInNanos.html) in the *AWS IoT SiteWise API Reference*.
 * 
 */
public final class AlarmModelAssetPropertyTimestampArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlarmModelAssetPropertyTimestampArgs Empty = new AlarmModelAssetPropertyTimestampArgs();

    /**
     * The timestamp, in seconds, in the Unix epoch format. The valid range is between `1-31556889864403199`. You can also specify an expression.
     * 
     */
    @Import(name="offsetInNanos")
    private @Nullable Output<String> offsetInNanos;

    /**
     * @return The timestamp, in seconds, in the Unix epoch format. The valid range is between `1-31556889864403199`. You can also specify an expression.
     * 
     */
    public Optional<Output<String>> offsetInNanos() {
        return Optional.ofNullable(this.offsetInNanos);
    }

    /**
     * The nanosecond offset converted from `timeInSeconds`. The valid range is between `0-999999999`. You can also specify an expression.
     * 
     */
    @Import(name="timeInSeconds", required=true)
    private Output<String> timeInSeconds;

    /**
     * @return The nanosecond offset converted from `timeInSeconds`. The valid range is between `0-999999999`. You can also specify an expression.
     * 
     */
    public Output<String> timeInSeconds() {
        return this.timeInSeconds;
    }

    private AlarmModelAssetPropertyTimestampArgs() {}

    private AlarmModelAssetPropertyTimestampArgs(AlarmModelAssetPropertyTimestampArgs $) {
        this.offsetInNanos = $.offsetInNanos;
        this.timeInSeconds = $.timeInSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlarmModelAssetPropertyTimestampArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlarmModelAssetPropertyTimestampArgs $;

        public Builder() {
            $ = new AlarmModelAssetPropertyTimestampArgs();
        }

        public Builder(AlarmModelAssetPropertyTimestampArgs defaults) {
            $ = new AlarmModelAssetPropertyTimestampArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param offsetInNanos The timestamp, in seconds, in the Unix epoch format. The valid range is between `1-31556889864403199`. You can also specify an expression.
         * 
         * @return builder
         * 
         */
        public Builder offsetInNanos(@Nullable Output<String> offsetInNanos) {
            $.offsetInNanos = offsetInNanos;
            return this;
        }

        /**
         * @param offsetInNanos The timestamp, in seconds, in the Unix epoch format. The valid range is between `1-31556889864403199`. You can also specify an expression.
         * 
         * @return builder
         * 
         */
        public Builder offsetInNanos(String offsetInNanos) {
            return offsetInNanos(Output.of(offsetInNanos));
        }

        /**
         * @param timeInSeconds The nanosecond offset converted from `timeInSeconds`. The valid range is between `0-999999999`. You can also specify an expression.
         * 
         * @return builder
         * 
         */
        public Builder timeInSeconds(Output<String> timeInSeconds) {
            $.timeInSeconds = timeInSeconds;
            return this;
        }

        /**
         * @param timeInSeconds The nanosecond offset converted from `timeInSeconds`. The valid range is between `0-999999999`. You can also specify an expression.
         * 
         * @return builder
         * 
         */
        public Builder timeInSeconds(String timeInSeconds) {
            return timeInSeconds(Output.of(timeInSeconds));
        }

        public AlarmModelAssetPropertyTimestampArgs build() {
            $.timeInSeconds = Objects.requireNonNull($.timeInSeconds, "expected parameter 'timeInSeconds' to be non-null");
            return $;
        }
    }

}
