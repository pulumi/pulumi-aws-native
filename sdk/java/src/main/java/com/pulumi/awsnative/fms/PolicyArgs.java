// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.fms;

import com.pulumi.awsnative.fms.inputs.PolicyIEMapArgs;
import com.pulumi.awsnative.fms.inputs.PolicyResourceTagArgs;
import com.pulumi.awsnative.fms.inputs.PolicyTagArgs;
import com.pulumi.awsnative.fms.inputs.SecurityServicePolicyDataPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyArgs Empty = new PolicyArgs();

    @Import(name="deleteAllPolicyResources")
    private @Nullable Output<Boolean> deleteAllPolicyResources;

    public Optional<Output<Boolean>> deleteAllPolicyResources() {
        return Optional.ofNullable(this.deleteAllPolicyResources);
    }

    @Import(name="excludeMap")
    private @Nullable Output<PolicyIEMapArgs> excludeMap;

    public Optional<Output<PolicyIEMapArgs>> excludeMap() {
        return Optional.ofNullable(this.excludeMap);
    }

    @Import(name="excludeResourceTags", required=true)
    private Output<Boolean> excludeResourceTags;

    public Output<Boolean> excludeResourceTags() {
        return this.excludeResourceTags;
    }

    @Import(name="includeMap")
    private @Nullable Output<PolicyIEMapArgs> includeMap;

    public Optional<Output<PolicyIEMapArgs>> includeMap() {
        return Optional.ofNullable(this.includeMap);
    }

    @Import(name="policyName")
    private @Nullable Output<String> policyName;

    public Optional<Output<String>> policyName() {
        return Optional.ofNullable(this.policyName);
    }

    @Import(name="remediationEnabled", required=true)
    private Output<Boolean> remediationEnabled;

    public Output<Boolean> remediationEnabled() {
        return this.remediationEnabled;
    }

    @Import(name="resourceTags")
    private @Nullable Output<List<PolicyResourceTagArgs>> resourceTags;

    public Optional<Output<List<PolicyResourceTagArgs>>> resourceTags() {
        return Optional.ofNullable(this.resourceTags);
    }

    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    public Output<String> resourceType() {
        return this.resourceType;
    }

    @Import(name="resourceTypeList")
    private @Nullable Output<List<String>> resourceTypeList;

    public Optional<Output<List<String>>> resourceTypeList() {
        return Optional.ofNullable(this.resourceTypeList);
    }

    @Import(name="resourcesCleanUp")
    private @Nullable Output<Boolean> resourcesCleanUp;

    public Optional<Output<Boolean>> resourcesCleanUp() {
        return Optional.ofNullable(this.resourcesCleanUp);
    }

    @Import(name="securityServicePolicyData", required=true)
    private Output<SecurityServicePolicyDataPropertiesArgs> securityServicePolicyData;

    public Output<SecurityServicePolicyDataPropertiesArgs> securityServicePolicyData() {
        return this.securityServicePolicyData;
    }

    @Import(name="tags")
    private @Nullable Output<List<PolicyTagArgs>> tags;

    public Optional<Output<List<PolicyTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private PolicyArgs() {}

    private PolicyArgs(PolicyArgs $) {
        this.deleteAllPolicyResources = $.deleteAllPolicyResources;
        this.excludeMap = $.excludeMap;
        this.excludeResourceTags = $.excludeResourceTags;
        this.includeMap = $.includeMap;
        this.policyName = $.policyName;
        this.remediationEnabled = $.remediationEnabled;
        this.resourceTags = $.resourceTags;
        this.resourceType = $.resourceType;
        this.resourceTypeList = $.resourceTypeList;
        this.resourcesCleanUp = $.resourcesCleanUp;
        this.securityServicePolicyData = $.securityServicePolicyData;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyArgs $;

        public Builder() {
            $ = new PolicyArgs();
        }

        public Builder(PolicyArgs defaults) {
            $ = new PolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder deleteAllPolicyResources(@Nullable Output<Boolean> deleteAllPolicyResources) {
            $.deleteAllPolicyResources = deleteAllPolicyResources;
            return this;
        }

        public Builder deleteAllPolicyResources(Boolean deleteAllPolicyResources) {
            return deleteAllPolicyResources(Output.of(deleteAllPolicyResources));
        }

        public Builder excludeMap(@Nullable Output<PolicyIEMapArgs> excludeMap) {
            $.excludeMap = excludeMap;
            return this;
        }

        public Builder excludeMap(PolicyIEMapArgs excludeMap) {
            return excludeMap(Output.of(excludeMap));
        }

        public Builder excludeResourceTags(Output<Boolean> excludeResourceTags) {
            $.excludeResourceTags = excludeResourceTags;
            return this;
        }

        public Builder excludeResourceTags(Boolean excludeResourceTags) {
            return excludeResourceTags(Output.of(excludeResourceTags));
        }

        public Builder includeMap(@Nullable Output<PolicyIEMapArgs> includeMap) {
            $.includeMap = includeMap;
            return this;
        }

        public Builder includeMap(PolicyIEMapArgs includeMap) {
            return includeMap(Output.of(includeMap));
        }

        public Builder policyName(@Nullable Output<String> policyName) {
            $.policyName = policyName;
            return this;
        }

        public Builder policyName(String policyName) {
            return policyName(Output.of(policyName));
        }

        public Builder remediationEnabled(Output<Boolean> remediationEnabled) {
            $.remediationEnabled = remediationEnabled;
            return this;
        }

        public Builder remediationEnabled(Boolean remediationEnabled) {
            return remediationEnabled(Output.of(remediationEnabled));
        }

        public Builder resourceTags(@Nullable Output<List<PolicyResourceTagArgs>> resourceTags) {
            $.resourceTags = resourceTags;
            return this;
        }

        public Builder resourceTags(List<PolicyResourceTagArgs> resourceTags) {
            return resourceTags(Output.of(resourceTags));
        }

        public Builder resourceTags(PolicyResourceTagArgs... resourceTags) {
            return resourceTags(List.of(resourceTags));
        }

        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public Builder resourceTypeList(@Nullable Output<List<String>> resourceTypeList) {
            $.resourceTypeList = resourceTypeList;
            return this;
        }

        public Builder resourceTypeList(List<String> resourceTypeList) {
            return resourceTypeList(Output.of(resourceTypeList));
        }

        public Builder resourceTypeList(String... resourceTypeList) {
            return resourceTypeList(List.of(resourceTypeList));
        }

        public Builder resourcesCleanUp(@Nullable Output<Boolean> resourcesCleanUp) {
            $.resourcesCleanUp = resourcesCleanUp;
            return this;
        }

        public Builder resourcesCleanUp(Boolean resourcesCleanUp) {
            return resourcesCleanUp(Output.of(resourcesCleanUp));
        }

        public Builder securityServicePolicyData(Output<SecurityServicePolicyDataPropertiesArgs> securityServicePolicyData) {
            $.securityServicePolicyData = securityServicePolicyData;
            return this;
        }

        public Builder securityServicePolicyData(SecurityServicePolicyDataPropertiesArgs securityServicePolicyData) {
            return securityServicePolicyData(Output.of(securityServicePolicyData));
        }

        public Builder tags(@Nullable Output<List<PolicyTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<PolicyTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(PolicyTagArgs... tags) {
            return tags(List.of(tags));
        }

        public PolicyArgs build() {
            $.excludeResourceTags = Objects.requireNonNull($.excludeResourceTags, "expected parameter 'excludeResourceTags' to be non-null");
            $.remediationEnabled = Objects.requireNonNull($.remediationEnabled, "expected parameter 'remediationEnabled' to be non-null");
            $.resourceType = Objects.requireNonNull($.resourceType, "expected parameter 'resourceType' to be non-null");
            $.securityServicePolicyData = Objects.requireNonNull($.securityServicePolicyData, "expected parameter 'securityServicePolicyData' to be non-null");
            return $;
        }
    }

}
