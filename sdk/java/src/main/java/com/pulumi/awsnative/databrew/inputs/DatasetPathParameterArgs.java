// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.databrew.inputs;

import com.pulumi.awsnative.databrew.inputs.DatasetParameterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * A key-value pair to associate dataset parameter name with its definition.
 * 
 */
public final class DatasetPathParameterArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatasetPathParameterArgs Empty = new DatasetPathParameterArgs();

    @Import(name="datasetParameter", required=true)
    private Output<DatasetParameterArgs> datasetParameter;

    public Output<DatasetParameterArgs> datasetParameter() {
        return this.datasetParameter;
    }

    @Import(name="pathParameterName", required=true)
    private Output<String> pathParameterName;

    public Output<String> pathParameterName() {
        return this.pathParameterName;
    }

    private DatasetPathParameterArgs() {}

    private DatasetPathParameterArgs(DatasetPathParameterArgs $) {
        this.datasetParameter = $.datasetParameter;
        this.pathParameterName = $.pathParameterName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetPathParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetPathParameterArgs $;

        public Builder() {
            $ = new DatasetPathParameterArgs();
        }

        public Builder(DatasetPathParameterArgs defaults) {
            $ = new DatasetPathParameterArgs(Objects.requireNonNull(defaults));
        }

        public Builder datasetParameter(Output<DatasetParameterArgs> datasetParameter) {
            $.datasetParameter = datasetParameter;
            return this;
        }

        public Builder datasetParameter(DatasetParameterArgs datasetParameter) {
            return datasetParameter(Output.of(datasetParameter));
        }

        public Builder pathParameterName(Output<String> pathParameterName) {
            $.pathParameterName = pathParameterName;
            return this;
        }

        public Builder pathParameterName(String pathParameterName) {
            return pathParameterName(Output.of(pathParameterName));
        }

        public DatasetPathParameterArgs build() {
            $.datasetParameter = Objects.requireNonNull($.datasetParameter, "expected parameter 'datasetParameter' to be non-null");
            $.pathParameterName = Objects.requireNonNull($.pathParameterName, "expected parameter 'pathParameterName' to be non-null");
            return $;
        }
    }

}
