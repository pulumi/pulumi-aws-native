// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.ec2.inputs.GetCapacityReservationFleetArgs;
import com.pulumi.awsnative.ec2.inputs.GetCapacityReservationFleetPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetCarrierGatewayArgs;
import com.pulumi.awsnative.ec2.inputs.GetCarrierGatewayPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetCustomerGatewayArgs;
import com.pulumi.awsnative.ec2.inputs.GetCustomerGatewayPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetDHCPOptionsArgs;
import com.pulumi.awsnative.ec2.inputs.GetDHCPOptionsPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetEC2FleetArgs;
import com.pulumi.awsnative.ec2.inputs.GetEC2FleetPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetEgressOnlyInternetGatewayArgs;
import com.pulumi.awsnative.ec2.inputs.GetEgressOnlyInternetGatewayPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetEnclaveCertificateIamRoleAssociationArgs;
import com.pulumi.awsnative.ec2.inputs.GetEnclaveCertificateIamRoleAssociationPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetFlowLogArgs;
import com.pulumi.awsnative.ec2.inputs.GetFlowLogPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetGatewayRouteTableAssociationArgs;
import com.pulumi.awsnative.ec2.inputs.GetGatewayRouteTableAssociationPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetHostArgs;
import com.pulumi.awsnative.ec2.inputs.GetHostPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetIPAMAllocationArgs;
import com.pulumi.awsnative.ec2.inputs.GetIPAMAllocationPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetIPAMArgs;
import com.pulumi.awsnative.ec2.inputs.GetIPAMPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetIPAMPoolArgs;
import com.pulumi.awsnative.ec2.inputs.GetIPAMPoolPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetIPAMScopeArgs;
import com.pulumi.awsnative.ec2.inputs.GetIPAMScopePlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetInternetGatewayArgs;
import com.pulumi.awsnative.ec2.inputs.GetInternetGatewayPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetKeyPairArgs;
import com.pulumi.awsnative.ec2.inputs.GetKeyPairPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetLocalGatewayRouteArgs;
import com.pulumi.awsnative.ec2.inputs.GetLocalGatewayRoutePlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetLocalGatewayRouteTableVPCAssociationArgs;
import com.pulumi.awsnative.ec2.inputs.GetLocalGatewayRouteTableVPCAssociationPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetNatGatewayArgs;
import com.pulumi.awsnative.ec2.inputs.GetNatGatewayPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetNetworkAclArgs;
import com.pulumi.awsnative.ec2.inputs.GetNetworkAclPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetNetworkInsightsAccessScopeAnalysisArgs;
import com.pulumi.awsnative.ec2.inputs.GetNetworkInsightsAccessScopeAnalysisPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetNetworkInsightsAccessScopeArgs;
import com.pulumi.awsnative.ec2.inputs.GetNetworkInsightsAccessScopePlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetNetworkInsightsAnalysisArgs;
import com.pulumi.awsnative.ec2.inputs.GetNetworkInsightsAnalysisPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetNetworkInsightsPathArgs;
import com.pulumi.awsnative.ec2.inputs.GetNetworkInsightsPathPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetNetworkInterfaceArgs;
import com.pulumi.awsnative.ec2.inputs.GetNetworkInterfacePlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetPlacementGroupArgs;
import com.pulumi.awsnative.ec2.inputs.GetPlacementGroupPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetPrefixListArgs;
import com.pulumi.awsnative.ec2.inputs.GetPrefixListPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetRouteTableArgs;
import com.pulumi.awsnative.ec2.inputs.GetRouteTablePlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetSpotFleetArgs;
import com.pulumi.awsnative.ec2.inputs.GetSpotFleetPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetSubnetArgs;
import com.pulumi.awsnative.ec2.inputs.GetSubnetNetworkAclAssociationArgs;
import com.pulumi.awsnative.ec2.inputs.GetSubnetNetworkAclAssociationPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetSubnetPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetSubnetRouteTableAssociationArgs;
import com.pulumi.awsnative.ec2.inputs.GetSubnetRouteTableAssociationPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetTransitGatewayArgs;
import com.pulumi.awsnative.ec2.inputs.GetTransitGatewayAttachmentArgs;
import com.pulumi.awsnative.ec2.inputs.GetTransitGatewayAttachmentPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetTransitGatewayConnectArgs;
import com.pulumi.awsnative.ec2.inputs.GetTransitGatewayConnectPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetTransitGatewayMulticastDomainArgs;
import com.pulumi.awsnative.ec2.inputs.GetTransitGatewayMulticastDomainAssociationArgs;
import com.pulumi.awsnative.ec2.inputs.GetTransitGatewayMulticastDomainAssociationPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetTransitGatewayMulticastDomainPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetTransitGatewayMulticastGroupMemberArgs;
import com.pulumi.awsnative.ec2.inputs.GetTransitGatewayMulticastGroupMemberPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetTransitGatewayMulticastGroupSourceArgs;
import com.pulumi.awsnative.ec2.inputs.GetTransitGatewayMulticastGroupSourcePlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetTransitGatewayPeeringAttachmentArgs;
import com.pulumi.awsnative.ec2.inputs.GetTransitGatewayPeeringAttachmentPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetTransitGatewayPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetTransitGatewayVpcAttachmentArgs;
import com.pulumi.awsnative.ec2.inputs.GetTransitGatewayVpcAttachmentPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetVPCArgs;
import com.pulumi.awsnative.ec2.inputs.GetVPCDHCPOptionsAssociationArgs;
import com.pulumi.awsnative.ec2.inputs.GetVPCDHCPOptionsAssociationPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetVPCPeeringConnectionArgs;
import com.pulumi.awsnative.ec2.inputs.GetVPCPeeringConnectionPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetVPCPlainArgs;
import com.pulumi.awsnative.ec2.inputs.GetVPNGatewayArgs;
import com.pulumi.awsnative.ec2.inputs.GetVPNGatewayPlainArgs;
import com.pulumi.awsnative.ec2.outputs.GetCapacityReservationFleetResult;
import com.pulumi.awsnative.ec2.outputs.GetCarrierGatewayResult;
import com.pulumi.awsnative.ec2.outputs.GetCustomerGatewayResult;
import com.pulumi.awsnative.ec2.outputs.GetDHCPOptionsResult;
import com.pulumi.awsnative.ec2.outputs.GetEC2FleetResult;
import com.pulumi.awsnative.ec2.outputs.GetEgressOnlyInternetGatewayResult;
import com.pulumi.awsnative.ec2.outputs.GetEnclaveCertificateIamRoleAssociationResult;
import com.pulumi.awsnative.ec2.outputs.GetFlowLogResult;
import com.pulumi.awsnative.ec2.outputs.GetGatewayRouteTableAssociationResult;
import com.pulumi.awsnative.ec2.outputs.GetHostResult;
import com.pulumi.awsnative.ec2.outputs.GetIPAMAllocationResult;
import com.pulumi.awsnative.ec2.outputs.GetIPAMPoolResult;
import com.pulumi.awsnative.ec2.outputs.GetIPAMResult;
import com.pulumi.awsnative.ec2.outputs.GetIPAMScopeResult;
import com.pulumi.awsnative.ec2.outputs.GetInternetGatewayResult;
import com.pulumi.awsnative.ec2.outputs.GetKeyPairResult;
import com.pulumi.awsnative.ec2.outputs.GetLocalGatewayRouteResult;
import com.pulumi.awsnative.ec2.outputs.GetLocalGatewayRouteTableVPCAssociationResult;
import com.pulumi.awsnative.ec2.outputs.GetNatGatewayResult;
import com.pulumi.awsnative.ec2.outputs.GetNetworkAclResult;
import com.pulumi.awsnative.ec2.outputs.GetNetworkInsightsAccessScopeAnalysisResult;
import com.pulumi.awsnative.ec2.outputs.GetNetworkInsightsAccessScopeResult;
import com.pulumi.awsnative.ec2.outputs.GetNetworkInsightsAnalysisResult;
import com.pulumi.awsnative.ec2.outputs.GetNetworkInsightsPathResult;
import com.pulumi.awsnative.ec2.outputs.GetNetworkInterfaceResult;
import com.pulumi.awsnative.ec2.outputs.GetPlacementGroupResult;
import com.pulumi.awsnative.ec2.outputs.GetPrefixListResult;
import com.pulumi.awsnative.ec2.outputs.GetRouteTableResult;
import com.pulumi.awsnative.ec2.outputs.GetSpotFleetResult;
import com.pulumi.awsnative.ec2.outputs.GetSubnetNetworkAclAssociationResult;
import com.pulumi.awsnative.ec2.outputs.GetSubnetResult;
import com.pulumi.awsnative.ec2.outputs.GetSubnetRouteTableAssociationResult;
import com.pulumi.awsnative.ec2.outputs.GetTransitGatewayAttachmentResult;
import com.pulumi.awsnative.ec2.outputs.GetTransitGatewayConnectResult;
import com.pulumi.awsnative.ec2.outputs.GetTransitGatewayMulticastDomainAssociationResult;
import com.pulumi.awsnative.ec2.outputs.GetTransitGatewayMulticastDomainResult;
import com.pulumi.awsnative.ec2.outputs.GetTransitGatewayMulticastGroupMemberResult;
import com.pulumi.awsnative.ec2.outputs.GetTransitGatewayMulticastGroupSourceResult;
import com.pulumi.awsnative.ec2.outputs.GetTransitGatewayPeeringAttachmentResult;
import com.pulumi.awsnative.ec2.outputs.GetTransitGatewayResult;
import com.pulumi.awsnative.ec2.outputs.GetTransitGatewayVpcAttachmentResult;
import com.pulumi.awsnative.ec2.outputs.GetVPCDHCPOptionsAssociationResult;
import com.pulumi.awsnative.ec2.outputs.GetVPCPeeringConnectionResult;
import com.pulumi.awsnative.ec2.outputs.GetVPCResult;
import com.pulumi.awsnative.ec2.outputs.GetVPNGatewayResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class Ec2Functions {
    /**
     * Resource Type definition for AWS::EC2::CapacityReservationFleet
     * 
     */
    public static Output<GetCapacityReservationFleetResult> getCapacityReservationFleet(GetCapacityReservationFleetArgs args) {
        return getCapacityReservationFleet(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::CapacityReservationFleet
     * 
     */
    public static CompletableFuture<GetCapacityReservationFleetResult> getCapacityReservationFleetPlain(GetCapacityReservationFleetPlainArgs args) {
        return getCapacityReservationFleetPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::CapacityReservationFleet
     * 
     */
    public static Output<GetCapacityReservationFleetResult> getCapacityReservationFleet(GetCapacityReservationFleetArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getCapacityReservationFleet", TypeShape.of(GetCapacityReservationFleetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::CapacityReservationFleet
     * 
     */
    public static CompletableFuture<GetCapacityReservationFleetResult> getCapacityReservationFleetPlain(GetCapacityReservationFleetPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getCapacityReservationFleet", TypeShape.of(GetCapacityReservationFleetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * An example resource schema demonstrating some basic constructs and validation rules.
     * 
     */
    public static Output<GetCarrierGatewayResult> getCarrierGateway(GetCarrierGatewayArgs args) {
        return getCarrierGateway(args, InvokeOptions.Empty);
    }
    /**
     * An example resource schema demonstrating some basic constructs and validation rules.
     * 
     */
    public static CompletableFuture<GetCarrierGatewayResult> getCarrierGatewayPlain(GetCarrierGatewayPlainArgs args) {
        return getCarrierGatewayPlain(args, InvokeOptions.Empty);
    }
    /**
     * An example resource schema demonstrating some basic constructs and validation rules.
     * 
     */
    public static Output<GetCarrierGatewayResult> getCarrierGateway(GetCarrierGatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getCarrierGateway", TypeShape.of(GetCarrierGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * An example resource schema demonstrating some basic constructs and validation rules.
     * 
     */
    public static CompletableFuture<GetCarrierGatewayResult> getCarrierGatewayPlain(GetCarrierGatewayPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getCarrierGateway", TypeShape.of(GetCarrierGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::CustomerGateway
     * 
     */
    public static Output<GetCustomerGatewayResult> getCustomerGateway(GetCustomerGatewayArgs args) {
        return getCustomerGateway(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::CustomerGateway
     * 
     */
    public static CompletableFuture<GetCustomerGatewayResult> getCustomerGatewayPlain(GetCustomerGatewayPlainArgs args) {
        return getCustomerGatewayPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::CustomerGateway
     * 
     */
    public static Output<GetCustomerGatewayResult> getCustomerGateway(GetCustomerGatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getCustomerGateway", TypeShape.of(GetCustomerGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::CustomerGateway
     * 
     */
    public static CompletableFuture<GetCustomerGatewayResult> getCustomerGatewayPlain(GetCustomerGatewayPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getCustomerGateway", TypeShape.of(GetCustomerGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::DHCPOptions
     * 
     */
    public static Output<GetDHCPOptionsResult> getDHCPOptions(GetDHCPOptionsArgs args) {
        return getDHCPOptions(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::DHCPOptions
     * 
     */
    public static CompletableFuture<GetDHCPOptionsResult> getDHCPOptionsPlain(GetDHCPOptionsPlainArgs args) {
        return getDHCPOptionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::DHCPOptions
     * 
     */
    public static Output<GetDHCPOptionsResult> getDHCPOptions(GetDHCPOptionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getDHCPOptions", TypeShape.of(GetDHCPOptionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::DHCPOptions
     * 
     */
    public static CompletableFuture<GetDHCPOptionsResult> getDHCPOptionsPlain(GetDHCPOptionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getDHCPOptions", TypeShape.of(GetDHCPOptionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::EC2Fleet
     * 
     */
    public static Output<GetEC2FleetResult> getEC2Fleet(GetEC2FleetArgs args) {
        return getEC2Fleet(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::EC2Fleet
     * 
     */
    public static CompletableFuture<GetEC2FleetResult> getEC2FleetPlain(GetEC2FleetPlainArgs args) {
        return getEC2FleetPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::EC2Fleet
     * 
     */
    public static Output<GetEC2FleetResult> getEC2Fleet(GetEC2FleetArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getEC2Fleet", TypeShape.of(GetEC2FleetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::EC2Fleet
     * 
     */
    public static CompletableFuture<GetEC2FleetResult> getEC2FleetPlain(GetEC2FleetPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getEC2Fleet", TypeShape.of(GetEC2FleetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::EgressOnlyInternetGateway
     * 
     */
    public static Output<GetEgressOnlyInternetGatewayResult> getEgressOnlyInternetGateway(GetEgressOnlyInternetGatewayArgs args) {
        return getEgressOnlyInternetGateway(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::EgressOnlyInternetGateway
     * 
     */
    public static CompletableFuture<GetEgressOnlyInternetGatewayResult> getEgressOnlyInternetGatewayPlain(GetEgressOnlyInternetGatewayPlainArgs args) {
        return getEgressOnlyInternetGatewayPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::EgressOnlyInternetGateway
     * 
     */
    public static Output<GetEgressOnlyInternetGatewayResult> getEgressOnlyInternetGateway(GetEgressOnlyInternetGatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getEgressOnlyInternetGateway", TypeShape.of(GetEgressOnlyInternetGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::EgressOnlyInternetGateway
     * 
     */
    public static CompletableFuture<GetEgressOnlyInternetGatewayResult> getEgressOnlyInternetGatewayPlain(GetEgressOnlyInternetGatewayPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getEgressOnlyInternetGateway", TypeShape.of(GetEgressOnlyInternetGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Associates an AWS Identity and Access Management (IAM) role with an AWS Certificate Manager (ACM) certificate. This association is based on Amazon Resource Names and it enables the certificate to be used by the ACM for Nitro Enclaves application inside an enclave.
     * 
     */
    public static Output<GetEnclaveCertificateIamRoleAssociationResult> getEnclaveCertificateIamRoleAssociation(GetEnclaveCertificateIamRoleAssociationArgs args) {
        return getEnclaveCertificateIamRoleAssociation(args, InvokeOptions.Empty);
    }
    /**
     * Associates an AWS Identity and Access Management (IAM) role with an AWS Certificate Manager (ACM) certificate. This association is based on Amazon Resource Names and it enables the certificate to be used by the ACM for Nitro Enclaves application inside an enclave.
     * 
     */
    public static CompletableFuture<GetEnclaveCertificateIamRoleAssociationResult> getEnclaveCertificateIamRoleAssociationPlain(GetEnclaveCertificateIamRoleAssociationPlainArgs args) {
        return getEnclaveCertificateIamRoleAssociationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Associates an AWS Identity and Access Management (IAM) role with an AWS Certificate Manager (ACM) certificate. This association is based on Amazon Resource Names and it enables the certificate to be used by the ACM for Nitro Enclaves application inside an enclave.
     * 
     */
    public static Output<GetEnclaveCertificateIamRoleAssociationResult> getEnclaveCertificateIamRoleAssociation(GetEnclaveCertificateIamRoleAssociationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getEnclaveCertificateIamRoleAssociation", TypeShape.of(GetEnclaveCertificateIamRoleAssociationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Associates an AWS Identity and Access Management (IAM) role with an AWS Certificate Manager (ACM) certificate. This association is based on Amazon Resource Names and it enables the certificate to be used by the ACM for Nitro Enclaves application inside an enclave.
     * 
     */
    public static CompletableFuture<GetEnclaveCertificateIamRoleAssociationResult> getEnclaveCertificateIamRoleAssociationPlain(GetEnclaveCertificateIamRoleAssociationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getEnclaveCertificateIamRoleAssociation", TypeShape.of(GetEnclaveCertificateIamRoleAssociationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Specifies a VPC flow log, which enables you to capture IP traffic for a specific network interface, subnet, or VPC.
     * 
     */
    public static Output<GetFlowLogResult> getFlowLog(GetFlowLogArgs args) {
        return getFlowLog(args, InvokeOptions.Empty);
    }
    /**
     * Specifies a VPC flow log, which enables you to capture IP traffic for a specific network interface, subnet, or VPC.
     * 
     */
    public static CompletableFuture<GetFlowLogResult> getFlowLogPlain(GetFlowLogPlainArgs args) {
        return getFlowLogPlain(args, InvokeOptions.Empty);
    }
    /**
     * Specifies a VPC flow log, which enables you to capture IP traffic for a specific network interface, subnet, or VPC.
     * 
     */
    public static Output<GetFlowLogResult> getFlowLog(GetFlowLogArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getFlowLog", TypeShape.of(GetFlowLogResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Specifies a VPC flow log, which enables you to capture IP traffic for a specific network interface, subnet, or VPC.
     * 
     */
    public static CompletableFuture<GetFlowLogResult> getFlowLogPlain(GetFlowLogPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getFlowLog", TypeShape.of(GetFlowLogResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Associates a gateway with a route table. The gateway and route table must be in the same VPC. This association causes the incoming traffic to the gateway to be routed according to the routes in the route table.
     * 
     */
    public static Output<GetGatewayRouteTableAssociationResult> getGatewayRouteTableAssociation(GetGatewayRouteTableAssociationArgs args) {
        return getGatewayRouteTableAssociation(args, InvokeOptions.Empty);
    }
    /**
     * Associates a gateway with a route table. The gateway and route table must be in the same VPC. This association causes the incoming traffic to the gateway to be routed according to the routes in the route table.
     * 
     */
    public static CompletableFuture<GetGatewayRouteTableAssociationResult> getGatewayRouteTableAssociationPlain(GetGatewayRouteTableAssociationPlainArgs args) {
        return getGatewayRouteTableAssociationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Associates a gateway with a route table. The gateway and route table must be in the same VPC. This association causes the incoming traffic to the gateway to be routed according to the routes in the route table.
     * 
     */
    public static Output<GetGatewayRouteTableAssociationResult> getGatewayRouteTableAssociation(GetGatewayRouteTableAssociationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getGatewayRouteTableAssociation", TypeShape.of(GetGatewayRouteTableAssociationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Associates a gateway with a route table. The gateway and route table must be in the same VPC. This association causes the incoming traffic to the gateway to be routed according to the routes in the route table.
     * 
     */
    public static CompletableFuture<GetGatewayRouteTableAssociationResult> getGatewayRouteTableAssociationPlain(GetGatewayRouteTableAssociationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getGatewayRouteTableAssociation", TypeShape.of(GetGatewayRouteTableAssociationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::Host
     * 
     */
    public static Output<GetHostResult> getHost(GetHostArgs args) {
        return getHost(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::Host
     * 
     */
    public static CompletableFuture<GetHostResult> getHostPlain(GetHostPlainArgs args) {
        return getHostPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::Host
     * 
     */
    public static Output<GetHostResult> getHost(GetHostArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getHost", TypeShape.of(GetHostResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::Host
     * 
     */
    public static CompletableFuture<GetHostResult> getHostPlain(GetHostPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getHost", TypeShape.of(GetHostResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Schema of AWS::EC2::IPAM Type
     * 
     */
    public static Output<GetIPAMResult> getIPAM(GetIPAMArgs args) {
        return getIPAM(args, InvokeOptions.Empty);
    }
    /**
     * Resource Schema of AWS::EC2::IPAM Type
     * 
     */
    public static CompletableFuture<GetIPAMResult> getIPAMPlain(GetIPAMPlainArgs args) {
        return getIPAMPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Schema of AWS::EC2::IPAM Type
     * 
     */
    public static Output<GetIPAMResult> getIPAM(GetIPAMArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getIPAM", TypeShape.of(GetIPAMResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Schema of AWS::EC2::IPAM Type
     * 
     */
    public static CompletableFuture<GetIPAMResult> getIPAMPlain(GetIPAMPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getIPAM", TypeShape.of(GetIPAMResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Schema of AWS::EC2::IPAMAllocation Type
     * 
     */
    public static Output<GetIPAMAllocationResult> getIPAMAllocation(GetIPAMAllocationArgs args) {
        return getIPAMAllocation(args, InvokeOptions.Empty);
    }
    /**
     * Resource Schema of AWS::EC2::IPAMAllocation Type
     * 
     */
    public static CompletableFuture<GetIPAMAllocationResult> getIPAMAllocationPlain(GetIPAMAllocationPlainArgs args) {
        return getIPAMAllocationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Schema of AWS::EC2::IPAMAllocation Type
     * 
     */
    public static Output<GetIPAMAllocationResult> getIPAMAllocation(GetIPAMAllocationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getIPAMAllocation", TypeShape.of(GetIPAMAllocationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Schema of AWS::EC2::IPAMAllocation Type
     * 
     */
    public static CompletableFuture<GetIPAMAllocationResult> getIPAMAllocationPlain(GetIPAMAllocationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getIPAMAllocation", TypeShape.of(GetIPAMAllocationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Schema of AWS::EC2::IPAMPool Type
     * 
     */
    public static Output<GetIPAMPoolResult> getIPAMPool(GetIPAMPoolArgs args) {
        return getIPAMPool(args, InvokeOptions.Empty);
    }
    /**
     * Resource Schema of AWS::EC2::IPAMPool Type
     * 
     */
    public static CompletableFuture<GetIPAMPoolResult> getIPAMPoolPlain(GetIPAMPoolPlainArgs args) {
        return getIPAMPoolPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Schema of AWS::EC2::IPAMPool Type
     * 
     */
    public static Output<GetIPAMPoolResult> getIPAMPool(GetIPAMPoolArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getIPAMPool", TypeShape.of(GetIPAMPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Schema of AWS::EC2::IPAMPool Type
     * 
     */
    public static CompletableFuture<GetIPAMPoolResult> getIPAMPoolPlain(GetIPAMPoolPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getIPAMPool", TypeShape.of(GetIPAMPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Schema of AWS::EC2::IPAMScope Type
     * 
     */
    public static Output<GetIPAMScopeResult> getIPAMScope(GetIPAMScopeArgs args) {
        return getIPAMScope(args, InvokeOptions.Empty);
    }
    /**
     * Resource Schema of AWS::EC2::IPAMScope Type
     * 
     */
    public static CompletableFuture<GetIPAMScopeResult> getIPAMScopePlain(GetIPAMScopePlainArgs args) {
        return getIPAMScopePlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Schema of AWS::EC2::IPAMScope Type
     * 
     */
    public static Output<GetIPAMScopeResult> getIPAMScope(GetIPAMScopeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getIPAMScope", TypeShape.of(GetIPAMScopeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Schema of AWS::EC2::IPAMScope Type
     * 
     */
    public static CompletableFuture<GetIPAMScopeResult> getIPAMScopePlain(GetIPAMScopePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getIPAMScope", TypeShape.of(GetIPAMScopeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::InternetGateway
     * 
     */
    public static Output<GetInternetGatewayResult> getInternetGateway(GetInternetGatewayArgs args) {
        return getInternetGateway(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::InternetGateway
     * 
     */
    public static CompletableFuture<GetInternetGatewayResult> getInternetGatewayPlain(GetInternetGatewayPlainArgs args) {
        return getInternetGatewayPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::InternetGateway
     * 
     */
    public static Output<GetInternetGatewayResult> getInternetGateway(GetInternetGatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getInternetGateway", TypeShape.of(GetInternetGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::InternetGateway
     * 
     */
    public static CompletableFuture<GetInternetGatewayResult> getInternetGatewayPlain(GetInternetGatewayPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getInternetGateway", TypeShape.of(GetInternetGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::EC2::KeyPair creates an SSH key pair
     * 
     */
    public static Output<GetKeyPairResult> getKeyPair(GetKeyPairArgs args) {
        return getKeyPair(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::EC2::KeyPair creates an SSH key pair
     * 
     */
    public static CompletableFuture<GetKeyPairResult> getKeyPairPlain(GetKeyPairPlainArgs args) {
        return getKeyPairPlain(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::EC2::KeyPair creates an SSH key pair
     * 
     */
    public static Output<GetKeyPairResult> getKeyPair(GetKeyPairArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getKeyPair", TypeShape.of(GetKeyPairResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::EC2::KeyPair creates an SSH key pair
     * 
     */
    public static CompletableFuture<GetKeyPairResult> getKeyPairPlain(GetKeyPairPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getKeyPair", TypeShape.of(GetKeyPairResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Describes a route for a local gateway route table.
     * 
     */
    public static Output<GetLocalGatewayRouteResult> getLocalGatewayRoute(GetLocalGatewayRouteArgs args) {
        return getLocalGatewayRoute(args, InvokeOptions.Empty);
    }
    /**
     * Describes a route for a local gateway route table.
     * 
     */
    public static CompletableFuture<GetLocalGatewayRouteResult> getLocalGatewayRoutePlain(GetLocalGatewayRoutePlainArgs args) {
        return getLocalGatewayRoutePlain(args, InvokeOptions.Empty);
    }
    /**
     * Describes a route for a local gateway route table.
     * 
     */
    public static Output<GetLocalGatewayRouteResult> getLocalGatewayRoute(GetLocalGatewayRouteArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getLocalGatewayRoute", TypeShape.of(GetLocalGatewayRouteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Describes a route for a local gateway route table.
     * 
     */
    public static CompletableFuture<GetLocalGatewayRouteResult> getLocalGatewayRoutePlain(GetLocalGatewayRoutePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getLocalGatewayRoute", TypeShape.of(GetLocalGatewayRouteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Describes an association between a local gateway route table and a VPC.
     * 
     */
    public static Output<GetLocalGatewayRouteTableVPCAssociationResult> getLocalGatewayRouteTableVPCAssociation(GetLocalGatewayRouteTableVPCAssociationArgs args) {
        return getLocalGatewayRouteTableVPCAssociation(args, InvokeOptions.Empty);
    }
    /**
     * Describes an association between a local gateway route table and a VPC.
     * 
     */
    public static CompletableFuture<GetLocalGatewayRouteTableVPCAssociationResult> getLocalGatewayRouteTableVPCAssociationPlain(GetLocalGatewayRouteTableVPCAssociationPlainArgs args) {
        return getLocalGatewayRouteTableVPCAssociationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Describes an association between a local gateway route table and a VPC.
     * 
     */
    public static Output<GetLocalGatewayRouteTableVPCAssociationResult> getLocalGatewayRouteTableVPCAssociation(GetLocalGatewayRouteTableVPCAssociationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getLocalGatewayRouteTableVPCAssociation", TypeShape.of(GetLocalGatewayRouteTableVPCAssociationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Describes an association between a local gateway route table and a VPC.
     * 
     */
    public static CompletableFuture<GetLocalGatewayRouteTableVPCAssociationResult> getLocalGatewayRouteTableVPCAssociationPlain(GetLocalGatewayRouteTableVPCAssociationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getLocalGatewayRouteTableVPCAssociation", TypeShape.of(GetLocalGatewayRouteTableVPCAssociationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::NatGateway
     * 
     */
    public static Output<GetNatGatewayResult> getNatGateway(GetNatGatewayArgs args) {
        return getNatGateway(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::NatGateway
     * 
     */
    public static CompletableFuture<GetNatGatewayResult> getNatGatewayPlain(GetNatGatewayPlainArgs args) {
        return getNatGatewayPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::NatGateway
     * 
     */
    public static Output<GetNatGatewayResult> getNatGateway(GetNatGatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getNatGateway", TypeShape.of(GetNatGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::NatGateway
     * 
     */
    public static CompletableFuture<GetNatGatewayResult> getNatGatewayPlain(GetNatGatewayPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getNatGateway", TypeShape.of(GetNatGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::NetworkAcl
     * 
     */
    public static Output<GetNetworkAclResult> getNetworkAcl(GetNetworkAclArgs args) {
        return getNetworkAcl(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::NetworkAcl
     * 
     */
    public static CompletableFuture<GetNetworkAclResult> getNetworkAclPlain(GetNetworkAclPlainArgs args) {
        return getNetworkAclPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::NetworkAcl
     * 
     */
    public static Output<GetNetworkAclResult> getNetworkAcl(GetNetworkAclArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getNetworkAcl", TypeShape.of(GetNetworkAclResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::NetworkAcl
     * 
     */
    public static CompletableFuture<GetNetworkAclResult> getNetworkAclPlain(GetNetworkAclPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getNetworkAcl", TypeShape.of(GetNetworkAclResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource schema for AWS::EC2::NetworkInsightsAccessScope
     * 
     */
    public static Output<GetNetworkInsightsAccessScopeResult> getNetworkInsightsAccessScope(GetNetworkInsightsAccessScopeArgs args) {
        return getNetworkInsightsAccessScope(args, InvokeOptions.Empty);
    }
    /**
     * Resource schema for AWS::EC2::NetworkInsightsAccessScope
     * 
     */
    public static CompletableFuture<GetNetworkInsightsAccessScopeResult> getNetworkInsightsAccessScopePlain(GetNetworkInsightsAccessScopePlainArgs args) {
        return getNetworkInsightsAccessScopePlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource schema for AWS::EC2::NetworkInsightsAccessScope
     * 
     */
    public static Output<GetNetworkInsightsAccessScopeResult> getNetworkInsightsAccessScope(GetNetworkInsightsAccessScopeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getNetworkInsightsAccessScope", TypeShape.of(GetNetworkInsightsAccessScopeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource schema for AWS::EC2::NetworkInsightsAccessScope
     * 
     */
    public static CompletableFuture<GetNetworkInsightsAccessScopeResult> getNetworkInsightsAccessScopePlain(GetNetworkInsightsAccessScopePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getNetworkInsightsAccessScope", TypeShape.of(GetNetworkInsightsAccessScopeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource schema for AWS::EC2::NetworkInsightsAccessScopeAnalysis
     * 
     */
    public static Output<GetNetworkInsightsAccessScopeAnalysisResult> getNetworkInsightsAccessScopeAnalysis(GetNetworkInsightsAccessScopeAnalysisArgs args) {
        return getNetworkInsightsAccessScopeAnalysis(args, InvokeOptions.Empty);
    }
    /**
     * Resource schema for AWS::EC2::NetworkInsightsAccessScopeAnalysis
     * 
     */
    public static CompletableFuture<GetNetworkInsightsAccessScopeAnalysisResult> getNetworkInsightsAccessScopeAnalysisPlain(GetNetworkInsightsAccessScopeAnalysisPlainArgs args) {
        return getNetworkInsightsAccessScopeAnalysisPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource schema for AWS::EC2::NetworkInsightsAccessScopeAnalysis
     * 
     */
    public static Output<GetNetworkInsightsAccessScopeAnalysisResult> getNetworkInsightsAccessScopeAnalysis(GetNetworkInsightsAccessScopeAnalysisArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getNetworkInsightsAccessScopeAnalysis", TypeShape.of(GetNetworkInsightsAccessScopeAnalysisResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource schema for AWS::EC2::NetworkInsightsAccessScopeAnalysis
     * 
     */
    public static CompletableFuture<GetNetworkInsightsAccessScopeAnalysisResult> getNetworkInsightsAccessScopeAnalysisPlain(GetNetworkInsightsAccessScopeAnalysisPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getNetworkInsightsAccessScopeAnalysis", TypeShape.of(GetNetworkInsightsAccessScopeAnalysisResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource schema for AWS::EC2::NetworkInsightsAnalysis
     * 
     */
    public static Output<GetNetworkInsightsAnalysisResult> getNetworkInsightsAnalysis(GetNetworkInsightsAnalysisArgs args) {
        return getNetworkInsightsAnalysis(args, InvokeOptions.Empty);
    }
    /**
     * Resource schema for AWS::EC2::NetworkInsightsAnalysis
     * 
     */
    public static CompletableFuture<GetNetworkInsightsAnalysisResult> getNetworkInsightsAnalysisPlain(GetNetworkInsightsAnalysisPlainArgs args) {
        return getNetworkInsightsAnalysisPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource schema for AWS::EC2::NetworkInsightsAnalysis
     * 
     */
    public static Output<GetNetworkInsightsAnalysisResult> getNetworkInsightsAnalysis(GetNetworkInsightsAnalysisArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getNetworkInsightsAnalysis", TypeShape.of(GetNetworkInsightsAnalysisResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource schema for AWS::EC2::NetworkInsightsAnalysis
     * 
     */
    public static CompletableFuture<GetNetworkInsightsAnalysisResult> getNetworkInsightsAnalysisPlain(GetNetworkInsightsAnalysisPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getNetworkInsightsAnalysis", TypeShape.of(GetNetworkInsightsAnalysisResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource schema for AWS::EC2::NetworkInsightsPath
     * 
     */
    public static Output<GetNetworkInsightsPathResult> getNetworkInsightsPath(GetNetworkInsightsPathArgs args) {
        return getNetworkInsightsPath(args, InvokeOptions.Empty);
    }
    /**
     * Resource schema for AWS::EC2::NetworkInsightsPath
     * 
     */
    public static CompletableFuture<GetNetworkInsightsPathResult> getNetworkInsightsPathPlain(GetNetworkInsightsPathPlainArgs args) {
        return getNetworkInsightsPathPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource schema for AWS::EC2::NetworkInsightsPath
     * 
     */
    public static Output<GetNetworkInsightsPathResult> getNetworkInsightsPath(GetNetworkInsightsPathArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getNetworkInsightsPath", TypeShape.of(GetNetworkInsightsPathResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource schema for AWS::EC2::NetworkInsightsPath
     * 
     */
    public static CompletableFuture<GetNetworkInsightsPathResult> getNetworkInsightsPathPlain(GetNetworkInsightsPathPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getNetworkInsightsPath", TypeShape.of(GetNetworkInsightsPathResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::EC2::NetworkInterface resource creates network interface
     * 
     */
    public static Output<GetNetworkInterfaceResult> getNetworkInterface(GetNetworkInterfaceArgs args) {
        return getNetworkInterface(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::EC2::NetworkInterface resource creates network interface
     * 
     */
    public static CompletableFuture<GetNetworkInterfaceResult> getNetworkInterfacePlain(GetNetworkInterfacePlainArgs args) {
        return getNetworkInterfacePlain(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::EC2::NetworkInterface resource creates network interface
     * 
     */
    public static Output<GetNetworkInterfaceResult> getNetworkInterface(GetNetworkInterfaceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getNetworkInterface", TypeShape.of(GetNetworkInterfaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::EC2::NetworkInterface resource creates network interface
     * 
     */
    public static CompletableFuture<GetNetworkInterfaceResult> getNetworkInterfacePlain(GetNetworkInterfacePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getNetworkInterface", TypeShape.of(GetNetworkInterfaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::PlacementGroup
     * 
     */
    public static Output<GetPlacementGroupResult> getPlacementGroup(GetPlacementGroupArgs args) {
        return getPlacementGroup(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::PlacementGroup
     * 
     */
    public static CompletableFuture<GetPlacementGroupResult> getPlacementGroupPlain(GetPlacementGroupPlainArgs args) {
        return getPlacementGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::PlacementGroup
     * 
     */
    public static Output<GetPlacementGroupResult> getPlacementGroup(GetPlacementGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getPlacementGroup", TypeShape.of(GetPlacementGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::PlacementGroup
     * 
     */
    public static CompletableFuture<GetPlacementGroupResult> getPlacementGroupPlain(GetPlacementGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getPlacementGroup", TypeShape.of(GetPlacementGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource schema of AWS::EC2::PrefixList Type
     * 
     */
    public static Output<GetPrefixListResult> getPrefixList(GetPrefixListArgs args) {
        return getPrefixList(args, InvokeOptions.Empty);
    }
    /**
     * Resource schema of AWS::EC2::PrefixList Type
     * 
     */
    public static CompletableFuture<GetPrefixListResult> getPrefixListPlain(GetPrefixListPlainArgs args) {
        return getPrefixListPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource schema of AWS::EC2::PrefixList Type
     * 
     */
    public static Output<GetPrefixListResult> getPrefixList(GetPrefixListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getPrefixList", TypeShape.of(GetPrefixListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource schema of AWS::EC2::PrefixList Type
     * 
     */
    public static CompletableFuture<GetPrefixListResult> getPrefixListPlain(GetPrefixListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getPrefixList", TypeShape.of(GetPrefixListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::RouteTable
     * 
     */
    public static Output<GetRouteTableResult> getRouteTable(GetRouteTableArgs args) {
        return getRouteTable(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::RouteTable
     * 
     */
    public static CompletableFuture<GetRouteTableResult> getRouteTablePlain(GetRouteTablePlainArgs args) {
        return getRouteTablePlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::RouteTable
     * 
     */
    public static Output<GetRouteTableResult> getRouteTable(GetRouteTableArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getRouteTable", TypeShape.of(GetRouteTableResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::RouteTable
     * 
     */
    public static CompletableFuture<GetRouteTableResult> getRouteTablePlain(GetRouteTablePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getRouteTable", TypeShape.of(GetRouteTableResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::SpotFleet
     * 
     */
    public static Output<GetSpotFleetResult> getSpotFleet(GetSpotFleetArgs args) {
        return getSpotFleet(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::SpotFleet
     * 
     */
    public static CompletableFuture<GetSpotFleetResult> getSpotFleetPlain(GetSpotFleetPlainArgs args) {
        return getSpotFleetPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::SpotFleet
     * 
     */
    public static Output<GetSpotFleetResult> getSpotFleet(GetSpotFleetArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getSpotFleet", TypeShape.of(GetSpotFleetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::SpotFleet
     * 
     */
    public static CompletableFuture<GetSpotFleetResult> getSpotFleetPlain(GetSpotFleetPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getSpotFleet", TypeShape.of(GetSpotFleetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::Subnet
     * 
     */
    public static Output<GetSubnetResult> getSubnet(GetSubnetArgs args) {
        return getSubnet(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::Subnet
     * 
     */
    public static CompletableFuture<GetSubnetResult> getSubnetPlain(GetSubnetPlainArgs args) {
        return getSubnetPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::Subnet
     * 
     */
    public static Output<GetSubnetResult> getSubnet(GetSubnetArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getSubnet", TypeShape.of(GetSubnetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::Subnet
     * 
     */
    public static CompletableFuture<GetSubnetResult> getSubnetPlain(GetSubnetPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getSubnet", TypeShape.of(GetSubnetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::SubnetNetworkAclAssociation
     * 
     */
    public static Output<GetSubnetNetworkAclAssociationResult> getSubnetNetworkAclAssociation(GetSubnetNetworkAclAssociationArgs args) {
        return getSubnetNetworkAclAssociation(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::SubnetNetworkAclAssociation
     * 
     */
    public static CompletableFuture<GetSubnetNetworkAclAssociationResult> getSubnetNetworkAclAssociationPlain(GetSubnetNetworkAclAssociationPlainArgs args) {
        return getSubnetNetworkAclAssociationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::SubnetNetworkAclAssociation
     * 
     */
    public static Output<GetSubnetNetworkAclAssociationResult> getSubnetNetworkAclAssociation(GetSubnetNetworkAclAssociationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getSubnetNetworkAclAssociation", TypeShape.of(GetSubnetNetworkAclAssociationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::SubnetNetworkAclAssociation
     * 
     */
    public static CompletableFuture<GetSubnetNetworkAclAssociationResult> getSubnetNetworkAclAssociationPlain(GetSubnetNetworkAclAssociationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getSubnetNetworkAclAssociation", TypeShape.of(GetSubnetNetworkAclAssociationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::SubnetRouteTableAssociation
     * 
     */
    public static Output<GetSubnetRouteTableAssociationResult> getSubnetRouteTableAssociation(GetSubnetRouteTableAssociationArgs args) {
        return getSubnetRouteTableAssociation(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::SubnetRouteTableAssociation
     * 
     */
    public static CompletableFuture<GetSubnetRouteTableAssociationResult> getSubnetRouteTableAssociationPlain(GetSubnetRouteTableAssociationPlainArgs args) {
        return getSubnetRouteTableAssociationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::SubnetRouteTableAssociation
     * 
     */
    public static Output<GetSubnetRouteTableAssociationResult> getSubnetRouteTableAssociation(GetSubnetRouteTableAssociationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getSubnetRouteTableAssociation", TypeShape.of(GetSubnetRouteTableAssociationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::SubnetRouteTableAssociation
     * 
     */
    public static CompletableFuture<GetSubnetRouteTableAssociationResult> getSubnetRouteTableAssociationPlain(GetSubnetRouteTableAssociationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getSubnetRouteTableAssociation", TypeShape.of(GetSubnetRouteTableAssociationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::TransitGateway
     * 
     */
    public static Output<GetTransitGatewayResult> getTransitGateway(GetTransitGatewayArgs args) {
        return getTransitGateway(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::TransitGateway
     * 
     */
    public static CompletableFuture<GetTransitGatewayResult> getTransitGatewayPlain(GetTransitGatewayPlainArgs args) {
        return getTransitGatewayPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::TransitGateway
     * 
     */
    public static Output<GetTransitGatewayResult> getTransitGateway(GetTransitGatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getTransitGateway", TypeShape.of(GetTransitGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::TransitGateway
     * 
     */
    public static CompletableFuture<GetTransitGatewayResult> getTransitGatewayPlain(GetTransitGatewayPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getTransitGateway", TypeShape.of(GetTransitGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::TransitGatewayAttachment
     * 
     */
    public static Output<GetTransitGatewayAttachmentResult> getTransitGatewayAttachment(GetTransitGatewayAttachmentArgs args) {
        return getTransitGatewayAttachment(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::TransitGatewayAttachment
     * 
     */
    public static CompletableFuture<GetTransitGatewayAttachmentResult> getTransitGatewayAttachmentPlain(GetTransitGatewayAttachmentPlainArgs args) {
        return getTransitGatewayAttachmentPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::TransitGatewayAttachment
     * 
     */
    public static Output<GetTransitGatewayAttachmentResult> getTransitGatewayAttachment(GetTransitGatewayAttachmentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getTransitGatewayAttachment", TypeShape.of(GetTransitGatewayAttachmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::TransitGatewayAttachment
     * 
     */
    public static CompletableFuture<GetTransitGatewayAttachmentResult> getTransitGatewayAttachmentPlain(GetTransitGatewayAttachmentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getTransitGatewayAttachment", TypeShape.of(GetTransitGatewayAttachmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::EC2::TransitGatewayConnect type
     * 
     */
    public static Output<GetTransitGatewayConnectResult> getTransitGatewayConnect(GetTransitGatewayConnectArgs args) {
        return getTransitGatewayConnect(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::EC2::TransitGatewayConnect type
     * 
     */
    public static CompletableFuture<GetTransitGatewayConnectResult> getTransitGatewayConnectPlain(GetTransitGatewayConnectPlainArgs args) {
        return getTransitGatewayConnectPlain(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::EC2::TransitGatewayConnect type
     * 
     */
    public static Output<GetTransitGatewayConnectResult> getTransitGatewayConnect(GetTransitGatewayConnectArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getTransitGatewayConnect", TypeShape.of(GetTransitGatewayConnectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::EC2::TransitGatewayConnect type
     * 
     */
    public static CompletableFuture<GetTransitGatewayConnectResult> getTransitGatewayConnectPlain(GetTransitGatewayConnectPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getTransitGatewayConnect", TypeShape.of(GetTransitGatewayConnectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::EC2::TransitGatewayMulticastDomain type
     * 
     */
    public static Output<GetTransitGatewayMulticastDomainResult> getTransitGatewayMulticastDomain(GetTransitGatewayMulticastDomainArgs args) {
        return getTransitGatewayMulticastDomain(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::EC2::TransitGatewayMulticastDomain type
     * 
     */
    public static CompletableFuture<GetTransitGatewayMulticastDomainResult> getTransitGatewayMulticastDomainPlain(GetTransitGatewayMulticastDomainPlainArgs args) {
        return getTransitGatewayMulticastDomainPlain(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::EC2::TransitGatewayMulticastDomain type
     * 
     */
    public static Output<GetTransitGatewayMulticastDomainResult> getTransitGatewayMulticastDomain(GetTransitGatewayMulticastDomainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getTransitGatewayMulticastDomain", TypeShape.of(GetTransitGatewayMulticastDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::EC2::TransitGatewayMulticastDomain type
     * 
     */
    public static CompletableFuture<GetTransitGatewayMulticastDomainResult> getTransitGatewayMulticastDomainPlain(GetTransitGatewayMulticastDomainPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getTransitGatewayMulticastDomain", TypeShape.of(GetTransitGatewayMulticastDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::EC2::TransitGatewayMulticastDomainAssociation type
     * 
     */
    public static Output<GetTransitGatewayMulticastDomainAssociationResult> getTransitGatewayMulticastDomainAssociation(GetTransitGatewayMulticastDomainAssociationArgs args) {
        return getTransitGatewayMulticastDomainAssociation(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::EC2::TransitGatewayMulticastDomainAssociation type
     * 
     */
    public static CompletableFuture<GetTransitGatewayMulticastDomainAssociationResult> getTransitGatewayMulticastDomainAssociationPlain(GetTransitGatewayMulticastDomainAssociationPlainArgs args) {
        return getTransitGatewayMulticastDomainAssociationPlain(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::EC2::TransitGatewayMulticastDomainAssociation type
     * 
     */
    public static Output<GetTransitGatewayMulticastDomainAssociationResult> getTransitGatewayMulticastDomainAssociation(GetTransitGatewayMulticastDomainAssociationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getTransitGatewayMulticastDomainAssociation", TypeShape.of(GetTransitGatewayMulticastDomainAssociationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::EC2::TransitGatewayMulticastDomainAssociation type
     * 
     */
    public static CompletableFuture<GetTransitGatewayMulticastDomainAssociationResult> getTransitGatewayMulticastDomainAssociationPlain(GetTransitGatewayMulticastDomainAssociationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getTransitGatewayMulticastDomainAssociation", TypeShape.of(GetTransitGatewayMulticastDomainAssociationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::EC2::TransitGatewayMulticastGroupMember registers and deregisters members and sources (network interfaces) with the transit gateway multicast group
     * 
     */
    public static Output<GetTransitGatewayMulticastGroupMemberResult> getTransitGatewayMulticastGroupMember(GetTransitGatewayMulticastGroupMemberArgs args) {
        return getTransitGatewayMulticastGroupMember(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::EC2::TransitGatewayMulticastGroupMember registers and deregisters members and sources (network interfaces) with the transit gateway multicast group
     * 
     */
    public static CompletableFuture<GetTransitGatewayMulticastGroupMemberResult> getTransitGatewayMulticastGroupMemberPlain(GetTransitGatewayMulticastGroupMemberPlainArgs args) {
        return getTransitGatewayMulticastGroupMemberPlain(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::EC2::TransitGatewayMulticastGroupMember registers and deregisters members and sources (network interfaces) with the transit gateway multicast group
     * 
     */
    public static Output<GetTransitGatewayMulticastGroupMemberResult> getTransitGatewayMulticastGroupMember(GetTransitGatewayMulticastGroupMemberArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getTransitGatewayMulticastGroupMember", TypeShape.of(GetTransitGatewayMulticastGroupMemberResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::EC2::TransitGatewayMulticastGroupMember registers and deregisters members and sources (network interfaces) with the transit gateway multicast group
     * 
     */
    public static CompletableFuture<GetTransitGatewayMulticastGroupMemberResult> getTransitGatewayMulticastGroupMemberPlain(GetTransitGatewayMulticastGroupMemberPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getTransitGatewayMulticastGroupMember", TypeShape.of(GetTransitGatewayMulticastGroupMemberResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::EC2::TransitGatewayMulticastGroupSource registers and deregisters members and sources (network interfaces) with the transit gateway multicast group
     * 
     */
    public static Output<GetTransitGatewayMulticastGroupSourceResult> getTransitGatewayMulticastGroupSource(GetTransitGatewayMulticastGroupSourceArgs args) {
        return getTransitGatewayMulticastGroupSource(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::EC2::TransitGatewayMulticastGroupSource registers and deregisters members and sources (network interfaces) with the transit gateway multicast group
     * 
     */
    public static CompletableFuture<GetTransitGatewayMulticastGroupSourceResult> getTransitGatewayMulticastGroupSourcePlain(GetTransitGatewayMulticastGroupSourcePlainArgs args) {
        return getTransitGatewayMulticastGroupSourcePlain(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::EC2::TransitGatewayMulticastGroupSource registers and deregisters members and sources (network interfaces) with the transit gateway multicast group
     * 
     */
    public static Output<GetTransitGatewayMulticastGroupSourceResult> getTransitGatewayMulticastGroupSource(GetTransitGatewayMulticastGroupSourceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getTransitGatewayMulticastGroupSource", TypeShape.of(GetTransitGatewayMulticastGroupSourceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::EC2::TransitGatewayMulticastGroupSource registers and deregisters members and sources (network interfaces) with the transit gateway multicast group
     * 
     */
    public static CompletableFuture<GetTransitGatewayMulticastGroupSourceResult> getTransitGatewayMulticastGroupSourcePlain(GetTransitGatewayMulticastGroupSourcePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getTransitGatewayMulticastGroupSource", TypeShape.of(GetTransitGatewayMulticastGroupSourceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::EC2::TransitGatewayPeeringAttachment type
     * 
     */
    public static Output<GetTransitGatewayPeeringAttachmentResult> getTransitGatewayPeeringAttachment(GetTransitGatewayPeeringAttachmentArgs args) {
        return getTransitGatewayPeeringAttachment(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::EC2::TransitGatewayPeeringAttachment type
     * 
     */
    public static CompletableFuture<GetTransitGatewayPeeringAttachmentResult> getTransitGatewayPeeringAttachmentPlain(GetTransitGatewayPeeringAttachmentPlainArgs args) {
        return getTransitGatewayPeeringAttachmentPlain(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::EC2::TransitGatewayPeeringAttachment type
     * 
     */
    public static Output<GetTransitGatewayPeeringAttachmentResult> getTransitGatewayPeeringAttachment(GetTransitGatewayPeeringAttachmentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getTransitGatewayPeeringAttachment", TypeShape.of(GetTransitGatewayPeeringAttachmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::EC2::TransitGatewayPeeringAttachment type
     * 
     */
    public static CompletableFuture<GetTransitGatewayPeeringAttachmentResult> getTransitGatewayPeeringAttachmentPlain(GetTransitGatewayPeeringAttachmentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getTransitGatewayPeeringAttachment", TypeShape.of(GetTransitGatewayPeeringAttachmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::TransitGatewayVpcAttachment
     * 
     */
    public static Output<GetTransitGatewayVpcAttachmentResult> getTransitGatewayVpcAttachment(GetTransitGatewayVpcAttachmentArgs args) {
        return getTransitGatewayVpcAttachment(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::TransitGatewayVpcAttachment
     * 
     */
    public static CompletableFuture<GetTransitGatewayVpcAttachmentResult> getTransitGatewayVpcAttachmentPlain(GetTransitGatewayVpcAttachmentPlainArgs args) {
        return getTransitGatewayVpcAttachmentPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::TransitGatewayVpcAttachment
     * 
     */
    public static Output<GetTransitGatewayVpcAttachmentResult> getTransitGatewayVpcAttachment(GetTransitGatewayVpcAttachmentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getTransitGatewayVpcAttachment", TypeShape.of(GetTransitGatewayVpcAttachmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::TransitGatewayVpcAttachment
     * 
     */
    public static CompletableFuture<GetTransitGatewayVpcAttachmentResult> getTransitGatewayVpcAttachmentPlain(GetTransitGatewayVpcAttachmentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getTransitGatewayVpcAttachment", TypeShape.of(GetTransitGatewayVpcAttachmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::VPC
     * 
     */
    public static Output<GetVPCResult> getVPC(GetVPCArgs args) {
        return getVPC(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::VPC
     * 
     */
    public static CompletableFuture<GetVPCResult> getVPCPlain(GetVPCPlainArgs args) {
        return getVPCPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::VPC
     * 
     */
    public static Output<GetVPCResult> getVPC(GetVPCArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getVPC", TypeShape.of(GetVPCResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::VPC
     * 
     */
    public static CompletableFuture<GetVPCResult> getVPCPlain(GetVPCPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getVPC", TypeShape.of(GetVPCResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Associates a set of DHCP options with a VPC, or associates no DHCP options with the VPC.
     * 
     */
    public static Output<GetVPCDHCPOptionsAssociationResult> getVPCDHCPOptionsAssociation(GetVPCDHCPOptionsAssociationArgs args) {
        return getVPCDHCPOptionsAssociation(args, InvokeOptions.Empty);
    }
    /**
     * Associates a set of DHCP options with a VPC, or associates no DHCP options with the VPC.
     * 
     */
    public static CompletableFuture<GetVPCDHCPOptionsAssociationResult> getVPCDHCPOptionsAssociationPlain(GetVPCDHCPOptionsAssociationPlainArgs args) {
        return getVPCDHCPOptionsAssociationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Associates a set of DHCP options with a VPC, or associates no DHCP options with the VPC.
     * 
     */
    public static Output<GetVPCDHCPOptionsAssociationResult> getVPCDHCPOptionsAssociation(GetVPCDHCPOptionsAssociationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getVPCDHCPOptionsAssociation", TypeShape.of(GetVPCDHCPOptionsAssociationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Associates a set of DHCP options with a VPC, or associates no DHCP options with the VPC.
     * 
     */
    public static CompletableFuture<GetVPCDHCPOptionsAssociationResult> getVPCDHCPOptionsAssociationPlain(GetVPCDHCPOptionsAssociationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getVPCDHCPOptionsAssociation", TypeShape.of(GetVPCDHCPOptionsAssociationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::VPCPeeringConnection
     * 
     */
    public static Output<GetVPCPeeringConnectionResult> getVPCPeeringConnection(GetVPCPeeringConnectionArgs args) {
        return getVPCPeeringConnection(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::VPCPeeringConnection
     * 
     */
    public static CompletableFuture<GetVPCPeeringConnectionResult> getVPCPeeringConnectionPlain(GetVPCPeeringConnectionPlainArgs args) {
        return getVPCPeeringConnectionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::EC2::VPCPeeringConnection
     * 
     */
    public static Output<GetVPCPeeringConnectionResult> getVPCPeeringConnection(GetVPCPeeringConnectionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getVPCPeeringConnection", TypeShape.of(GetVPCPeeringConnectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::EC2::VPCPeeringConnection
     * 
     */
    public static CompletableFuture<GetVPCPeeringConnectionResult> getVPCPeeringConnectionPlain(GetVPCPeeringConnectionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getVPCPeeringConnection", TypeShape.of(GetVPCPeeringConnectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Schema for EC2 VPN Gateway
     * 
     */
    public static Output<GetVPNGatewayResult> getVPNGateway(GetVPNGatewayArgs args) {
        return getVPNGateway(args, InvokeOptions.Empty);
    }
    /**
     * Schema for EC2 VPN Gateway
     * 
     */
    public static CompletableFuture<GetVPNGatewayResult> getVPNGatewayPlain(GetVPNGatewayPlainArgs args) {
        return getVPNGatewayPlain(args, InvokeOptions.Empty);
    }
    /**
     * Schema for EC2 VPN Gateway
     * 
     */
    public static Output<GetVPNGatewayResult> getVPNGateway(GetVPNGatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:ec2:getVPNGateway", TypeShape.of(GetVPNGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Schema for EC2 VPN Gateway
     * 
     */
    public static CompletableFuture<GetVPNGatewayResult> getVPNGatewayPlain(GetVPNGatewayPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:ec2:getVPNGateway", TypeShape.of(GetVPNGatewayResult.class), args, Utilities.withVersion(options));
    }
}
