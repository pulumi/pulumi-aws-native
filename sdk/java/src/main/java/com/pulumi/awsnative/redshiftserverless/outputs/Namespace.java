// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.redshiftserverless.outputs;

import com.pulumi.awsnative.redshiftserverless.enums.NamespaceLogExport;
import com.pulumi.awsnative.redshiftserverless.enums.NamespaceStatus;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class Namespace {
    private @Nullable String adminUsername;
    private @Nullable String creationDate;
    private @Nullable String dbName;
    private @Nullable String defaultIamRoleArn;
    private @Nullable List<String> iamRoles;
    private @Nullable String kmsKeyId;
    private @Nullable List<NamespaceLogExport> logExports;
    private @Nullable String namespaceArn;
    private @Nullable String namespaceId;
    private @Nullable String namespaceName;
    private @Nullable NamespaceStatus status;

    private Namespace() {}
    public Optional<String> adminUsername() {
        return Optional.ofNullable(this.adminUsername);
    }
    public Optional<String> creationDate() {
        return Optional.ofNullable(this.creationDate);
    }
    public Optional<String> dbName() {
        return Optional.ofNullable(this.dbName);
    }
    public Optional<String> defaultIamRoleArn() {
        return Optional.ofNullable(this.defaultIamRoleArn);
    }
    public List<String> iamRoles() {
        return this.iamRoles == null ? List.of() : this.iamRoles;
    }
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    public List<NamespaceLogExport> logExports() {
        return this.logExports == null ? List.of() : this.logExports;
    }
    public Optional<String> namespaceArn() {
        return Optional.ofNullable(this.namespaceArn);
    }
    public Optional<String> namespaceId() {
        return Optional.ofNullable(this.namespaceId);
    }
    public Optional<String> namespaceName() {
        return Optional.ofNullable(this.namespaceName);
    }
    public Optional<NamespaceStatus> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Namespace defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String adminUsername;
        private @Nullable String creationDate;
        private @Nullable String dbName;
        private @Nullable String defaultIamRoleArn;
        private @Nullable List<String> iamRoles;
        private @Nullable String kmsKeyId;
        private @Nullable List<NamespaceLogExport> logExports;
        private @Nullable String namespaceArn;
        private @Nullable String namespaceId;
        private @Nullable String namespaceName;
        private @Nullable NamespaceStatus status;
        public Builder() {}
        public Builder(Namespace defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminUsername = defaults.adminUsername;
    	      this.creationDate = defaults.creationDate;
    	      this.dbName = defaults.dbName;
    	      this.defaultIamRoleArn = defaults.defaultIamRoleArn;
    	      this.iamRoles = defaults.iamRoles;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.logExports = defaults.logExports;
    	      this.namespaceArn = defaults.namespaceArn;
    	      this.namespaceId = defaults.namespaceId;
    	      this.namespaceName = defaults.namespaceName;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder adminUsername(@Nullable String adminUsername) {
            this.adminUsername = adminUsername;
            return this;
        }
        @CustomType.Setter
        public Builder creationDate(@Nullable String creationDate) {
            this.creationDate = creationDate;
            return this;
        }
        @CustomType.Setter
        public Builder dbName(@Nullable String dbName) {
            this.dbName = dbName;
            return this;
        }
        @CustomType.Setter
        public Builder defaultIamRoleArn(@Nullable String defaultIamRoleArn) {
            this.defaultIamRoleArn = defaultIamRoleArn;
            return this;
        }
        @CustomType.Setter
        public Builder iamRoles(@Nullable List<String> iamRoles) {
            this.iamRoles = iamRoles;
            return this;
        }
        public Builder iamRoles(String... iamRoles) {
            return iamRoles(List.of(iamRoles));
        }
        @CustomType.Setter
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder logExports(@Nullable List<NamespaceLogExport> logExports) {
            this.logExports = logExports;
            return this;
        }
        public Builder logExports(NamespaceLogExport... logExports) {
            return logExports(List.of(logExports));
        }
        @CustomType.Setter
        public Builder namespaceArn(@Nullable String namespaceArn) {
            this.namespaceArn = namespaceArn;
            return this;
        }
        @CustomType.Setter
        public Builder namespaceId(@Nullable String namespaceId) {
            this.namespaceId = namespaceId;
            return this;
        }
        @CustomType.Setter
        public Builder namespaceName(@Nullable String namespaceName) {
            this.namespaceName = namespaceName;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable NamespaceStatus status) {
            this.status = status;
            return this;
        }
        public Namespace build() {
            final var o = new Namespace();
            o.adminUsername = adminUsername;
            o.creationDate = creationDate;
            o.dbName = dbName;
            o.defaultIamRoleArn = defaultIamRoleArn;
            o.iamRoles = iamRoles;
            o.kmsKeyId = kmsKeyId;
            o.logExports = logExports;
            o.namespaceArn = namespaceArn;
            o.namespaceId = namespaceId;
            o.namespaceName = namespaceName;
            o.status = status;
            return o;
        }
    }
}
