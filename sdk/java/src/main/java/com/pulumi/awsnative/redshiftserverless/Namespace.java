// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.redshiftserverless;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.redshiftserverless.NamespaceArgs;
import com.pulumi.awsnative.redshiftserverless.enums.NamespaceLogExport;
import com.pulumi.awsnative.redshiftserverless.outputs.NamespaceTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Definition of AWS::RedshiftServerless::Namespace Resource Type
 * 
 */
@ResourceType(type="aws-native:redshiftserverless:Namespace")
public class Namespace extends com.pulumi.resources.CustomResource {
    /**
     * The password associated with the admin user for the namespace that is being created. Password must be at least 8 characters in length, should be any printable ASCII character. Must contain at least one lowercase letter, one uppercase letter and one decimal digit.
     * 
     */
    @Export(name="adminUserPassword", type=String.class, parameters={})
    private Output</* @Nullable */ String> adminUserPassword;

    /**
     * @return The password associated with the admin user for the namespace that is being created. Password must be at least 8 characters in length, should be any printable ASCII character. Must contain at least one lowercase letter, one uppercase letter and one decimal digit.
     * 
     */
    public Output<Optional<String>> adminUserPassword() {
        return Codegen.optional(this.adminUserPassword);
    }
    /**
     * The user name associated with the admin user for the namespace that is being created. Only alphanumeric characters and underscores are allowed. It should start with an alphabet.
     * 
     */
    @Export(name="adminUsername", type=String.class, parameters={})
    private Output</* @Nullable */ String> adminUsername;

    /**
     * @return The user name associated with the admin user for the namespace that is being created. Only alphanumeric characters and underscores are allowed. It should start with an alphabet.
     * 
     */
    public Output<Optional<String>> adminUsername() {
        return Codegen.optional(this.adminUsername);
    }
    /**
     * The database name associated for the namespace that is being created. Only alphanumeric characters and underscores are allowed. It should start with an alphabet.
     * 
     */
    @Export(name="dbName", type=String.class, parameters={})
    private Output</* @Nullable */ String> dbName;

    /**
     * @return The database name associated for the namespace that is being created. Only alphanumeric characters and underscores are allowed. It should start with an alphabet.
     * 
     */
    public Output<Optional<String>> dbName() {
        return Codegen.optional(this.dbName);
    }
    /**
     * The default IAM role ARN for the namespace that is being created.
     * 
     */
    @Export(name="defaultIamRoleArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> defaultIamRoleArn;

    /**
     * @return The default IAM role ARN for the namespace that is being created.
     * 
     */
    public Output<Optional<String>> defaultIamRoleArn() {
        return Codegen.optional(this.defaultIamRoleArn);
    }
    /**
     * The name of the namespace the source snapshot was created from. Please specify the name if needed before deleting namespace
     * 
     */
    @Export(name="finalSnapshotName", type=String.class, parameters={})
    private Output</* @Nullable */ String> finalSnapshotName;

    /**
     * @return The name of the namespace the source snapshot was created from. Please specify the name if needed before deleting namespace
     * 
     */
    public Output<Optional<String>> finalSnapshotName() {
        return Codegen.optional(this.finalSnapshotName);
    }
    /**
     * The number of days to retain automated snapshot in the destination region after they are copied from the source region. If the value is -1, the manual snapshot is retained indefinitely. The value must be either -1 or an integer between 1 and 3,653.
     * 
     */
    @Export(name="finalSnapshotRetentionPeriod", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> finalSnapshotRetentionPeriod;

    /**
     * @return The number of days to retain automated snapshot in the destination region after they are copied from the source region. If the value is -1, the manual snapshot is retained indefinitely. The value must be either -1 or an integer between 1 and 3,653.
     * 
     */
    public Output<Optional<Integer>> finalSnapshotRetentionPeriod() {
        return Codegen.optional(this.finalSnapshotRetentionPeriod);
    }
    /**
     * A list of AWS Identity and Access Management (IAM) roles that can be used by the namespace to access other AWS services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. The Default role limit for each request is 10.
     * 
     */
    @Export(name="iamRoles", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> iamRoles;

    /**
     * @return A list of AWS Identity and Access Management (IAM) roles that can be used by the namespace to access other AWS services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. The Default role limit for each request is 10.
     * 
     */
    public Output<Optional<List<String>>> iamRoles() {
        return Codegen.optional(this.iamRoles);
    }
    /**
     * The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the namespace.
     * 
     */
    @Export(name="kmsKeyId", type=String.class, parameters={})
    private Output</* @Nullable */ String> kmsKeyId;

    /**
     * @return The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the namespace.
     * 
     */
    public Output<Optional<String>> kmsKeyId() {
        return Codegen.optional(this.kmsKeyId);
    }
    /**
     * The collection of log types to be exported provided by the customer. Should only be one of the three supported log types: userlog, useractivitylog and connectionlog
     * 
     */
    @Export(name="logExports", type=List.class, parameters={NamespaceLogExport.class})
    private Output</* @Nullable */ List<NamespaceLogExport>> logExports;

    /**
     * @return The collection of log types to be exported provided by the customer. Should only be one of the three supported log types: userlog, useractivitylog and connectionlog
     * 
     */
    public Output<Optional<List<NamespaceLogExport>>> logExports() {
        return Codegen.optional(this.logExports);
    }
    @Export(name="namespace", type=com.pulumi.awsnative.redshiftserverless.outputs.Namespace.class, parameters={})
    private Output<com.pulumi.awsnative.redshiftserverless.outputs.Namespace> namespace;

    public Output<com.pulumi.awsnative.redshiftserverless.outputs.Namespace> namespace() {
        return this.namespace;
    }
    /**
     * A unique identifier for the namespace. You use this identifier to refer to the namespace for any subsequent namespace operations such as deleting or modifying. All alphabetical characters must be lower case. Namespace name should be unique for all namespaces within an AWS account.
     * 
     */
    @Export(name="namespaceName", type=String.class, parameters={})
    private Output<String> namespaceName;

    /**
     * @return A unique identifier for the namespace. You use this identifier to refer to the namespace for any subsequent namespace operations such as deleting or modifying. All alphabetical characters must be lower case. Namespace name should be unique for all namespaces within an AWS account.
     * 
     */
    public Output<String> namespaceName() {
        return this.namespaceName;
    }
    /**
     * The list of tags for the namespace.
     * 
     */
    @Export(name="tags", type=List.class, parameters={NamespaceTag.class})
    private Output</* @Nullable */ List<NamespaceTag>> tags;

    /**
     * @return The list of tags for the namespace.
     * 
     */
    public Output<Optional<List<NamespaceTag>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Namespace(String name) {
        this(name, NamespaceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Namespace(String name, @Nullable NamespaceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Namespace(String name, @Nullable NamespaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:redshiftserverless:Namespace", name, args == null ? NamespaceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Namespace(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:redshiftserverless:Namespace", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Namespace get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Namespace(name, id, options);
    }
}
