// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.panorama;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PackageVersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final PackageVersionArgs Empty = new PackageVersionArgs();

    @Import(name="markLatest")
    private @Nullable Output<Boolean> markLatest;

    public Optional<Output<Boolean>> markLatest() {
        return Optional.ofNullable(this.markLatest);
    }

    @Import(name="ownerAccount")
    private @Nullable Output<String> ownerAccount;

    public Optional<Output<String>> ownerAccount() {
        return Optional.ofNullable(this.ownerAccount);
    }

    @Import(name="packageId", required=true)
    private Output<String> packageId;

    public Output<String> packageId() {
        return this.packageId;
    }

    @Import(name="packageVersion", required=true)
    private Output<String> packageVersion;

    public Output<String> packageVersion() {
        return this.packageVersion;
    }

    @Import(name="patchVersion", required=true)
    private Output<String> patchVersion;

    public Output<String> patchVersion() {
        return this.patchVersion;
    }

    @Import(name="updatedLatestPatchVersion")
    private @Nullable Output<String> updatedLatestPatchVersion;

    public Optional<Output<String>> updatedLatestPatchVersion() {
        return Optional.ofNullable(this.updatedLatestPatchVersion);
    }

    private PackageVersionArgs() {}

    private PackageVersionArgs(PackageVersionArgs $) {
        this.markLatest = $.markLatest;
        this.ownerAccount = $.ownerAccount;
        this.packageId = $.packageId;
        this.packageVersion = $.packageVersion;
        this.patchVersion = $.patchVersion;
        this.updatedLatestPatchVersion = $.updatedLatestPatchVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PackageVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PackageVersionArgs $;

        public Builder() {
            $ = new PackageVersionArgs();
        }

        public Builder(PackageVersionArgs defaults) {
            $ = new PackageVersionArgs(Objects.requireNonNull(defaults));
        }

        public Builder markLatest(@Nullable Output<Boolean> markLatest) {
            $.markLatest = markLatest;
            return this;
        }

        public Builder markLatest(Boolean markLatest) {
            return markLatest(Output.of(markLatest));
        }

        public Builder ownerAccount(@Nullable Output<String> ownerAccount) {
            $.ownerAccount = ownerAccount;
            return this;
        }

        public Builder ownerAccount(String ownerAccount) {
            return ownerAccount(Output.of(ownerAccount));
        }

        public Builder packageId(Output<String> packageId) {
            $.packageId = packageId;
            return this;
        }

        public Builder packageId(String packageId) {
            return packageId(Output.of(packageId));
        }

        public Builder packageVersion(Output<String> packageVersion) {
            $.packageVersion = packageVersion;
            return this;
        }

        public Builder packageVersion(String packageVersion) {
            return packageVersion(Output.of(packageVersion));
        }

        public Builder patchVersion(Output<String> patchVersion) {
            $.patchVersion = patchVersion;
            return this;
        }

        public Builder patchVersion(String patchVersion) {
            return patchVersion(Output.of(patchVersion));
        }

        public Builder updatedLatestPatchVersion(@Nullable Output<String> updatedLatestPatchVersion) {
            $.updatedLatestPatchVersion = updatedLatestPatchVersion;
            return this;
        }

        public Builder updatedLatestPatchVersion(String updatedLatestPatchVersion) {
            return updatedLatestPatchVersion(Output.of(updatedLatestPatchVersion));
        }

        public PackageVersionArgs build() {
            $.packageId = Objects.requireNonNull($.packageId, "expected parameter 'packageId' to be non-null");
            $.packageVersion = Objects.requireNonNull($.packageVersion, "expected parameter 'packageVersion' to be non-null");
            $.patchVersion = Objects.requireNonNull($.patchVersion, "expected parameter 'patchVersion' to be non-null");
            return $;
        }
    }

}
