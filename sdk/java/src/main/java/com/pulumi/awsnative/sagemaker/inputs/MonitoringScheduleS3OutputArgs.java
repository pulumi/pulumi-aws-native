// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.inputs;

import com.pulumi.awsnative.sagemaker.enums.MonitoringScheduleS3OutputS3UploadMode;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Information about where and how to store the results of a monitoring job.
 * 
 */
public final class MonitoringScheduleS3OutputArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitoringScheduleS3OutputArgs Empty = new MonitoringScheduleS3OutputArgs();

    /**
     * The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
     * 
     */
    @Import(name="localPath", required=true)
    private Output<String> localPath;

    /**
     * @return The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
     * 
     */
    public Output<String> localPath() {
        return this.localPath;
    }

    /**
     * Whether to upload the results of the monitoring job continuously or after the job completes.
     * 
     */
    @Import(name="s3UploadMode")
    private @Nullable Output<MonitoringScheduleS3OutputS3UploadMode> s3UploadMode;

    /**
     * @return Whether to upload the results of the monitoring job continuously or after the job completes.
     * 
     */
    public Optional<Output<MonitoringScheduleS3OutputS3UploadMode>> s3UploadMode() {
        return Optional.ofNullable(this.s3UploadMode);
    }

    /**
     * A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
     * 
     */
    @Import(name="s3Uri", required=true)
    private Output<String> s3Uri;

    /**
     * @return A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
     * 
     */
    public Output<String> s3Uri() {
        return this.s3Uri;
    }

    private MonitoringScheduleS3OutputArgs() {}

    private MonitoringScheduleS3OutputArgs(MonitoringScheduleS3OutputArgs $) {
        this.localPath = $.localPath;
        this.s3UploadMode = $.s3UploadMode;
        this.s3Uri = $.s3Uri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitoringScheduleS3OutputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoringScheduleS3OutputArgs $;

        public Builder() {
            $ = new MonitoringScheduleS3OutputArgs();
        }

        public Builder(MonitoringScheduleS3OutputArgs defaults) {
            $ = new MonitoringScheduleS3OutputArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param localPath The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
         * 
         * @return builder
         * 
         */
        public Builder localPath(Output<String> localPath) {
            $.localPath = localPath;
            return this;
        }

        /**
         * @param localPath The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
         * 
         * @return builder
         * 
         */
        public Builder localPath(String localPath) {
            return localPath(Output.of(localPath));
        }

        /**
         * @param s3UploadMode Whether to upload the results of the monitoring job continuously or after the job completes.
         * 
         * @return builder
         * 
         */
        public Builder s3UploadMode(@Nullable Output<MonitoringScheduleS3OutputS3UploadMode> s3UploadMode) {
            $.s3UploadMode = s3UploadMode;
            return this;
        }

        /**
         * @param s3UploadMode Whether to upload the results of the monitoring job continuously or after the job completes.
         * 
         * @return builder
         * 
         */
        public Builder s3UploadMode(MonitoringScheduleS3OutputS3UploadMode s3UploadMode) {
            return s3UploadMode(Output.of(s3UploadMode));
        }

        /**
         * @param s3Uri A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
         * 
         * @return builder
         * 
         */
        public Builder s3Uri(Output<String> s3Uri) {
            $.s3Uri = s3Uri;
            return this;
        }

        /**
         * @param s3Uri A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
         * 
         * @return builder
         * 
         */
        public Builder s3Uri(String s3Uri) {
            return s3Uri(Output.of(s3Uri));
        }

        public MonitoringScheduleS3OutputArgs build() {
            $.localPath = Objects.requireNonNull($.localPath, "expected parameter 'localPath' to be non-null");
            $.s3Uri = Objects.requireNonNull($.s3Uri, "expected parameter 's3Uri' to be non-null");
            return $;
        }
    }

}
