// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2.inputs;

import com.pulumi.awsnative.ec2.enums.EC2FleetSpotOptionsRequestAllocationStrategy;
import com.pulumi.awsnative.ec2.enums.EC2FleetSpotOptionsRequestInstanceInterruptionBehavior;
import com.pulumi.awsnative.ec2.inputs.EC2FleetMaintenanceStrategiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EC2FleetSpotOptionsRequestArgs extends com.pulumi.resources.ResourceArgs {

    public static final EC2FleetSpotOptionsRequestArgs Empty = new EC2FleetSpotOptionsRequestArgs();

    @Import(name="allocationStrategy")
    private @Nullable Output<EC2FleetSpotOptionsRequestAllocationStrategy> allocationStrategy;

    public Optional<Output<EC2FleetSpotOptionsRequestAllocationStrategy>> allocationStrategy() {
        return Optional.ofNullable(this.allocationStrategy);
    }

    @Import(name="instanceInterruptionBehavior")
    private @Nullable Output<EC2FleetSpotOptionsRequestInstanceInterruptionBehavior> instanceInterruptionBehavior;

    public Optional<Output<EC2FleetSpotOptionsRequestInstanceInterruptionBehavior>> instanceInterruptionBehavior() {
        return Optional.ofNullable(this.instanceInterruptionBehavior);
    }

    @Import(name="instancePoolsToUseCount")
    private @Nullable Output<Integer> instancePoolsToUseCount;

    public Optional<Output<Integer>> instancePoolsToUseCount() {
        return Optional.ofNullable(this.instancePoolsToUseCount);
    }

    @Import(name="maintenanceStrategies")
    private @Nullable Output<EC2FleetMaintenanceStrategiesArgs> maintenanceStrategies;

    public Optional<Output<EC2FleetMaintenanceStrategiesArgs>> maintenanceStrategies() {
        return Optional.ofNullable(this.maintenanceStrategies);
    }

    @Import(name="maxTotalPrice")
    private @Nullable Output<String> maxTotalPrice;

    public Optional<Output<String>> maxTotalPrice() {
        return Optional.ofNullable(this.maxTotalPrice);
    }

    @Import(name="minTargetCapacity")
    private @Nullable Output<Integer> minTargetCapacity;

    public Optional<Output<Integer>> minTargetCapacity() {
        return Optional.ofNullable(this.minTargetCapacity);
    }

    @Import(name="singleAvailabilityZone")
    private @Nullable Output<Boolean> singleAvailabilityZone;

    public Optional<Output<Boolean>> singleAvailabilityZone() {
        return Optional.ofNullable(this.singleAvailabilityZone);
    }

    @Import(name="singleInstanceType")
    private @Nullable Output<Boolean> singleInstanceType;

    public Optional<Output<Boolean>> singleInstanceType() {
        return Optional.ofNullable(this.singleInstanceType);
    }

    private EC2FleetSpotOptionsRequestArgs() {}

    private EC2FleetSpotOptionsRequestArgs(EC2FleetSpotOptionsRequestArgs $) {
        this.allocationStrategy = $.allocationStrategy;
        this.instanceInterruptionBehavior = $.instanceInterruptionBehavior;
        this.instancePoolsToUseCount = $.instancePoolsToUseCount;
        this.maintenanceStrategies = $.maintenanceStrategies;
        this.maxTotalPrice = $.maxTotalPrice;
        this.minTargetCapacity = $.minTargetCapacity;
        this.singleAvailabilityZone = $.singleAvailabilityZone;
        this.singleInstanceType = $.singleInstanceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EC2FleetSpotOptionsRequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EC2FleetSpotOptionsRequestArgs $;

        public Builder() {
            $ = new EC2FleetSpotOptionsRequestArgs();
        }

        public Builder(EC2FleetSpotOptionsRequestArgs defaults) {
            $ = new EC2FleetSpotOptionsRequestArgs(Objects.requireNonNull(defaults));
        }

        public Builder allocationStrategy(@Nullable Output<EC2FleetSpotOptionsRequestAllocationStrategy> allocationStrategy) {
            $.allocationStrategy = allocationStrategy;
            return this;
        }

        public Builder allocationStrategy(EC2FleetSpotOptionsRequestAllocationStrategy allocationStrategy) {
            return allocationStrategy(Output.of(allocationStrategy));
        }

        public Builder instanceInterruptionBehavior(@Nullable Output<EC2FleetSpotOptionsRequestInstanceInterruptionBehavior> instanceInterruptionBehavior) {
            $.instanceInterruptionBehavior = instanceInterruptionBehavior;
            return this;
        }

        public Builder instanceInterruptionBehavior(EC2FleetSpotOptionsRequestInstanceInterruptionBehavior instanceInterruptionBehavior) {
            return instanceInterruptionBehavior(Output.of(instanceInterruptionBehavior));
        }

        public Builder instancePoolsToUseCount(@Nullable Output<Integer> instancePoolsToUseCount) {
            $.instancePoolsToUseCount = instancePoolsToUseCount;
            return this;
        }

        public Builder instancePoolsToUseCount(Integer instancePoolsToUseCount) {
            return instancePoolsToUseCount(Output.of(instancePoolsToUseCount));
        }

        public Builder maintenanceStrategies(@Nullable Output<EC2FleetMaintenanceStrategiesArgs> maintenanceStrategies) {
            $.maintenanceStrategies = maintenanceStrategies;
            return this;
        }

        public Builder maintenanceStrategies(EC2FleetMaintenanceStrategiesArgs maintenanceStrategies) {
            return maintenanceStrategies(Output.of(maintenanceStrategies));
        }

        public Builder maxTotalPrice(@Nullable Output<String> maxTotalPrice) {
            $.maxTotalPrice = maxTotalPrice;
            return this;
        }

        public Builder maxTotalPrice(String maxTotalPrice) {
            return maxTotalPrice(Output.of(maxTotalPrice));
        }

        public Builder minTargetCapacity(@Nullable Output<Integer> minTargetCapacity) {
            $.minTargetCapacity = minTargetCapacity;
            return this;
        }

        public Builder minTargetCapacity(Integer minTargetCapacity) {
            return minTargetCapacity(Output.of(minTargetCapacity));
        }

        public Builder singleAvailabilityZone(@Nullable Output<Boolean> singleAvailabilityZone) {
            $.singleAvailabilityZone = singleAvailabilityZone;
            return this;
        }

        public Builder singleAvailabilityZone(Boolean singleAvailabilityZone) {
            return singleAvailabilityZone(Output.of(singleAvailabilityZone));
        }

        public Builder singleInstanceType(@Nullable Output<Boolean> singleInstanceType) {
            $.singleInstanceType = singleInstanceType;
            return this;
        }

        public Builder singleInstanceType(Boolean singleInstanceType) {
            return singleInstanceType(Output.of(singleInstanceType));
        }

        public EC2FleetSpotOptionsRequestArgs build() {
            return $;
        }
    }

}
