// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lookoutmetrics.outputs;

import com.pulumi.awsnative.lookoutmetrics.enums.AnomalyDetectorMetricSetMetricSetFrequency;
import com.pulumi.awsnative.lookoutmetrics.outputs.AnomalyDetectorMetric;
import com.pulumi.awsnative.lookoutmetrics.outputs.AnomalyDetectorMetricSource;
import com.pulumi.awsnative.lookoutmetrics.outputs.AnomalyDetectorTimestampColumn;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AnomalyDetectorMetricSet {
    /**
     * @return Dimensions for this MetricSet.
     * 
     */
    private @Nullable List<String> dimensionList;
    /**
     * @return Metrics captured by this MetricSet.
     * 
     */
    private List<AnomalyDetectorMetric> metricList;
    /**
     * @return A description for the MetricSet.
     * 
     */
    private @Nullable String metricSetDescription;
    /**
     * @return A frequency period to aggregate the data
     * 
     */
    private @Nullable AnomalyDetectorMetricSetMetricSetFrequency metricSetFrequency;
    /**
     * @return The name of the MetricSet.
     * 
     */
    private String metricSetName;
    private AnomalyDetectorMetricSource metricSource;
    /**
     * @return Offset, in seconds, between the frequency interval and the time at which the metrics are available.
     * 
     */
    private @Nullable Integer offset;
    private @Nullable AnomalyDetectorTimestampColumn timestampColumn;
    private @Nullable String timezone;

    private AnomalyDetectorMetricSet() {}
    /**
     * @return Dimensions for this MetricSet.
     * 
     */
    public List<String> dimensionList() {
        return this.dimensionList == null ? List.of() : this.dimensionList;
    }
    /**
     * @return Metrics captured by this MetricSet.
     * 
     */
    public List<AnomalyDetectorMetric> metricList() {
        return this.metricList;
    }
    /**
     * @return A description for the MetricSet.
     * 
     */
    public Optional<String> metricSetDescription() {
        return Optional.ofNullable(this.metricSetDescription);
    }
    /**
     * @return A frequency period to aggregate the data
     * 
     */
    public Optional<AnomalyDetectorMetricSetMetricSetFrequency> metricSetFrequency() {
        return Optional.ofNullable(this.metricSetFrequency);
    }
    /**
     * @return The name of the MetricSet.
     * 
     */
    public String metricSetName() {
        return this.metricSetName;
    }
    public AnomalyDetectorMetricSource metricSource() {
        return this.metricSource;
    }
    /**
     * @return Offset, in seconds, between the frequency interval and the time at which the metrics are available.
     * 
     */
    public Optional<Integer> offset() {
        return Optional.ofNullable(this.offset);
    }
    public Optional<AnomalyDetectorTimestampColumn> timestampColumn() {
        return Optional.ofNullable(this.timestampColumn);
    }
    public Optional<String> timezone() {
        return Optional.ofNullable(this.timezone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AnomalyDetectorMetricSet defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> dimensionList;
        private List<AnomalyDetectorMetric> metricList;
        private @Nullable String metricSetDescription;
        private @Nullable AnomalyDetectorMetricSetMetricSetFrequency metricSetFrequency;
        private String metricSetName;
        private AnomalyDetectorMetricSource metricSource;
        private @Nullable Integer offset;
        private @Nullable AnomalyDetectorTimestampColumn timestampColumn;
        private @Nullable String timezone;
        public Builder() {}
        public Builder(AnomalyDetectorMetricSet defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dimensionList = defaults.dimensionList;
    	      this.metricList = defaults.metricList;
    	      this.metricSetDescription = defaults.metricSetDescription;
    	      this.metricSetFrequency = defaults.metricSetFrequency;
    	      this.metricSetName = defaults.metricSetName;
    	      this.metricSource = defaults.metricSource;
    	      this.offset = defaults.offset;
    	      this.timestampColumn = defaults.timestampColumn;
    	      this.timezone = defaults.timezone;
        }

        @CustomType.Setter
        public Builder dimensionList(@Nullable List<String> dimensionList) {
            this.dimensionList = dimensionList;
            return this;
        }
        public Builder dimensionList(String... dimensionList) {
            return dimensionList(List.of(dimensionList));
        }
        @CustomType.Setter
        public Builder metricList(List<AnomalyDetectorMetric> metricList) {
            this.metricList = Objects.requireNonNull(metricList);
            return this;
        }
        public Builder metricList(AnomalyDetectorMetric... metricList) {
            return metricList(List.of(metricList));
        }
        @CustomType.Setter
        public Builder metricSetDescription(@Nullable String metricSetDescription) {
            this.metricSetDescription = metricSetDescription;
            return this;
        }
        @CustomType.Setter
        public Builder metricSetFrequency(@Nullable AnomalyDetectorMetricSetMetricSetFrequency metricSetFrequency) {
            this.metricSetFrequency = metricSetFrequency;
            return this;
        }
        @CustomType.Setter
        public Builder metricSetName(String metricSetName) {
            this.metricSetName = Objects.requireNonNull(metricSetName);
            return this;
        }
        @CustomType.Setter
        public Builder metricSource(AnomalyDetectorMetricSource metricSource) {
            this.metricSource = Objects.requireNonNull(metricSource);
            return this;
        }
        @CustomType.Setter
        public Builder offset(@Nullable Integer offset) {
            this.offset = offset;
            return this;
        }
        @CustomType.Setter
        public Builder timestampColumn(@Nullable AnomalyDetectorTimestampColumn timestampColumn) {
            this.timestampColumn = timestampColumn;
            return this;
        }
        @CustomType.Setter
        public Builder timezone(@Nullable String timezone) {
            this.timezone = timezone;
            return this;
        }
        public AnomalyDetectorMetricSet build() {
            final var o = new AnomalyDetectorMetricSet();
            o.dimensionList = dimensionList;
            o.metricList = metricList;
            o.metricSetDescription = metricSetDescription;
            o.metricSetFrequency = metricSetFrequency;
            o.metricSetName = metricSetName;
            o.metricSource = metricSource;
            o.offset = offset;
            o.timestampColumn = timestampColumn;
            o.timezone = timezone;
            return o;
        }
    }
}
