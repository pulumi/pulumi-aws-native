// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisanalyticsv2.inputs;

import com.pulumi.awsnative.kinesisanalyticsv2.enums.ApplicationZeppelinMonitoringConfigurationLogLevel;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes configuration parameters for Amazon CloudWatch logging for a Kinesis Data Analytics Studio notebook. For more information about CloudWatch logging, see Monitoring.
 * 
 */
public final class ApplicationZeppelinMonitoringConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationZeppelinMonitoringConfigurationArgs Empty = new ApplicationZeppelinMonitoringConfigurationArgs();

    /**
     * The verbosity of the CloudWatch Logs for an application. You can set it to `INFO`, `WARN`, `ERROR`, or `DEBUG`.
     * 
     */
    @Import(name="logLevel")
    private @Nullable Output<ApplicationZeppelinMonitoringConfigurationLogLevel> logLevel;

    /**
     * @return The verbosity of the CloudWatch Logs for an application. You can set it to `INFO`, `WARN`, `ERROR`, or `DEBUG`.
     * 
     */
    public Optional<Output<ApplicationZeppelinMonitoringConfigurationLogLevel>> logLevel() {
        return Optional.ofNullable(this.logLevel);
    }

    private ApplicationZeppelinMonitoringConfigurationArgs() {}

    private ApplicationZeppelinMonitoringConfigurationArgs(ApplicationZeppelinMonitoringConfigurationArgs $) {
        this.logLevel = $.logLevel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationZeppelinMonitoringConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationZeppelinMonitoringConfigurationArgs $;

        public Builder() {
            $ = new ApplicationZeppelinMonitoringConfigurationArgs();
        }

        public Builder(ApplicationZeppelinMonitoringConfigurationArgs defaults) {
            $ = new ApplicationZeppelinMonitoringConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logLevel The verbosity of the CloudWatch Logs for an application. You can set it to `INFO`, `WARN`, `ERROR`, or `DEBUG`.
         * 
         * @return builder
         * 
         */
        public Builder logLevel(@Nullable Output<ApplicationZeppelinMonitoringConfigurationLogLevel> logLevel) {
            $.logLevel = logLevel;
            return this;
        }

        /**
         * @param logLevel The verbosity of the CloudWatch Logs for an application. You can set it to `INFO`, `WARN`, `ERROR`, or `DEBUG`.
         * 
         * @return builder
         * 
         */
        public Builder logLevel(ApplicationZeppelinMonitoringConfigurationLogLevel logLevel) {
            return logLevel(Output.of(logLevel));
        }

        public ApplicationZeppelinMonitoringConfigurationArgs build() {
            return $;
        }
    }

}
