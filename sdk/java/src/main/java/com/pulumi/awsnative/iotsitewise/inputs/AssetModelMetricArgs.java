// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotsitewise.inputs;

import com.pulumi.awsnative.iotsitewise.inputs.AssetModelExpressionVariableArgs;
import com.pulumi.awsnative.iotsitewise.inputs.AssetModelMetricWindowArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class AssetModelMetricArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssetModelMetricArgs Empty = new AssetModelMetricArgs();

    /**
     * The mathematical expression that defines the metric aggregation function. You can specify up to 10 functions per expression.
     * 
     */
    @Import(name="expression", required=true)
    private Output<String> expression;

    /**
     * @return The mathematical expression that defines the metric aggregation function. You can specify up to 10 functions per expression.
     * 
     */
    public Output<String> expression() {
        return this.expression;
    }

    /**
     * The list of variables used in the expression.
     * 
     */
    @Import(name="variables", required=true)
    private Output<List<AssetModelExpressionVariableArgs>> variables;

    /**
     * @return The list of variables used in the expression.
     * 
     */
    public Output<List<AssetModelExpressionVariableArgs>> variables() {
        return this.variables;
    }

    /**
     * The window (time interval) over which AWS IoT SiteWise computes the metric&#39;s aggregation expression
     * 
     */
    @Import(name="window", required=true)
    private Output<AssetModelMetricWindowArgs> window;

    /**
     * @return The window (time interval) over which AWS IoT SiteWise computes the metric&#39;s aggregation expression
     * 
     */
    public Output<AssetModelMetricWindowArgs> window() {
        return this.window;
    }

    private AssetModelMetricArgs() {}

    private AssetModelMetricArgs(AssetModelMetricArgs $) {
        this.expression = $.expression;
        this.variables = $.variables;
        this.window = $.window;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssetModelMetricArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssetModelMetricArgs $;

        public Builder() {
            $ = new AssetModelMetricArgs();
        }

        public Builder(AssetModelMetricArgs defaults) {
            $ = new AssetModelMetricArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expression The mathematical expression that defines the metric aggregation function. You can specify up to 10 functions per expression.
         * 
         * @return builder
         * 
         */
        public Builder expression(Output<String> expression) {
            $.expression = expression;
            return this;
        }

        /**
         * @param expression The mathematical expression that defines the metric aggregation function. You can specify up to 10 functions per expression.
         * 
         * @return builder
         * 
         */
        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        /**
         * @param variables The list of variables used in the expression.
         * 
         * @return builder
         * 
         */
        public Builder variables(Output<List<AssetModelExpressionVariableArgs>> variables) {
            $.variables = variables;
            return this;
        }

        /**
         * @param variables The list of variables used in the expression.
         * 
         * @return builder
         * 
         */
        public Builder variables(List<AssetModelExpressionVariableArgs> variables) {
            return variables(Output.of(variables));
        }

        /**
         * @param variables The list of variables used in the expression.
         * 
         * @return builder
         * 
         */
        public Builder variables(AssetModelExpressionVariableArgs... variables) {
            return variables(List.of(variables));
        }

        /**
         * @param window The window (time interval) over which AWS IoT SiteWise computes the metric&#39;s aggregation expression
         * 
         * @return builder
         * 
         */
        public Builder window(Output<AssetModelMetricWindowArgs> window) {
            $.window = window;
            return this;
        }

        /**
         * @param window The window (time interval) over which AWS IoT SiteWise computes the metric&#39;s aggregation expression
         * 
         * @return builder
         * 
         */
        public Builder window(AssetModelMetricWindowArgs window) {
            return window(Output.of(window));
        }

        public AssetModelMetricArgs build() {
            $.expression = Objects.requireNonNull($.expression, "expected parameter 'expression' to be non-null");
            $.variables = Objects.requireNonNull($.variables, "expected parameter 'variables' to be non-null");
            $.window = Objects.requireNonNull($.window, "expected parameter 'window' to be non-null");
            return $;
        }
    }

}
