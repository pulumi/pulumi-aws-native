// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.amplify.outputs;

import com.pulumi.awsnative.amplify.outputs.DomainSubDomainSetting;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainResult {
    private @Nullable String arn;
    private @Nullable List<String> autoSubDomainCreationPatterns;
    private @Nullable String autoSubDomainIAMRole;
    private @Nullable String certificateRecord;
    private @Nullable String domainStatus;
    private @Nullable Boolean enableAutoSubDomain;
    private @Nullable String statusReason;
    private @Nullable List<DomainSubDomainSetting> subDomainSettings;

    private GetDomainResult() {}
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public List<String> autoSubDomainCreationPatterns() {
        return this.autoSubDomainCreationPatterns == null ? List.of() : this.autoSubDomainCreationPatterns;
    }
    public Optional<String> autoSubDomainIAMRole() {
        return Optional.ofNullable(this.autoSubDomainIAMRole);
    }
    public Optional<String> certificateRecord() {
        return Optional.ofNullable(this.certificateRecord);
    }
    public Optional<String> domainStatus() {
        return Optional.ofNullable(this.domainStatus);
    }
    public Optional<Boolean> enableAutoSubDomain() {
        return Optional.ofNullable(this.enableAutoSubDomain);
    }
    public Optional<String> statusReason() {
        return Optional.ofNullable(this.statusReason);
    }
    public List<DomainSubDomainSetting> subDomainSettings() {
        return this.subDomainSettings == null ? List.of() : this.subDomainSettings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable List<String> autoSubDomainCreationPatterns;
        private @Nullable String autoSubDomainIAMRole;
        private @Nullable String certificateRecord;
        private @Nullable String domainStatus;
        private @Nullable Boolean enableAutoSubDomain;
        private @Nullable String statusReason;
        private @Nullable List<DomainSubDomainSetting> subDomainSettings;
        public Builder() {}
        public Builder(GetDomainResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.autoSubDomainCreationPatterns = defaults.autoSubDomainCreationPatterns;
    	      this.autoSubDomainIAMRole = defaults.autoSubDomainIAMRole;
    	      this.certificateRecord = defaults.certificateRecord;
    	      this.domainStatus = defaults.domainStatus;
    	      this.enableAutoSubDomain = defaults.enableAutoSubDomain;
    	      this.statusReason = defaults.statusReason;
    	      this.subDomainSettings = defaults.subDomainSettings;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder autoSubDomainCreationPatterns(@Nullable List<String> autoSubDomainCreationPatterns) {
            this.autoSubDomainCreationPatterns = autoSubDomainCreationPatterns;
            return this;
        }
        public Builder autoSubDomainCreationPatterns(String... autoSubDomainCreationPatterns) {
            return autoSubDomainCreationPatterns(List.of(autoSubDomainCreationPatterns));
        }
        @CustomType.Setter
        public Builder autoSubDomainIAMRole(@Nullable String autoSubDomainIAMRole) {
            this.autoSubDomainIAMRole = autoSubDomainIAMRole;
            return this;
        }
        @CustomType.Setter
        public Builder certificateRecord(@Nullable String certificateRecord) {
            this.certificateRecord = certificateRecord;
            return this;
        }
        @CustomType.Setter
        public Builder domainStatus(@Nullable String domainStatus) {
            this.domainStatus = domainStatus;
            return this;
        }
        @CustomType.Setter
        public Builder enableAutoSubDomain(@Nullable Boolean enableAutoSubDomain) {
            this.enableAutoSubDomain = enableAutoSubDomain;
            return this;
        }
        @CustomType.Setter
        public Builder statusReason(@Nullable String statusReason) {
            this.statusReason = statusReason;
            return this;
        }
        @CustomType.Setter
        public Builder subDomainSettings(@Nullable List<DomainSubDomainSetting> subDomainSettings) {
            this.subDomainSettings = subDomainSettings;
            return this;
        }
        public Builder subDomainSettings(DomainSubDomainSetting... subDomainSettings) {
            return subDomainSettings(List.of(subDomainSettings));
        }
        public GetDomainResult build() {
            final var o = new GetDomainResult();
            o.arn = arn;
            o.autoSubDomainCreationPatterns = autoSubDomainCreationPatterns;
            o.autoSubDomainIAMRole = autoSubDomainIAMRole;
            o.certificateRecord = certificateRecord;
            o.domainStatus = domainStatus;
            o.enableAutoSubDomain = enableAutoSubDomain;
            o.statusReason = statusReason;
            o.subDomainSettings = subDomainSettings;
            return o;
        }
    }
}
