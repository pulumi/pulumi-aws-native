// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.inputs;

import com.pulumi.awsnative.sagemaker.enums.ModelPackageTransformOutputAssembleWith;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes the results of a transform job.
 * 
 */
public final class ModelPackageTransformOutputArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelPackageTransformOutputArgs Empty = new ModelPackageTransformOutputArgs();

    /**
     * The MIME type used to specify the output data. Amazon SageMaker uses the MIME type with each http call to transfer data from the transform job.
     * 
     */
    @Import(name="accept")
    private @Nullable Output<String> accept;

    /**
     * @return The MIME type used to specify the output data. Amazon SageMaker uses the MIME type with each http call to transfer data from the transform job.
     * 
     */
    public Optional<Output<String>> accept() {
        return Optional.ofNullable(this.accept);
    }

    /**
     * Defines how to assemble the results of the transform job as a single S3 object.
     * 
     */
    @Import(name="assembleWith")
    private @Nullable Output<ModelPackageTransformOutputAssembleWith> assembleWith;

    /**
     * @return Defines how to assemble the results of the transform job as a single S3 object.
     * 
     */
    public Optional<Output<ModelPackageTransformOutputAssembleWith>> assembleWith() {
        return Optional.ofNullable(this.assembleWith);
    }

    /**
     * The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
     * 
     */
    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    /**
     * @return The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
     * 
     */
    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    /**
     * The Amazon S3 path where you want Amazon SageMaker to store the results of the transform job.
     * 
     */
    @Import(name="s3OutputPath", required=true)
    private Output<String> s3OutputPath;

    /**
     * @return The Amazon S3 path where you want Amazon SageMaker to store the results of the transform job.
     * 
     */
    public Output<String> s3OutputPath() {
        return this.s3OutputPath;
    }

    private ModelPackageTransformOutputArgs() {}

    private ModelPackageTransformOutputArgs(ModelPackageTransformOutputArgs $) {
        this.accept = $.accept;
        this.assembleWith = $.assembleWith;
        this.kmsKeyId = $.kmsKeyId;
        this.s3OutputPath = $.s3OutputPath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelPackageTransformOutputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelPackageTransformOutputArgs $;

        public Builder() {
            $ = new ModelPackageTransformOutputArgs();
        }

        public Builder(ModelPackageTransformOutputArgs defaults) {
            $ = new ModelPackageTransformOutputArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accept The MIME type used to specify the output data. Amazon SageMaker uses the MIME type with each http call to transfer data from the transform job.
         * 
         * @return builder
         * 
         */
        public Builder accept(@Nullable Output<String> accept) {
            $.accept = accept;
            return this;
        }

        /**
         * @param accept The MIME type used to specify the output data. Amazon SageMaker uses the MIME type with each http call to transfer data from the transform job.
         * 
         * @return builder
         * 
         */
        public Builder accept(String accept) {
            return accept(Output.of(accept));
        }

        /**
         * @param assembleWith Defines how to assemble the results of the transform job as a single S3 object.
         * 
         * @return builder
         * 
         */
        public Builder assembleWith(@Nullable Output<ModelPackageTransformOutputAssembleWith> assembleWith) {
            $.assembleWith = assembleWith;
            return this;
        }

        /**
         * @param assembleWith Defines how to assemble the results of the transform job as a single S3 object.
         * 
         * @return builder
         * 
         */
        public Builder assembleWith(ModelPackageTransformOutputAssembleWith assembleWith) {
            return assembleWith(Output.of(assembleWith));
        }

        /**
         * @param kmsKeyId The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        /**
         * @param s3OutputPath The Amazon S3 path where you want Amazon SageMaker to store the results of the transform job.
         * 
         * @return builder
         * 
         */
        public Builder s3OutputPath(Output<String> s3OutputPath) {
            $.s3OutputPath = s3OutputPath;
            return this;
        }

        /**
         * @param s3OutputPath The Amazon S3 path where you want Amazon SageMaker to store the results of the transform job.
         * 
         * @return builder
         * 
         */
        public Builder s3OutputPath(String s3OutputPath) {
            return s3OutputPath(Output.of(s3OutputPath));
        }

        public ModelPackageTransformOutputArgs build() {
            $.s3OutputPath = Objects.requireNonNull($.s3OutputPath, "expected parameter 's3OutputPath' to be non-null");
            return $;
        }
    }

}
