// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.databrew;

import com.pulumi.awsnative.databrew.enums.JobEncryptionMode;
import com.pulumi.awsnative.databrew.enums.JobLogSubscription;
import com.pulumi.awsnative.databrew.enums.JobType;
import com.pulumi.awsnative.databrew.inputs.JobDataCatalogOutputArgs;
import com.pulumi.awsnative.databrew.inputs.JobDatabaseOutputArgs;
import com.pulumi.awsnative.databrew.inputs.JobOutputArgs;
import com.pulumi.awsnative.databrew.inputs.JobOutputLocationArgs;
import com.pulumi.awsnative.databrew.inputs.JobProfileConfigurationArgs;
import com.pulumi.awsnative.databrew.inputs.JobRecipeArgs;
import com.pulumi.awsnative.databrew.inputs.JobSampleArgs;
import com.pulumi.awsnative.databrew.inputs.JobTagArgs;
import com.pulumi.awsnative.databrew.inputs.JobValidationConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobArgs Empty = new JobArgs();

    @Import(name="dataCatalogOutputs")
    private @Nullable Output<List<JobDataCatalogOutputArgs>> dataCatalogOutputs;

    public Optional<Output<List<JobDataCatalogOutputArgs>>> dataCatalogOutputs() {
        return Optional.ofNullable(this.dataCatalogOutputs);
    }

    @Import(name="databaseOutputs")
    private @Nullable Output<List<JobDatabaseOutputArgs>> databaseOutputs;

    public Optional<Output<List<JobDatabaseOutputArgs>>> databaseOutputs() {
        return Optional.ofNullable(this.databaseOutputs);
    }

    /**
     * Dataset name
     * 
     */
    @Import(name="datasetName")
    private @Nullable Output<String> datasetName;

    /**
     * @return Dataset name
     * 
     */
    public Optional<Output<String>> datasetName() {
        return Optional.ofNullable(this.datasetName);
    }

    /**
     * Encryption Key Arn
     * 
     */
    @Import(name="encryptionKeyArn")
    private @Nullable Output<String> encryptionKeyArn;

    /**
     * @return Encryption Key Arn
     * 
     */
    public Optional<Output<String>> encryptionKeyArn() {
        return Optional.ofNullable(this.encryptionKeyArn);
    }

    /**
     * Encryption mode
     * 
     */
    @Import(name="encryptionMode")
    private @Nullable Output<JobEncryptionMode> encryptionMode;

    /**
     * @return Encryption mode
     * 
     */
    public Optional<Output<JobEncryptionMode>> encryptionMode() {
        return Optional.ofNullable(this.encryptionMode);
    }

    /**
     * Job Sample
     * 
     */
    @Import(name="jobSample")
    private @Nullable Output<JobSampleArgs> jobSample;

    /**
     * @return Job Sample
     * 
     */
    public Optional<Output<JobSampleArgs>> jobSample() {
        return Optional.ofNullable(this.jobSample);
    }

    /**
     * Log subscription
     * 
     */
    @Import(name="logSubscription")
    private @Nullable Output<JobLogSubscription> logSubscription;

    /**
     * @return Log subscription
     * 
     */
    public Optional<Output<JobLogSubscription>> logSubscription() {
        return Optional.ofNullable(this.logSubscription);
    }

    /**
     * Max capacity
     * 
     */
    @Import(name="maxCapacity")
    private @Nullable Output<Integer> maxCapacity;

    /**
     * @return Max capacity
     * 
     */
    public Optional<Output<Integer>> maxCapacity() {
        return Optional.ofNullable(this.maxCapacity);
    }

    /**
     * Max retries
     * 
     */
    @Import(name="maxRetries")
    private @Nullable Output<Integer> maxRetries;

    /**
     * @return Max retries
     * 
     */
    public Optional<Output<Integer>> maxRetries() {
        return Optional.ofNullable(this.maxRetries);
    }

    /**
     * Job name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Job name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Output location
     * 
     */
    @Import(name="outputLocation")
    private @Nullable Output<JobOutputLocationArgs> outputLocation;

    /**
     * @return Output location
     * 
     */
    public Optional<Output<JobOutputLocationArgs>> outputLocation() {
        return Optional.ofNullable(this.outputLocation);
    }

    @Import(name="outputs")
    private @Nullable Output<List<JobOutputArgs>> outputs;

    public Optional<Output<List<JobOutputArgs>>> outputs() {
        return Optional.ofNullable(this.outputs);
    }

    /**
     * Profile Job configuration
     * 
     */
    @Import(name="profileConfiguration")
    private @Nullable Output<JobProfileConfigurationArgs> profileConfiguration;

    /**
     * @return Profile Job configuration
     * 
     */
    public Optional<Output<JobProfileConfigurationArgs>> profileConfiguration() {
        return Optional.ofNullable(this.profileConfiguration);
    }

    /**
     * Project name
     * 
     */
    @Import(name="projectName")
    private @Nullable Output<String> projectName;

    /**
     * @return Project name
     * 
     */
    public Optional<Output<String>> projectName() {
        return Optional.ofNullable(this.projectName);
    }

    @Import(name="recipe")
    private @Nullable Output<JobRecipeArgs> recipe;

    public Optional<Output<JobRecipeArgs>> recipe() {
        return Optional.ofNullable(this.recipe);
    }

    /**
     * Role arn
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return Role arn
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    @Import(name="tags")
    private @Nullable Output<List<JobTagArgs>> tags;

    public Optional<Output<List<JobTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Timeout
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<Integer> timeout;

    /**
     * @return Timeout
     * 
     */
    public Optional<Output<Integer>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    /**
     * Job type
     * 
     */
    @Import(name="type", required=true)
    private Output<JobType> type;

    /**
     * @return Job type
     * 
     */
    public Output<JobType> type() {
        return this.type;
    }

    /**
     * Data quality rules configuration
     * 
     */
    @Import(name="validationConfigurations")
    private @Nullable Output<List<JobValidationConfigurationArgs>> validationConfigurations;

    /**
     * @return Data quality rules configuration
     * 
     */
    public Optional<Output<List<JobValidationConfigurationArgs>>> validationConfigurations() {
        return Optional.ofNullable(this.validationConfigurations);
    }

    private JobArgs() {}

    private JobArgs(JobArgs $) {
        this.dataCatalogOutputs = $.dataCatalogOutputs;
        this.databaseOutputs = $.databaseOutputs;
        this.datasetName = $.datasetName;
        this.encryptionKeyArn = $.encryptionKeyArn;
        this.encryptionMode = $.encryptionMode;
        this.jobSample = $.jobSample;
        this.logSubscription = $.logSubscription;
        this.maxCapacity = $.maxCapacity;
        this.maxRetries = $.maxRetries;
        this.name = $.name;
        this.outputLocation = $.outputLocation;
        this.outputs = $.outputs;
        this.profileConfiguration = $.profileConfiguration;
        this.projectName = $.projectName;
        this.recipe = $.recipe;
        this.roleArn = $.roleArn;
        this.tags = $.tags;
        this.timeout = $.timeout;
        this.type = $.type;
        this.validationConfigurations = $.validationConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobArgs $;

        public Builder() {
            $ = new JobArgs();
        }

        public Builder(JobArgs defaults) {
            $ = new JobArgs(Objects.requireNonNull(defaults));
        }

        public Builder dataCatalogOutputs(@Nullable Output<List<JobDataCatalogOutputArgs>> dataCatalogOutputs) {
            $.dataCatalogOutputs = dataCatalogOutputs;
            return this;
        }

        public Builder dataCatalogOutputs(List<JobDataCatalogOutputArgs> dataCatalogOutputs) {
            return dataCatalogOutputs(Output.of(dataCatalogOutputs));
        }

        public Builder dataCatalogOutputs(JobDataCatalogOutputArgs... dataCatalogOutputs) {
            return dataCatalogOutputs(List.of(dataCatalogOutputs));
        }

        public Builder databaseOutputs(@Nullable Output<List<JobDatabaseOutputArgs>> databaseOutputs) {
            $.databaseOutputs = databaseOutputs;
            return this;
        }

        public Builder databaseOutputs(List<JobDatabaseOutputArgs> databaseOutputs) {
            return databaseOutputs(Output.of(databaseOutputs));
        }

        public Builder databaseOutputs(JobDatabaseOutputArgs... databaseOutputs) {
            return databaseOutputs(List.of(databaseOutputs));
        }

        /**
         * @param datasetName Dataset name
         * 
         * @return builder
         * 
         */
        public Builder datasetName(@Nullable Output<String> datasetName) {
            $.datasetName = datasetName;
            return this;
        }

        /**
         * @param datasetName Dataset name
         * 
         * @return builder
         * 
         */
        public Builder datasetName(String datasetName) {
            return datasetName(Output.of(datasetName));
        }

        /**
         * @param encryptionKeyArn Encryption Key Arn
         * 
         * @return builder
         * 
         */
        public Builder encryptionKeyArn(@Nullable Output<String> encryptionKeyArn) {
            $.encryptionKeyArn = encryptionKeyArn;
            return this;
        }

        /**
         * @param encryptionKeyArn Encryption Key Arn
         * 
         * @return builder
         * 
         */
        public Builder encryptionKeyArn(String encryptionKeyArn) {
            return encryptionKeyArn(Output.of(encryptionKeyArn));
        }

        /**
         * @param encryptionMode Encryption mode
         * 
         * @return builder
         * 
         */
        public Builder encryptionMode(@Nullable Output<JobEncryptionMode> encryptionMode) {
            $.encryptionMode = encryptionMode;
            return this;
        }

        /**
         * @param encryptionMode Encryption mode
         * 
         * @return builder
         * 
         */
        public Builder encryptionMode(JobEncryptionMode encryptionMode) {
            return encryptionMode(Output.of(encryptionMode));
        }

        /**
         * @param jobSample Job Sample
         * 
         * @return builder
         * 
         */
        public Builder jobSample(@Nullable Output<JobSampleArgs> jobSample) {
            $.jobSample = jobSample;
            return this;
        }

        /**
         * @param jobSample Job Sample
         * 
         * @return builder
         * 
         */
        public Builder jobSample(JobSampleArgs jobSample) {
            return jobSample(Output.of(jobSample));
        }

        /**
         * @param logSubscription Log subscription
         * 
         * @return builder
         * 
         */
        public Builder logSubscription(@Nullable Output<JobLogSubscription> logSubscription) {
            $.logSubscription = logSubscription;
            return this;
        }

        /**
         * @param logSubscription Log subscription
         * 
         * @return builder
         * 
         */
        public Builder logSubscription(JobLogSubscription logSubscription) {
            return logSubscription(Output.of(logSubscription));
        }

        /**
         * @param maxCapacity Max capacity
         * 
         * @return builder
         * 
         */
        public Builder maxCapacity(@Nullable Output<Integer> maxCapacity) {
            $.maxCapacity = maxCapacity;
            return this;
        }

        /**
         * @param maxCapacity Max capacity
         * 
         * @return builder
         * 
         */
        public Builder maxCapacity(Integer maxCapacity) {
            return maxCapacity(Output.of(maxCapacity));
        }

        /**
         * @param maxRetries Max retries
         * 
         * @return builder
         * 
         */
        public Builder maxRetries(@Nullable Output<Integer> maxRetries) {
            $.maxRetries = maxRetries;
            return this;
        }

        /**
         * @param maxRetries Max retries
         * 
         * @return builder
         * 
         */
        public Builder maxRetries(Integer maxRetries) {
            return maxRetries(Output.of(maxRetries));
        }

        /**
         * @param name Job name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Job name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param outputLocation Output location
         * 
         * @return builder
         * 
         */
        public Builder outputLocation(@Nullable Output<JobOutputLocationArgs> outputLocation) {
            $.outputLocation = outputLocation;
            return this;
        }

        /**
         * @param outputLocation Output location
         * 
         * @return builder
         * 
         */
        public Builder outputLocation(JobOutputLocationArgs outputLocation) {
            return outputLocation(Output.of(outputLocation));
        }

        public Builder outputs(@Nullable Output<List<JobOutputArgs>> outputs) {
            $.outputs = outputs;
            return this;
        }

        public Builder outputs(List<JobOutputArgs> outputs) {
            return outputs(Output.of(outputs));
        }

        public Builder outputs(JobOutputArgs... outputs) {
            return outputs(List.of(outputs));
        }

        /**
         * @param profileConfiguration Profile Job configuration
         * 
         * @return builder
         * 
         */
        public Builder profileConfiguration(@Nullable Output<JobProfileConfigurationArgs> profileConfiguration) {
            $.profileConfiguration = profileConfiguration;
            return this;
        }

        /**
         * @param profileConfiguration Profile Job configuration
         * 
         * @return builder
         * 
         */
        public Builder profileConfiguration(JobProfileConfigurationArgs profileConfiguration) {
            return profileConfiguration(Output.of(profileConfiguration));
        }

        /**
         * @param projectName Project name
         * 
         * @return builder
         * 
         */
        public Builder projectName(@Nullable Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName Project name
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        public Builder recipe(@Nullable Output<JobRecipeArgs> recipe) {
            $.recipe = recipe;
            return this;
        }

        public Builder recipe(JobRecipeArgs recipe) {
            return recipe(Output.of(recipe));
        }

        /**
         * @param roleArn Role arn
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn Role arn
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder tags(@Nullable Output<List<JobTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<JobTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(JobTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param timeout Timeout
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout Timeout
         * 
         * @return builder
         * 
         */
        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        /**
         * @param type Job type
         * 
         * @return builder
         * 
         */
        public Builder type(Output<JobType> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Job type
         * 
         * @return builder
         * 
         */
        public Builder type(JobType type) {
            return type(Output.of(type));
        }

        /**
         * @param validationConfigurations Data quality rules configuration
         * 
         * @return builder
         * 
         */
        public Builder validationConfigurations(@Nullable Output<List<JobValidationConfigurationArgs>> validationConfigurations) {
            $.validationConfigurations = validationConfigurations;
            return this;
        }

        /**
         * @param validationConfigurations Data quality rules configuration
         * 
         * @return builder
         * 
         */
        public Builder validationConfigurations(List<JobValidationConfigurationArgs> validationConfigurations) {
            return validationConfigurations(Output.of(validationConfigurations));
        }

        /**
         * @param validationConfigurations Data quality rules configuration
         * 
         * @return builder
         * 
         */
        public Builder validationConfigurations(JobValidationConfigurationArgs... validationConfigurations) {
            return validationConfigurations(List.of(validationConfigurations));
        }

        public JobArgs build() {
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
