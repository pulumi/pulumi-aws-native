// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.apigateway;

import com.pulumi.awsnative.apigateway.inputs.UsagePlanApiStageArgs;
import com.pulumi.awsnative.apigateway.inputs.UsagePlanQuotaSettingsArgs;
import com.pulumi.awsnative.apigateway.inputs.UsagePlanTagArgs;
import com.pulumi.awsnative.apigateway.inputs.UsagePlanThrottleSettingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UsagePlanArgs extends com.pulumi.resources.ResourceArgs {

    public static final UsagePlanArgs Empty = new UsagePlanArgs();

    /**
     * The API stages to associate with this usage plan.
     * 
     */
    @Import(name="apiStages")
    private @Nullable Output<List<UsagePlanApiStageArgs>> apiStages;

    /**
     * @return The API stages to associate with this usage plan.
     * 
     */
    public Optional<Output<List<UsagePlanApiStageArgs>>> apiStages() {
        return Optional.ofNullable(this.apiStages);
    }

    /**
     * A description of the usage plan.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of the usage plan.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Configures the number of requests that users can make within a given interval.
     * 
     */
    @Import(name="quota")
    private @Nullable Output<UsagePlanQuotaSettingsArgs> quota;

    /**
     * @return Configures the number of requests that users can make within a given interval.
     * 
     */
    public Optional<Output<UsagePlanQuotaSettingsArgs>> quota() {
        return Optional.ofNullable(this.quota);
    }

    /**
     * An array of arbitrary tags (key-value pairs) to associate with the usage plan.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<UsagePlanTagArgs>> tags;

    /**
     * @return An array of arbitrary tags (key-value pairs) to associate with the usage plan.
     * 
     */
    public Optional<Output<List<UsagePlanTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Configures the overall request rate (average requests per second) and burst capacity.
     * 
     */
    @Import(name="throttle")
    private @Nullable Output<UsagePlanThrottleSettingsArgs> throttle;

    /**
     * @return Configures the overall request rate (average requests per second) and burst capacity.
     * 
     */
    public Optional<Output<UsagePlanThrottleSettingsArgs>> throttle() {
        return Optional.ofNullable(this.throttle);
    }

    /**
     * A name for the usage plan.
     * 
     */
    @Import(name="usagePlanName")
    private @Nullable Output<String> usagePlanName;

    /**
     * @return A name for the usage plan.
     * 
     */
    public Optional<Output<String>> usagePlanName() {
        return Optional.ofNullable(this.usagePlanName);
    }

    private UsagePlanArgs() {}

    private UsagePlanArgs(UsagePlanArgs $) {
        this.apiStages = $.apiStages;
        this.description = $.description;
        this.quota = $.quota;
        this.tags = $.tags;
        this.throttle = $.throttle;
        this.usagePlanName = $.usagePlanName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UsagePlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UsagePlanArgs $;

        public Builder() {
            $ = new UsagePlanArgs();
        }

        public Builder(UsagePlanArgs defaults) {
            $ = new UsagePlanArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiStages The API stages to associate with this usage plan.
         * 
         * @return builder
         * 
         */
        public Builder apiStages(@Nullable Output<List<UsagePlanApiStageArgs>> apiStages) {
            $.apiStages = apiStages;
            return this;
        }

        /**
         * @param apiStages The API stages to associate with this usage plan.
         * 
         * @return builder
         * 
         */
        public Builder apiStages(List<UsagePlanApiStageArgs> apiStages) {
            return apiStages(Output.of(apiStages));
        }

        /**
         * @param apiStages The API stages to associate with this usage plan.
         * 
         * @return builder
         * 
         */
        public Builder apiStages(UsagePlanApiStageArgs... apiStages) {
            return apiStages(List.of(apiStages));
        }

        /**
         * @param description A description of the usage plan.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of the usage plan.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param quota Configures the number of requests that users can make within a given interval.
         * 
         * @return builder
         * 
         */
        public Builder quota(@Nullable Output<UsagePlanQuotaSettingsArgs> quota) {
            $.quota = quota;
            return this;
        }

        /**
         * @param quota Configures the number of requests that users can make within a given interval.
         * 
         * @return builder
         * 
         */
        public Builder quota(UsagePlanQuotaSettingsArgs quota) {
            return quota(Output.of(quota));
        }

        /**
         * @param tags An array of arbitrary tags (key-value pairs) to associate with the usage plan.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<UsagePlanTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags An array of arbitrary tags (key-value pairs) to associate with the usage plan.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<UsagePlanTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags An array of arbitrary tags (key-value pairs) to associate with the usage plan.
         * 
         * @return builder
         * 
         */
        public Builder tags(UsagePlanTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param throttle Configures the overall request rate (average requests per second) and burst capacity.
         * 
         * @return builder
         * 
         */
        public Builder throttle(@Nullable Output<UsagePlanThrottleSettingsArgs> throttle) {
            $.throttle = throttle;
            return this;
        }

        /**
         * @param throttle Configures the overall request rate (average requests per second) and burst capacity.
         * 
         * @return builder
         * 
         */
        public Builder throttle(UsagePlanThrottleSettingsArgs throttle) {
            return throttle(Output.of(throttle));
        }

        /**
         * @param usagePlanName A name for the usage plan.
         * 
         * @return builder
         * 
         */
        public Builder usagePlanName(@Nullable Output<String> usagePlanName) {
            $.usagePlanName = usagePlanName;
            return this;
        }

        /**
         * @param usagePlanName A name for the usage plan.
         * 
         * @return builder
         * 
         */
        public Builder usagePlanName(String usagePlanName) {
            return usagePlanName(Output.of(usagePlanName));
        }

        public UsagePlanArgs build() {
            return $;
        }
    }

}
