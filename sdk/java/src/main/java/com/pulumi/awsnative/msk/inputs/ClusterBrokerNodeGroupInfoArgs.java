// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.msk.inputs;

import com.pulumi.awsnative.msk.inputs.ClusterConnectivityInfoArgs;
import com.pulumi.awsnative.msk.inputs.ClusterStorageInfoArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterBrokerNodeGroupInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterBrokerNodeGroupInfoArgs Empty = new ClusterBrokerNodeGroupInfoArgs();

    @Import(name="brokerAZDistribution")
    private @Nullable Output<String> brokerAZDistribution;

    public Optional<Output<String>> brokerAZDistribution() {
        return Optional.ofNullable(this.brokerAZDistribution);
    }

    @Import(name="clientSubnets", required=true)
    private Output<List<String>> clientSubnets;

    public Output<List<String>> clientSubnets() {
        return this.clientSubnets;
    }

    @Import(name="connectivityInfo")
    private @Nullable Output<ClusterConnectivityInfoArgs> connectivityInfo;

    public Optional<Output<ClusterConnectivityInfoArgs>> connectivityInfo() {
        return Optional.ofNullable(this.connectivityInfo);
    }

    @Import(name="instanceType", required=true)
    private Output<String> instanceType;

    public Output<String> instanceType() {
        return this.instanceType;
    }

    @Import(name="securityGroups")
    private @Nullable Output<List<String>> securityGroups;

    public Optional<Output<List<String>>> securityGroups() {
        return Optional.ofNullable(this.securityGroups);
    }

    @Import(name="storageInfo")
    private @Nullable Output<ClusterStorageInfoArgs> storageInfo;

    public Optional<Output<ClusterStorageInfoArgs>> storageInfo() {
        return Optional.ofNullable(this.storageInfo);
    }

    private ClusterBrokerNodeGroupInfoArgs() {}

    private ClusterBrokerNodeGroupInfoArgs(ClusterBrokerNodeGroupInfoArgs $) {
        this.brokerAZDistribution = $.brokerAZDistribution;
        this.clientSubnets = $.clientSubnets;
        this.connectivityInfo = $.connectivityInfo;
        this.instanceType = $.instanceType;
        this.securityGroups = $.securityGroups;
        this.storageInfo = $.storageInfo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterBrokerNodeGroupInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterBrokerNodeGroupInfoArgs $;

        public Builder() {
            $ = new ClusterBrokerNodeGroupInfoArgs();
        }

        public Builder(ClusterBrokerNodeGroupInfoArgs defaults) {
            $ = new ClusterBrokerNodeGroupInfoArgs(Objects.requireNonNull(defaults));
        }

        public Builder brokerAZDistribution(@Nullable Output<String> brokerAZDistribution) {
            $.brokerAZDistribution = brokerAZDistribution;
            return this;
        }

        public Builder brokerAZDistribution(String brokerAZDistribution) {
            return brokerAZDistribution(Output.of(brokerAZDistribution));
        }

        public Builder clientSubnets(Output<List<String>> clientSubnets) {
            $.clientSubnets = clientSubnets;
            return this;
        }

        public Builder clientSubnets(List<String> clientSubnets) {
            return clientSubnets(Output.of(clientSubnets));
        }

        public Builder clientSubnets(String... clientSubnets) {
            return clientSubnets(List.of(clientSubnets));
        }

        public Builder connectivityInfo(@Nullable Output<ClusterConnectivityInfoArgs> connectivityInfo) {
            $.connectivityInfo = connectivityInfo;
            return this;
        }

        public Builder connectivityInfo(ClusterConnectivityInfoArgs connectivityInfo) {
            return connectivityInfo(Output.of(connectivityInfo));
        }

        public Builder instanceType(Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        public Builder securityGroups(@Nullable Output<List<String>> securityGroups) {
            $.securityGroups = securityGroups;
            return this;
        }

        public Builder securityGroups(List<String> securityGroups) {
            return securityGroups(Output.of(securityGroups));
        }

        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }

        public Builder storageInfo(@Nullable Output<ClusterStorageInfoArgs> storageInfo) {
            $.storageInfo = storageInfo;
            return this;
        }

        public Builder storageInfo(ClusterStorageInfoArgs storageInfo) {
            return storageInfo(Output.of(storageInfo));
        }

        public ClusterBrokerNodeGroupInfoArgs build() {
            $.clientSubnets = Objects.requireNonNull($.clientSubnets, "expected parameter 'clientSubnets' to be non-null");
            $.instanceType = Objects.requireNonNull($.instanceType, "expected parameter 'instanceType' to be non-null");
            return $;
        }
    }

}
