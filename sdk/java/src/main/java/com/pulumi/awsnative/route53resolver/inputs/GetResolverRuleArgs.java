// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.route53resolver.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetResolverRuleArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetResolverRuleArgs Empty = new GetResolverRuleArgs();

    /**
     * The ID of the endpoint that the rule is associated with.
     * 
     */
    @Import(name="resolverRuleId", required=true)
    private Output<String> resolverRuleId;

    /**
     * @return The ID of the endpoint that the rule is associated with.
     * 
     */
    public Output<String> resolverRuleId() {
        return this.resolverRuleId;
    }

    private GetResolverRuleArgs() {}

    private GetResolverRuleArgs(GetResolverRuleArgs $) {
        this.resolverRuleId = $.resolverRuleId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetResolverRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetResolverRuleArgs $;

        public Builder() {
            $ = new GetResolverRuleArgs();
        }

        public Builder(GetResolverRuleArgs defaults) {
            $ = new GetResolverRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resolverRuleId The ID of the endpoint that the rule is associated with.
         * 
         * @return builder
         * 
         */
        public Builder resolverRuleId(Output<String> resolverRuleId) {
            $.resolverRuleId = resolverRuleId;
            return this;
        }

        /**
         * @param resolverRuleId The ID of the endpoint that the rule is associated with.
         * 
         * @return builder
         * 
         */
        public Builder resolverRuleId(String resolverRuleId) {
            return resolverRuleId(Output.of(resolverRuleId));
        }

        public GetResolverRuleArgs build() {
            $.resolverRuleId = Objects.requireNonNull($.resolverRuleId, "expected parameter 'resolverRuleId' to be non-null");
            return $;
        }
    }

}
