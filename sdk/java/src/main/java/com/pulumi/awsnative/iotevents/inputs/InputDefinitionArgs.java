// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotevents.inputs;

import com.pulumi.awsnative.iotevents.inputs.InputAttributeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


/**
 * The definition of the input.
 * 
 */
public final class InputDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final InputDefinitionArgs Empty = new InputDefinitionArgs();

    /**
     * The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input.
     * 
     */
    @Import(name="attributes", required=true)
    private Output<List<InputAttributeArgs>> attributes;

    /**
     * @return The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input.
     * 
     */
    public Output<List<InputAttributeArgs>> attributes() {
        return this.attributes;
    }

    private InputDefinitionArgs() {}

    private InputDefinitionArgs(InputDefinitionArgs $) {
        this.attributes = $.attributes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InputDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InputDefinitionArgs $;

        public Builder() {
            $ = new InputDefinitionArgs();
        }

        public Builder(InputDefinitionArgs defaults) {
            $ = new InputDefinitionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attributes The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input.
         * 
         * @return builder
         * 
         */
        public Builder attributes(Output<List<InputAttributeArgs>> attributes) {
            $.attributes = attributes;
            return this;
        }

        /**
         * @param attributes The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input.
         * 
         * @return builder
         * 
         */
        public Builder attributes(List<InputAttributeArgs> attributes) {
            return attributes(Output.of(attributes));
        }

        /**
         * @param attributes The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input.
         * 
         * @return builder
         * 
         */
        public Builder attributes(InputAttributeArgs... attributes) {
            return attributes(List.of(attributes));
        }

        public InputDefinitionArgs build() {
            $.attributes = Objects.requireNonNull($.attributes, "expected parameter 'attributes' to be non-null");
            return $;
        }
    }

}
