// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.datasync;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.datasync.LocationS3Args;
import com.pulumi.awsnative.datasync.enums.LocationS3S3StorageClass;
import com.pulumi.awsnative.datasync.outputs.LocationS3S3Config;
import com.pulumi.awsnative.datasync.outputs.LocationS3Tag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource schema for AWS::DataSync::LocationS3
 * 
 * ## Example Usage
 * 
 */
@ResourceType(type="aws-native:datasync:LocationS3")
public class LocationS3 extends com.pulumi.resources.CustomResource {
    /**
     * The Amazon Resource Name (ARN) of the Amazon S3 bucket location.
     * 
     */
    @Export(name="locationArn", type=String.class, parameters={})
    private Output<String> locationArn;

    /**
     * @return The Amazon Resource Name (ARN) of the Amazon S3 bucket location.
     * 
     */
    public Output<String> locationArn() {
        return this.locationArn;
    }
    /**
     * The URL of the S3 location that was described.
     * 
     */
    @Export(name="locationUri", type=String.class, parameters={})
    private Output<String> locationUri;

    /**
     * @return The URL of the S3 location that was described.
     * 
     */
    public Output<String> locationUri() {
        return this.locationUri;
    }
    /**
     * The Amazon Resource Name (ARN) of the Amazon S3 bucket.
     * 
     */
    @Export(name="s3BucketArn", type=String.class, parameters={})
    private Output<String> s3BucketArn;

    /**
     * @return The Amazon Resource Name (ARN) of the Amazon S3 bucket.
     * 
     */
    public Output<String> s3BucketArn() {
        return this.s3BucketArn;
    }
    @Export(name="s3Config", type=LocationS3S3Config.class, parameters={})
    private Output<LocationS3S3Config> s3Config;

    public Output<LocationS3S3Config> s3Config() {
        return this.s3Config;
    }
    /**
     * The Amazon S3 storage class you want to store your files in when this location is used as a task destination.
     * 
     */
    @Export(name="s3StorageClass", type=LocationS3S3StorageClass.class, parameters={})
    private Output</* @Nullable */ LocationS3S3StorageClass> s3StorageClass;

    /**
     * @return The Amazon S3 storage class you want to store your files in when this location is used as a task destination.
     * 
     */
    public Output<Optional<LocationS3S3StorageClass>> s3StorageClass() {
        return Codegen.optional(this.s3StorageClass);
    }
    /**
     * A subdirectory in the Amazon S3 bucket. This subdirectory in Amazon S3 is used to read data from the S3 source location or write data to the S3 destination.
     * 
     */
    @Export(name="subdirectory", type=String.class, parameters={})
    private Output</* @Nullable */ String> subdirectory;

    /**
     * @return A subdirectory in the Amazon S3 bucket. This subdirectory in Amazon S3 is used to read data from the S3 source location or write data to the S3 destination.
     * 
     */
    public Output<Optional<String>> subdirectory() {
        return Codegen.optional(this.subdirectory);
    }
    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Export(name="tags", type=List.class, parameters={LocationS3Tag.class})
    private Output</* @Nullable */ List<LocationS3Tag>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public Output<Optional<List<LocationS3Tag>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LocationS3(String name) {
        this(name, LocationS3Args.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LocationS3(String name, LocationS3Args args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LocationS3(String name, LocationS3Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:datasync:LocationS3", name, args == null ? LocationS3Args.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LocationS3(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:datasync:LocationS3", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LocationS3 get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LocationS3(name, id, options);
    }
}
