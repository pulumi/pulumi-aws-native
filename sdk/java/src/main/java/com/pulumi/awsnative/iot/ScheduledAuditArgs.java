// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iot;

import com.pulumi.awsnative.iot.enums.ScheduledAuditDayOfWeek;
import com.pulumi.awsnative.iot.enums.ScheduledAuditFrequency;
import com.pulumi.awsnative.iot.inputs.ScheduledAuditTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScheduledAuditArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduledAuditArgs Empty = new ScheduledAuditArgs();

    /**
     * The day of the month on which the scheduled audit takes place. Can be 1 through 31 or LAST. This field is required if the frequency parameter is set to MONTHLY.
     * 
     */
    @Import(name="dayOfMonth")
    private @Nullable Output<String> dayOfMonth;

    /**
     * @return The day of the month on which the scheduled audit takes place. Can be 1 through 31 or LAST. This field is required if the frequency parameter is set to MONTHLY.
     * 
     */
    public Optional<Output<String>> dayOfMonth() {
        return Optional.ofNullable(this.dayOfMonth);
    }

    /**
     * The day of the week on which the scheduled audit takes place. Can be one of SUN, MON, TUE,WED, THU, FRI, or SAT. This field is required if the frequency parameter is set to WEEKLY or BIWEEKLY.
     * 
     */
    @Import(name="dayOfWeek")
    private @Nullable Output<ScheduledAuditDayOfWeek> dayOfWeek;

    /**
     * @return The day of the week on which the scheduled audit takes place. Can be one of SUN, MON, TUE,WED, THU, FRI, or SAT. This field is required if the frequency parameter is set to WEEKLY or BIWEEKLY.
     * 
     */
    public Optional<Output<ScheduledAuditDayOfWeek>> dayOfWeek() {
        return Optional.ofNullable(this.dayOfWeek);
    }

    /**
     * How often the scheduled audit takes place. Can be one of DAILY, WEEKLY, BIWEEKLY, or MONTHLY.
     * 
     */
    @Import(name="frequency", required=true)
    private Output<ScheduledAuditFrequency> frequency;

    /**
     * @return How often the scheduled audit takes place. Can be one of DAILY, WEEKLY, BIWEEKLY, or MONTHLY.
     * 
     */
    public Output<ScheduledAuditFrequency> frequency() {
        return this.frequency;
    }

    /**
     * The name you want to give to the scheduled audit.
     * 
     */
    @Import(name="scheduledAuditName")
    private @Nullable Output<String> scheduledAuditName;

    /**
     * @return The name you want to give to the scheduled audit.
     * 
     */
    public Optional<Output<String>> scheduledAuditName() {
        return Optional.ofNullable(this.scheduledAuditName);
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<ScheduledAuditTagArgs>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public Optional<Output<List<ScheduledAuditTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Which checks are performed during the scheduled audit. Checks must be enabled for your account.
     * 
     */
    @Import(name="targetCheckNames", required=true)
    private Output<List<String>> targetCheckNames;

    /**
     * @return Which checks are performed during the scheduled audit. Checks must be enabled for your account.
     * 
     */
    public Output<List<String>> targetCheckNames() {
        return this.targetCheckNames;
    }

    private ScheduledAuditArgs() {}

    private ScheduledAuditArgs(ScheduledAuditArgs $) {
        this.dayOfMonth = $.dayOfMonth;
        this.dayOfWeek = $.dayOfWeek;
        this.frequency = $.frequency;
        this.scheduledAuditName = $.scheduledAuditName;
        this.tags = $.tags;
        this.targetCheckNames = $.targetCheckNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduledAuditArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduledAuditArgs $;

        public Builder() {
            $ = new ScheduledAuditArgs();
        }

        public Builder(ScheduledAuditArgs defaults) {
            $ = new ScheduledAuditArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dayOfMonth The day of the month on which the scheduled audit takes place. Can be 1 through 31 or LAST. This field is required if the frequency parameter is set to MONTHLY.
         * 
         * @return builder
         * 
         */
        public Builder dayOfMonth(@Nullable Output<String> dayOfMonth) {
            $.dayOfMonth = dayOfMonth;
            return this;
        }

        /**
         * @param dayOfMonth The day of the month on which the scheduled audit takes place. Can be 1 through 31 or LAST. This field is required if the frequency parameter is set to MONTHLY.
         * 
         * @return builder
         * 
         */
        public Builder dayOfMonth(String dayOfMonth) {
            return dayOfMonth(Output.of(dayOfMonth));
        }

        /**
         * @param dayOfWeek The day of the week on which the scheduled audit takes place. Can be one of SUN, MON, TUE,WED, THU, FRI, or SAT. This field is required if the frequency parameter is set to WEEKLY or BIWEEKLY.
         * 
         * @return builder
         * 
         */
        public Builder dayOfWeek(@Nullable Output<ScheduledAuditDayOfWeek> dayOfWeek) {
            $.dayOfWeek = dayOfWeek;
            return this;
        }

        /**
         * @param dayOfWeek The day of the week on which the scheduled audit takes place. Can be one of SUN, MON, TUE,WED, THU, FRI, or SAT. This field is required if the frequency parameter is set to WEEKLY or BIWEEKLY.
         * 
         * @return builder
         * 
         */
        public Builder dayOfWeek(ScheduledAuditDayOfWeek dayOfWeek) {
            return dayOfWeek(Output.of(dayOfWeek));
        }

        /**
         * @param frequency How often the scheduled audit takes place. Can be one of DAILY, WEEKLY, BIWEEKLY, or MONTHLY.
         * 
         * @return builder
         * 
         */
        public Builder frequency(Output<ScheduledAuditFrequency> frequency) {
            $.frequency = frequency;
            return this;
        }

        /**
         * @param frequency How often the scheduled audit takes place. Can be one of DAILY, WEEKLY, BIWEEKLY, or MONTHLY.
         * 
         * @return builder
         * 
         */
        public Builder frequency(ScheduledAuditFrequency frequency) {
            return frequency(Output.of(frequency));
        }

        /**
         * @param scheduledAuditName The name you want to give to the scheduled audit.
         * 
         * @return builder
         * 
         */
        public Builder scheduledAuditName(@Nullable Output<String> scheduledAuditName) {
            $.scheduledAuditName = scheduledAuditName;
            return this;
        }

        /**
         * @param scheduledAuditName The name you want to give to the scheduled audit.
         * 
         * @return builder
         * 
         */
        public Builder scheduledAuditName(String scheduledAuditName) {
            return scheduledAuditName(Output.of(scheduledAuditName));
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<ScheduledAuditTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<ScheduledAuditTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(ScheduledAuditTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param targetCheckNames Which checks are performed during the scheduled audit. Checks must be enabled for your account.
         * 
         * @return builder
         * 
         */
        public Builder targetCheckNames(Output<List<String>> targetCheckNames) {
            $.targetCheckNames = targetCheckNames;
            return this;
        }

        /**
         * @param targetCheckNames Which checks are performed during the scheduled audit. Checks must be enabled for your account.
         * 
         * @return builder
         * 
         */
        public Builder targetCheckNames(List<String> targetCheckNames) {
            return targetCheckNames(Output.of(targetCheckNames));
        }

        /**
         * @param targetCheckNames Which checks are performed during the scheduled audit. Checks must be enabled for your account.
         * 
         * @return builder
         * 
         */
        public Builder targetCheckNames(String... targetCheckNames) {
            return targetCheckNames(List.of(targetCheckNames));
        }

        public ScheduledAuditArgs build() {
            $.frequency = Objects.requireNonNull($.frequency, "expected parameter 'frequency' to be non-null");
            $.targetCheckNames = Objects.requireNonNull($.targetCheckNames, "expected parameter 'targetCheckNames' to be non-null");
            return $;
        }
    }

}
