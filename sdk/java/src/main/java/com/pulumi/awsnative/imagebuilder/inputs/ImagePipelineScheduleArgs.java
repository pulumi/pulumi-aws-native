// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.imagebuilder.inputs;

import com.pulumi.awsnative.imagebuilder.enums.ImagePipelineSchedulePipelineExecutionStartCondition;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The schedule of the image pipeline.
 * 
 */
public final class ImagePipelineScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImagePipelineScheduleArgs Empty = new ImagePipelineScheduleArgs();

    /**
     * The condition configures when the pipeline should trigger a new image build.
     * 
     */
    @Import(name="pipelineExecutionStartCondition")
    private @Nullable Output<ImagePipelineSchedulePipelineExecutionStartCondition> pipelineExecutionStartCondition;

    /**
     * @return The condition configures when the pipeline should trigger a new image build.
     * 
     */
    public Optional<Output<ImagePipelineSchedulePipelineExecutionStartCondition>> pipelineExecutionStartCondition() {
        return Optional.ofNullable(this.pipelineExecutionStartCondition);
    }

    /**
     * The expression determines how often EC2 Image Builder evaluates your pipelineExecutionStartCondition.
     * 
     */
    @Import(name="scheduleExpression")
    private @Nullable Output<String> scheduleExpression;

    /**
     * @return The expression determines how often EC2 Image Builder evaluates your pipelineExecutionStartCondition.
     * 
     */
    public Optional<Output<String>> scheduleExpression() {
        return Optional.ofNullable(this.scheduleExpression);
    }

    private ImagePipelineScheduleArgs() {}

    private ImagePipelineScheduleArgs(ImagePipelineScheduleArgs $) {
        this.pipelineExecutionStartCondition = $.pipelineExecutionStartCondition;
        this.scheduleExpression = $.scheduleExpression;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImagePipelineScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImagePipelineScheduleArgs $;

        public Builder() {
            $ = new ImagePipelineScheduleArgs();
        }

        public Builder(ImagePipelineScheduleArgs defaults) {
            $ = new ImagePipelineScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param pipelineExecutionStartCondition The condition configures when the pipeline should trigger a new image build.
         * 
         * @return builder
         * 
         */
        public Builder pipelineExecutionStartCondition(@Nullable Output<ImagePipelineSchedulePipelineExecutionStartCondition> pipelineExecutionStartCondition) {
            $.pipelineExecutionStartCondition = pipelineExecutionStartCondition;
            return this;
        }

        /**
         * @param pipelineExecutionStartCondition The condition configures when the pipeline should trigger a new image build.
         * 
         * @return builder
         * 
         */
        public Builder pipelineExecutionStartCondition(ImagePipelineSchedulePipelineExecutionStartCondition pipelineExecutionStartCondition) {
            return pipelineExecutionStartCondition(Output.of(pipelineExecutionStartCondition));
        }

        /**
         * @param scheduleExpression The expression determines how often EC2 Image Builder evaluates your pipelineExecutionStartCondition.
         * 
         * @return builder
         * 
         */
        public Builder scheduleExpression(@Nullable Output<String> scheduleExpression) {
            $.scheduleExpression = scheduleExpression;
            return this;
        }

        /**
         * @param scheduleExpression The expression determines how often EC2 Image Builder evaluates your pipelineExecutionStartCondition.
         * 
         * @return builder
         * 
         */
        public Builder scheduleExpression(String scheduleExpression) {
            return scheduleExpression(Output.of(scheduleExpression));
        }

        public ImagePipelineScheduleArgs build() {
            return $;
        }
    }

}
