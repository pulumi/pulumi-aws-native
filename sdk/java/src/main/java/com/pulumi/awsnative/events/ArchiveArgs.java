// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.events;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ArchiveArgs extends com.pulumi.resources.ResourceArgs {

    public static final ArchiveArgs Empty = new ArchiveArgs();

    @Import(name="archiveName")
    private @Nullable Output<String> archiveName;

    public Optional<Output<String>> archiveName() {
        return Optional.ofNullable(this.archiveName);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="eventPattern")
    private @Nullable Output<Object> eventPattern;

    public Optional<Output<Object>> eventPattern() {
        return Optional.ofNullable(this.eventPattern);
    }

    @Import(name="retentionDays")
    private @Nullable Output<Integer> retentionDays;

    public Optional<Output<Integer>> retentionDays() {
        return Optional.ofNullable(this.retentionDays);
    }

    @Import(name="sourceArn", required=true)
    private Output<String> sourceArn;

    public Output<String> sourceArn() {
        return this.sourceArn;
    }

    private ArchiveArgs() {}

    private ArchiveArgs(ArchiveArgs $) {
        this.archiveName = $.archiveName;
        this.description = $.description;
        this.eventPattern = $.eventPattern;
        this.retentionDays = $.retentionDays;
        this.sourceArn = $.sourceArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ArchiveArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ArchiveArgs $;

        public Builder() {
            $ = new ArchiveArgs();
        }

        public Builder(ArchiveArgs defaults) {
            $ = new ArchiveArgs(Objects.requireNonNull(defaults));
        }

        public Builder archiveName(@Nullable Output<String> archiveName) {
            $.archiveName = archiveName;
            return this;
        }

        public Builder archiveName(String archiveName) {
            return archiveName(Output.of(archiveName));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder eventPattern(@Nullable Output<Object> eventPattern) {
            $.eventPattern = eventPattern;
            return this;
        }

        public Builder eventPattern(Object eventPattern) {
            return eventPattern(Output.of(eventPattern));
        }

        public Builder retentionDays(@Nullable Output<Integer> retentionDays) {
            $.retentionDays = retentionDays;
            return this;
        }

        public Builder retentionDays(Integer retentionDays) {
            return retentionDays(Output.of(retentionDays));
        }

        public Builder sourceArn(Output<String> sourceArn) {
            $.sourceArn = sourceArn;
            return this;
        }

        public Builder sourceArn(String sourceArn) {
            return sourceArn(Output.of(sourceArn));
        }

        public ArchiveArgs build() {
            $.sourceArn = Objects.requireNonNull($.sourceArn, "expected parameter 'sourceArn' to be non-null");
            return $;
        }
    }

}
