// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.rekognition.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Face search settings to use on a streaming video. Note that either FaceSearchSettings or ConnectedHomeSettings should be set. Not both
 * 
 */
public final class StreamProcessorFaceSearchSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamProcessorFaceSearchSettingsArgs Empty = new StreamProcessorFaceSearchSettingsArgs();

    /**
     * The ID of a collection that contains faces that you want to search for.
     * 
     */
    @Import(name="collectionId", required=true)
    private Output<String> collectionId;

    /**
     * @return The ID of a collection that contains faces that you want to search for.
     * 
     */
    public Output<String> collectionId() {
        return this.collectionId;
    }

    /**
     * Minimum face match confidence score percentage that must be met to return a result for a recognized face. The default is 80. 0 is the lowest confidence. 100 is the highest confidence. Values between 0 and 100 are accepted.
     * 
     */
    @Import(name="faceMatchThreshold")
    private @Nullable Output<Double> faceMatchThreshold;

    /**
     * @return Minimum face match confidence score percentage that must be met to return a result for a recognized face. The default is 80. 0 is the lowest confidence. 100 is the highest confidence. Values between 0 and 100 are accepted.
     * 
     */
    public Optional<Output<Double>> faceMatchThreshold() {
        return Optional.ofNullable(this.faceMatchThreshold);
    }

    private StreamProcessorFaceSearchSettingsArgs() {}

    private StreamProcessorFaceSearchSettingsArgs(StreamProcessorFaceSearchSettingsArgs $) {
        this.collectionId = $.collectionId;
        this.faceMatchThreshold = $.faceMatchThreshold;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamProcessorFaceSearchSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamProcessorFaceSearchSettingsArgs $;

        public Builder() {
            $ = new StreamProcessorFaceSearchSettingsArgs();
        }

        public Builder(StreamProcessorFaceSearchSettingsArgs defaults) {
            $ = new StreamProcessorFaceSearchSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param collectionId The ID of a collection that contains faces that you want to search for.
         * 
         * @return builder
         * 
         */
        public Builder collectionId(Output<String> collectionId) {
            $.collectionId = collectionId;
            return this;
        }

        /**
         * @param collectionId The ID of a collection that contains faces that you want to search for.
         * 
         * @return builder
         * 
         */
        public Builder collectionId(String collectionId) {
            return collectionId(Output.of(collectionId));
        }

        /**
         * @param faceMatchThreshold Minimum face match confidence score percentage that must be met to return a result for a recognized face. The default is 80. 0 is the lowest confidence. 100 is the highest confidence. Values between 0 and 100 are accepted.
         * 
         * @return builder
         * 
         */
        public Builder faceMatchThreshold(@Nullable Output<Double> faceMatchThreshold) {
            $.faceMatchThreshold = faceMatchThreshold;
            return this;
        }

        /**
         * @param faceMatchThreshold Minimum face match confidence score percentage that must be met to return a result for a recognized face. The default is 80. 0 is the lowest confidence. 100 is the highest confidence. Values between 0 and 100 are accepted.
         * 
         * @return builder
         * 
         */
        public Builder faceMatchThreshold(Double faceMatchThreshold) {
            return faceMatchThreshold(Output.of(faceMatchThreshold));
        }

        public StreamProcessorFaceSearchSettingsArgs build() {
            $.collectionId = Objects.requireNonNull($.collectionId, "expected parameter 'collectionId' to be non-null");
            return $;
        }
    }

}
