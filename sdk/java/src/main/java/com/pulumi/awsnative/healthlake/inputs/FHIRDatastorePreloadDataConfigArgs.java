// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.healthlake.inputs;

import com.pulumi.awsnative.healthlake.enums.FHIRDatastorePreloadDataConfigPreloadDataType;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


/**
 * The preloaded data configuration for the Data Store. Only data preloaded from Synthea is supported.
 * 
 */
public final class FHIRDatastorePreloadDataConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final FHIRDatastorePreloadDataConfigArgs Empty = new FHIRDatastorePreloadDataConfigArgs();

    /**
     * The type of preloaded data. Only Synthea preloaded data is supported.
     * 
     */
    @Import(name="preloadDataType", required=true)
    private Output<FHIRDatastorePreloadDataConfigPreloadDataType> preloadDataType;

    /**
     * @return The type of preloaded data. Only Synthea preloaded data is supported.
     * 
     */
    public Output<FHIRDatastorePreloadDataConfigPreloadDataType> preloadDataType() {
        return this.preloadDataType;
    }

    private FHIRDatastorePreloadDataConfigArgs() {}

    private FHIRDatastorePreloadDataConfigArgs(FHIRDatastorePreloadDataConfigArgs $) {
        this.preloadDataType = $.preloadDataType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FHIRDatastorePreloadDataConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FHIRDatastorePreloadDataConfigArgs $;

        public Builder() {
            $ = new FHIRDatastorePreloadDataConfigArgs();
        }

        public Builder(FHIRDatastorePreloadDataConfigArgs defaults) {
            $ = new FHIRDatastorePreloadDataConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param preloadDataType The type of preloaded data. Only Synthea preloaded data is supported.
         * 
         * @return builder
         * 
         */
        public Builder preloadDataType(Output<FHIRDatastorePreloadDataConfigPreloadDataType> preloadDataType) {
            $.preloadDataType = preloadDataType;
            return this;
        }

        /**
         * @param preloadDataType The type of preloaded data. Only Synthea preloaded data is supported.
         * 
         * @return builder
         * 
         */
        public Builder preloadDataType(FHIRDatastorePreloadDataConfigPreloadDataType preloadDataType) {
            return preloadDataType(Output.of(preloadDataType));
        }

        public FHIRDatastorePreloadDataConfigArgs build() {
            $.preloadDataType = Objects.requireNonNull($.preloadDataType, "expected parameter 'preloadDataType' to be non-null");
            return $;
        }
    }

}
