// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kendra.inputs;

import com.pulumi.awsnative.kendra.inputs.DataSourceToIndexFieldMappingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataSourceWorkDocsConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceWorkDocsConfigurationArgs Empty = new DataSourceWorkDocsConfigurationArgs();

    @Import(name="crawlComments")
    private @Nullable Output<Boolean> crawlComments;

    public Optional<Output<Boolean>> crawlComments() {
        return Optional.ofNullable(this.crawlComments);
    }

    @Import(name="exclusionPatterns")
    private @Nullable Output<List<String>> exclusionPatterns;

    public Optional<Output<List<String>>> exclusionPatterns() {
        return Optional.ofNullable(this.exclusionPatterns);
    }

    @Import(name="fieldMappings")
    private @Nullable Output<List<DataSourceToIndexFieldMappingArgs>> fieldMappings;

    public Optional<Output<List<DataSourceToIndexFieldMappingArgs>>> fieldMappings() {
        return Optional.ofNullable(this.fieldMappings);
    }

    @Import(name="inclusionPatterns")
    private @Nullable Output<List<String>> inclusionPatterns;

    public Optional<Output<List<String>>> inclusionPatterns() {
        return Optional.ofNullable(this.inclusionPatterns);
    }

    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    public Output<String> organizationId() {
        return this.organizationId;
    }

    @Import(name="useChangeLog")
    private @Nullable Output<Boolean> useChangeLog;

    public Optional<Output<Boolean>> useChangeLog() {
        return Optional.ofNullable(this.useChangeLog);
    }

    private DataSourceWorkDocsConfigurationArgs() {}

    private DataSourceWorkDocsConfigurationArgs(DataSourceWorkDocsConfigurationArgs $) {
        this.crawlComments = $.crawlComments;
        this.exclusionPatterns = $.exclusionPatterns;
        this.fieldMappings = $.fieldMappings;
        this.inclusionPatterns = $.inclusionPatterns;
        this.organizationId = $.organizationId;
        this.useChangeLog = $.useChangeLog;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceWorkDocsConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceWorkDocsConfigurationArgs $;

        public Builder() {
            $ = new DataSourceWorkDocsConfigurationArgs();
        }

        public Builder(DataSourceWorkDocsConfigurationArgs defaults) {
            $ = new DataSourceWorkDocsConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder crawlComments(@Nullable Output<Boolean> crawlComments) {
            $.crawlComments = crawlComments;
            return this;
        }

        public Builder crawlComments(Boolean crawlComments) {
            return crawlComments(Output.of(crawlComments));
        }

        public Builder exclusionPatterns(@Nullable Output<List<String>> exclusionPatterns) {
            $.exclusionPatterns = exclusionPatterns;
            return this;
        }

        public Builder exclusionPatterns(List<String> exclusionPatterns) {
            return exclusionPatterns(Output.of(exclusionPatterns));
        }

        public Builder exclusionPatterns(String... exclusionPatterns) {
            return exclusionPatterns(List.of(exclusionPatterns));
        }

        public Builder fieldMappings(@Nullable Output<List<DataSourceToIndexFieldMappingArgs>> fieldMappings) {
            $.fieldMappings = fieldMappings;
            return this;
        }

        public Builder fieldMappings(List<DataSourceToIndexFieldMappingArgs> fieldMappings) {
            return fieldMappings(Output.of(fieldMappings));
        }

        public Builder fieldMappings(DataSourceToIndexFieldMappingArgs... fieldMappings) {
            return fieldMappings(List.of(fieldMappings));
        }

        public Builder inclusionPatterns(@Nullable Output<List<String>> inclusionPatterns) {
            $.inclusionPatterns = inclusionPatterns;
            return this;
        }

        public Builder inclusionPatterns(List<String> inclusionPatterns) {
            return inclusionPatterns(Output.of(inclusionPatterns));
        }

        public Builder inclusionPatterns(String... inclusionPatterns) {
            return inclusionPatterns(List.of(inclusionPatterns));
        }

        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        public Builder useChangeLog(@Nullable Output<Boolean> useChangeLog) {
            $.useChangeLog = useChangeLog;
            return this;
        }

        public Builder useChangeLog(Boolean useChangeLog) {
            return useChangeLog(Output.of(useChangeLog));
        }

        public DataSourceWorkDocsConfigurationArgs build() {
            $.organizationId = Objects.requireNonNull($.organizationId, "expected parameter 'organizationId' to be non-null");
            return $;
        }
    }

}
