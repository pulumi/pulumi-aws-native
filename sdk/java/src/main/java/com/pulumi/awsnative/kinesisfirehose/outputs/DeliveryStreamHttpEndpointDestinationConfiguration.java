// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisfirehose.outputs;

import com.pulumi.awsnative.kinesisfirehose.outputs.DeliveryStreamBufferingHints;
import com.pulumi.awsnative.kinesisfirehose.outputs.DeliveryStreamCloudWatchLoggingOptions;
import com.pulumi.awsnative.kinesisfirehose.outputs.DeliveryStreamHttpEndpointConfiguration;
import com.pulumi.awsnative.kinesisfirehose.outputs.DeliveryStreamHttpEndpointRequestConfiguration;
import com.pulumi.awsnative.kinesisfirehose.outputs.DeliveryStreamProcessingConfiguration;
import com.pulumi.awsnative.kinesisfirehose.outputs.DeliveryStreamRetryOptions;
import com.pulumi.awsnative.kinesisfirehose.outputs.DeliveryStreamS3DestinationConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeliveryStreamHttpEndpointDestinationConfiguration {
    private @Nullable DeliveryStreamBufferingHints bufferingHints;
    private @Nullable DeliveryStreamCloudWatchLoggingOptions cloudWatchLoggingOptions;
    private DeliveryStreamHttpEndpointConfiguration endpointConfiguration;
    private @Nullable DeliveryStreamProcessingConfiguration processingConfiguration;
    private @Nullable DeliveryStreamHttpEndpointRequestConfiguration requestConfiguration;
    private @Nullable DeliveryStreamRetryOptions retryOptions;
    private @Nullable String roleARN;
    private @Nullable String s3BackupMode;
    private DeliveryStreamS3DestinationConfiguration s3Configuration;

    private DeliveryStreamHttpEndpointDestinationConfiguration() {}
    public Optional<DeliveryStreamBufferingHints> bufferingHints() {
        return Optional.ofNullable(this.bufferingHints);
    }
    public Optional<DeliveryStreamCloudWatchLoggingOptions> cloudWatchLoggingOptions() {
        return Optional.ofNullable(this.cloudWatchLoggingOptions);
    }
    public DeliveryStreamHttpEndpointConfiguration endpointConfiguration() {
        return this.endpointConfiguration;
    }
    public Optional<DeliveryStreamProcessingConfiguration> processingConfiguration() {
        return Optional.ofNullable(this.processingConfiguration);
    }
    public Optional<DeliveryStreamHttpEndpointRequestConfiguration> requestConfiguration() {
        return Optional.ofNullable(this.requestConfiguration);
    }
    public Optional<DeliveryStreamRetryOptions> retryOptions() {
        return Optional.ofNullable(this.retryOptions);
    }
    public Optional<String> roleARN() {
        return Optional.ofNullable(this.roleARN);
    }
    public Optional<String> s3BackupMode() {
        return Optional.ofNullable(this.s3BackupMode);
    }
    public DeliveryStreamS3DestinationConfiguration s3Configuration() {
        return this.s3Configuration;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeliveryStreamHttpEndpointDestinationConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DeliveryStreamBufferingHints bufferingHints;
        private @Nullable DeliveryStreamCloudWatchLoggingOptions cloudWatchLoggingOptions;
        private DeliveryStreamHttpEndpointConfiguration endpointConfiguration;
        private @Nullable DeliveryStreamProcessingConfiguration processingConfiguration;
        private @Nullable DeliveryStreamHttpEndpointRequestConfiguration requestConfiguration;
        private @Nullable DeliveryStreamRetryOptions retryOptions;
        private @Nullable String roleARN;
        private @Nullable String s3BackupMode;
        private DeliveryStreamS3DestinationConfiguration s3Configuration;
        public Builder() {}
        public Builder(DeliveryStreamHttpEndpointDestinationConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bufferingHints = defaults.bufferingHints;
    	      this.cloudWatchLoggingOptions = defaults.cloudWatchLoggingOptions;
    	      this.endpointConfiguration = defaults.endpointConfiguration;
    	      this.processingConfiguration = defaults.processingConfiguration;
    	      this.requestConfiguration = defaults.requestConfiguration;
    	      this.retryOptions = defaults.retryOptions;
    	      this.roleARN = defaults.roleARN;
    	      this.s3BackupMode = defaults.s3BackupMode;
    	      this.s3Configuration = defaults.s3Configuration;
        }

        @CustomType.Setter
        public Builder bufferingHints(@Nullable DeliveryStreamBufferingHints bufferingHints) {
            this.bufferingHints = bufferingHints;
            return this;
        }
        @CustomType.Setter
        public Builder cloudWatchLoggingOptions(@Nullable DeliveryStreamCloudWatchLoggingOptions cloudWatchLoggingOptions) {
            this.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
            return this;
        }
        @CustomType.Setter
        public Builder endpointConfiguration(DeliveryStreamHttpEndpointConfiguration endpointConfiguration) {
            this.endpointConfiguration = Objects.requireNonNull(endpointConfiguration);
            return this;
        }
        @CustomType.Setter
        public Builder processingConfiguration(@Nullable DeliveryStreamProcessingConfiguration processingConfiguration) {
            this.processingConfiguration = processingConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder requestConfiguration(@Nullable DeliveryStreamHttpEndpointRequestConfiguration requestConfiguration) {
            this.requestConfiguration = requestConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder retryOptions(@Nullable DeliveryStreamRetryOptions retryOptions) {
            this.retryOptions = retryOptions;
            return this;
        }
        @CustomType.Setter
        public Builder roleARN(@Nullable String roleARN) {
            this.roleARN = roleARN;
            return this;
        }
        @CustomType.Setter
        public Builder s3BackupMode(@Nullable String s3BackupMode) {
            this.s3BackupMode = s3BackupMode;
            return this;
        }
        @CustomType.Setter
        public Builder s3Configuration(DeliveryStreamS3DestinationConfiguration s3Configuration) {
            this.s3Configuration = Objects.requireNonNull(s3Configuration);
            return this;
        }
        public DeliveryStreamHttpEndpointDestinationConfiguration build() {
            final var o = new DeliveryStreamHttpEndpointDestinationConfiguration();
            o.bufferingHints = bufferingHints;
            o.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
            o.endpointConfiguration = endpointConfiguration;
            o.processingConfiguration = processingConfiguration;
            o.requestConfiguration = requestConfiguration;
            o.retryOptions = retryOptions;
            o.roleARN = roleARN;
            o.s3BackupMode = s3BackupMode;
            o.s3Configuration = s3Configuration;
            return o;
        }
    }
}
