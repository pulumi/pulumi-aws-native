// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotsitewise.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Contains information about an asset model hierarchy.
 * 
 */
public final class AssetModelHierarchyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssetModelHierarchyArgs Empty = new AssetModelHierarchyArgs();

    /**
     * The ID of the asset model. All assets in this hierarchy must be instances of the child AssetModelId asset model.
     * 
     */
    @Import(name="childAssetModelId", required=true)
    private Output<String> childAssetModelId;

    /**
     * @return The ID of the asset model. All assets in this hierarchy must be instances of the child AssetModelId asset model.
     * 
     */
    public Output<String> childAssetModelId() {
        return this.childAssetModelId;
    }

    /**
     * Customer provided ID for hierarchy.
     * 
     */
    @Import(name="logicalId", required=true)
    private Output<String> logicalId;

    /**
     * @return Customer provided ID for hierarchy.
     * 
     */
    public Output<String> logicalId() {
        return this.logicalId;
    }

    /**
     * The name of the asset model hierarchy.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the asset model hierarchy.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private AssetModelHierarchyArgs() {}

    private AssetModelHierarchyArgs(AssetModelHierarchyArgs $) {
        this.childAssetModelId = $.childAssetModelId;
        this.logicalId = $.logicalId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssetModelHierarchyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssetModelHierarchyArgs $;

        public Builder() {
            $ = new AssetModelHierarchyArgs();
        }

        public Builder(AssetModelHierarchyArgs defaults) {
            $ = new AssetModelHierarchyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param childAssetModelId The ID of the asset model. All assets in this hierarchy must be instances of the child AssetModelId asset model.
         * 
         * @return builder
         * 
         */
        public Builder childAssetModelId(Output<String> childAssetModelId) {
            $.childAssetModelId = childAssetModelId;
            return this;
        }

        /**
         * @param childAssetModelId The ID of the asset model. All assets in this hierarchy must be instances of the child AssetModelId asset model.
         * 
         * @return builder
         * 
         */
        public Builder childAssetModelId(String childAssetModelId) {
            return childAssetModelId(Output.of(childAssetModelId));
        }

        /**
         * @param logicalId Customer provided ID for hierarchy.
         * 
         * @return builder
         * 
         */
        public Builder logicalId(Output<String> logicalId) {
            $.logicalId = logicalId;
            return this;
        }

        /**
         * @param logicalId Customer provided ID for hierarchy.
         * 
         * @return builder
         * 
         */
        public Builder logicalId(String logicalId) {
            return logicalId(Output.of(logicalId));
        }

        /**
         * @param name The name of the asset model hierarchy.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the asset model hierarchy.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public AssetModelHierarchyArgs build() {
            $.childAssetModelId = Objects.requireNonNull($.childAssetModelId, "expected parameter 'childAssetModelId' to be non-null");
            $.logicalId = Objects.requireNonNull($.logicalId, "expected parameter 'logicalId' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
