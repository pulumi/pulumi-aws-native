// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataSourceRedshiftParameters {
    /**
     * @return &lt;p&gt;Cluster ID. This field can be blank if the &lt;code&gt;Host&lt;/code&gt; and &lt;code&gt;Port&lt;/code&gt; are
     *             provided.&lt;/p&gt;
     * 
     */
    private @Nullable String clusterId;
    /**
     * @return &lt;p&gt;Database.&lt;/p&gt;
     * 
     */
    private String database;
    /**
     * @return &lt;p&gt;Host. This field can be blank if &lt;code&gt;ClusterId&lt;/code&gt; is provided.&lt;/p&gt;
     * 
     */
    private @Nullable String host;
    /**
     * @return &lt;p&gt;Port. This field can be blank if the &lt;code&gt;ClusterId&lt;/code&gt; is provided.&lt;/p&gt;
     * 
     */
    private @Nullable Double port;

    private DataSourceRedshiftParameters() {}
    /**
     * @return &lt;p&gt;Cluster ID. This field can be blank if the &lt;code&gt;Host&lt;/code&gt; and &lt;code&gt;Port&lt;/code&gt; are
     *             provided.&lt;/p&gt;
     * 
     */
    public Optional<String> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }
    /**
     * @return &lt;p&gt;Database.&lt;/p&gt;
     * 
     */
    public String database() {
        return this.database;
    }
    /**
     * @return &lt;p&gt;Host. This field can be blank if &lt;code&gt;ClusterId&lt;/code&gt; is provided.&lt;/p&gt;
     * 
     */
    public Optional<String> host() {
        return Optional.ofNullable(this.host);
    }
    /**
     * @return &lt;p&gt;Port. This field can be blank if the &lt;code&gt;ClusterId&lt;/code&gt; is provided.&lt;/p&gt;
     * 
     */
    public Optional<Double> port() {
        return Optional.ofNullable(this.port);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceRedshiftParameters defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String clusterId;
        private String database;
        private @Nullable String host;
        private @Nullable Double port;
        public Builder() {}
        public Builder(DataSourceRedshiftParameters defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterId = defaults.clusterId;
    	      this.database = defaults.database;
    	      this.host = defaults.host;
    	      this.port = defaults.port;
        }

        @CustomType.Setter
        public Builder clusterId(@Nullable String clusterId) {
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder database(String database) {
            this.database = Objects.requireNonNull(database);
            return this;
        }
        @CustomType.Setter
        public Builder host(@Nullable String host) {
            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Double port) {
            this.port = port;
            return this;
        }
        public DataSourceRedshiftParameters build() {
            final var o = new DataSourceRedshiftParameters();
            o.clusterId = clusterId;
            o.database = database;
            o.host = host;
            o.port = port;
            return o;
        }
    }
}
