// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class CidrPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final CidrPlainArgs Empty = new CidrPlainArgs();

    @Import(name="cidrBits", required=true)
    private Integer cidrBits;

    public Integer cidrBits() {
        return this.cidrBits;
    }

    @Import(name="count", required=true)
    private Integer count;

    public Integer count() {
        return this.count;
    }

    @Import(name="ipBlock", required=true)
    private String ipBlock;

    public String ipBlock() {
        return this.ipBlock;
    }

    private CidrPlainArgs() {}

    private CidrPlainArgs(CidrPlainArgs $) {
        this.cidrBits = $.cidrBits;
        this.count = $.count;
        this.ipBlock = $.ipBlock;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CidrPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CidrPlainArgs $;

        public Builder() {
            $ = new CidrPlainArgs();
        }

        public Builder(CidrPlainArgs defaults) {
            $ = new CidrPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder cidrBits(Integer cidrBits) {
            $.cidrBits = cidrBits;
            return this;
        }

        public Builder count(Integer count) {
            $.count = count;
            return this;
        }

        public Builder ipBlock(String ipBlock) {
            $.ipBlock = ipBlock;
            return this;
        }

        public CidrPlainArgs build() {
            $.cidrBits = Objects.requireNonNull($.cidrBits, "expected parameter 'cidrBits' to be non-null");
            $.count = Objects.requireNonNull($.count, "expected parameter 'count' to be non-null");
            $.ipBlock = Objects.requireNonNull($.ipBlock, "expected parameter 'ipBlock' to be non-null");
            return $;
        }
    }

}
