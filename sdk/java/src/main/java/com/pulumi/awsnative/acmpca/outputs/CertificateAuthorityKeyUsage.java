// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.acmpca.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CertificateAuthorityKeyUsage {
    private @Nullable Boolean cRLSign;
    private @Nullable Boolean dataEncipherment;
    private @Nullable Boolean decipherOnly;
    private @Nullable Boolean digitalSignature;
    private @Nullable Boolean encipherOnly;
    private @Nullable Boolean keyAgreement;
    private @Nullable Boolean keyCertSign;
    private @Nullable Boolean keyEncipherment;
    private @Nullable Boolean nonRepudiation;

    private CertificateAuthorityKeyUsage() {}
    public Optional<Boolean> cRLSign() {
        return Optional.ofNullable(this.cRLSign);
    }
    public Optional<Boolean> dataEncipherment() {
        return Optional.ofNullable(this.dataEncipherment);
    }
    public Optional<Boolean> decipherOnly() {
        return Optional.ofNullable(this.decipherOnly);
    }
    public Optional<Boolean> digitalSignature() {
        return Optional.ofNullable(this.digitalSignature);
    }
    public Optional<Boolean> encipherOnly() {
        return Optional.ofNullable(this.encipherOnly);
    }
    public Optional<Boolean> keyAgreement() {
        return Optional.ofNullable(this.keyAgreement);
    }
    public Optional<Boolean> keyCertSign() {
        return Optional.ofNullable(this.keyCertSign);
    }
    public Optional<Boolean> keyEncipherment() {
        return Optional.ofNullable(this.keyEncipherment);
    }
    public Optional<Boolean> nonRepudiation() {
        return Optional.ofNullable(this.nonRepudiation);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateAuthorityKeyUsage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean cRLSign;
        private @Nullable Boolean dataEncipherment;
        private @Nullable Boolean decipherOnly;
        private @Nullable Boolean digitalSignature;
        private @Nullable Boolean encipherOnly;
        private @Nullable Boolean keyAgreement;
        private @Nullable Boolean keyCertSign;
        private @Nullable Boolean keyEncipherment;
        private @Nullable Boolean nonRepudiation;
        public Builder() {}
        public Builder(CertificateAuthorityKeyUsage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cRLSign = defaults.cRLSign;
    	      this.dataEncipherment = defaults.dataEncipherment;
    	      this.decipherOnly = defaults.decipherOnly;
    	      this.digitalSignature = defaults.digitalSignature;
    	      this.encipherOnly = defaults.encipherOnly;
    	      this.keyAgreement = defaults.keyAgreement;
    	      this.keyCertSign = defaults.keyCertSign;
    	      this.keyEncipherment = defaults.keyEncipherment;
    	      this.nonRepudiation = defaults.nonRepudiation;
        }

        @CustomType.Setter
        public Builder cRLSign(@Nullable Boolean cRLSign) {
            this.cRLSign = cRLSign;
            return this;
        }
        @CustomType.Setter
        public Builder dataEncipherment(@Nullable Boolean dataEncipherment) {
            this.dataEncipherment = dataEncipherment;
            return this;
        }
        @CustomType.Setter
        public Builder decipherOnly(@Nullable Boolean decipherOnly) {
            this.decipherOnly = decipherOnly;
            return this;
        }
        @CustomType.Setter
        public Builder digitalSignature(@Nullable Boolean digitalSignature) {
            this.digitalSignature = digitalSignature;
            return this;
        }
        @CustomType.Setter
        public Builder encipherOnly(@Nullable Boolean encipherOnly) {
            this.encipherOnly = encipherOnly;
            return this;
        }
        @CustomType.Setter
        public Builder keyAgreement(@Nullable Boolean keyAgreement) {
            this.keyAgreement = keyAgreement;
            return this;
        }
        @CustomType.Setter
        public Builder keyCertSign(@Nullable Boolean keyCertSign) {
            this.keyCertSign = keyCertSign;
            return this;
        }
        @CustomType.Setter
        public Builder keyEncipherment(@Nullable Boolean keyEncipherment) {
            this.keyEncipherment = keyEncipherment;
            return this;
        }
        @CustomType.Setter
        public Builder nonRepudiation(@Nullable Boolean nonRepudiation) {
            this.nonRepudiation = nonRepudiation;
            return this;
        }
        public CertificateAuthorityKeyUsage build() {
            final var o = new CertificateAuthorityKeyUsage();
            o.cRLSign = cRLSign;
            o.dataEncipherment = dataEncipherment;
            o.decipherOnly = decipherOnly;
            o.digitalSignature = digitalSignature;
            o.encipherOnly = encipherOnly;
            o.keyAgreement = keyAgreement;
            o.keyCertSign = keyCertSign;
            o.keyEncipherment = keyEncipherment;
            o.nonRepudiation = nonRepudiation;
            return o;
        }
    }
}
