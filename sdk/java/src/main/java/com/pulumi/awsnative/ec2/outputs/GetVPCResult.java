// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2.outputs;

import com.pulumi.awsnative.ec2.outputs.VPCTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVPCResult {
    /**
     * @return A list of IPv4 CIDR block association IDs for the VPC.
     * 
     */
    private @Nullable List<String> cidrBlockAssociations;
    /**
     * @return The default network ACL ID that is associated with the VPC.
     * 
     */
    private @Nullable String defaultNetworkAcl;
    /**
     * @return The default security group ID that is associated with the VPC.
     * 
     */
    private @Nullable String defaultSecurityGroup;
    /**
     * @return Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not. Disabled by default for nondefault VPCs.
     * 
     */
    private @Nullable Boolean enableDnsHostnames;
    /**
     * @return Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range &#34;plus two&#34; succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled. Enabled by default.
     * 
     */
    private @Nullable Boolean enableDnsSupport;
    /**
     * @return The allowed tenancy of instances launched into the VPC.
     * 
     * &#34;default&#34;: An instance launched into the VPC runs on shared hardware by default, unless you explicitly specify a different tenancy during instance launch.
     * 
     * &#34;dedicated&#34;: An instance launched into the VPC is a Dedicated Instance by default, unless you explicitly specify a tenancy of host during instance launch. You cannot specify a tenancy of default during instance launch.
     * 
     * Updating InstanceTenancy requires no replacement only if you are updating its value from &#34;dedicated&#34; to &#34;default&#34;. Updating InstanceTenancy from &#34;default&#34; to &#34;dedicated&#34; requires replacement.
     * 
     */
    private @Nullable String instanceTenancy;
    /**
     * @return A list of IPv6 CIDR blocks that are associated with the VPC.
     * 
     */
    private @Nullable List<String> ipv6CidrBlocks;
    /**
     * @return The tags for the VPC.
     * 
     */
    private @Nullable List<VPCTag> tags;
    /**
     * @return The Id for the model.
     * 
     */
    private @Nullable String vpcId;

    private GetVPCResult() {}
    /**
     * @return A list of IPv4 CIDR block association IDs for the VPC.
     * 
     */
    public List<String> cidrBlockAssociations() {
        return this.cidrBlockAssociations == null ? List.of() : this.cidrBlockAssociations;
    }
    /**
     * @return The default network ACL ID that is associated with the VPC.
     * 
     */
    public Optional<String> defaultNetworkAcl() {
        return Optional.ofNullable(this.defaultNetworkAcl);
    }
    /**
     * @return The default security group ID that is associated with the VPC.
     * 
     */
    public Optional<String> defaultSecurityGroup() {
        return Optional.ofNullable(this.defaultSecurityGroup);
    }
    /**
     * @return Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not. Disabled by default for nondefault VPCs.
     * 
     */
    public Optional<Boolean> enableDnsHostnames() {
        return Optional.ofNullable(this.enableDnsHostnames);
    }
    /**
     * @return Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range &#34;plus two&#34; succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled. Enabled by default.
     * 
     */
    public Optional<Boolean> enableDnsSupport() {
        return Optional.ofNullable(this.enableDnsSupport);
    }
    /**
     * @return The allowed tenancy of instances launched into the VPC.
     * 
     * &#34;default&#34;: An instance launched into the VPC runs on shared hardware by default, unless you explicitly specify a different tenancy during instance launch.
     * 
     * &#34;dedicated&#34;: An instance launched into the VPC is a Dedicated Instance by default, unless you explicitly specify a tenancy of host during instance launch. You cannot specify a tenancy of default during instance launch.
     * 
     * Updating InstanceTenancy requires no replacement only if you are updating its value from &#34;dedicated&#34; to &#34;default&#34;. Updating InstanceTenancy from &#34;default&#34; to &#34;dedicated&#34; requires replacement.
     * 
     */
    public Optional<String> instanceTenancy() {
        return Optional.ofNullable(this.instanceTenancy);
    }
    /**
     * @return A list of IPv6 CIDR blocks that are associated with the VPC.
     * 
     */
    public List<String> ipv6CidrBlocks() {
        return this.ipv6CidrBlocks == null ? List.of() : this.ipv6CidrBlocks;
    }
    /**
     * @return The tags for the VPC.
     * 
     */
    public List<VPCTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return The Id for the model.
     * 
     */
    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVPCResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> cidrBlockAssociations;
        private @Nullable String defaultNetworkAcl;
        private @Nullable String defaultSecurityGroup;
        private @Nullable Boolean enableDnsHostnames;
        private @Nullable Boolean enableDnsSupport;
        private @Nullable String instanceTenancy;
        private @Nullable List<String> ipv6CidrBlocks;
        private @Nullable List<VPCTag> tags;
        private @Nullable String vpcId;
        public Builder() {}
        public Builder(GetVPCResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidrBlockAssociations = defaults.cidrBlockAssociations;
    	      this.defaultNetworkAcl = defaults.defaultNetworkAcl;
    	      this.defaultSecurityGroup = defaults.defaultSecurityGroup;
    	      this.enableDnsHostnames = defaults.enableDnsHostnames;
    	      this.enableDnsSupport = defaults.enableDnsSupport;
    	      this.instanceTenancy = defaults.instanceTenancy;
    	      this.ipv6CidrBlocks = defaults.ipv6CidrBlocks;
    	      this.tags = defaults.tags;
    	      this.vpcId = defaults.vpcId;
        }

        @CustomType.Setter
        public Builder cidrBlockAssociations(@Nullable List<String> cidrBlockAssociations) {
            this.cidrBlockAssociations = cidrBlockAssociations;
            return this;
        }
        public Builder cidrBlockAssociations(String... cidrBlockAssociations) {
            return cidrBlockAssociations(List.of(cidrBlockAssociations));
        }
        @CustomType.Setter
        public Builder defaultNetworkAcl(@Nullable String defaultNetworkAcl) {
            this.defaultNetworkAcl = defaultNetworkAcl;
            return this;
        }
        @CustomType.Setter
        public Builder defaultSecurityGroup(@Nullable String defaultSecurityGroup) {
            this.defaultSecurityGroup = defaultSecurityGroup;
            return this;
        }
        @CustomType.Setter
        public Builder enableDnsHostnames(@Nullable Boolean enableDnsHostnames) {
            this.enableDnsHostnames = enableDnsHostnames;
            return this;
        }
        @CustomType.Setter
        public Builder enableDnsSupport(@Nullable Boolean enableDnsSupport) {
            this.enableDnsSupport = enableDnsSupport;
            return this;
        }
        @CustomType.Setter
        public Builder instanceTenancy(@Nullable String instanceTenancy) {
            this.instanceTenancy = instanceTenancy;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6CidrBlocks(@Nullable List<String> ipv6CidrBlocks) {
            this.ipv6CidrBlocks = ipv6CidrBlocks;
            return this;
        }
        public Builder ipv6CidrBlocks(String... ipv6CidrBlocks) {
            return ipv6CidrBlocks(List.of(ipv6CidrBlocks));
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<VPCTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(VPCTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder vpcId(@Nullable String vpcId) {
            this.vpcId = vpcId;
            return this;
        }
        public GetVPCResult build() {
            final var o = new GetVPCResult();
            o.cidrBlockAssociations = cidrBlockAssociations;
            o.defaultNetworkAcl = defaultNetworkAcl;
            o.defaultSecurityGroup = defaultSecurityGroup;
            o.enableDnsHostnames = enableDnsHostnames;
            o.enableDnsSupport = enableDnsSupport;
            o.instanceTenancy = instanceTenancy;
            o.ipv6CidrBlocks = ipv6CidrBlocks;
            o.tags = tags;
            o.vpcId = vpcId;
            return o;
        }
    }
}
