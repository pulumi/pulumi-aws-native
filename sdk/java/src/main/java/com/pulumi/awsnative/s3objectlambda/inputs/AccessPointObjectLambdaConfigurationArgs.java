// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3objectlambda.inputs;

import com.pulumi.awsnative.s3objectlambda.inputs.AccessPointTransformationConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Configuration to be applied to this Object lambda Access Point. It specifies Supporting Access Point, Transformation Configurations. Customers can also set if they like to enable Cloudwatch metrics for accesses to this Object lambda Access Point. Default setting for Cloudwatch metrics is disable.
 * 
 */
public final class AccessPointObjectLambdaConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessPointObjectLambdaConfigurationArgs Empty = new AccessPointObjectLambdaConfigurationArgs();

    @Import(name="allowedFeatures")
    private @Nullable Output<List<String>> allowedFeatures;

    public Optional<Output<List<String>>> allowedFeatures() {
        return Optional.ofNullable(this.allowedFeatures);
    }

    @Import(name="cloudWatchMetricsEnabled")
    private @Nullable Output<Boolean> cloudWatchMetricsEnabled;

    public Optional<Output<Boolean>> cloudWatchMetricsEnabled() {
        return Optional.ofNullable(this.cloudWatchMetricsEnabled);
    }

    @Import(name="supportingAccessPoint", required=true)
    private Output<String> supportingAccessPoint;

    public Output<String> supportingAccessPoint() {
        return this.supportingAccessPoint;
    }

    @Import(name="transformationConfigurations", required=true)
    private Output<List<AccessPointTransformationConfigurationArgs>> transformationConfigurations;

    public Output<List<AccessPointTransformationConfigurationArgs>> transformationConfigurations() {
        return this.transformationConfigurations;
    }

    private AccessPointObjectLambdaConfigurationArgs() {}

    private AccessPointObjectLambdaConfigurationArgs(AccessPointObjectLambdaConfigurationArgs $) {
        this.allowedFeatures = $.allowedFeatures;
        this.cloudWatchMetricsEnabled = $.cloudWatchMetricsEnabled;
        this.supportingAccessPoint = $.supportingAccessPoint;
        this.transformationConfigurations = $.transformationConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessPointObjectLambdaConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessPointObjectLambdaConfigurationArgs $;

        public Builder() {
            $ = new AccessPointObjectLambdaConfigurationArgs();
        }

        public Builder(AccessPointObjectLambdaConfigurationArgs defaults) {
            $ = new AccessPointObjectLambdaConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowedFeatures(@Nullable Output<List<String>> allowedFeatures) {
            $.allowedFeatures = allowedFeatures;
            return this;
        }

        public Builder allowedFeatures(List<String> allowedFeatures) {
            return allowedFeatures(Output.of(allowedFeatures));
        }

        public Builder allowedFeatures(String... allowedFeatures) {
            return allowedFeatures(List.of(allowedFeatures));
        }

        public Builder cloudWatchMetricsEnabled(@Nullable Output<Boolean> cloudWatchMetricsEnabled) {
            $.cloudWatchMetricsEnabled = cloudWatchMetricsEnabled;
            return this;
        }

        public Builder cloudWatchMetricsEnabled(Boolean cloudWatchMetricsEnabled) {
            return cloudWatchMetricsEnabled(Output.of(cloudWatchMetricsEnabled));
        }

        public Builder supportingAccessPoint(Output<String> supportingAccessPoint) {
            $.supportingAccessPoint = supportingAccessPoint;
            return this;
        }

        public Builder supportingAccessPoint(String supportingAccessPoint) {
            return supportingAccessPoint(Output.of(supportingAccessPoint));
        }

        public Builder transformationConfigurations(Output<List<AccessPointTransformationConfigurationArgs>> transformationConfigurations) {
            $.transformationConfigurations = transformationConfigurations;
            return this;
        }

        public Builder transformationConfigurations(List<AccessPointTransformationConfigurationArgs> transformationConfigurations) {
            return transformationConfigurations(Output.of(transformationConfigurations));
        }

        public Builder transformationConfigurations(AccessPointTransformationConfigurationArgs... transformationConfigurations) {
            return transformationConfigurations(List.of(transformationConfigurations));
        }

        public AccessPointObjectLambdaConfigurationArgs build() {
            $.supportingAccessPoint = Objects.requireNonNull($.supportingAccessPoint, "expected parameter 'supportingAccessPoint' to be non-null");
            $.transformationConfigurations = Objects.requireNonNull($.transformationConfigurations, "expected parameter 'transformationConfigurations' to be non-null");
            return $;
        }
    }

}
