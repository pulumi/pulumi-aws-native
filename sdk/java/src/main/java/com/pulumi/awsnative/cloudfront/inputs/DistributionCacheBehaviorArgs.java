// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudfront.inputs;

import com.pulumi.awsnative.cloudfront.inputs.DistributionForwardedValuesArgs;
import com.pulumi.awsnative.cloudfront.inputs.DistributionFunctionAssociationArgs;
import com.pulumi.awsnative.cloudfront.inputs.DistributionLambdaFunctionAssociationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DistributionCacheBehaviorArgs extends com.pulumi.resources.ResourceArgs {

    public static final DistributionCacheBehaviorArgs Empty = new DistributionCacheBehaviorArgs();

    @Import(name="allowedMethods")
    private @Nullable Output<List<String>> allowedMethods;

    public Optional<Output<List<String>>> allowedMethods() {
        return Optional.ofNullable(this.allowedMethods);
    }

    @Import(name="cachePolicyId")
    private @Nullable Output<String> cachePolicyId;

    public Optional<Output<String>> cachePolicyId() {
        return Optional.ofNullable(this.cachePolicyId);
    }

    @Import(name="cachedMethods")
    private @Nullable Output<List<String>> cachedMethods;

    public Optional<Output<List<String>>> cachedMethods() {
        return Optional.ofNullable(this.cachedMethods);
    }

    @Import(name="compress")
    private @Nullable Output<Boolean> compress;

    public Optional<Output<Boolean>> compress() {
        return Optional.ofNullable(this.compress);
    }

    @Import(name="defaultTTL")
    private @Nullable Output<Double> defaultTTL;

    public Optional<Output<Double>> defaultTTL() {
        return Optional.ofNullable(this.defaultTTL);
    }

    @Import(name="fieldLevelEncryptionId")
    private @Nullable Output<String> fieldLevelEncryptionId;

    public Optional<Output<String>> fieldLevelEncryptionId() {
        return Optional.ofNullable(this.fieldLevelEncryptionId);
    }

    @Import(name="forwardedValues")
    private @Nullable Output<DistributionForwardedValuesArgs> forwardedValues;

    public Optional<Output<DistributionForwardedValuesArgs>> forwardedValues() {
        return Optional.ofNullable(this.forwardedValues);
    }

    @Import(name="functionAssociations")
    private @Nullable Output<List<DistributionFunctionAssociationArgs>> functionAssociations;

    public Optional<Output<List<DistributionFunctionAssociationArgs>>> functionAssociations() {
        return Optional.ofNullable(this.functionAssociations);
    }

    @Import(name="lambdaFunctionAssociations")
    private @Nullable Output<List<DistributionLambdaFunctionAssociationArgs>> lambdaFunctionAssociations;

    public Optional<Output<List<DistributionLambdaFunctionAssociationArgs>>> lambdaFunctionAssociations() {
        return Optional.ofNullable(this.lambdaFunctionAssociations);
    }

    @Import(name="maxTTL")
    private @Nullable Output<Double> maxTTL;

    public Optional<Output<Double>> maxTTL() {
        return Optional.ofNullable(this.maxTTL);
    }

    @Import(name="minTTL")
    private @Nullable Output<Double> minTTL;

    public Optional<Output<Double>> minTTL() {
        return Optional.ofNullable(this.minTTL);
    }

    @Import(name="originRequestPolicyId")
    private @Nullable Output<String> originRequestPolicyId;

    public Optional<Output<String>> originRequestPolicyId() {
        return Optional.ofNullable(this.originRequestPolicyId);
    }

    @Import(name="pathPattern", required=true)
    private Output<String> pathPattern;

    public Output<String> pathPattern() {
        return this.pathPattern;
    }

    @Import(name="realtimeLogConfigArn")
    private @Nullable Output<String> realtimeLogConfigArn;

    public Optional<Output<String>> realtimeLogConfigArn() {
        return Optional.ofNullable(this.realtimeLogConfigArn);
    }

    @Import(name="responseHeadersPolicyId")
    private @Nullable Output<String> responseHeadersPolicyId;

    public Optional<Output<String>> responseHeadersPolicyId() {
        return Optional.ofNullable(this.responseHeadersPolicyId);
    }

    @Import(name="smoothStreaming")
    private @Nullable Output<Boolean> smoothStreaming;

    public Optional<Output<Boolean>> smoothStreaming() {
        return Optional.ofNullable(this.smoothStreaming);
    }

    @Import(name="targetOriginId", required=true)
    private Output<String> targetOriginId;

    public Output<String> targetOriginId() {
        return this.targetOriginId;
    }

    @Import(name="trustedKeyGroups")
    private @Nullable Output<List<String>> trustedKeyGroups;

    public Optional<Output<List<String>>> trustedKeyGroups() {
        return Optional.ofNullable(this.trustedKeyGroups);
    }

    @Import(name="trustedSigners")
    private @Nullable Output<List<String>> trustedSigners;

    public Optional<Output<List<String>>> trustedSigners() {
        return Optional.ofNullable(this.trustedSigners);
    }

    @Import(name="viewerProtocolPolicy", required=true)
    private Output<String> viewerProtocolPolicy;

    public Output<String> viewerProtocolPolicy() {
        return this.viewerProtocolPolicy;
    }

    private DistributionCacheBehaviorArgs() {}

    private DistributionCacheBehaviorArgs(DistributionCacheBehaviorArgs $) {
        this.allowedMethods = $.allowedMethods;
        this.cachePolicyId = $.cachePolicyId;
        this.cachedMethods = $.cachedMethods;
        this.compress = $.compress;
        this.defaultTTL = $.defaultTTL;
        this.fieldLevelEncryptionId = $.fieldLevelEncryptionId;
        this.forwardedValues = $.forwardedValues;
        this.functionAssociations = $.functionAssociations;
        this.lambdaFunctionAssociations = $.lambdaFunctionAssociations;
        this.maxTTL = $.maxTTL;
        this.minTTL = $.minTTL;
        this.originRequestPolicyId = $.originRequestPolicyId;
        this.pathPattern = $.pathPattern;
        this.realtimeLogConfigArn = $.realtimeLogConfigArn;
        this.responseHeadersPolicyId = $.responseHeadersPolicyId;
        this.smoothStreaming = $.smoothStreaming;
        this.targetOriginId = $.targetOriginId;
        this.trustedKeyGroups = $.trustedKeyGroups;
        this.trustedSigners = $.trustedSigners;
        this.viewerProtocolPolicy = $.viewerProtocolPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DistributionCacheBehaviorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DistributionCacheBehaviorArgs $;

        public Builder() {
            $ = new DistributionCacheBehaviorArgs();
        }

        public Builder(DistributionCacheBehaviorArgs defaults) {
            $ = new DistributionCacheBehaviorArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowedMethods(@Nullable Output<List<String>> allowedMethods) {
            $.allowedMethods = allowedMethods;
            return this;
        }

        public Builder allowedMethods(List<String> allowedMethods) {
            return allowedMethods(Output.of(allowedMethods));
        }

        public Builder allowedMethods(String... allowedMethods) {
            return allowedMethods(List.of(allowedMethods));
        }

        public Builder cachePolicyId(@Nullable Output<String> cachePolicyId) {
            $.cachePolicyId = cachePolicyId;
            return this;
        }

        public Builder cachePolicyId(String cachePolicyId) {
            return cachePolicyId(Output.of(cachePolicyId));
        }

        public Builder cachedMethods(@Nullable Output<List<String>> cachedMethods) {
            $.cachedMethods = cachedMethods;
            return this;
        }

        public Builder cachedMethods(List<String> cachedMethods) {
            return cachedMethods(Output.of(cachedMethods));
        }

        public Builder cachedMethods(String... cachedMethods) {
            return cachedMethods(List.of(cachedMethods));
        }

        public Builder compress(@Nullable Output<Boolean> compress) {
            $.compress = compress;
            return this;
        }

        public Builder compress(Boolean compress) {
            return compress(Output.of(compress));
        }

        public Builder defaultTTL(@Nullable Output<Double> defaultTTL) {
            $.defaultTTL = defaultTTL;
            return this;
        }

        public Builder defaultTTL(Double defaultTTL) {
            return defaultTTL(Output.of(defaultTTL));
        }

        public Builder fieldLevelEncryptionId(@Nullable Output<String> fieldLevelEncryptionId) {
            $.fieldLevelEncryptionId = fieldLevelEncryptionId;
            return this;
        }

        public Builder fieldLevelEncryptionId(String fieldLevelEncryptionId) {
            return fieldLevelEncryptionId(Output.of(fieldLevelEncryptionId));
        }

        public Builder forwardedValues(@Nullable Output<DistributionForwardedValuesArgs> forwardedValues) {
            $.forwardedValues = forwardedValues;
            return this;
        }

        public Builder forwardedValues(DistributionForwardedValuesArgs forwardedValues) {
            return forwardedValues(Output.of(forwardedValues));
        }

        public Builder functionAssociations(@Nullable Output<List<DistributionFunctionAssociationArgs>> functionAssociations) {
            $.functionAssociations = functionAssociations;
            return this;
        }

        public Builder functionAssociations(List<DistributionFunctionAssociationArgs> functionAssociations) {
            return functionAssociations(Output.of(functionAssociations));
        }

        public Builder functionAssociations(DistributionFunctionAssociationArgs... functionAssociations) {
            return functionAssociations(List.of(functionAssociations));
        }

        public Builder lambdaFunctionAssociations(@Nullable Output<List<DistributionLambdaFunctionAssociationArgs>> lambdaFunctionAssociations) {
            $.lambdaFunctionAssociations = lambdaFunctionAssociations;
            return this;
        }

        public Builder lambdaFunctionAssociations(List<DistributionLambdaFunctionAssociationArgs> lambdaFunctionAssociations) {
            return lambdaFunctionAssociations(Output.of(lambdaFunctionAssociations));
        }

        public Builder lambdaFunctionAssociations(DistributionLambdaFunctionAssociationArgs... lambdaFunctionAssociations) {
            return lambdaFunctionAssociations(List.of(lambdaFunctionAssociations));
        }

        public Builder maxTTL(@Nullable Output<Double> maxTTL) {
            $.maxTTL = maxTTL;
            return this;
        }

        public Builder maxTTL(Double maxTTL) {
            return maxTTL(Output.of(maxTTL));
        }

        public Builder minTTL(@Nullable Output<Double> minTTL) {
            $.minTTL = minTTL;
            return this;
        }

        public Builder minTTL(Double minTTL) {
            return minTTL(Output.of(minTTL));
        }

        public Builder originRequestPolicyId(@Nullable Output<String> originRequestPolicyId) {
            $.originRequestPolicyId = originRequestPolicyId;
            return this;
        }

        public Builder originRequestPolicyId(String originRequestPolicyId) {
            return originRequestPolicyId(Output.of(originRequestPolicyId));
        }

        public Builder pathPattern(Output<String> pathPattern) {
            $.pathPattern = pathPattern;
            return this;
        }

        public Builder pathPattern(String pathPattern) {
            return pathPattern(Output.of(pathPattern));
        }

        public Builder realtimeLogConfigArn(@Nullable Output<String> realtimeLogConfigArn) {
            $.realtimeLogConfigArn = realtimeLogConfigArn;
            return this;
        }

        public Builder realtimeLogConfigArn(String realtimeLogConfigArn) {
            return realtimeLogConfigArn(Output.of(realtimeLogConfigArn));
        }

        public Builder responseHeadersPolicyId(@Nullable Output<String> responseHeadersPolicyId) {
            $.responseHeadersPolicyId = responseHeadersPolicyId;
            return this;
        }

        public Builder responseHeadersPolicyId(String responseHeadersPolicyId) {
            return responseHeadersPolicyId(Output.of(responseHeadersPolicyId));
        }

        public Builder smoothStreaming(@Nullable Output<Boolean> smoothStreaming) {
            $.smoothStreaming = smoothStreaming;
            return this;
        }

        public Builder smoothStreaming(Boolean smoothStreaming) {
            return smoothStreaming(Output.of(smoothStreaming));
        }

        public Builder targetOriginId(Output<String> targetOriginId) {
            $.targetOriginId = targetOriginId;
            return this;
        }

        public Builder targetOriginId(String targetOriginId) {
            return targetOriginId(Output.of(targetOriginId));
        }

        public Builder trustedKeyGroups(@Nullable Output<List<String>> trustedKeyGroups) {
            $.trustedKeyGroups = trustedKeyGroups;
            return this;
        }

        public Builder trustedKeyGroups(List<String> trustedKeyGroups) {
            return trustedKeyGroups(Output.of(trustedKeyGroups));
        }

        public Builder trustedKeyGroups(String... trustedKeyGroups) {
            return trustedKeyGroups(List.of(trustedKeyGroups));
        }

        public Builder trustedSigners(@Nullable Output<List<String>> trustedSigners) {
            $.trustedSigners = trustedSigners;
            return this;
        }

        public Builder trustedSigners(List<String> trustedSigners) {
            return trustedSigners(Output.of(trustedSigners));
        }

        public Builder trustedSigners(String... trustedSigners) {
            return trustedSigners(List.of(trustedSigners));
        }

        public Builder viewerProtocolPolicy(Output<String> viewerProtocolPolicy) {
            $.viewerProtocolPolicy = viewerProtocolPolicy;
            return this;
        }

        public Builder viewerProtocolPolicy(String viewerProtocolPolicy) {
            return viewerProtocolPolicy(Output.of(viewerProtocolPolicy));
        }

        public DistributionCacheBehaviorArgs build() {
            $.pathPattern = Objects.requireNonNull($.pathPattern, "expected parameter 'pathPattern' to be non-null");
            $.targetOriginId = Objects.requireNonNull($.targetOriginId, "expected parameter 'targetOriginId' to be non-null");
            $.viewerProtocolPolicy = Objects.requireNonNull($.viewerProtocolPolicy, "expected parameter 'viewerProtocolPolicy' to be non-null");
            return $;
        }
    }

}
