// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.quicksight.AnalysisArgs;
import com.pulumi.awsnative.quicksight.enums.AnalysisResourceStatus;
import com.pulumi.awsnative.quicksight.outputs.AnalysisError;
import com.pulumi.awsnative.quicksight.outputs.AnalysisParameters;
import com.pulumi.awsnative.quicksight.outputs.AnalysisResourcePermission;
import com.pulumi.awsnative.quicksight.outputs.AnalysisSheet;
import com.pulumi.awsnative.quicksight.outputs.AnalysisSourceEntity;
import com.pulumi.awsnative.quicksight.outputs.AnalysisTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Definition of the AWS::QuickSight::Analysis Resource Type.
 * 
 */
@ResourceType(type="aws-native:quicksight:Analysis")
public class Analysis extends com.pulumi.resources.CustomResource {
    @Export(name="analysisId", type=String.class, parameters={})
    private Output<String> analysisId;

    public Output<String> analysisId() {
        return this.analysisId;
    }
    /**
     * &lt;p&gt;The Amazon Resource Name (ARN) of the analysis.&lt;/p&gt;
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return &lt;p&gt;The Amazon Resource Name (ARN) of the analysis.&lt;/p&gt;
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    @Export(name="awsAccountId", type=String.class, parameters={})
    private Output<String> awsAccountId;

    public Output<String> awsAccountId() {
        return this.awsAccountId;
    }
    /**
     * &lt;p&gt;The time that the analysis was created.&lt;/p&gt;
     * 
     */
    @Export(name="createdTime", type=String.class, parameters={})
    private Output<String> createdTime;

    /**
     * @return &lt;p&gt;The time that the analysis was created.&lt;/p&gt;
     * 
     */
    public Output<String> createdTime() {
        return this.createdTime;
    }
    /**
     * &lt;p&gt;The ARNs of the datasets of the analysis.&lt;/p&gt;
     * 
     */
    @Export(name="dataSetArns", type=List.class, parameters={String.class})
    private Output<List<String>> dataSetArns;

    /**
     * @return &lt;p&gt;The ARNs of the datasets of the analysis.&lt;/p&gt;
     * 
     */
    public Output<List<String>> dataSetArns() {
        return this.dataSetArns;
    }
    /**
     * &lt;p&gt;Errors associated with the analysis.&lt;/p&gt;
     * 
     */
    @Export(name="errors", type=List.class, parameters={AnalysisError.class})
    private Output</* @Nullable */ List<AnalysisError>> errors;

    /**
     * @return &lt;p&gt;Errors associated with the analysis.&lt;/p&gt;
     * 
     */
    public Output<Optional<List<AnalysisError>>> errors() {
        return Codegen.optional(this.errors);
    }
    /**
     * &lt;p&gt;The time that the analysis was last updated.&lt;/p&gt;
     * 
     */
    @Export(name="lastUpdatedTime", type=String.class, parameters={})
    private Output<String> lastUpdatedTime;

    /**
     * @return &lt;p&gt;The time that the analysis was last updated.&lt;/p&gt;
     * 
     */
    public Output<String> lastUpdatedTime() {
        return this.lastUpdatedTime;
    }
    /**
     * &lt;p&gt;The descriptive name of the analysis.&lt;/p&gt;
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output</* @Nullable */ String> name;

    /**
     * @return &lt;p&gt;The descriptive name of the analysis.&lt;/p&gt;
     * 
     */
    public Output<Optional<String>> name() {
        return Codegen.optional(this.name);
    }
    @Export(name="parameters", type=AnalysisParameters.class, parameters={})
    private Output</* @Nullable */ AnalysisParameters> parameters;

    public Output<Optional<AnalysisParameters>> parameters() {
        return Codegen.optional(this.parameters);
    }
    /**
     * &lt;p&gt;A structure that describes the principals and the resource-level permissions on an
     *             analysis. You can use the &lt;code&gt;Permissions&lt;/code&gt; structure to grant permissions by
     *             providing a list of AWS Identity and Access Management (IAM) action information for each
     *             principal listed by Amazon Resource Name (ARN). &lt;/p&gt;
     * 
     *         &lt;p&gt;To specify no permissions, omit &lt;code&gt;Permissions&lt;/code&gt;.&lt;/p&gt;
     * 
     */
    @Export(name="permissions", type=List.class, parameters={AnalysisResourcePermission.class})
    private Output</* @Nullable */ List<AnalysisResourcePermission>> permissions;

    /**
     * @return &lt;p&gt;A structure that describes the principals and the resource-level permissions on an
     *             analysis. You can use the &lt;code&gt;Permissions&lt;/code&gt; structure to grant permissions by
     *             providing a list of AWS Identity and Access Management (IAM) action information for each
     *             principal listed by Amazon Resource Name (ARN). &lt;/p&gt;
     * 
     *         &lt;p&gt;To specify no permissions, omit &lt;code&gt;Permissions&lt;/code&gt;.&lt;/p&gt;
     * 
     */
    public Output<Optional<List<AnalysisResourcePermission>>> permissions() {
        return Codegen.optional(this.permissions);
    }
    /**
     * &lt;p&gt;A list of the associated sheets with the unique identifier and name of each sheet.&lt;/p&gt;
     * 
     */
    @Export(name="sheets", type=List.class, parameters={AnalysisSheet.class})
    private Output<List<AnalysisSheet>> sheets;

    /**
     * @return &lt;p&gt;A list of the associated sheets with the unique identifier and name of each sheet.&lt;/p&gt;
     * 
     */
    public Output<List<AnalysisSheet>> sheets() {
        return this.sheets;
    }
    @Export(name="sourceEntity", type=AnalysisSourceEntity.class, parameters={})
    private Output<AnalysisSourceEntity> sourceEntity;

    public Output<AnalysisSourceEntity> sourceEntity() {
        return this.sourceEntity;
    }
    @Export(name="status", type=AnalysisResourceStatus.class, parameters={})
    private Output<AnalysisResourceStatus> status;

    public Output<AnalysisResourceStatus> status() {
        return this.status;
    }
    /**
     * &lt;p&gt;Contains a map of the key-value pairs for the resource tag or tags assigned to the
     *             analysis.&lt;/p&gt;
     * 
     */
    @Export(name="tags", type=List.class, parameters={AnalysisTag.class})
    private Output</* @Nullable */ List<AnalysisTag>> tags;

    /**
     * @return &lt;p&gt;Contains a map of the key-value pairs for the resource tag or tags assigned to the
     *             analysis.&lt;/p&gt;
     * 
     */
    public Output<Optional<List<AnalysisTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * &lt;p&gt;The ARN of the theme of the analysis.&lt;/p&gt;
     * 
     */
    @Export(name="themeArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> themeArn;

    /**
     * @return &lt;p&gt;The ARN of the theme of the analysis.&lt;/p&gt;
     * 
     */
    public Output<Optional<String>> themeArn() {
        return Codegen.optional(this.themeArn);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Analysis(String name) {
        this(name, AnalysisArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Analysis(String name, AnalysisArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Analysis(String name, AnalysisArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:quicksight:Analysis", name, args == null ? AnalysisArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Analysis(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:quicksight:Analysis", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Analysis get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Analysis(name, id, options);
    }
}
