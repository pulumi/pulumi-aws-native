// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisvideo;

import com.pulumi.awsnative.kinesisvideo.inputs.StreamTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamArgs Empty = new StreamArgs();

    /**
     * The number of hours till which Kinesis Video will retain the data in the stream
     * 
     */
    @Import(name="dataRetentionInHours")
    private @Nullable Output<Integer> dataRetentionInHours;

    /**
     * @return The number of hours till which Kinesis Video will retain the data in the stream
     * 
     */
    public Optional<Output<Integer>> dataRetentionInHours() {
        return Optional.ofNullable(this.dataRetentionInHours);
    }

    /**
     * The name of the device that is writing to the stream.
     * 
     */
    @Import(name="deviceName")
    private @Nullable Output<String> deviceName;

    /**
     * @return The name of the device that is writing to the stream.
     * 
     */
    public Optional<Output<String>> deviceName() {
        return Optional.ofNullable(this.deviceName);
    }

    /**
     * AWS KMS key ID that Kinesis Video Streams uses to encrypt stream data.
     * 
     */
    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    /**
     * @return AWS KMS key ID that Kinesis Video Streams uses to encrypt stream data.
     * 
     */
    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    /**
     * The media type of the stream. Consumers of the stream can use this information when processing the stream.
     * 
     */
    @Import(name="mediaType")
    private @Nullable Output<String> mediaType;

    /**
     * @return The media type of the stream. Consumers of the stream can use this information when processing the stream.
     * 
     */
    public Optional<Output<String>> mediaType() {
        return Optional.ofNullable(this.mediaType);
    }

    /**
     * The name of the Kinesis Video stream.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Kinesis Video stream.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * An array of key-value pairs associated with the Kinesis Video Stream.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<StreamTagArgs>> tags;

    /**
     * @return An array of key-value pairs associated with the Kinesis Video Stream.
     * 
     */
    public Optional<Output<List<StreamTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private StreamArgs() {}

    private StreamArgs(StreamArgs $) {
        this.dataRetentionInHours = $.dataRetentionInHours;
        this.deviceName = $.deviceName;
        this.kmsKeyId = $.kmsKeyId;
        this.mediaType = $.mediaType;
        this.name = $.name;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamArgs $;

        public Builder() {
            $ = new StreamArgs();
        }

        public Builder(StreamArgs defaults) {
            $ = new StreamArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataRetentionInHours The number of hours till which Kinesis Video will retain the data in the stream
         * 
         * @return builder
         * 
         */
        public Builder dataRetentionInHours(@Nullable Output<Integer> dataRetentionInHours) {
            $.dataRetentionInHours = dataRetentionInHours;
            return this;
        }

        /**
         * @param dataRetentionInHours The number of hours till which Kinesis Video will retain the data in the stream
         * 
         * @return builder
         * 
         */
        public Builder dataRetentionInHours(Integer dataRetentionInHours) {
            return dataRetentionInHours(Output.of(dataRetentionInHours));
        }

        /**
         * @param deviceName The name of the device that is writing to the stream.
         * 
         * @return builder
         * 
         */
        public Builder deviceName(@Nullable Output<String> deviceName) {
            $.deviceName = deviceName;
            return this;
        }

        /**
         * @param deviceName The name of the device that is writing to the stream.
         * 
         * @return builder
         * 
         */
        public Builder deviceName(String deviceName) {
            return deviceName(Output.of(deviceName));
        }

        /**
         * @param kmsKeyId AWS KMS key ID that Kinesis Video Streams uses to encrypt stream data.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId AWS KMS key ID that Kinesis Video Streams uses to encrypt stream data.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        /**
         * @param mediaType The media type of the stream. Consumers of the stream can use this information when processing the stream.
         * 
         * @return builder
         * 
         */
        public Builder mediaType(@Nullable Output<String> mediaType) {
            $.mediaType = mediaType;
            return this;
        }

        /**
         * @param mediaType The media type of the stream. Consumers of the stream can use this information when processing the stream.
         * 
         * @return builder
         * 
         */
        public Builder mediaType(String mediaType) {
            return mediaType(Output.of(mediaType));
        }

        /**
         * @param name The name of the Kinesis Video stream.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Kinesis Video stream.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags An array of key-value pairs associated with the Kinesis Video Stream.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<StreamTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags An array of key-value pairs associated with the Kinesis Video Stream.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<StreamTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags An array of key-value pairs associated with the Kinesis Video Stream.
         * 
         * @return builder
         * 
         */
        public Builder tags(StreamTagArgs... tags) {
            return tags(List.of(tags));
        }

        public StreamArgs build() {
            return $;
        }
    }

}
