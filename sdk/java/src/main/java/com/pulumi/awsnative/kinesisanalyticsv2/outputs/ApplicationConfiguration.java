// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisanalyticsv2.outputs;

import com.pulumi.awsnative.kinesisanalyticsv2.outputs.ApplicationCodeConfiguration;
import com.pulumi.awsnative.kinesisanalyticsv2.outputs.ApplicationEnvironmentProperties;
import com.pulumi.awsnative.kinesisanalyticsv2.outputs.ApplicationFlinkApplicationConfiguration;
import com.pulumi.awsnative.kinesisanalyticsv2.outputs.ApplicationSnapshotConfiguration;
import com.pulumi.awsnative.kinesisanalyticsv2.outputs.ApplicationSqlApplicationConfiguration;
import com.pulumi.awsnative.kinesisanalyticsv2.outputs.ApplicationZeppelinApplicationConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationConfiguration {
    /**
     * @return The code location and type parameters for a Flink-based Kinesis Data Analytics application.
     * 
     */
    private @Nullable ApplicationCodeConfiguration applicationCodeConfiguration;
    /**
     * @return Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.
     * 
     */
    private @Nullable ApplicationSnapshotConfiguration applicationSnapshotConfiguration;
    /**
     * @return Describes execution properties for a Flink-based Kinesis Data Analytics application.
     * 
     */
    private @Nullable ApplicationEnvironmentProperties environmentProperties;
    /**
     * @return The creation and update parameters for a Flink-based Kinesis Data Analytics application.
     * 
     */
    private @Nullable ApplicationFlinkApplicationConfiguration flinkApplicationConfiguration;
    /**
     * @return The creation and update parameters for a SQL-based Kinesis Data Analytics application.
     * 
     */
    private @Nullable ApplicationSqlApplicationConfiguration sqlApplicationConfiguration;
    /**
     * @return The configuration parameters for a Kinesis Data Analytics Studio notebook.
     * 
     */
    private @Nullable ApplicationZeppelinApplicationConfiguration zeppelinApplicationConfiguration;

    private ApplicationConfiguration() {}
    /**
     * @return The code location and type parameters for a Flink-based Kinesis Data Analytics application.
     * 
     */
    public Optional<ApplicationCodeConfiguration> applicationCodeConfiguration() {
        return Optional.ofNullable(this.applicationCodeConfiguration);
    }
    /**
     * @return Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.
     * 
     */
    public Optional<ApplicationSnapshotConfiguration> applicationSnapshotConfiguration() {
        return Optional.ofNullable(this.applicationSnapshotConfiguration);
    }
    /**
     * @return Describes execution properties for a Flink-based Kinesis Data Analytics application.
     * 
     */
    public Optional<ApplicationEnvironmentProperties> environmentProperties() {
        return Optional.ofNullable(this.environmentProperties);
    }
    /**
     * @return The creation and update parameters for a Flink-based Kinesis Data Analytics application.
     * 
     */
    public Optional<ApplicationFlinkApplicationConfiguration> flinkApplicationConfiguration() {
        return Optional.ofNullable(this.flinkApplicationConfiguration);
    }
    /**
     * @return The creation and update parameters for a SQL-based Kinesis Data Analytics application.
     * 
     */
    public Optional<ApplicationSqlApplicationConfiguration> sqlApplicationConfiguration() {
        return Optional.ofNullable(this.sqlApplicationConfiguration);
    }
    /**
     * @return The configuration parameters for a Kinesis Data Analytics Studio notebook.
     * 
     */
    public Optional<ApplicationZeppelinApplicationConfiguration> zeppelinApplicationConfiguration() {
        return Optional.ofNullable(this.zeppelinApplicationConfiguration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ApplicationCodeConfiguration applicationCodeConfiguration;
        private @Nullable ApplicationSnapshotConfiguration applicationSnapshotConfiguration;
        private @Nullable ApplicationEnvironmentProperties environmentProperties;
        private @Nullable ApplicationFlinkApplicationConfiguration flinkApplicationConfiguration;
        private @Nullable ApplicationSqlApplicationConfiguration sqlApplicationConfiguration;
        private @Nullable ApplicationZeppelinApplicationConfiguration zeppelinApplicationConfiguration;
        public Builder() {}
        public Builder(ApplicationConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationCodeConfiguration = defaults.applicationCodeConfiguration;
    	      this.applicationSnapshotConfiguration = defaults.applicationSnapshotConfiguration;
    	      this.environmentProperties = defaults.environmentProperties;
    	      this.flinkApplicationConfiguration = defaults.flinkApplicationConfiguration;
    	      this.sqlApplicationConfiguration = defaults.sqlApplicationConfiguration;
    	      this.zeppelinApplicationConfiguration = defaults.zeppelinApplicationConfiguration;
        }

        @CustomType.Setter
        public Builder applicationCodeConfiguration(@Nullable ApplicationCodeConfiguration applicationCodeConfiguration) {
            this.applicationCodeConfiguration = applicationCodeConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder applicationSnapshotConfiguration(@Nullable ApplicationSnapshotConfiguration applicationSnapshotConfiguration) {
            this.applicationSnapshotConfiguration = applicationSnapshotConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder environmentProperties(@Nullable ApplicationEnvironmentProperties environmentProperties) {
            this.environmentProperties = environmentProperties;
            return this;
        }
        @CustomType.Setter
        public Builder flinkApplicationConfiguration(@Nullable ApplicationFlinkApplicationConfiguration flinkApplicationConfiguration) {
            this.flinkApplicationConfiguration = flinkApplicationConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder sqlApplicationConfiguration(@Nullable ApplicationSqlApplicationConfiguration sqlApplicationConfiguration) {
            this.sqlApplicationConfiguration = sqlApplicationConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder zeppelinApplicationConfiguration(@Nullable ApplicationZeppelinApplicationConfiguration zeppelinApplicationConfiguration) {
            this.zeppelinApplicationConfiguration = zeppelinApplicationConfiguration;
            return this;
        }
        public ApplicationConfiguration build() {
            final var o = new ApplicationConfiguration();
            o.applicationCodeConfiguration = applicationCodeConfiguration;
            o.applicationSnapshotConfiguration = applicationSnapshotConfiguration;
            o.environmentProperties = environmentProperties;
            o.flinkApplicationConfiguration = flinkApplicationConfiguration;
            o.sqlApplicationConfiguration = sqlApplicationConfiguration;
            o.zeppelinApplicationConfiguration = zeppelinApplicationConfiguration;
            return o;
        }
    }
}
