// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisanalyticsv2.outputs;

import com.pulumi.awsnative.kinesisanalyticsv2.enums.ApplicationCodeConfigurationCodeContentType;
import com.pulumi.awsnative.kinesisanalyticsv2.outputs.ApplicationCodeContent;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;

@CustomType
public final class ApplicationCodeConfiguration {
    /**
     * @return The location and type of the application code.
     * 
     */
    private ApplicationCodeContent codeContent;
    /**
     * @return Specifies whether the code content is in text or zip format.
     * 
     */
    private ApplicationCodeConfigurationCodeContentType codeContentType;

    private ApplicationCodeConfiguration() {}
    /**
     * @return The location and type of the application code.
     * 
     */
    public ApplicationCodeContent codeContent() {
        return this.codeContent;
    }
    /**
     * @return Specifies whether the code content is in text or zip format.
     * 
     */
    public ApplicationCodeConfigurationCodeContentType codeContentType() {
        return this.codeContentType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationCodeConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private ApplicationCodeContent codeContent;
        private ApplicationCodeConfigurationCodeContentType codeContentType;
        public Builder() {}
        public Builder(ApplicationCodeConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.codeContent = defaults.codeContent;
    	      this.codeContentType = defaults.codeContentType;
        }

        @CustomType.Setter
        public Builder codeContent(ApplicationCodeContent codeContent) {
            this.codeContent = Objects.requireNonNull(codeContent);
            return this;
        }
        @CustomType.Setter
        public Builder codeContentType(ApplicationCodeConfigurationCodeContentType codeContentType) {
            this.codeContentType = Objects.requireNonNull(codeContentType);
            return this;
        }
        public ApplicationCodeConfiguration build() {
            final var o = new ApplicationCodeConfiguration();
            o.codeContent = codeContent;
            o.codeContentType = codeContentType;
            return o;
        }
    }
}
