// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ecs.outputs;

import com.pulumi.awsnative.ecs.outputs.ServiceDeploymentCircuitBreaker;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceDeploymentConfiguration {
    private @Nullable ServiceDeploymentCircuitBreaker deploymentCircuitBreaker;
    private @Nullable Integer maximumPercent;
    private @Nullable Integer minimumHealthyPercent;

    private ServiceDeploymentConfiguration() {}
    public Optional<ServiceDeploymentCircuitBreaker> deploymentCircuitBreaker() {
        return Optional.ofNullable(this.deploymentCircuitBreaker);
    }
    public Optional<Integer> maximumPercent() {
        return Optional.ofNullable(this.maximumPercent);
    }
    public Optional<Integer> minimumHealthyPercent() {
        return Optional.ofNullable(this.minimumHealthyPercent);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceDeploymentConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ServiceDeploymentCircuitBreaker deploymentCircuitBreaker;
        private @Nullable Integer maximumPercent;
        private @Nullable Integer minimumHealthyPercent;
        public Builder() {}
        public Builder(ServiceDeploymentConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deploymentCircuitBreaker = defaults.deploymentCircuitBreaker;
    	      this.maximumPercent = defaults.maximumPercent;
    	      this.minimumHealthyPercent = defaults.minimumHealthyPercent;
        }

        @CustomType.Setter
        public Builder deploymentCircuitBreaker(@Nullable ServiceDeploymentCircuitBreaker deploymentCircuitBreaker) {
            this.deploymentCircuitBreaker = deploymentCircuitBreaker;
            return this;
        }
        @CustomType.Setter
        public Builder maximumPercent(@Nullable Integer maximumPercent) {
            this.maximumPercent = maximumPercent;
            return this;
        }
        @CustomType.Setter
        public Builder minimumHealthyPercent(@Nullable Integer minimumHealthyPercent) {
            this.minimumHealthyPercent = minimumHealthyPercent;
            return this;
        }
        public ServiceDeploymentConfiguration build() {
            final var o = new ServiceDeploymentConfiguration();
            o.deploymentCircuitBreaker = deploymentCircuitBreaker;
            o.maximumPercent = maximumPercent;
            o.minimumHealthyPercent = minimumHealthyPercent;
            return o;
        }
    }
}
