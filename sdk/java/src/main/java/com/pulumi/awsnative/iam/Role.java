// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iam;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.iam.RoleArgs;
import com.pulumi.awsnative.iam.outputs.RolePolicy;
import com.pulumi.awsnative.iam.outputs.RoleTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource Type definition for AWS::IAM::Role
 * 
 */
@ResourceType(type="aws-native:iam:Role")
public class Role extends com.pulumi.resources.CustomResource {
    /**
     * The Amazon Resource Name (ARN) for the role.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return The Amazon Resource Name (ARN) for the role.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * The trust policy that is associated with this role.
     * 
     */
    @Export(name="assumeRolePolicyDocument", type=Object.class, parameters={})
    private Output<Object> assumeRolePolicyDocument;

    /**
     * @return The trust policy that is associated with this role.
     * 
     */
    public Output<Object> assumeRolePolicyDocument() {
        return this.assumeRolePolicyDocument;
    }
    /**
     * A description of the role that you provide.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return A description of the role that you provide.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role.
     * 
     */
    @Export(name="managedPolicyArns", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> managedPolicyArns;

    /**
     * @return A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role.
     * 
     */
    public Output<Optional<List<String>>> managedPolicyArns() {
        return Codegen.optional(this.managedPolicyArns);
    }
    /**
     * The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours.
     * 
     */
    @Export(name="maxSessionDuration", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> maxSessionDuration;

    /**
     * @return The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours.
     * 
     */
    public Output<Optional<Integer>> maxSessionDuration() {
        return Codegen.optional(this.maxSessionDuration);
    }
    /**
     * The path to the role.
     * 
     */
    @Export(name="path", type=String.class, parameters={})
    private Output</* @Nullable */ String> path;

    /**
     * @return The path to the role.
     * 
     */
    public Output<Optional<String>> path() {
        return Codegen.optional(this.path);
    }
    /**
     * The ARN of the policy used to set the permissions boundary for the role.
     * 
     */
    @Export(name="permissionsBoundary", type=String.class, parameters={})
    private Output</* @Nullable */ String> permissionsBoundary;

    /**
     * @return The ARN of the policy used to set the permissions boundary for the role.
     * 
     */
    public Output<Optional<String>> permissionsBoundary() {
        return Codegen.optional(this.permissionsBoundary);
    }
    /**
     * Adds or updates an inline policy document that is embedded in the specified IAM role.
     * 
     */
    @Export(name="policies", type=List.class, parameters={RolePolicy.class})
    private Output</* @Nullable */ List<RolePolicy>> policies;

    /**
     * @return Adds or updates an inline policy document that is embedded in the specified IAM role.
     * 
     */
    public Output<Optional<List<RolePolicy>>> policies() {
        return Codegen.optional(this.policies);
    }
    /**
     * The stable and unique string identifying the role.
     * 
     */
    @Export(name="roleId", type=String.class, parameters={})
    private Output<String> roleId;

    /**
     * @return The stable and unique string identifying the role.
     * 
     */
    public Output<String> roleId() {
        return this.roleId;
    }
    /**
     * A name for the IAM role, up to 64 characters in length.
     * 
     */
    @Export(name="roleName", type=String.class, parameters={})
    private Output</* @Nullable */ String> roleName;

    /**
     * @return A name for the IAM role, up to 64 characters in length.
     * 
     */
    public Output<Optional<String>> roleName() {
        return Codegen.optional(this.roleName);
    }
    /**
     * A list of tags that are attached to the role.
     * 
     */
    @Export(name="tags", type=List.class, parameters={RoleTag.class})
    private Output</* @Nullable */ List<RoleTag>> tags;

    /**
     * @return A list of tags that are attached to the role.
     * 
     */
    public Output<Optional<List<RoleTag>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Role(String name) {
        this(name, RoleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Role(String name, RoleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Role(String name, RoleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:iam:Role", name, args == null ? RoleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Role(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:iam:Role", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Role get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Role(name, id, options);
    }
}
