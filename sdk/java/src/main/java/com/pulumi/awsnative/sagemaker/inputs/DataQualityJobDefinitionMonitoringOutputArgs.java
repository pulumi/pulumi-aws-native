// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.inputs;

import com.pulumi.awsnative.sagemaker.inputs.DataQualityJobDefinitionS3OutputArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


/**
 * The output object for a monitoring job.
 * 
 */
public final class DataQualityJobDefinitionMonitoringOutputArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataQualityJobDefinitionMonitoringOutputArgs Empty = new DataQualityJobDefinitionMonitoringOutputArgs();

    @Import(name="s3Output", required=true)
    private Output<DataQualityJobDefinitionS3OutputArgs> s3Output;

    public Output<DataQualityJobDefinitionS3OutputArgs> s3Output() {
        return this.s3Output;
    }

    private DataQualityJobDefinitionMonitoringOutputArgs() {}

    private DataQualityJobDefinitionMonitoringOutputArgs(DataQualityJobDefinitionMonitoringOutputArgs $) {
        this.s3Output = $.s3Output;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataQualityJobDefinitionMonitoringOutputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataQualityJobDefinitionMonitoringOutputArgs $;

        public Builder() {
            $ = new DataQualityJobDefinitionMonitoringOutputArgs();
        }

        public Builder(DataQualityJobDefinitionMonitoringOutputArgs defaults) {
            $ = new DataQualityJobDefinitionMonitoringOutputArgs(Objects.requireNonNull(defaults));
        }

        public Builder s3Output(Output<DataQualityJobDefinitionS3OutputArgs> s3Output) {
            $.s3Output = s3Output;
            return this;
        }

        public Builder s3Output(DataQualityJobDefinitionS3OutputArgs s3Output) {
            return s3Output(Output.of(s3Output));
        }

        public DataQualityJobDefinitionMonitoringOutputArgs build() {
            $.s3Output = Objects.requireNonNull($.s3Output, "expected parameter 's3Output' to be non-null");
            return $;
        }
    }

}
