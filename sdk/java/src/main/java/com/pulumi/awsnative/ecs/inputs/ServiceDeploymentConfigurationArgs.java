// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ecs.inputs;

import com.pulumi.awsnative.ecs.inputs.ServiceDeploymentCircuitBreakerArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceDeploymentConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceDeploymentConfigurationArgs Empty = new ServiceDeploymentConfigurationArgs();

    @Import(name="deploymentCircuitBreaker")
    private @Nullable Output<ServiceDeploymentCircuitBreakerArgs> deploymentCircuitBreaker;

    public Optional<Output<ServiceDeploymentCircuitBreakerArgs>> deploymentCircuitBreaker() {
        return Optional.ofNullable(this.deploymentCircuitBreaker);
    }

    @Import(name="maximumPercent")
    private @Nullable Output<Integer> maximumPercent;

    public Optional<Output<Integer>> maximumPercent() {
        return Optional.ofNullable(this.maximumPercent);
    }

    @Import(name="minimumHealthyPercent")
    private @Nullable Output<Integer> minimumHealthyPercent;

    public Optional<Output<Integer>> minimumHealthyPercent() {
        return Optional.ofNullable(this.minimumHealthyPercent);
    }

    private ServiceDeploymentConfigurationArgs() {}

    private ServiceDeploymentConfigurationArgs(ServiceDeploymentConfigurationArgs $) {
        this.deploymentCircuitBreaker = $.deploymentCircuitBreaker;
        this.maximumPercent = $.maximumPercent;
        this.minimumHealthyPercent = $.minimumHealthyPercent;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceDeploymentConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceDeploymentConfigurationArgs $;

        public Builder() {
            $ = new ServiceDeploymentConfigurationArgs();
        }

        public Builder(ServiceDeploymentConfigurationArgs defaults) {
            $ = new ServiceDeploymentConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder deploymentCircuitBreaker(@Nullable Output<ServiceDeploymentCircuitBreakerArgs> deploymentCircuitBreaker) {
            $.deploymentCircuitBreaker = deploymentCircuitBreaker;
            return this;
        }

        public Builder deploymentCircuitBreaker(ServiceDeploymentCircuitBreakerArgs deploymentCircuitBreaker) {
            return deploymentCircuitBreaker(Output.of(deploymentCircuitBreaker));
        }

        public Builder maximumPercent(@Nullable Output<Integer> maximumPercent) {
            $.maximumPercent = maximumPercent;
            return this;
        }

        public Builder maximumPercent(Integer maximumPercent) {
            return maximumPercent(Output.of(maximumPercent));
        }

        public Builder minimumHealthyPercent(@Nullable Output<Integer> minimumHealthyPercent) {
            $.minimumHealthyPercent = minimumHealthyPercent;
            return this;
        }

        public Builder minimumHealthyPercent(Integer minimumHealthyPercent) {
            return minimumHealthyPercent(Output.of(minimumHealthyPercent));
        }

        public ServiceDeploymentConfigurationArgs build() {
            return $;
        }
    }

}
