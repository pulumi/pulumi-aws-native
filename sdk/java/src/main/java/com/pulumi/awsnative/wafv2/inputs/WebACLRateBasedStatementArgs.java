// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.wafv2.inputs;

import com.pulumi.awsnative.wafv2.enums.WebACLRateBasedStatementAggregateKeyType;
import com.pulumi.awsnative.wafv2.inputs.WebACLForwardedIPConfigurationArgs;
import com.pulumi.awsnative.wafv2.inputs.WebACLStatementArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebACLRateBasedStatementArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebACLRateBasedStatementArgs Empty = new WebACLRateBasedStatementArgs();

    @Import(name="aggregateKeyType", required=true)
    private Output<WebACLRateBasedStatementAggregateKeyType> aggregateKeyType;

    public Output<WebACLRateBasedStatementAggregateKeyType> aggregateKeyType() {
        return this.aggregateKeyType;
    }

    @Import(name="forwardedIPConfig")
    private @Nullable Output<WebACLForwardedIPConfigurationArgs> forwardedIPConfig;

    public Optional<Output<WebACLForwardedIPConfigurationArgs>> forwardedIPConfig() {
        return Optional.ofNullable(this.forwardedIPConfig);
    }

    @Import(name="limit", required=true)
    private Output<Integer> limit;

    public Output<Integer> limit() {
        return this.limit;
    }

    @Import(name="scopeDownStatement")
    private @Nullable Output<WebACLStatementArgs> scopeDownStatement;

    public Optional<Output<WebACLStatementArgs>> scopeDownStatement() {
        return Optional.ofNullable(this.scopeDownStatement);
    }

    private WebACLRateBasedStatementArgs() {}

    private WebACLRateBasedStatementArgs(WebACLRateBasedStatementArgs $) {
        this.aggregateKeyType = $.aggregateKeyType;
        this.forwardedIPConfig = $.forwardedIPConfig;
        this.limit = $.limit;
        this.scopeDownStatement = $.scopeDownStatement;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebACLRateBasedStatementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebACLRateBasedStatementArgs $;

        public Builder() {
            $ = new WebACLRateBasedStatementArgs();
        }

        public Builder(WebACLRateBasedStatementArgs defaults) {
            $ = new WebACLRateBasedStatementArgs(Objects.requireNonNull(defaults));
        }

        public Builder aggregateKeyType(Output<WebACLRateBasedStatementAggregateKeyType> aggregateKeyType) {
            $.aggregateKeyType = aggregateKeyType;
            return this;
        }

        public Builder aggregateKeyType(WebACLRateBasedStatementAggregateKeyType aggregateKeyType) {
            return aggregateKeyType(Output.of(aggregateKeyType));
        }

        public Builder forwardedIPConfig(@Nullable Output<WebACLForwardedIPConfigurationArgs> forwardedIPConfig) {
            $.forwardedIPConfig = forwardedIPConfig;
            return this;
        }

        public Builder forwardedIPConfig(WebACLForwardedIPConfigurationArgs forwardedIPConfig) {
            return forwardedIPConfig(Output.of(forwardedIPConfig));
        }

        public Builder limit(Output<Integer> limit) {
            $.limit = limit;
            return this;
        }

        public Builder limit(Integer limit) {
            return limit(Output.of(limit));
        }

        public Builder scopeDownStatement(@Nullable Output<WebACLStatementArgs> scopeDownStatement) {
            $.scopeDownStatement = scopeDownStatement;
            return this;
        }

        public Builder scopeDownStatement(WebACLStatementArgs scopeDownStatement) {
            return scopeDownStatement(Output.of(scopeDownStatement));
        }

        public WebACLRateBasedStatementArgs build() {
            $.aggregateKeyType = Objects.requireNonNull($.aggregateKeyType, "expected parameter 'aggregateKeyType' to be non-null");
            $.limit = Objects.requireNonNull($.limit, "expected parameter 'limit' to be non-null");
            return $;
        }
    }

}
