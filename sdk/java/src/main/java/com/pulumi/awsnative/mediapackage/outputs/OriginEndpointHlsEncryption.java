// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.mediapackage.outputs;

import com.pulumi.awsnative.mediapackage.enums.OriginEndpointHlsEncryptionEncryptionMethod;
import com.pulumi.awsnative.mediapackage.outputs.OriginEndpointSpekeKeyProvider;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OriginEndpointHlsEncryption {
    /**
     * @return A constant initialization vector for encryption (optional). When not specified the initialization vector will be periodically rotated.
     * 
     */
    private @Nullable String constantInitializationVector;
    /**
     * @return The encryption method to use.
     * 
     */
    private @Nullable OriginEndpointHlsEncryptionEncryptionMethod encryptionMethod;
    /**
     * @return Interval (in seconds) between each encryption key rotation.
     * 
     */
    private @Nullable Integer keyRotationIntervalSeconds;
    /**
     * @return When enabled, the EXT-X-KEY tag will be repeated in output manifests.
     * 
     */
    private @Nullable Boolean repeatExtXKey;
    private OriginEndpointSpekeKeyProvider spekeKeyProvider;

    private OriginEndpointHlsEncryption() {}
    /**
     * @return A constant initialization vector for encryption (optional). When not specified the initialization vector will be periodically rotated.
     * 
     */
    public Optional<String> constantInitializationVector() {
        return Optional.ofNullable(this.constantInitializationVector);
    }
    /**
     * @return The encryption method to use.
     * 
     */
    public Optional<OriginEndpointHlsEncryptionEncryptionMethod> encryptionMethod() {
        return Optional.ofNullable(this.encryptionMethod);
    }
    /**
     * @return Interval (in seconds) between each encryption key rotation.
     * 
     */
    public Optional<Integer> keyRotationIntervalSeconds() {
        return Optional.ofNullable(this.keyRotationIntervalSeconds);
    }
    /**
     * @return When enabled, the EXT-X-KEY tag will be repeated in output manifests.
     * 
     */
    public Optional<Boolean> repeatExtXKey() {
        return Optional.ofNullable(this.repeatExtXKey);
    }
    public OriginEndpointSpekeKeyProvider spekeKeyProvider() {
        return this.spekeKeyProvider;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OriginEndpointHlsEncryption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String constantInitializationVector;
        private @Nullable OriginEndpointHlsEncryptionEncryptionMethod encryptionMethod;
        private @Nullable Integer keyRotationIntervalSeconds;
        private @Nullable Boolean repeatExtXKey;
        private OriginEndpointSpekeKeyProvider spekeKeyProvider;
        public Builder() {}
        public Builder(OriginEndpointHlsEncryption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.constantInitializationVector = defaults.constantInitializationVector;
    	      this.encryptionMethod = defaults.encryptionMethod;
    	      this.keyRotationIntervalSeconds = defaults.keyRotationIntervalSeconds;
    	      this.repeatExtXKey = defaults.repeatExtXKey;
    	      this.spekeKeyProvider = defaults.spekeKeyProvider;
        }

        @CustomType.Setter
        public Builder constantInitializationVector(@Nullable String constantInitializationVector) {
            this.constantInitializationVector = constantInitializationVector;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionMethod(@Nullable OriginEndpointHlsEncryptionEncryptionMethod encryptionMethod) {
            this.encryptionMethod = encryptionMethod;
            return this;
        }
        @CustomType.Setter
        public Builder keyRotationIntervalSeconds(@Nullable Integer keyRotationIntervalSeconds) {
            this.keyRotationIntervalSeconds = keyRotationIntervalSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder repeatExtXKey(@Nullable Boolean repeatExtXKey) {
            this.repeatExtXKey = repeatExtXKey;
            return this;
        }
        @CustomType.Setter
        public Builder spekeKeyProvider(OriginEndpointSpekeKeyProvider spekeKeyProvider) {
            this.spekeKeyProvider = Objects.requireNonNull(spekeKeyProvider);
            return this;
        }
        public OriginEndpointHlsEncryption build() {
            final var o = new OriginEndpointHlsEncryption();
            o.constantInitializationVector = constantInitializationVector;
            o.encryptionMethod = encryptionMethod;
            o.keyRotationIntervalSeconds = keyRotationIntervalSeconds;
            o.repeatExtXKey = repeatExtXKey;
            o.spekeKeyProvider = spekeKeyProvider;
            return o;
        }
    }
}
