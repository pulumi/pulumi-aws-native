// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ecs.inputs;

import com.pulumi.awsnative.ecs.enums.TaskDefinitionEFSVolumeConfigurationTransitEncryption;
import com.pulumi.awsnative.ecs.inputs.TaskDefinitionAuthorizationConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TaskDefinitionEFSVolumeConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final TaskDefinitionEFSVolumeConfigurationArgs Empty = new TaskDefinitionEFSVolumeConfigurationArgs();

    @Import(name="authorizationConfig")
    private @Nullable Output<TaskDefinitionAuthorizationConfigArgs> authorizationConfig;

    public Optional<Output<TaskDefinitionAuthorizationConfigArgs>> authorizationConfig() {
        return Optional.ofNullable(this.authorizationConfig);
    }

    @Import(name="filesystemId", required=true)
    private Output<String> filesystemId;

    public Output<String> filesystemId() {
        return this.filesystemId;
    }

    @Import(name="rootDirectory")
    private @Nullable Output<String> rootDirectory;

    public Optional<Output<String>> rootDirectory() {
        return Optional.ofNullable(this.rootDirectory);
    }

    @Import(name="transitEncryption")
    private @Nullable Output<TaskDefinitionEFSVolumeConfigurationTransitEncryption> transitEncryption;

    public Optional<Output<TaskDefinitionEFSVolumeConfigurationTransitEncryption>> transitEncryption() {
        return Optional.ofNullable(this.transitEncryption);
    }

    @Import(name="transitEncryptionPort")
    private @Nullable Output<Integer> transitEncryptionPort;

    public Optional<Output<Integer>> transitEncryptionPort() {
        return Optional.ofNullable(this.transitEncryptionPort);
    }

    private TaskDefinitionEFSVolumeConfigurationArgs() {}

    private TaskDefinitionEFSVolumeConfigurationArgs(TaskDefinitionEFSVolumeConfigurationArgs $) {
        this.authorizationConfig = $.authorizationConfig;
        this.filesystemId = $.filesystemId;
        this.rootDirectory = $.rootDirectory;
        this.transitEncryption = $.transitEncryption;
        this.transitEncryptionPort = $.transitEncryptionPort;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TaskDefinitionEFSVolumeConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TaskDefinitionEFSVolumeConfigurationArgs $;

        public Builder() {
            $ = new TaskDefinitionEFSVolumeConfigurationArgs();
        }

        public Builder(TaskDefinitionEFSVolumeConfigurationArgs defaults) {
            $ = new TaskDefinitionEFSVolumeConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder authorizationConfig(@Nullable Output<TaskDefinitionAuthorizationConfigArgs> authorizationConfig) {
            $.authorizationConfig = authorizationConfig;
            return this;
        }

        public Builder authorizationConfig(TaskDefinitionAuthorizationConfigArgs authorizationConfig) {
            return authorizationConfig(Output.of(authorizationConfig));
        }

        public Builder filesystemId(Output<String> filesystemId) {
            $.filesystemId = filesystemId;
            return this;
        }

        public Builder filesystemId(String filesystemId) {
            return filesystemId(Output.of(filesystemId));
        }

        public Builder rootDirectory(@Nullable Output<String> rootDirectory) {
            $.rootDirectory = rootDirectory;
            return this;
        }

        public Builder rootDirectory(String rootDirectory) {
            return rootDirectory(Output.of(rootDirectory));
        }

        public Builder transitEncryption(@Nullable Output<TaskDefinitionEFSVolumeConfigurationTransitEncryption> transitEncryption) {
            $.transitEncryption = transitEncryption;
            return this;
        }

        public Builder transitEncryption(TaskDefinitionEFSVolumeConfigurationTransitEncryption transitEncryption) {
            return transitEncryption(Output.of(transitEncryption));
        }

        public Builder transitEncryptionPort(@Nullable Output<Integer> transitEncryptionPort) {
            $.transitEncryptionPort = transitEncryptionPort;
            return this;
        }

        public Builder transitEncryptionPort(Integer transitEncryptionPort) {
            return transitEncryptionPort(Output.of(transitEncryptionPort));
        }

        public TaskDefinitionEFSVolumeConfigurationArgs build() {
            $.filesystemId = Objects.requireNonNull($.filesystemId, "expected parameter 'filesystemId' to be non-null");
            return $;
        }
    }

}
