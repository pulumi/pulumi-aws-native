// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iot.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountAuditConfigurationAuditNotificationTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountAuditConfigurationAuditNotificationTargetArgs Empty = new AccountAuditConfigurationAuditNotificationTargetArgs();

    /**
     * True if notifications to the target are enabled.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return True if notifications to the target are enabled.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The ARN of the role that grants permission to send notifications to the target.
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    /**
     * @return The ARN of the role that grants permission to send notifications to the target.
     * 
     */
    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * The ARN of the target (SNS topic) to which audit notifications are sent.
     * 
     */
    @Import(name="targetArn")
    private @Nullable Output<String> targetArn;

    /**
     * @return The ARN of the target (SNS topic) to which audit notifications are sent.
     * 
     */
    public Optional<Output<String>> targetArn() {
        return Optional.ofNullable(this.targetArn);
    }

    private AccountAuditConfigurationAuditNotificationTargetArgs() {}

    private AccountAuditConfigurationAuditNotificationTargetArgs(AccountAuditConfigurationAuditNotificationTargetArgs $) {
        this.enabled = $.enabled;
        this.roleArn = $.roleArn;
        this.targetArn = $.targetArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountAuditConfigurationAuditNotificationTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountAuditConfigurationAuditNotificationTargetArgs $;

        public Builder() {
            $ = new AccountAuditConfigurationAuditNotificationTargetArgs();
        }

        public Builder(AccountAuditConfigurationAuditNotificationTargetArgs defaults) {
            $ = new AccountAuditConfigurationAuditNotificationTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled True if notifications to the target are enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled True if notifications to the target are enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param roleArn The ARN of the role that grants permission to send notifications to the target.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The ARN of the role that grants permission to send notifications to the target.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param targetArn The ARN of the target (SNS topic) to which audit notifications are sent.
         * 
         * @return builder
         * 
         */
        public Builder targetArn(@Nullable Output<String> targetArn) {
            $.targetArn = targetArn;
            return this;
        }

        /**
         * @param targetArn The ARN of the target (SNS topic) to which audit notifications are sent.
         * 
         * @return builder
         * 
         */
        public Builder targetArn(String targetArn) {
            return targetArn(Output.of(targetArn));
        }

        public AccountAuditConfigurationAuditNotificationTargetArgs build() {
            return $;
        }
    }

}
