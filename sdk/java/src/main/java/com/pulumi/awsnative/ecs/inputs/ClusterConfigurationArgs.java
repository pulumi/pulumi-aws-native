// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ecs.inputs;

import com.pulumi.awsnative.ecs.inputs.ClusterExecuteCommandConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The configurations to be set at cluster level.
 * 
 */
public final class ClusterConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterConfigurationArgs Empty = new ClusterConfigurationArgs();

    @Import(name="executeCommandConfiguration")
    private @Nullable Output<ClusterExecuteCommandConfigurationArgs> executeCommandConfiguration;

    public Optional<Output<ClusterExecuteCommandConfigurationArgs>> executeCommandConfiguration() {
        return Optional.ofNullable(this.executeCommandConfiguration);
    }

    private ClusterConfigurationArgs() {}

    private ClusterConfigurationArgs(ClusterConfigurationArgs $) {
        this.executeCommandConfiguration = $.executeCommandConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterConfigurationArgs $;

        public Builder() {
            $ = new ClusterConfigurationArgs();
        }

        public Builder(ClusterConfigurationArgs defaults) {
            $ = new ClusterConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder executeCommandConfiguration(@Nullable Output<ClusterExecuteCommandConfigurationArgs> executeCommandConfiguration) {
            $.executeCommandConfiguration = executeCommandConfiguration;
            return this;
        }

        public Builder executeCommandConfiguration(ClusterExecuteCommandConfigurationArgs executeCommandConfiguration) {
            return executeCommandConfiguration(Output.of(executeCommandConfiguration));
        }

        public ClusterConfigurationArgs build() {
            return $;
        }
    }

}
