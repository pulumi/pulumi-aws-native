// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotanalytics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class PipelineDatastoreArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineDatastoreArgs Empty = new PipelineDatastoreArgs();

    @Import(name="datastoreName", required=true)
    private Output<String> datastoreName;

    public Output<String> datastoreName() {
        return this.datastoreName;
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    private PipelineDatastoreArgs() {}

    private PipelineDatastoreArgs(PipelineDatastoreArgs $) {
        this.datastoreName = $.datastoreName;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineDatastoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineDatastoreArgs $;

        public Builder() {
            $ = new PipelineDatastoreArgs();
        }

        public Builder(PipelineDatastoreArgs defaults) {
            $ = new PipelineDatastoreArgs(Objects.requireNonNull(defaults));
        }

        public Builder datastoreName(Output<String> datastoreName) {
            $.datastoreName = datastoreName;
            return this;
        }

        public Builder datastoreName(String datastoreName) {
            return datastoreName(Output.of(datastoreName));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public PipelineDatastoreArgs build() {
            $.datastoreName = Objects.requireNonNull($.datastoreName, "expected parameter 'datastoreName' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
