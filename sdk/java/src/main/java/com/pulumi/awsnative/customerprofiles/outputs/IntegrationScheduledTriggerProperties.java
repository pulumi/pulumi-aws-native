// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.customerprofiles.outputs;

import com.pulumi.awsnative.customerprofiles.enums.IntegrationScheduledTriggerPropertiesDataPullMode;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IntegrationScheduledTriggerProperties {
    private @Nullable IntegrationScheduledTriggerPropertiesDataPullMode dataPullMode;
    private @Nullable Double firstExecutionFrom;
    private @Nullable Double scheduleEndTime;
    private String scheduleExpression;
    private @Nullable Integer scheduleOffset;
    private @Nullable Double scheduleStartTime;
    private @Nullable String timezone;

    private IntegrationScheduledTriggerProperties() {}
    public Optional<IntegrationScheduledTriggerPropertiesDataPullMode> dataPullMode() {
        return Optional.ofNullable(this.dataPullMode);
    }
    public Optional<Double> firstExecutionFrom() {
        return Optional.ofNullable(this.firstExecutionFrom);
    }
    public Optional<Double> scheduleEndTime() {
        return Optional.ofNullable(this.scheduleEndTime);
    }
    public String scheduleExpression() {
        return this.scheduleExpression;
    }
    public Optional<Integer> scheduleOffset() {
        return Optional.ofNullable(this.scheduleOffset);
    }
    public Optional<Double> scheduleStartTime() {
        return Optional.ofNullable(this.scheduleStartTime);
    }
    public Optional<String> timezone() {
        return Optional.ofNullable(this.timezone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntegrationScheduledTriggerProperties defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable IntegrationScheduledTriggerPropertiesDataPullMode dataPullMode;
        private @Nullable Double firstExecutionFrom;
        private @Nullable Double scheduleEndTime;
        private String scheduleExpression;
        private @Nullable Integer scheduleOffset;
        private @Nullable Double scheduleStartTime;
        private @Nullable String timezone;
        public Builder() {}
        public Builder(IntegrationScheduledTriggerProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataPullMode = defaults.dataPullMode;
    	      this.firstExecutionFrom = defaults.firstExecutionFrom;
    	      this.scheduleEndTime = defaults.scheduleEndTime;
    	      this.scheduleExpression = defaults.scheduleExpression;
    	      this.scheduleOffset = defaults.scheduleOffset;
    	      this.scheduleStartTime = defaults.scheduleStartTime;
    	      this.timezone = defaults.timezone;
        }

        @CustomType.Setter
        public Builder dataPullMode(@Nullable IntegrationScheduledTriggerPropertiesDataPullMode dataPullMode) {
            this.dataPullMode = dataPullMode;
            return this;
        }
        @CustomType.Setter
        public Builder firstExecutionFrom(@Nullable Double firstExecutionFrom) {
            this.firstExecutionFrom = firstExecutionFrom;
            return this;
        }
        @CustomType.Setter
        public Builder scheduleEndTime(@Nullable Double scheduleEndTime) {
            this.scheduleEndTime = scheduleEndTime;
            return this;
        }
        @CustomType.Setter
        public Builder scheduleExpression(String scheduleExpression) {
            this.scheduleExpression = Objects.requireNonNull(scheduleExpression);
            return this;
        }
        @CustomType.Setter
        public Builder scheduleOffset(@Nullable Integer scheduleOffset) {
            this.scheduleOffset = scheduleOffset;
            return this;
        }
        @CustomType.Setter
        public Builder scheduleStartTime(@Nullable Double scheduleStartTime) {
            this.scheduleStartTime = scheduleStartTime;
            return this;
        }
        @CustomType.Setter
        public Builder timezone(@Nullable String timezone) {
            this.timezone = timezone;
            return this;
        }
        public IntegrationScheduledTriggerProperties build() {
            final var o = new IntegrationScheduledTriggerProperties();
            o.dataPullMode = dataPullMode;
            o.firstExecutionFrom = firstExecutionFrom;
            o.scheduleEndTime = scheduleEndTime;
            o.scheduleExpression = scheduleExpression;
            o.scheduleOffset = scheduleOffset;
            o.scheduleStartTime = scheduleStartTime;
            o.timezone = timezone;
            return o;
        }
    }
}
