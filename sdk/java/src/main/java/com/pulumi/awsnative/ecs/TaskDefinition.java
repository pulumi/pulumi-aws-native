// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ecs;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.ecs.TaskDefinitionArgs;
import com.pulumi.awsnative.ecs.outputs.TaskDefinitionContainerDefinition;
import com.pulumi.awsnative.ecs.outputs.TaskDefinitionEphemeralStorage;
import com.pulumi.awsnative.ecs.outputs.TaskDefinitionInferenceAccelerator;
import com.pulumi.awsnative.ecs.outputs.TaskDefinitionPlacementConstraint;
import com.pulumi.awsnative.ecs.outputs.TaskDefinitionProxyConfiguration;
import com.pulumi.awsnative.ecs.outputs.TaskDefinitionRuntimePlatform;
import com.pulumi.awsnative.ecs.outputs.TaskDefinitionTag;
import com.pulumi.awsnative.ecs.outputs.TaskDefinitionVolume;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource Schema describing various properties for ECS TaskDefinition
 * 
 * ## Example Usage
 * 
 */
@ResourceType(type="aws-native:ecs:TaskDefinition")
public class TaskDefinition extends com.pulumi.resources.CustomResource {
    @Export(name="containerDefinitions", type=List.class, parameters={TaskDefinitionContainerDefinition.class})
    private Output</* @Nullable */ List<TaskDefinitionContainerDefinition>> containerDefinitions;

    public Output<Optional<List<TaskDefinitionContainerDefinition>>> containerDefinitions() {
        return Codegen.optional(this.containerDefinitions);
    }
    @Export(name="cpu", type=String.class, parameters={})
    private Output</* @Nullable */ String> cpu;

    public Output<Optional<String>> cpu() {
        return Codegen.optional(this.cpu);
    }
    @Export(name="ephemeralStorage", type=TaskDefinitionEphemeralStorage.class, parameters={})
    private Output</* @Nullable */ TaskDefinitionEphemeralStorage> ephemeralStorage;

    public Output<Optional<TaskDefinitionEphemeralStorage>> ephemeralStorage() {
        return Codegen.optional(this.ephemeralStorage);
    }
    @Export(name="executionRoleArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> executionRoleArn;

    public Output<Optional<String>> executionRoleArn() {
        return Codegen.optional(this.executionRoleArn);
    }
    @Export(name="family", type=String.class, parameters={})
    private Output</* @Nullable */ String> family;

    public Output<Optional<String>> family() {
        return Codegen.optional(this.family);
    }
    @Export(name="inferenceAccelerators", type=List.class, parameters={TaskDefinitionInferenceAccelerator.class})
    private Output</* @Nullable */ List<TaskDefinitionInferenceAccelerator>> inferenceAccelerators;

    public Output<Optional<List<TaskDefinitionInferenceAccelerator>>> inferenceAccelerators() {
        return Codegen.optional(this.inferenceAccelerators);
    }
    @Export(name="ipcMode", type=String.class, parameters={})
    private Output</* @Nullable */ String> ipcMode;

    public Output<Optional<String>> ipcMode() {
        return Codegen.optional(this.ipcMode);
    }
    @Export(name="memory", type=String.class, parameters={})
    private Output</* @Nullable */ String> memory;

    public Output<Optional<String>> memory() {
        return Codegen.optional(this.memory);
    }
    @Export(name="networkMode", type=String.class, parameters={})
    private Output</* @Nullable */ String> networkMode;

    public Output<Optional<String>> networkMode() {
        return Codegen.optional(this.networkMode);
    }
    @Export(name="pidMode", type=String.class, parameters={})
    private Output</* @Nullable */ String> pidMode;

    public Output<Optional<String>> pidMode() {
        return Codegen.optional(this.pidMode);
    }
    @Export(name="placementConstraints", type=List.class, parameters={TaskDefinitionPlacementConstraint.class})
    private Output</* @Nullable */ List<TaskDefinitionPlacementConstraint>> placementConstraints;

    public Output<Optional<List<TaskDefinitionPlacementConstraint>>> placementConstraints() {
        return Codegen.optional(this.placementConstraints);
    }
    @Export(name="proxyConfiguration", type=TaskDefinitionProxyConfiguration.class, parameters={})
    private Output</* @Nullable */ TaskDefinitionProxyConfiguration> proxyConfiguration;

    public Output<Optional<TaskDefinitionProxyConfiguration>> proxyConfiguration() {
        return Codegen.optional(this.proxyConfiguration);
    }
    @Export(name="requiresCompatibilities", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> requiresCompatibilities;

    public Output<Optional<List<String>>> requiresCompatibilities() {
        return Codegen.optional(this.requiresCompatibilities);
    }
    @Export(name="runtimePlatform", type=TaskDefinitionRuntimePlatform.class, parameters={})
    private Output</* @Nullable */ TaskDefinitionRuntimePlatform> runtimePlatform;

    public Output<Optional<TaskDefinitionRuntimePlatform>> runtimePlatform() {
        return Codegen.optional(this.runtimePlatform);
    }
    @Export(name="tags", type=List.class, parameters={TaskDefinitionTag.class})
    private Output</* @Nullable */ List<TaskDefinitionTag>> tags;

    public Output<Optional<List<TaskDefinitionTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The Amazon Resource Name (ARN) of the Amazon ECS task definition
     * 
     */
    @Export(name="taskDefinitionArn", type=String.class, parameters={})
    private Output<String> taskDefinitionArn;

    /**
     * @return The Amazon Resource Name (ARN) of the Amazon ECS task definition
     * 
     */
    public Output<String> taskDefinitionArn() {
        return this.taskDefinitionArn;
    }
    @Export(name="taskRoleArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> taskRoleArn;

    public Output<Optional<String>> taskRoleArn() {
        return Codegen.optional(this.taskRoleArn);
    }
    @Export(name="volumes", type=List.class, parameters={TaskDefinitionVolume.class})
    private Output</* @Nullable */ List<TaskDefinitionVolume>> volumes;

    public Output<Optional<List<TaskDefinitionVolume>>> volumes() {
        return Codegen.optional(this.volumes);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TaskDefinition(String name) {
        this(name, TaskDefinitionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TaskDefinition(String name, @Nullable TaskDefinitionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TaskDefinition(String name, @Nullable TaskDefinitionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:ecs:TaskDefinition", name, args == null ? TaskDefinitionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private TaskDefinition(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:ecs:TaskDefinition", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TaskDefinition get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TaskDefinition(name, id, options);
    }
}
