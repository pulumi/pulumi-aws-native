// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisanalyticsv2.outputs;

import com.pulumi.awsnative.kinesisanalyticsv2.outputs.ApplicationInputLambdaProcessor;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationInputProcessingConfiguration {
    /**
     * @return The InputLambdaProcessor that is used to preprocess the records in the stream before being processed by your application code.
     * 
     */
    private @Nullable ApplicationInputLambdaProcessor inputLambdaProcessor;

    private ApplicationInputProcessingConfiguration() {}
    /**
     * @return The InputLambdaProcessor that is used to preprocess the records in the stream before being processed by your application code.
     * 
     */
    public Optional<ApplicationInputLambdaProcessor> inputLambdaProcessor() {
        return Optional.ofNullable(this.inputLambdaProcessor);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationInputProcessingConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ApplicationInputLambdaProcessor inputLambdaProcessor;
        public Builder() {}
        public Builder(ApplicationInputProcessingConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.inputLambdaProcessor = defaults.inputLambdaProcessor;
        }

        @CustomType.Setter
        public Builder inputLambdaProcessor(@Nullable ApplicationInputLambdaProcessor inputLambdaProcessor) {
            this.inputLambdaProcessor = inputLambdaProcessor;
            return this;
        }
        public ApplicationInputProcessingConfiguration build() {
            final var o = new ApplicationInputProcessingConfiguration();
            o.inputLambdaProcessor = inputLambdaProcessor;
            return o;
        }
    }
}
