// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.backup.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupPlanLifecycleResourceTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackupPlanLifecycleResourceTypeArgs Empty = new BackupPlanLifecycleResourceTypeArgs();

    @Import(name="deleteAfterDays")
    private @Nullable Output<Double> deleteAfterDays;

    public Optional<Output<Double>> deleteAfterDays() {
        return Optional.ofNullable(this.deleteAfterDays);
    }

    @Import(name="moveToColdStorageAfterDays")
    private @Nullable Output<Double> moveToColdStorageAfterDays;

    public Optional<Output<Double>> moveToColdStorageAfterDays() {
        return Optional.ofNullable(this.moveToColdStorageAfterDays);
    }

    private BackupPlanLifecycleResourceTypeArgs() {}

    private BackupPlanLifecycleResourceTypeArgs(BackupPlanLifecycleResourceTypeArgs $) {
        this.deleteAfterDays = $.deleteAfterDays;
        this.moveToColdStorageAfterDays = $.moveToColdStorageAfterDays;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupPlanLifecycleResourceTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupPlanLifecycleResourceTypeArgs $;

        public Builder() {
            $ = new BackupPlanLifecycleResourceTypeArgs();
        }

        public Builder(BackupPlanLifecycleResourceTypeArgs defaults) {
            $ = new BackupPlanLifecycleResourceTypeArgs(Objects.requireNonNull(defaults));
        }

        public Builder deleteAfterDays(@Nullable Output<Double> deleteAfterDays) {
            $.deleteAfterDays = deleteAfterDays;
            return this;
        }

        public Builder deleteAfterDays(Double deleteAfterDays) {
            return deleteAfterDays(Output.of(deleteAfterDays));
        }

        public Builder moveToColdStorageAfterDays(@Nullable Output<Double> moveToColdStorageAfterDays) {
            $.moveToColdStorageAfterDays = moveToColdStorageAfterDays;
            return this;
        }

        public Builder moveToColdStorageAfterDays(Double moveToColdStorageAfterDays) {
            return moveToColdStorageAfterDays(Output.of(moveToColdStorageAfterDays));
        }

        public BackupPlanLifecycleResourceTypeArgs build() {
            return $;
        }
    }

}
