// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.backup.inputs;

import com.pulumi.awsnative.backup.inputs.BackupSelectionConditionResourceTypeArgs;
import com.pulumi.awsnative.backup.inputs.BackupSelectionResourceTypeConditionsPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupSelectionResourceTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackupSelectionResourceTypeArgs Empty = new BackupSelectionResourceTypeArgs();

    @Import(name="conditions")
    private @Nullable Output<BackupSelectionResourceTypeConditionsPropertiesArgs> conditions;

    public Optional<Output<BackupSelectionResourceTypeConditionsPropertiesArgs>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    @Import(name="iamRoleArn", required=true)
    private Output<String> iamRoleArn;

    public Output<String> iamRoleArn() {
        return this.iamRoleArn;
    }

    @Import(name="listOfTags")
    private @Nullable Output<List<BackupSelectionConditionResourceTypeArgs>> listOfTags;

    public Optional<Output<List<BackupSelectionConditionResourceTypeArgs>>> listOfTags() {
        return Optional.ofNullable(this.listOfTags);
    }

    @Import(name="notResources")
    private @Nullable Output<List<String>> notResources;

    public Optional<Output<List<String>>> notResources() {
        return Optional.ofNullable(this.notResources);
    }

    @Import(name="resources")
    private @Nullable Output<List<String>> resources;

    public Optional<Output<List<String>>> resources() {
        return Optional.ofNullable(this.resources);
    }

    @Import(name="selectionName", required=true)
    private Output<String> selectionName;

    public Output<String> selectionName() {
        return this.selectionName;
    }

    private BackupSelectionResourceTypeArgs() {}

    private BackupSelectionResourceTypeArgs(BackupSelectionResourceTypeArgs $) {
        this.conditions = $.conditions;
        this.iamRoleArn = $.iamRoleArn;
        this.listOfTags = $.listOfTags;
        this.notResources = $.notResources;
        this.resources = $.resources;
        this.selectionName = $.selectionName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupSelectionResourceTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupSelectionResourceTypeArgs $;

        public Builder() {
            $ = new BackupSelectionResourceTypeArgs();
        }

        public Builder(BackupSelectionResourceTypeArgs defaults) {
            $ = new BackupSelectionResourceTypeArgs(Objects.requireNonNull(defaults));
        }

        public Builder conditions(@Nullable Output<BackupSelectionResourceTypeConditionsPropertiesArgs> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(BackupSelectionResourceTypeConditionsPropertiesArgs conditions) {
            return conditions(Output.of(conditions));
        }

        public Builder iamRoleArn(Output<String> iamRoleArn) {
            $.iamRoleArn = iamRoleArn;
            return this;
        }

        public Builder iamRoleArn(String iamRoleArn) {
            return iamRoleArn(Output.of(iamRoleArn));
        }

        public Builder listOfTags(@Nullable Output<List<BackupSelectionConditionResourceTypeArgs>> listOfTags) {
            $.listOfTags = listOfTags;
            return this;
        }

        public Builder listOfTags(List<BackupSelectionConditionResourceTypeArgs> listOfTags) {
            return listOfTags(Output.of(listOfTags));
        }

        public Builder listOfTags(BackupSelectionConditionResourceTypeArgs... listOfTags) {
            return listOfTags(List.of(listOfTags));
        }

        public Builder notResources(@Nullable Output<List<String>> notResources) {
            $.notResources = notResources;
            return this;
        }

        public Builder notResources(List<String> notResources) {
            return notResources(Output.of(notResources));
        }

        public Builder notResources(String... notResources) {
            return notResources(List.of(notResources));
        }

        public Builder resources(@Nullable Output<List<String>> resources) {
            $.resources = resources;
            return this;
        }

        public Builder resources(List<String> resources) {
            return resources(Output.of(resources));
        }

        public Builder resources(String... resources) {
            return resources(List.of(resources));
        }

        public Builder selectionName(Output<String> selectionName) {
            $.selectionName = selectionName;
            return this;
        }

        public Builder selectionName(String selectionName) {
            return selectionName(Output.of(selectionName));
        }

        public BackupSelectionResourceTypeArgs build() {
            $.iamRoleArn = Objects.requireNonNull($.iamRoleArn, "expected parameter 'iamRoleArn' to be non-null");
            $.selectionName = Objects.requireNonNull($.selectionName, "expected parameter 'selectionName' to be non-null");
            return $;
        }
    }

}
