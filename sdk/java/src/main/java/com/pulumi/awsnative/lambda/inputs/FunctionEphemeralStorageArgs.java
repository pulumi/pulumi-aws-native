// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lambda.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


/**
 * A function&#39;s ephemeral storage settings.
 * 
 */
public final class FunctionEphemeralStorageArgs extends com.pulumi.resources.ResourceArgs {

    public static final FunctionEphemeralStorageArgs Empty = new FunctionEphemeralStorageArgs();

    /**
     * The amount of ephemeral storage that your function has access to.
     * 
     */
    @Import(name="size", required=true)
    private Output<Integer> size;

    /**
     * @return The amount of ephemeral storage that your function has access to.
     * 
     */
    public Output<Integer> size() {
        return this.size;
    }

    private FunctionEphemeralStorageArgs() {}

    private FunctionEphemeralStorageArgs(FunctionEphemeralStorageArgs $) {
        this.size = $.size;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FunctionEphemeralStorageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FunctionEphemeralStorageArgs $;

        public Builder() {
            $ = new FunctionEphemeralStorageArgs();
        }

        public Builder(FunctionEphemeralStorageArgs defaults) {
            $ = new FunctionEphemeralStorageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param size The amount of ephemeral storage that your function has access to.
         * 
         * @return builder
         * 
         */
        public Builder size(Output<Integer> size) {
            $.size = size;
            return this;
        }

        /**
         * @param size The amount of ephemeral storage that your function has access to.
         * 
         * @return builder
         * 
         */
        public Builder size(Integer size) {
            return size(Output.of(size));
        }

        public FunctionEphemeralStorageArgs build() {
            $.size = Objects.requireNonNull($.size, "expected parameter 'size' to be non-null");
            return $;
        }
    }

}
