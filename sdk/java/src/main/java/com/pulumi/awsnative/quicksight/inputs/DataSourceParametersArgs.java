// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight.inputs;

import com.pulumi.awsnative.quicksight.inputs.DataSourceAmazonElasticsearchParametersArgs;
import com.pulumi.awsnative.quicksight.inputs.DataSourceAmazonOpenSearchParametersArgs;
import com.pulumi.awsnative.quicksight.inputs.DataSourceAthenaParametersArgs;
import com.pulumi.awsnative.quicksight.inputs.DataSourceAuroraParametersArgs;
import com.pulumi.awsnative.quicksight.inputs.DataSourceAuroraPostgreSqlParametersArgs;
import com.pulumi.awsnative.quicksight.inputs.DataSourceMariaDbParametersArgs;
import com.pulumi.awsnative.quicksight.inputs.DataSourceMySqlParametersArgs;
import com.pulumi.awsnative.quicksight.inputs.DataSourceOracleParametersArgs;
import com.pulumi.awsnative.quicksight.inputs.DataSourcePostgreSqlParametersArgs;
import com.pulumi.awsnative.quicksight.inputs.DataSourcePrestoParametersArgs;
import com.pulumi.awsnative.quicksight.inputs.DataSourceRdsParametersArgs;
import com.pulumi.awsnative.quicksight.inputs.DataSourceRedshiftParametersArgs;
import com.pulumi.awsnative.quicksight.inputs.DataSourceS3ParametersArgs;
import com.pulumi.awsnative.quicksight.inputs.DataSourceSnowflakeParametersArgs;
import com.pulumi.awsnative.quicksight.inputs.DataSourceSparkParametersArgs;
import com.pulumi.awsnative.quicksight.inputs.DataSourceSqlServerParametersArgs;
import com.pulumi.awsnative.quicksight.inputs.DataSourceTeradataParametersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * &lt;p&gt;The parameters that Amazon QuickSight uses to connect to your underlying data source.
 *             This is a variant type structure. For this structure to be valid, only one of the
 *             attributes can be non-null.&lt;/p&gt;
 * 
 */
public final class DataSourceParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceParametersArgs Empty = new DataSourceParametersArgs();

    @Import(name="amazonElasticsearchParameters")
    private @Nullable Output<DataSourceAmazonElasticsearchParametersArgs> amazonElasticsearchParameters;

    public Optional<Output<DataSourceAmazonElasticsearchParametersArgs>> amazonElasticsearchParameters() {
        return Optional.ofNullable(this.amazonElasticsearchParameters);
    }

    @Import(name="amazonOpenSearchParameters")
    private @Nullable Output<DataSourceAmazonOpenSearchParametersArgs> amazonOpenSearchParameters;

    public Optional<Output<DataSourceAmazonOpenSearchParametersArgs>> amazonOpenSearchParameters() {
        return Optional.ofNullable(this.amazonOpenSearchParameters);
    }

    @Import(name="athenaParameters")
    private @Nullable Output<DataSourceAthenaParametersArgs> athenaParameters;

    public Optional<Output<DataSourceAthenaParametersArgs>> athenaParameters() {
        return Optional.ofNullable(this.athenaParameters);
    }

    @Import(name="auroraParameters")
    private @Nullable Output<DataSourceAuroraParametersArgs> auroraParameters;

    public Optional<Output<DataSourceAuroraParametersArgs>> auroraParameters() {
        return Optional.ofNullable(this.auroraParameters);
    }

    @Import(name="auroraPostgreSqlParameters")
    private @Nullable Output<DataSourceAuroraPostgreSqlParametersArgs> auroraPostgreSqlParameters;

    public Optional<Output<DataSourceAuroraPostgreSqlParametersArgs>> auroraPostgreSqlParameters() {
        return Optional.ofNullable(this.auroraPostgreSqlParameters);
    }

    @Import(name="mariaDbParameters")
    private @Nullable Output<DataSourceMariaDbParametersArgs> mariaDbParameters;

    public Optional<Output<DataSourceMariaDbParametersArgs>> mariaDbParameters() {
        return Optional.ofNullable(this.mariaDbParameters);
    }

    @Import(name="mySqlParameters")
    private @Nullable Output<DataSourceMySqlParametersArgs> mySqlParameters;

    public Optional<Output<DataSourceMySqlParametersArgs>> mySqlParameters() {
        return Optional.ofNullable(this.mySqlParameters);
    }

    @Import(name="oracleParameters")
    private @Nullable Output<DataSourceOracleParametersArgs> oracleParameters;

    public Optional<Output<DataSourceOracleParametersArgs>> oracleParameters() {
        return Optional.ofNullable(this.oracleParameters);
    }

    @Import(name="postgreSqlParameters")
    private @Nullable Output<DataSourcePostgreSqlParametersArgs> postgreSqlParameters;

    public Optional<Output<DataSourcePostgreSqlParametersArgs>> postgreSqlParameters() {
        return Optional.ofNullable(this.postgreSqlParameters);
    }

    @Import(name="prestoParameters")
    private @Nullable Output<DataSourcePrestoParametersArgs> prestoParameters;

    public Optional<Output<DataSourcePrestoParametersArgs>> prestoParameters() {
        return Optional.ofNullable(this.prestoParameters);
    }

    @Import(name="rdsParameters")
    private @Nullable Output<DataSourceRdsParametersArgs> rdsParameters;

    public Optional<Output<DataSourceRdsParametersArgs>> rdsParameters() {
        return Optional.ofNullable(this.rdsParameters);
    }

    @Import(name="redshiftParameters")
    private @Nullable Output<DataSourceRedshiftParametersArgs> redshiftParameters;

    public Optional<Output<DataSourceRedshiftParametersArgs>> redshiftParameters() {
        return Optional.ofNullable(this.redshiftParameters);
    }

    @Import(name="s3Parameters")
    private @Nullable Output<DataSourceS3ParametersArgs> s3Parameters;

    public Optional<Output<DataSourceS3ParametersArgs>> s3Parameters() {
        return Optional.ofNullable(this.s3Parameters);
    }

    @Import(name="snowflakeParameters")
    private @Nullable Output<DataSourceSnowflakeParametersArgs> snowflakeParameters;

    public Optional<Output<DataSourceSnowflakeParametersArgs>> snowflakeParameters() {
        return Optional.ofNullable(this.snowflakeParameters);
    }

    @Import(name="sparkParameters")
    private @Nullable Output<DataSourceSparkParametersArgs> sparkParameters;

    public Optional<Output<DataSourceSparkParametersArgs>> sparkParameters() {
        return Optional.ofNullable(this.sparkParameters);
    }

    @Import(name="sqlServerParameters")
    private @Nullable Output<DataSourceSqlServerParametersArgs> sqlServerParameters;

    public Optional<Output<DataSourceSqlServerParametersArgs>> sqlServerParameters() {
        return Optional.ofNullable(this.sqlServerParameters);
    }

    @Import(name="teradataParameters")
    private @Nullable Output<DataSourceTeradataParametersArgs> teradataParameters;

    public Optional<Output<DataSourceTeradataParametersArgs>> teradataParameters() {
        return Optional.ofNullable(this.teradataParameters);
    }

    private DataSourceParametersArgs() {}

    private DataSourceParametersArgs(DataSourceParametersArgs $) {
        this.amazonElasticsearchParameters = $.amazonElasticsearchParameters;
        this.amazonOpenSearchParameters = $.amazonOpenSearchParameters;
        this.athenaParameters = $.athenaParameters;
        this.auroraParameters = $.auroraParameters;
        this.auroraPostgreSqlParameters = $.auroraPostgreSqlParameters;
        this.mariaDbParameters = $.mariaDbParameters;
        this.mySqlParameters = $.mySqlParameters;
        this.oracleParameters = $.oracleParameters;
        this.postgreSqlParameters = $.postgreSqlParameters;
        this.prestoParameters = $.prestoParameters;
        this.rdsParameters = $.rdsParameters;
        this.redshiftParameters = $.redshiftParameters;
        this.s3Parameters = $.s3Parameters;
        this.snowflakeParameters = $.snowflakeParameters;
        this.sparkParameters = $.sparkParameters;
        this.sqlServerParameters = $.sqlServerParameters;
        this.teradataParameters = $.teradataParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceParametersArgs $;

        public Builder() {
            $ = new DataSourceParametersArgs();
        }

        public Builder(DataSourceParametersArgs defaults) {
            $ = new DataSourceParametersArgs(Objects.requireNonNull(defaults));
        }

        public Builder amazonElasticsearchParameters(@Nullable Output<DataSourceAmazonElasticsearchParametersArgs> amazonElasticsearchParameters) {
            $.amazonElasticsearchParameters = amazonElasticsearchParameters;
            return this;
        }

        public Builder amazonElasticsearchParameters(DataSourceAmazonElasticsearchParametersArgs amazonElasticsearchParameters) {
            return amazonElasticsearchParameters(Output.of(amazonElasticsearchParameters));
        }

        public Builder amazonOpenSearchParameters(@Nullable Output<DataSourceAmazonOpenSearchParametersArgs> amazonOpenSearchParameters) {
            $.amazonOpenSearchParameters = amazonOpenSearchParameters;
            return this;
        }

        public Builder amazonOpenSearchParameters(DataSourceAmazonOpenSearchParametersArgs amazonOpenSearchParameters) {
            return amazonOpenSearchParameters(Output.of(amazonOpenSearchParameters));
        }

        public Builder athenaParameters(@Nullable Output<DataSourceAthenaParametersArgs> athenaParameters) {
            $.athenaParameters = athenaParameters;
            return this;
        }

        public Builder athenaParameters(DataSourceAthenaParametersArgs athenaParameters) {
            return athenaParameters(Output.of(athenaParameters));
        }

        public Builder auroraParameters(@Nullable Output<DataSourceAuroraParametersArgs> auroraParameters) {
            $.auroraParameters = auroraParameters;
            return this;
        }

        public Builder auroraParameters(DataSourceAuroraParametersArgs auroraParameters) {
            return auroraParameters(Output.of(auroraParameters));
        }

        public Builder auroraPostgreSqlParameters(@Nullable Output<DataSourceAuroraPostgreSqlParametersArgs> auroraPostgreSqlParameters) {
            $.auroraPostgreSqlParameters = auroraPostgreSqlParameters;
            return this;
        }

        public Builder auroraPostgreSqlParameters(DataSourceAuroraPostgreSqlParametersArgs auroraPostgreSqlParameters) {
            return auroraPostgreSqlParameters(Output.of(auroraPostgreSqlParameters));
        }

        public Builder mariaDbParameters(@Nullable Output<DataSourceMariaDbParametersArgs> mariaDbParameters) {
            $.mariaDbParameters = mariaDbParameters;
            return this;
        }

        public Builder mariaDbParameters(DataSourceMariaDbParametersArgs mariaDbParameters) {
            return mariaDbParameters(Output.of(mariaDbParameters));
        }

        public Builder mySqlParameters(@Nullable Output<DataSourceMySqlParametersArgs> mySqlParameters) {
            $.mySqlParameters = mySqlParameters;
            return this;
        }

        public Builder mySqlParameters(DataSourceMySqlParametersArgs mySqlParameters) {
            return mySqlParameters(Output.of(mySqlParameters));
        }

        public Builder oracleParameters(@Nullable Output<DataSourceOracleParametersArgs> oracleParameters) {
            $.oracleParameters = oracleParameters;
            return this;
        }

        public Builder oracleParameters(DataSourceOracleParametersArgs oracleParameters) {
            return oracleParameters(Output.of(oracleParameters));
        }

        public Builder postgreSqlParameters(@Nullable Output<DataSourcePostgreSqlParametersArgs> postgreSqlParameters) {
            $.postgreSqlParameters = postgreSqlParameters;
            return this;
        }

        public Builder postgreSqlParameters(DataSourcePostgreSqlParametersArgs postgreSqlParameters) {
            return postgreSqlParameters(Output.of(postgreSqlParameters));
        }

        public Builder prestoParameters(@Nullable Output<DataSourcePrestoParametersArgs> prestoParameters) {
            $.prestoParameters = prestoParameters;
            return this;
        }

        public Builder prestoParameters(DataSourcePrestoParametersArgs prestoParameters) {
            return prestoParameters(Output.of(prestoParameters));
        }

        public Builder rdsParameters(@Nullable Output<DataSourceRdsParametersArgs> rdsParameters) {
            $.rdsParameters = rdsParameters;
            return this;
        }

        public Builder rdsParameters(DataSourceRdsParametersArgs rdsParameters) {
            return rdsParameters(Output.of(rdsParameters));
        }

        public Builder redshiftParameters(@Nullable Output<DataSourceRedshiftParametersArgs> redshiftParameters) {
            $.redshiftParameters = redshiftParameters;
            return this;
        }

        public Builder redshiftParameters(DataSourceRedshiftParametersArgs redshiftParameters) {
            return redshiftParameters(Output.of(redshiftParameters));
        }

        public Builder s3Parameters(@Nullable Output<DataSourceS3ParametersArgs> s3Parameters) {
            $.s3Parameters = s3Parameters;
            return this;
        }

        public Builder s3Parameters(DataSourceS3ParametersArgs s3Parameters) {
            return s3Parameters(Output.of(s3Parameters));
        }

        public Builder snowflakeParameters(@Nullable Output<DataSourceSnowflakeParametersArgs> snowflakeParameters) {
            $.snowflakeParameters = snowflakeParameters;
            return this;
        }

        public Builder snowflakeParameters(DataSourceSnowflakeParametersArgs snowflakeParameters) {
            return snowflakeParameters(Output.of(snowflakeParameters));
        }

        public Builder sparkParameters(@Nullable Output<DataSourceSparkParametersArgs> sparkParameters) {
            $.sparkParameters = sparkParameters;
            return this;
        }

        public Builder sparkParameters(DataSourceSparkParametersArgs sparkParameters) {
            return sparkParameters(Output.of(sparkParameters));
        }

        public Builder sqlServerParameters(@Nullable Output<DataSourceSqlServerParametersArgs> sqlServerParameters) {
            $.sqlServerParameters = sqlServerParameters;
            return this;
        }

        public Builder sqlServerParameters(DataSourceSqlServerParametersArgs sqlServerParameters) {
            return sqlServerParameters(Output.of(sqlServerParameters));
        }

        public Builder teradataParameters(@Nullable Output<DataSourceTeradataParametersArgs> teradataParameters) {
            $.teradataParameters = teradataParameters;
            return this;
        }

        public Builder teradataParameters(DataSourceTeradataParametersArgs teradataParameters) {
            return teradataParameters(Output.of(teradataParameters));
        }

        public DataSourceParametersArgs build() {
            return $;
        }
    }

}
