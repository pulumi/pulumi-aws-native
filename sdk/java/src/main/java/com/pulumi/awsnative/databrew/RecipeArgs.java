// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.databrew;

import com.pulumi.awsnative.databrew.inputs.RecipeStepArgs;
import com.pulumi.awsnative.databrew.inputs.RecipeTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RecipeArgs extends com.pulumi.resources.ResourceArgs {

    public static final RecipeArgs Empty = new RecipeArgs();

    /**
     * Description of the recipe
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the recipe
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Recipe name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Recipe name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="steps", required=true)
    private Output<List<RecipeStepArgs>> steps;

    public Output<List<RecipeStepArgs>> steps() {
        return this.steps;
    }

    @Import(name="tags")
    private @Nullable Output<List<RecipeTagArgs>> tags;

    public Optional<Output<List<RecipeTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private RecipeArgs() {}

    private RecipeArgs(RecipeArgs $) {
        this.description = $.description;
        this.name = $.name;
        this.steps = $.steps;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecipeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecipeArgs $;

        public Builder() {
            $ = new RecipeArgs();
        }

        public Builder(RecipeArgs defaults) {
            $ = new RecipeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of the recipe
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the recipe
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Recipe name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Recipe name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder steps(Output<List<RecipeStepArgs>> steps) {
            $.steps = steps;
            return this;
        }

        public Builder steps(List<RecipeStepArgs> steps) {
            return steps(Output.of(steps));
        }

        public Builder steps(RecipeStepArgs... steps) {
            return steps(List.of(steps));
        }

        public Builder tags(@Nullable Output<List<RecipeTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<RecipeTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(RecipeTagArgs... tags) {
            return tags(List.of(tags));
        }

        public RecipeArgs build() {
            $.steps = Objects.requireNonNull($.steps, "expected parameter 'steps' to be non-null");
            return $;
        }
    }

}
