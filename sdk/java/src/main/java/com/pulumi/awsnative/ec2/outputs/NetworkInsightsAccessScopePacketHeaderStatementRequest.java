// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2.outputs;

import com.pulumi.awsnative.ec2.enums.NetworkInsightsAccessScopeProtocol;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class NetworkInsightsAccessScopePacketHeaderStatementRequest {
    private @Nullable List<String> destinationAddresses;
    private @Nullable List<String> destinationPorts;
    private @Nullable List<String> destinationPrefixLists;
    private @Nullable List<NetworkInsightsAccessScopeProtocol> protocols;
    private @Nullable List<String> sourceAddresses;
    private @Nullable List<String> sourcePorts;
    private @Nullable List<String> sourcePrefixLists;

    private NetworkInsightsAccessScopePacketHeaderStatementRequest() {}
    public List<String> destinationAddresses() {
        return this.destinationAddresses == null ? List.of() : this.destinationAddresses;
    }
    public List<String> destinationPorts() {
        return this.destinationPorts == null ? List.of() : this.destinationPorts;
    }
    public List<String> destinationPrefixLists() {
        return this.destinationPrefixLists == null ? List.of() : this.destinationPrefixLists;
    }
    public List<NetworkInsightsAccessScopeProtocol> protocols() {
        return this.protocols == null ? List.of() : this.protocols;
    }
    public List<String> sourceAddresses() {
        return this.sourceAddresses == null ? List.of() : this.sourceAddresses;
    }
    public List<String> sourcePorts() {
        return this.sourcePorts == null ? List.of() : this.sourcePorts;
    }
    public List<String> sourcePrefixLists() {
        return this.sourcePrefixLists == null ? List.of() : this.sourcePrefixLists;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkInsightsAccessScopePacketHeaderStatementRequest defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> destinationAddresses;
        private @Nullable List<String> destinationPorts;
        private @Nullable List<String> destinationPrefixLists;
        private @Nullable List<NetworkInsightsAccessScopeProtocol> protocols;
        private @Nullable List<String> sourceAddresses;
        private @Nullable List<String> sourcePorts;
        private @Nullable List<String> sourcePrefixLists;
        public Builder() {}
        public Builder(NetworkInsightsAccessScopePacketHeaderStatementRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinationAddresses = defaults.destinationAddresses;
    	      this.destinationPorts = defaults.destinationPorts;
    	      this.destinationPrefixLists = defaults.destinationPrefixLists;
    	      this.protocols = defaults.protocols;
    	      this.sourceAddresses = defaults.sourceAddresses;
    	      this.sourcePorts = defaults.sourcePorts;
    	      this.sourcePrefixLists = defaults.sourcePrefixLists;
        }

        @CustomType.Setter
        public Builder destinationAddresses(@Nullable List<String> destinationAddresses) {
            this.destinationAddresses = destinationAddresses;
            return this;
        }
        public Builder destinationAddresses(String... destinationAddresses) {
            return destinationAddresses(List.of(destinationAddresses));
        }
        @CustomType.Setter
        public Builder destinationPorts(@Nullable List<String> destinationPorts) {
            this.destinationPorts = destinationPorts;
            return this;
        }
        public Builder destinationPorts(String... destinationPorts) {
            return destinationPorts(List.of(destinationPorts));
        }
        @CustomType.Setter
        public Builder destinationPrefixLists(@Nullable List<String> destinationPrefixLists) {
            this.destinationPrefixLists = destinationPrefixLists;
            return this;
        }
        public Builder destinationPrefixLists(String... destinationPrefixLists) {
            return destinationPrefixLists(List.of(destinationPrefixLists));
        }
        @CustomType.Setter
        public Builder protocols(@Nullable List<NetworkInsightsAccessScopeProtocol> protocols) {
            this.protocols = protocols;
            return this;
        }
        public Builder protocols(NetworkInsightsAccessScopeProtocol... protocols) {
            return protocols(List.of(protocols));
        }
        @CustomType.Setter
        public Builder sourceAddresses(@Nullable List<String> sourceAddresses) {
            this.sourceAddresses = sourceAddresses;
            return this;
        }
        public Builder sourceAddresses(String... sourceAddresses) {
            return sourceAddresses(List.of(sourceAddresses));
        }
        @CustomType.Setter
        public Builder sourcePorts(@Nullable List<String> sourcePorts) {
            this.sourcePorts = sourcePorts;
            return this;
        }
        public Builder sourcePorts(String... sourcePorts) {
            return sourcePorts(List.of(sourcePorts));
        }
        @CustomType.Setter
        public Builder sourcePrefixLists(@Nullable List<String> sourcePrefixLists) {
            this.sourcePrefixLists = sourcePrefixLists;
            return this;
        }
        public Builder sourcePrefixLists(String... sourcePrefixLists) {
            return sourcePrefixLists(List.of(sourcePrefixLists));
        }
        public NetworkInsightsAccessScopePacketHeaderStatementRequest build() {
            final var o = new NetworkInsightsAccessScopePacketHeaderStatementRequest();
            o.destinationAddresses = destinationAddresses;
            o.destinationPorts = destinationPorts;
            o.destinationPrefixLists = destinationPrefixLists;
            o.protocols = protocols;
            o.sourceAddresses = sourceAddresses;
            o.sourcePorts = sourcePorts;
            o.sourcePrefixLists = sourcePrefixLists;
            return o;
        }
    }
}
