// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.mediatailor.inputs;

import com.pulumi.awsnative.mediatailor.inputs.PlaybackConfigurationAdMarkerPassthroughArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.
 * 
 */
public final class PlaybackConfigurationManifestProcessingRulesArgs extends com.pulumi.resources.ResourceArgs {

    public static final PlaybackConfigurationManifestProcessingRulesArgs Empty = new PlaybackConfigurationManifestProcessingRulesArgs();

    /**
     * For HLS, when set to true, MediaTailor passes through EXT-X-CUE-IN, EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin manifest to the MediaTailor personalized manifest. No logic is applied to these ad markers. For example, if EXT-X-CUE-OUT has a value of 60, but no ads are filled for that ad break, MediaTailor will not set the value to 0.
     * 
     */
    @Import(name="adMarkerPassthrough")
    private @Nullable Output<PlaybackConfigurationAdMarkerPassthroughArgs> adMarkerPassthrough;

    /**
     * @return For HLS, when set to true, MediaTailor passes through EXT-X-CUE-IN, EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin manifest to the MediaTailor personalized manifest. No logic is applied to these ad markers. For example, if EXT-X-CUE-OUT has a value of 60, but no ads are filled for that ad break, MediaTailor will not set the value to 0.
     * 
     */
    public Optional<Output<PlaybackConfigurationAdMarkerPassthroughArgs>> adMarkerPassthrough() {
        return Optional.ofNullable(this.adMarkerPassthrough);
    }

    private PlaybackConfigurationManifestProcessingRulesArgs() {}

    private PlaybackConfigurationManifestProcessingRulesArgs(PlaybackConfigurationManifestProcessingRulesArgs $) {
        this.adMarkerPassthrough = $.adMarkerPassthrough;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PlaybackConfigurationManifestProcessingRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PlaybackConfigurationManifestProcessingRulesArgs $;

        public Builder() {
            $ = new PlaybackConfigurationManifestProcessingRulesArgs();
        }

        public Builder(PlaybackConfigurationManifestProcessingRulesArgs defaults) {
            $ = new PlaybackConfigurationManifestProcessingRulesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adMarkerPassthrough For HLS, when set to true, MediaTailor passes through EXT-X-CUE-IN, EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin manifest to the MediaTailor personalized manifest. No logic is applied to these ad markers. For example, if EXT-X-CUE-OUT has a value of 60, but no ads are filled for that ad break, MediaTailor will not set the value to 0.
         * 
         * @return builder
         * 
         */
        public Builder adMarkerPassthrough(@Nullable Output<PlaybackConfigurationAdMarkerPassthroughArgs> adMarkerPassthrough) {
            $.adMarkerPassthrough = adMarkerPassthrough;
            return this;
        }

        /**
         * @param adMarkerPassthrough For HLS, when set to true, MediaTailor passes through EXT-X-CUE-IN, EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin manifest to the MediaTailor personalized manifest. No logic is applied to these ad markers. For example, if EXT-X-CUE-OUT has a value of 60, but no ads are filled for that ad break, MediaTailor will not set the value to 0.
         * 
         * @return builder
         * 
         */
        public Builder adMarkerPassthrough(PlaybackConfigurationAdMarkerPassthroughArgs adMarkerPassthrough) {
            return adMarkerPassthrough(Output.of(adMarkerPassthrough));
        }

        public PlaybackConfigurationManifestProcessingRulesArgs build() {
            return $;
        }
    }

}
