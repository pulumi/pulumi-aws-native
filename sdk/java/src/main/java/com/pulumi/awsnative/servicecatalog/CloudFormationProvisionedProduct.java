// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.servicecatalog;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.servicecatalog.CloudFormationProvisionedProductArgs;
import com.pulumi.awsnative.servicecatalog.enums.CloudFormationProvisionedProductAcceptLanguage;
import com.pulumi.awsnative.servicecatalog.outputs.CloudFormationProvisionedProductProvisioningParameter;
import com.pulumi.awsnative.servicecatalog.outputs.CloudFormationProvisionedProductProvisioningPreferences;
import com.pulumi.awsnative.servicecatalog.outputs.CloudFormationProvisionedProductTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource Schema for AWS::ServiceCatalog::CloudFormationProvisionedProduct
 * 
 */
@ResourceType(type="aws-native:servicecatalog:CloudFormationProvisionedProduct")
public class CloudFormationProvisionedProduct extends com.pulumi.resources.CustomResource {
    @Export(name="acceptLanguage", type=CloudFormationProvisionedProductAcceptLanguage.class, parameters={})
    private Output</* @Nullable */ CloudFormationProvisionedProductAcceptLanguage> acceptLanguage;

    public Output<Optional<CloudFormationProvisionedProductAcceptLanguage>> acceptLanguage() {
        return Codegen.optional(this.acceptLanguage);
    }
    @Export(name="cloudformationStackArn", type=String.class, parameters={})
    private Output<String> cloudformationStackArn;

    public Output<String> cloudformationStackArn() {
        return this.cloudformationStackArn;
    }
    @Export(name="notificationArns", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> notificationArns;

    public Output<Optional<List<String>>> notificationArns() {
        return Codegen.optional(this.notificationArns);
    }
    /**
     * List of key-value pair outputs.
     * 
     */
    @Export(name="outputs", type=Object.class, parameters={})
    private Output<Object> outputs;

    /**
     * @return List of key-value pair outputs.
     * 
     */
    public Output<Object> outputs() {
        return this.outputs;
    }
    @Export(name="pathId", type=String.class, parameters={})
    private Output</* @Nullable */ String> pathId;

    public Output<Optional<String>> pathId() {
        return Codegen.optional(this.pathId);
    }
    @Export(name="pathName", type=String.class, parameters={})
    private Output</* @Nullable */ String> pathName;

    public Output<Optional<String>> pathName() {
        return Codegen.optional(this.pathName);
    }
    @Export(name="productId", type=String.class, parameters={})
    private Output</* @Nullable */ String> productId;

    public Output<Optional<String>> productId() {
        return Codegen.optional(this.productId);
    }
    @Export(name="productName", type=String.class, parameters={})
    private Output</* @Nullable */ String> productName;

    public Output<Optional<String>> productName() {
        return Codegen.optional(this.productName);
    }
    @Export(name="provisionedProductId", type=String.class, parameters={})
    private Output<String> provisionedProductId;

    public Output<String> provisionedProductId() {
        return this.provisionedProductId;
    }
    @Export(name="provisionedProductName", type=String.class, parameters={})
    private Output</* @Nullable */ String> provisionedProductName;

    public Output<Optional<String>> provisionedProductName() {
        return Codegen.optional(this.provisionedProductName);
    }
    @Export(name="provisioningArtifactId", type=String.class, parameters={})
    private Output</* @Nullable */ String> provisioningArtifactId;

    public Output<Optional<String>> provisioningArtifactId() {
        return Codegen.optional(this.provisioningArtifactId);
    }
    @Export(name="provisioningArtifactName", type=String.class, parameters={})
    private Output</* @Nullable */ String> provisioningArtifactName;

    public Output<Optional<String>> provisioningArtifactName() {
        return Codegen.optional(this.provisioningArtifactName);
    }
    @Export(name="provisioningParameters", type=List.class, parameters={CloudFormationProvisionedProductProvisioningParameter.class})
    private Output</* @Nullable */ List<CloudFormationProvisionedProductProvisioningParameter>> provisioningParameters;

    public Output<Optional<List<CloudFormationProvisionedProductProvisioningParameter>>> provisioningParameters() {
        return Codegen.optional(this.provisioningParameters);
    }
    @Export(name="provisioningPreferences", type=CloudFormationProvisionedProductProvisioningPreferences.class, parameters={})
    private Output</* @Nullable */ CloudFormationProvisionedProductProvisioningPreferences> provisioningPreferences;

    public Output<Optional<CloudFormationProvisionedProductProvisioningPreferences>> provisioningPreferences() {
        return Codegen.optional(this.provisioningPreferences);
    }
    @Export(name="recordId", type=String.class, parameters={})
    private Output<String> recordId;

    public Output<String> recordId() {
        return this.recordId;
    }
    @Export(name="tags", type=List.class, parameters={CloudFormationProvisionedProductTag.class})
    private Output</* @Nullable */ List<CloudFormationProvisionedProductTag>> tags;

    public Output<Optional<List<CloudFormationProvisionedProductTag>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CloudFormationProvisionedProduct(String name) {
        this(name, CloudFormationProvisionedProductArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CloudFormationProvisionedProduct(String name, @Nullable CloudFormationProvisionedProductArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CloudFormationProvisionedProduct(String name, @Nullable CloudFormationProvisionedProductArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:servicecatalog:CloudFormationProvisionedProduct", name, args == null ? CloudFormationProvisionedProductArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CloudFormationProvisionedProduct(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:servicecatalog:CloudFormationProvisionedProduct", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CloudFormationProvisionedProduct get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CloudFormationProvisionedProduct(name, id, options);
    }
}
