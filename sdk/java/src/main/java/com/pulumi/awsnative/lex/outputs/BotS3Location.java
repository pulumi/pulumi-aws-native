// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lex.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BotS3Location {
    /**
     * @return An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.
     * 
     */
    private String s3Bucket;
    /**
     * @return The Amazon S3 key of the deployment package.
     * 
     */
    private String s3ObjectKey;
    /**
     * @return For versioned objects, the version of the deployment package object to use. If not specified, the current object version will be used.
     * 
     */
    private @Nullable String s3ObjectVersion;

    private BotS3Location() {}
    /**
     * @return An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.
     * 
     */
    public String s3Bucket() {
        return this.s3Bucket;
    }
    /**
     * @return The Amazon S3 key of the deployment package.
     * 
     */
    public String s3ObjectKey() {
        return this.s3ObjectKey;
    }
    /**
     * @return For versioned objects, the version of the deployment package object to use. If not specified, the current object version will be used.
     * 
     */
    public Optional<String> s3ObjectVersion() {
        return Optional.ofNullable(this.s3ObjectVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BotS3Location defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String s3Bucket;
        private String s3ObjectKey;
        private @Nullable String s3ObjectVersion;
        public Builder() {}
        public Builder(BotS3Location defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.s3Bucket = defaults.s3Bucket;
    	      this.s3ObjectKey = defaults.s3ObjectKey;
    	      this.s3ObjectVersion = defaults.s3ObjectVersion;
        }

        @CustomType.Setter
        public Builder s3Bucket(String s3Bucket) {
            this.s3Bucket = Objects.requireNonNull(s3Bucket);
            return this;
        }
        @CustomType.Setter
        public Builder s3ObjectKey(String s3ObjectKey) {
            this.s3ObjectKey = Objects.requireNonNull(s3ObjectKey);
            return this;
        }
        @CustomType.Setter
        public Builder s3ObjectVersion(@Nullable String s3ObjectVersion) {
            this.s3ObjectVersion = s3ObjectVersion;
            return this;
        }
        public BotS3Location build() {
            final var o = new BotS3Location();
            o.s3Bucket = s3Bucket;
            o.s3ObjectKey = s3ObjectKey;
            o.s3ObjectVersion = s3ObjectVersion;
            return o;
        }
    }
}
