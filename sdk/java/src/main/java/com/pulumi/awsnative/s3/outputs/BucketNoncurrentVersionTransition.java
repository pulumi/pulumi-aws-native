// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.outputs;

import com.pulumi.awsnative.s3.enums.BucketNoncurrentVersionTransitionStorageClass;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketNoncurrentVersionTransition {
    /**
     * @return Specified the number of newer noncurrent and current versions that must exists before performing the associated action
     * 
     */
    private @Nullable Integer newerNoncurrentVersions;
    /**
     * @return The class of storage used to store the object.
     * 
     */
    private BucketNoncurrentVersionTransitionStorageClass storageClass;
    /**
     * @return Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action.
     * 
     */
    private Integer transitionInDays;

    private BucketNoncurrentVersionTransition() {}
    /**
     * @return Specified the number of newer noncurrent and current versions that must exists before performing the associated action
     * 
     */
    public Optional<Integer> newerNoncurrentVersions() {
        return Optional.ofNullable(this.newerNoncurrentVersions);
    }
    /**
     * @return The class of storage used to store the object.
     * 
     */
    public BucketNoncurrentVersionTransitionStorageClass storageClass() {
        return this.storageClass;
    }
    /**
     * @return Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action.
     * 
     */
    public Integer transitionInDays() {
        return this.transitionInDays;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketNoncurrentVersionTransition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer newerNoncurrentVersions;
        private BucketNoncurrentVersionTransitionStorageClass storageClass;
        private Integer transitionInDays;
        public Builder() {}
        public Builder(BucketNoncurrentVersionTransition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.newerNoncurrentVersions = defaults.newerNoncurrentVersions;
    	      this.storageClass = defaults.storageClass;
    	      this.transitionInDays = defaults.transitionInDays;
        }

        @CustomType.Setter
        public Builder newerNoncurrentVersions(@Nullable Integer newerNoncurrentVersions) {
            this.newerNoncurrentVersions = newerNoncurrentVersions;
            return this;
        }
        @CustomType.Setter
        public Builder storageClass(BucketNoncurrentVersionTransitionStorageClass storageClass) {
            this.storageClass = Objects.requireNonNull(storageClass);
            return this;
        }
        @CustomType.Setter
        public Builder transitionInDays(Integer transitionInDays) {
            this.transitionInDays = Objects.requireNonNull(transitionInDays);
            return this;
        }
        public BucketNoncurrentVersionTransition build() {
            final var o = new BucketNoncurrentVersionTransition();
            o.newerNoncurrentVersions = newerNoncurrentVersions;
            o.storageClass = storageClass;
            o.transitionInDays = transitionInDays;
            return o;
        }
    }
}
