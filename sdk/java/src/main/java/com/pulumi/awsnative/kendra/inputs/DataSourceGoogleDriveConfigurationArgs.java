// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kendra.inputs;

import com.pulumi.awsnative.kendra.inputs.DataSourceToIndexFieldMappingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataSourceGoogleDriveConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceGoogleDriveConfigurationArgs Empty = new DataSourceGoogleDriveConfigurationArgs();

    @Import(name="excludeMimeTypes")
    private @Nullable Output<List<String>> excludeMimeTypes;

    public Optional<Output<List<String>>> excludeMimeTypes() {
        return Optional.ofNullable(this.excludeMimeTypes);
    }

    @Import(name="excludeSharedDrives")
    private @Nullable Output<List<String>> excludeSharedDrives;

    public Optional<Output<List<String>>> excludeSharedDrives() {
        return Optional.ofNullable(this.excludeSharedDrives);
    }

    @Import(name="excludeUserAccounts")
    private @Nullable Output<List<String>> excludeUserAccounts;

    public Optional<Output<List<String>>> excludeUserAccounts() {
        return Optional.ofNullable(this.excludeUserAccounts);
    }

    @Import(name="exclusionPatterns")
    private @Nullable Output<List<String>> exclusionPatterns;

    public Optional<Output<List<String>>> exclusionPatterns() {
        return Optional.ofNullable(this.exclusionPatterns);
    }

    @Import(name="fieldMappings")
    private @Nullable Output<List<DataSourceToIndexFieldMappingArgs>> fieldMappings;

    public Optional<Output<List<DataSourceToIndexFieldMappingArgs>>> fieldMappings() {
        return Optional.ofNullable(this.fieldMappings);
    }

    @Import(name="inclusionPatterns")
    private @Nullable Output<List<String>> inclusionPatterns;

    public Optional<Output<List<String>>> inclusionPatterns() {
        return Optional.ofNullable(this.inclusionPatterns);
    }

    @Import(name="secretArn", required=true)
    private Output<String> secretArn;

    public Output<String> secretArn() {
        return this.secretArn;
    }

    private DataSourceGoogleDriveConfigurationArgs() {}

    private DataSourceGoogleDriveConfigurationArgs(DataSourceGoogleDriveConfigurationArgs $) {
        this.excludeMimeTypes = $.excludeMimeTypes;
        this.excludeSharedDrives = $.excludeSharedDrives;
        this.excludeUserAccounts = $.excludeUserAccounts;
        this.exclusionPatterns = $.exclusionPatterns;
        this.fieldMappings = $.fieldMappings;
        this.inclusionPatterns = $.inclusionPatterns;
        this.secretArn = $.secretArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceGoogleDriveConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceGoogleDriveConfigurationArgs $;

        public Builder() {
            $ = new DataSourceGoogleDriveConfigurationArgs();
        }

        public Builder(DataSourceGoogleDriveConfigurationArgs defaults) {
            $ = new DataSourceGoogleDriveConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder excludeMimeTypes(@Nullable Output<List<String>> excludeMimeTypes) {
            $.excludeMimeTypes = excludeMimeTypes;
            return this;
        }

        public Builder excludeMimeTypes(List<String> excludeMimeTypes) {
            return excludeMimeTypes(Output.of(excludeMimeTypes));
        }

        public Builder excludeMimeTypes(String... excludeMimeTypes) {
            return excludeMimeTypes(List.of(excludeMimeTypes));
        }

        public Builder excludeSharedDrives(@Nullable Output<List<String>> excludeSharedDrives) {
            $.excludeSharedDrives = excludeSharedDrives;
            return this;
        }

        public Builder excludeSharedDrives(List<String> excludeSharedDrives) {
            return excludeSharedDrives(Output.of(excludeSharedDrives));
        }

        public Builder excludeSharedDrives(String... excludeSharedDrives) {
            return excludeSharedDrives(List.of(excludeSharedDrives));
        }

        public Builder excludeUserAccounts(@Nullable Output<List<String>> excludeUserAccounts) {
            $.excludeUserAccounts = excludeUserAccounts;
            return this;
        }

        public Builder excludeUserAccounts(List<String> excludeUserAccounts) {
            return excludeUserAccounts(Output.of(excludeUserAccounts));
        }

        public Builder excludeUserAccounts(String... excludeUserAccounts) {
            return excludeUserAccounts(List.of(excludeUserAccounts));
        }

        public Builder exclusionPatterns(@Nullable Output<List<String>> exclusionPatterns) {
            $.exclusionPatterns = exclusionPatterns;
            return this;
        }

        public Builder exclusionPatterns(List<String> exclusionPatterns) {
            return exclusionPatterns(Output.of(exclusionPatterns));
        }

        public Builder exclusionPatterns(String... exclusionPatterns) {
            return exclusionPatterns(List.of(exclusionPatterns));
        }

        public Builder fieldMappings(@Nullable Output<List<DataSourceToIndexFieldMappingArgs>> fieldMappings) {
            $.fieldMappings = fieldMappings;
            return this;
        }

        public Builder fieldMappings(List<DataSourceToIndexFieldMappingArgs> fieldMappings) {
            return fieldMappings(Output.of(fieldMappings));
        }

        public Builder fieldMappings(DataSourceToIndexFieldMappingArgs... fieldMappings) {
            return fieldMappings(List.of(fieldMappings));
        }

        public Builder inclusionPatterns(@Nullable Output<List<String>> inclusionPatterns) {
            $.inclusionPatterns = inclusionPatterns;
            return this;
        }

        public Builder inclusionPatterns(List<String> inclusionPatterns) {
            return inclusionPatterns(Output.of(inclusionPatterns));
        }

        public Builder inclusionPatterns(String... inclusionPatterns) {
            return inclusionPatterns(List.of(inclusionPatterns));
        }

        public Builder secretArn(Output<String> secretArn) {
            $.secretArn = secretArn;
            return this;
        }

        public Builder secretArn(String secretArn) {
            return secretArn(Output.of(secretArn));
        }

        public DataSourceGoogleDriveConfigurationArgs build() {
            $.secretArn = Objects.requireNonNull($.secretArn, "expected parameter 'secretArn' to be non-null");
            return $;
        }
    }

}
