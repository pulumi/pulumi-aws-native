// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.budgets.outputs;

import com.pulumi.awsnative.budgets.enums.BudgetsActionApprovalModel;
import com.pulumi.awsnative.budgets.enums.BudgetsActionNotificationType;
import com.pulumi.awsnative.budgets.outputs.BudgetsActionActionThreshold;
import com.pulumi.awsnative.budgets.outputs.BudgetsActionDefinition;
import com.pulumi.awsnative.budgets.outputs.BudgetsActionSubscriber;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBudgetsActionResult {
    private @Nullable String actionId;
    private @Nullable BudgetsActionActionThreshold actionThreshold;
    private @Nullable BudgetsActionApprovalModel approvalModel;
    private @Nullable BudgetsActionDefinition definition;
    private @Nullable String executionRoleArn;
    private @Nullable BudgetsActionNotificationType notificationType;
    private @Nullable List<BudgetsActionSubscriber> subscribers;

    private GetBudgetsActionResult() {}
    public Optional<String> actionId() {
        return Optional.ofNullable(this.actionId);
    }
    public Optional<BudgetsActionActionThreshold> actionThreshold() {
        return Optional.ofNullable(this.actionThreshold);
    }
    public Optional<BudgetsActionApprovalModel> approvalModel() {
        return Optional.ofNullable(this.approvalModel);
    }
    public Optional<BudgetsActionDefinition> definition() {
        return Optional.ofNullable(this.definition);
    }
    public Optional<String> executionRoleArn() {
        return Optional.ofNullable(this.executionRoleArn);
    }
    public Optional<BudgetsActionNotificationType> notificationType() {
        return Optional.ofNullable(this.notificationType);
    }
    public List<BudgetsActionSubscriber> subscribers() {
        return this.subscribers == null ? List.of() : this.subscribers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBudgetsActionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String actionId;
        private @Nullable BudgetsActionActionThreshold actionThreshold;
        private @Nullable BudgetsActionApprovalModel approvalModel;
        private @Nullable BudgetsActionDefinition definition;
        private @Nullable String executionRoleArn;
        private @Nullable BudgetsActionNotificationType notificationType;
        private @Nullable List<BudgetsActionSubscriber> subscribers;
        public Builder() {}
        public Builder(GetBudgetsActionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionId = defaults.actionId;
    	      this.actionThreshold = defaults.actionThreshold;
    	      this.approvalModel = defaults.approvalModel;
    	      this.definition = defaults.definition;
    	      this.executionRoleArn = defaults.executionRoleArn;
    	      this.notificationType = defaults.notificationType;
    	      this.subscribers = defaults.subscribers;
        }

        @CustomType.Setter
        public Builder actionId(@Nullable String actionId) {
            this.actionId = actionId;
            return this;
        }
        @CustomType.Setter
        public Builder actionThreshold(@Nullable BudgetsActionActionThreshold actionThreshold) {
            this.actionThreshold = actionThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder approvalModel(@Nullable BudgetsActionApprovalModel approvalModel) {
            this.approvalModel = approvalModel;
            return this;
        }
        @CustomType.Setter
        public Builder definition(@Nullable BudgetsActionDefinition definition) {
            this.definition = definition;
            return this;
        }
        @CustomType.Setter
        public Builder executionRoleArn(@Nullable String executionRoleArn) {
            this.executionRoleArn = executionRoleArn;
            return this;
        }
        @CustomType.Setter
        public Builder notificationType(@Nullable BudgetsActionNotificationType notificationType) {
            this.notificationType = notificationType;
            return this;
        }
        @CustomType.Setter
        public Builder subscribers(@Nullable List<BudgetsActionSubscriber> subscribers) {
            this.subscribers = subscribers;
            return this;
        }
        public Builder subscribers(BudgetsActionSubscriber... subscribers) {
            return subscribers(List.of(subscribers));
        }
        public GetBudgetsActionResult build() {
            final var o = new GetBudgetsActionResult();
            o.actionId = actionId;
            o.actionThreshold = actionThreshold;
            o.approvalModel = approvalModel;
            o.definition = definition;
            o.executionRoleArn = executionRoleArn;
            o.notificationType = notificationType;
            o.subscribers = subscribers;
            return o;
        }
    }
}
