// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.licensemanager.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LicenseEntitlement {
    private @Nullable Boolean allowCheckIn;
    private @Nullable Integer maxCount;
    private String name;
    private @Nullable Boolean overage;
    private String unit;
    private @Nullable String value;

    private LicenseEntitlement() {}
    public Optional<Boolean> allowCheckIn() {
        return Optional.ofNullable(this.allowCheckIn);
    }
    public Optional<Integer> maxCount() {
        return Optional.ofNullable(this.maxCount);
    }
    public String name() {
        return this.name;
    }
    public Optional<Boolean> overage() {
        return Optional.ofNullable(this.overage);
    }
    public String unit() {
        return this.unit;
    }
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LicenseEntitlement defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowCheckIn;
        private @Nullable Integer maxCount;
        private String name;
        private @Nullable Boolean overage;
        private String unit;
        private @Nullable String value;
        public Builder() {}
        public Builder(LicenseEntitlement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowCheckIn = defaults.allowCheckIn;
    	      this.maxCount = defaults.maxCount;
    	      this.name = defaults.name;
    	      this.overage = defaults.overage;
    	      this.unit = defaults.unit;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder allowCheckIn(@Nullable Boolean allowCheckIn) {
            this.allowCheckIn = allowCheckIn;
            return this;
        }
        @CustomType.Setter
        public Builder maxCount(@Nullable Integer maxCount) {
            this.maxCount = maxCount;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder overage(@Nullable Boolean overage) {
            this.overage = overage;
            return this;
        }
        @CustomType.Setter
        public Builder unit(String unit) {
            this.unit = Objects.requireNonNull(unit);
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }
        public LicenseEntitlement build() {
            final var o = new LicenseEntitlement();
            o.allowCheckIn = allowCheckIn;
            o.maxCount = maxCount;
            o.name = name;
            o.overage = overage;
            o.unit = unit;
            o.value = value;
            return o;
        }
    }
}
