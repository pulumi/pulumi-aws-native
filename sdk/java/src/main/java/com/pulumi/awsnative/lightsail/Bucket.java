// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lightsail;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.lightsail.BucketArgs;
import com.pulumi.awsnative.lightsail.outputs.BucketAccessRules;
import com.pulumi.awsnative.lightsail.outputs.BucketTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource Type definition for AWS::Lightsail::Bucket
 * 
 */
@ResourceType(type="aws-native:lightsail:Bucket")
public class Bucket extends com.pulumi.resources.CustomResource {
    /**
     * Indicates whether the bundle that is currently applied to a bucket can be changed to another bundle. You can update a bucket&#39;s bundle only one time within a monthly AWS billing cycle.
     * 
     */
    @Export(name="ableToUpdateBundle", type=Boolean.class, parameters={})
    private Output<Boolean> ableToUpdateBundle;

    /**
     * @return Indicates whether the bundle that is currently applied to a bucket can be changed to another bundle. You can update a bucket&#39;s bundle only one time within a monthly AWS billing cycle.
     * 
     */
    public Output<Boolean> ableToUpdateBundle() {
        return this.ableToUpdateBundle;
    }
    @Export(name="accessRules", type=BucketAccessRules.class, parameters={})
    private Output</* @Nullable */ BucketAccessRules> accessRules;

    public Output<Optional<BucketAccessRules>> accessRules() {
        return Codegen.optional(this.accessRules);
    }
    @Export(name="bucketArn", type=String.class, parameters={})
    private Output<String> bucketArn;

    public Output<String> bucketArn() {
        return this.bucketArn;
    }
    /**
     * The name for the bucket.
     * 
     */
    @Export(name="bucketName", type=String.class, parameters={})
    private Output<String> bucketName;

    /**
     * @return The name for the bucket.
     * 
     */
    public Output<String> bucketName() {
        return this.bucketName;
    }
    /**
     * The ID of the bundle to use for the bucket.
     * 
     */
    @Export(name="bundleId", type=String.class, parameters={})
    private Output<String> bundleId;

    /**
     * @return The ID of the bundle to use for the bucket.
     * 
     */
    public Output<String> bundleId() {
        return this.bundleId;
    }
    /**
     * Specifies whether to enable or disable versioning of objects in the bucket.
     * 
     */
    @Export(name="objectVersioning", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> objectVersioning;

    /**
     * @return Specifies whether to enable or disable versioning of objects in the bucket.
     * 
     */
    public Output<Optional<Boolean>> objectVersioning() {
        return Codegen.optional(this.objectVersioning);
    }
    /**
     * An array of strings to specify the AWS account IDs that can access the bucket.
     * 
     */
    @Export(name="readOnlyAccessAccounts", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> readOnlyAccessAccounts;

    /**
     * @return An array of strings to specify the AWS account IDs that can access the bucket.
     * 
     */
    public Output<Optional<List<String>>> readOnlyAccessAccounts() {
        return Codegen.optional(this.readOnlyAccessAccounts);
    }
    /**
     * The names of the Lightsail resources for which to set bucket access.
     * 
     */
    @Export(name="resourcesReceivingAccess", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> resourcesReceivingAccess;

    /**
     * @return The names of the Lightsail resources for which to set bucket access.
     * 
     */
    public Output<Optional<List<String>>> resourcesReceivingAccess() {
        return Codegen.optional(this.resourcesReceivingAccess);
    }
    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Export(name="tags", type=List.class, parameters={BucketTag.class})
    private Output</* @Nullable */ List<BucketTag>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public Output<Optional<List<BucketTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The URL of the bucket.
     * 
     */
    @Export(name="url", type=String.class, parameters={})
    private Output<String> url;

    /**
     * @return The URL of the bucket.
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Bucket(String name) {
        this(name, BucketArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Bucket(String name, BucketArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Bucket(String name, BucketArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:lightsail:Bucket", name, args == null ? BucketArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Bucket(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:lightsail:Bucket", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Bucket get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Bucket(name, id, options);
    }
}
