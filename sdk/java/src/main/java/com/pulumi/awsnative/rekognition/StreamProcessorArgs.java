// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.rekognition;

import com.pulumi.awsnative.rekognition.inputs.StreamProcessorBoundingBoxArgs;
import com.pulumi.awsnative.rekognition.inputs.StreamProcessorConnectedHomeSettingsArgs;
import com.pulumi.awsnative.rekognition.inputs.StreamProcessorDataSharingPreferenceArgs;
import com.pulumi.awsnative.rekognition.inputs.StreamProcessorFaceSearchSettingsArgs;
import com.pulumi.awsnative.rekognition.inputs.StreamProcessorKinesisDataStreamArgs;
import com.pulumi.awsnative.rekognition.inputs.StreamProcessorKinesisVideoStreamArgs;
import com.pulumi.awsnative.rekognition.inputs.StreamProcessorNotificationChannelArgs;
import com.pulumi.awsnative.rekognition.inputs.StreamProcessorPointArgs;
import com.pulumi.awsnative.rekognition.inputs.StreamProcessorS3DestinationArgs;
import com.pulumi.awsnative.rekognition.inputs.StreamProcessorTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamProcessorArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamProcessorArgs Empty = new StreamProcessorArgs();

    /**
     * The BoundingBoxRegionsOfInterest specifies an array of bounding boxes of interest in the video frames to analyze, as part of connected home feature. If an object is partially in a region of interest, Rekognition will tag it as detected if the overlap of the object with the region-of-interest is greater than 20%.
     * 
     */
    @Import(name="boundingBoxRegionsOfInterest")
    private @Nullable Output<List<StreamProcessorBoundingBoxArgs>> boundingBoxRegionsOfInterest;

    /**
     * @return The BoundingBoxRegionsOfInterest specifies an array of bounding boxes of interest in the video frames to analyze, as part of connected home feature. If an object is partially in a region of interest, Rekognition will tag it as detected if the overlap of the object with the region-of-interest is greater than 20%.
     * 
     */
    public Optional<Output<List<StreamProcessorBoundingBoxArgs>>> boundingBoxRegionsOfInterest() {
        return Optional.ofNullable(this.boundingBoxRegionsOfInterest);
    }

    @Import(name="connectedHomeSettings")
    private @Nullable Output<StreamProcessorConnectedHomeSettingsArgs> connectedHomeSettings;

    public Optional<Output<StreamProcessorConnectedHomeSettingsArgs>> connectedHomeSettings() {
        return Optional.ofNullable(this.connectedHomeSettings);
    }

    @Import(name="dataSharingPreference")
    private @Nullable Output<StreamProcessorDataSharingPreferenceArgs> dataSharingPreference;

    public Optional<Output<StreamProcessorDataSharingPreferenceArgs>> dataSharingPreference() {
        return Optional.ofNullable(this.dataSharingPreference);
    }

    @Import(name="faceSearchSettings")
    private @Nullable Output<StreamProcessorFaceSearchSettingsArgs> faceSearchSettings;

    public Optional<Output<StreamProcessorFaceSearchSettingsArgs>> faceSearchSettings() {
        return Optional.ofNullable(this.faceSearchSettings);
    }

    @Import(name="kinesisDataStream")
    private @Nullable Output<StreamProcessorKinesisDataStreamArgs> kinesisDataStream;

    public Optional<Output<StreamProcessorKinesisDataStreamArgs>> kinesisDataStream() {
        return Optional.ofNullable(this.kinesisDataStream);
    }

    @Import(name="kinesisVideoStream", required=true)
    private Output<StreamProcessorKinesisVideoStreamArgs> kinesisVideoStream;

    public Output<StreamProcessorKinesisVideoStreamArgs> kinesisVideoStream() {
        return this.kinesisVideoStream;
    }

    /**
     * The KMS key that is used by Rekognition to encrypt any intermediate customer metadata and store in the customer&#39;s S3 bucket.
     * 
     */
    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    /**
     * @return The KMS key that is used by Rekognition to encrypt any intermediate customer metadata and store in the customer&#39;s S3 bucket.
     * 
     */
    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    /**
     * Name of the stream processor. It&#39;s an identifier you assign to the stream processor. You can use it to manage the stream processor.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the stream processor. It&#39;s an identifier you assign to the stream processor. You can use it to manage the stream processor.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="notificationChannel")
    private @Nullable Output<StreamProcessorNotificationChannelArgs> notificationChannel;

    public Optional<Output<StreamProcessorNotificationChannelArgs>> notificationChannel() {
        return Optional.ofNullable(this.notificationChannel);
    }

    /**
     * The PolygonRegionsOfInterest specifies a set of polygon areas of interest in the video frames to analyze, as part of connected home feature. Each polygon is in turn, an ordered list of Point
     * 
     */
    @Import(name="polygonRegionsOfInterest")
    private @Nullable Output<List<List<StreamProcessorPointArgs>>> polygonRegionsOfInterest;

    /**
     * @return The PolygonRegionsOfInterest specifies a set of polygon areas of interest in the video frames to analyze, as part of connected home feature. Each polygon is in turn, an ordered list of Point
     * 
     */
    public Optional<Output<List<List<StreamProcessorPointArgs>>>> polygonRegionsOfInterest() {
        return Optional.ofNullable(this.polygonRegionsOfInterest);
    }

    /**
     * ARN of the IAM role that allows access to the stream processor, and provides Rekognition read permissions for KVS stream and write permissions to S3 bucket and SNS topic.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return ARN of the IAM role that allows access to the stream processor, and provides Rekognition read permissions for KVS stream and write permissions to S3 bucket and SNS topic.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    @Import(name="s3Destination")
    private @Nullable Output<StreamProcessorS3DestinationArgs> s3Destination;

    public Optional<Output<StreamProcessorS3DestinationArgs>> s3Destination() {
        return Optional.ofNullable(this.s3Destination);
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<StreamProcessorTagArgs>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public Optional<Output<List<StreamProcessorTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private StreamProcessorArgs() {}

    private StreamProcessorArgs(StreamProcessorArgs $) {
        this.boundingBoxRegionsOfInterest = $.boundingBoxRegionsOfInterest;
        this.connectedHomeSettings = $.connectedHomeSettings;
        this.dataSharingPreference = $.dataSharingPreference;
        this.faceSearchSettings = $.faceSearchSettings;
        this.kinesisDataStream = $.kinesisDataStream;
        this.kinesisVideoStream = $.kinesisVideoStream;
        this.kmsKeyId = $.kmsKeyId;
        this.name = $.name;
        this.notificationChannel = $.notificationChannel;
        this.polygonRegionsOfInterest = $.polygonRegionsOfInterest;
        this.roleArn = $.roleArn;
        this.s3Destination = $.s3Destination;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamProcessorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamProcessorArgs $;

        public Builder() {
            $ = new StreamProcessorArgs();
        }

        public Builder(StreamProcessorArgs defaults) {
            $ = new StreamProcessorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param boundingBoxRegionsOfInterest The BoundingBoxRegionsOfInterest specifies an array of bounding boxes of interest in the video frames to analyze, as part of connected home feature. If an object is partially in a region of interest, Rekognition will tag it as detected if the overlap of the object with the region-of-interest is greater than 20%.
         * 
         * @return builder
         * 
         */
        public Builder boundingBoxRegionsOfInterest(@Nullable Output<List<StreamProcessorBoundingBoxArgs>> boundingBoxRegionsOfInterest) {
            $.boundingBoxRegionsOfInterest = boundingBoxRegionsOfInterest;
            return this;
        }

        /**
         * @param boundingBoxRegionsOfInterest The BoundingBoxRegionsOfInterest specifies an array of bounding boxes of interest in the video frames to analyze, as part of connected home feature. If an object is partially in a region of interest, Rekognition will tag it as detected if the overlap of the object with the region-of-interest is greater than 20%.
         * 
         * @return builder
         * 
         */
        public Builder boundingBoxRegionsOfInterest(List<StreamProcessorBoundingBoxArgs> boundingBoxRegionsOfInterest) {
            return boundingBoxRegionsOfInterest(Output.of(boundingBoxRegionsOfInterest));
        }

        /**
         * @param boundingBoxRegionsOfInterest The BoundingBoxRegionsOfInterest specifies an array of bounding boxes of interest in the video frames to analyze, as part of connected home feature. If an object is partially in a region of interest, Rekognition will tag it as detected if the overlap of the object with the region-of-interest is greater than 20%.
         * 
         * @return builder
         * 
         */
        public Builder boundingBoxRegionsOfInterest(StreamProcessorBoundingBoxArgs... boundingBoxRegionsOfInterest) {
            return boundingBoxRegionsOfInterest(List.of(boundingBoxRegionsOfInterest));
        }

        public Builder connectedHomeSettings(@Nullable Output<StreamProcessorConnectedHomeSettingsArgs> connectedHomeSettings) {
            $.connectedHomeSettings = connectedHomeSettings;
            return this;
        }

        public Builder connectedHomeSettings(StreamProcessorConnectedHomeSettingsArgs connectedHomeSettings) {
            return connectedHomeSettings(Output.of(connectedHomeSettings));
        }

        public Builder dataSharingPreference(@Nullable Output<StreamProcessorDataSharingPreferenceArgs> dataSharingPreference) {
            $.dataSharingPreference = dataSharingPreference;
            return this;
        }

        public Builder dataSharingPreference(StreamProcessorDataSharingPreferenceArgs dataSharingPreference) {
            return dataSharingPreference(Output.of(dataSharingPreference));
        }

        public Builder faceSearchSettings(@Nullable Output<StreamProcessorFaceSearchSettingsArgs> faceSearchSettings) {
            $.faceSearchSettings = faceSearchSettings;
            return this;
        }

        public Builder faceSearchSettings(StreamProcessorFaceSearchSettingsArgs faceSearchSettings) {
            return faceSearchSettings(Output.of(faceSearchSettings));
        }

        public Builder kinesisDataStream(@Nullable Output<StreamProcessorKinesisDataStreamArgs> kinesisDataStream) {
            $.kinesisDataStream = kinesisDataStream;
            return this;
        }

        public Builder kinesisDataStream(StreamProcessorKinesisDataStreamArgs kinesisDataStream) {
            return kinesisDataStream(Output.of(kinesisDataStream));
        }

        public Builder kinesisVideoStream(Output<StreamProcessorKinesisVideoStreamArgs> kinesisVideoStream) {
            $.kinesisVideoStream = kinesisVideoStream;
            return this;
        }

        public Builder kinesisVideoStream(StreamProcessorKinesisVideoStreamArgs kinesisVideoStream) {
            return kinesisVideoStream(Output.of(kinesisVideoStream));
        }

        /**
         * @param kmsKeyId The KMS key that is used by Rekognition to encrypt any intermediate customer metadata and store in the customer&#39;s S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId The KMS key that is used by Rekognition to encrypt any intermediate customer metadata and store in the customer&#39;s S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        /**
         * @param name Name of the stream processor. It&#39;s an identifier you assign to the stream processor. You can use it to manage the stream processor.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the stream processor. It&#39;s an identifier you assign to the stream processor. You can use it to manage the stream processor.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder notificationChannel(@Nullable Output<StreamProcessorNotificationChannelArgs> notificationChannel) {
            $.notificationChannel = notificationChannel;
            return this;
        }

        public Builder notificationChannel(StreamProcessorNotificationChannelArgs notificationChannel) {
            return notificationChannel(Output.of(notificationChannel));
        }

        /**
         * @param polygonRegionsOfInterest The PolygonRegionsOfInterest specifies a set of polygon areas of interest in the video frames to analyze, as part of connected home feature. Each polygon is in turn, an ordered list of Point
         * 
         * @return builder
         * 
         */
        public Builder polygonRegionsOfInterest(@Nullable Output<List<List<StreamProcessorPointArgs>>> polygonRegionsOfInterest) {
            $.polygonRegionsOfInterest = polygonRegionsOfInterest;
            return this;
        }

        /**
         * @param polygonRegionsOfInterest The PolygonRegionsOfInterest specifies a set of polygon areas of interest in the video frames to analyze, as part of connected home feature. Each polygon is in turn, an ordered list of Point
         * 
         * @return builder
         * 
         */
        public Builder polygonRegionsOfInterest(List<List<StreamProcessorPointArgs>> polygonRegionsOfInterest) {
            return polygonRegionsOfInterest(Output.of(polygonRegionsOfInterest));
        }

        /**
         * @param polygonRegionsOfInterest The PolygonRegionsOfInterest specifies a set of polygon areas of interest in the video frames to analyze, as part of connected home feature. Each polygon is in turn, an ordered list of Point
         * 
         * @return builder
         * 
         */
        public Builder polygonRegionsOfInterest(List<StreamProcessorPointArgs>... polygonRegionsOfInterest) {
            return polygonRegionsOfInterest(List.of(polygonRegionsOfInterest));
        }

        /**
         * @param roleArn ARN of the IAM role that allows access to the stream processor, and provides Rekognition read permissions for KVS stream and write permissions to S3 bucket and SNS topic.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn ARN of the IAM role that allows access to the stream processor, and provides Rekognition read permissions for KVS stream and write permissions to S3 bucket and SNS topic.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder s3Destination(@Nullable Output<StreamProcessorS3DestinationArgs> s3Destination) {
            $.s3Destination = s3Destination;
            return this;
        }

        public Builder s3Destination(StreamProcessorS3DestinationArgs s3Destination) {
            return s3Destination(Output.of(s3Destination));
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<StreamProcessorTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<StreamProcessorTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(StreamProcessorTagArgs... tags) {
            return tags(List.of(tags));
        }

        public StreamProcessorArgs build() {
            $.kinesisVideoStream = Objects.requireNonNull($.kinesisVideoStream, "expected parameter 'kinesisVideoStream' to be non-null");
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            return $;
        }
    }

}
