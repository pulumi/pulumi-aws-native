// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.amplifyuibuilder.outputs;

import com.pulumi.awsnative.amplifyuibuilder.outputs.ComponentBindingProperties;
import com.pulumi.awsnative.amplifyuibuilder.outputs.ComponentChild;
import com.pulumi.awsnative.amplifyuibuilder.outputs.ComponentCollectionProperties;
import com.pulumi.awsnative.amplifyuibuilder.outputs.ComponentEvents;
import com.pulumi.awsnative.amplifyuibuilder.outputs.ComponentOverrides;
import com.pulumi.awsnative.amplifyuibuilder.outputs.ComponentProperties;
import com.pulumi.awsnative.amplifyuibuilder.outputs.ComponentVariant;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetComponentResult {
    private @Nullable String appId;
    private @Nullable ComponentBindingProperties bindingProperties;
    private @Nullable List<ComponentChild> children;
    private @Nullable ComponentCollectionProperties collectionProperties;
    private @Nullable String componentType;
    private @Nullable String environmentName;
    private @Nullable ComponentEvents events;
    private @Nullable String id;
    private @Nullable String name;
    private @Nullable ComponentOverrides overrides;
    private @Nullable ComponentProperties properties;
    private @Nullable String schemaVersion;
    private @Nullable String sourceId;
    private @Nullable List<ComponentVariant> variants;

    private GetComponentResult() {}
    public Optional<String> appId() {
        return Optional.ofNullable(this.appId);
    }
    public Optional<ComponentBindingProperties> bindingProperties() {
        return Optional.ofNullable(this.bindingProperties);
    }
    public List<ComponentChild> children() {
        return this.children == null ? List.of() : this.children;
    }
    public Optional<ComponentCollectionProperties> collectionProperties() {
        return Optional.ofNullable(this.collectionProperties);
    }
    public Optional<String> componentType() {
        return Optional.ofNullable(this.componentType);
    }
    public Optional<String> environmentName() {
        return Optional.ofNullable(this.environmentName);
    }
    public Optional<ComponentEvents> events() {
        return Optional.ofNullable(this.events);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<ComponentOverrides> overrides() {
        return Optional.ofNullable(this.overrides);
    }
    public Optional<ComponentProperties> properties() {
        return Optional.ofNullable(this.properties);
    }
    public Optional<String> schemaVersion() {
        return Optional.ofNullable(this.schemaVersion);
    }
    public Optional<String> sourceId() {
        return Optional.ofNullable(this.sourceId);
    }
    public List<ComponentVariant> variants() {
        return this.variants == null ? List.of() : this.variants;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetComponentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String appId;
        private @Nullable ComponentBindingProperties bindingProperties;
        private @Nullable List<ComponentChild> children;
        private @Nullable ComponentCollectionProperties collectionProperties;
        private @Nullable String componentType;
        private @Nullable String environmentName;
        private @Nullable ComponentEvents events;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable ComponentOverrides overrides;
        private @Nullable ComponentProperties properties;
        private @Nullable String schemaVersion;
        private @Nullable String sourceId;
        private @Nullable List<ComponentVariant> variants;
        public Builder() {}
        public Builder(GetComponentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appId = defaults.appId;
    	      this.bindingProperties = defaults.bindingProperties;
    	      this.children = defaults.children;
    	      this.collectionProperties = defaults.collectionProperties;
    	      this.componentType = defaults.componentType;
    	      this.environmentName = defaults.environmentName;
    	      this.events = defaults.events;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.overrides = defaults.overrides;
    	      this.properties = defaults.properties;
    	      this.schemaVersion = defaults.schemaVersion;
    	      this.sourceId = defaults.sourceId;
    	      this.variants = defaults.variants;
        }

        @CustomType.Setter
        public Builder appId(@Nullable String appId) {
            this.appId = appId;
            return this;
        }
        @CustomType.Setter
        public Builder bindingProperties(@Nullable ComponentBindingProperties bindingProperties) {
            this.bindingProperties = bindingProperties;
            return this;
        }
        @CustomType.Setter
        public Builder children(@Nullable List<ComponentChild> children) {
            this.children = children;
            return this;
        }
        public Builder children(ComponentChild... children) {
            return children(List.of(children));
        }
        @CustomType.Setter
        public Builder collectionProperties(@Nullable ComponentCollectionProperties collectionProperties) {
            this.collectionProperties = collectionProperties;
            return this;
        }
        @CustomType.Setter
        public Builder componentType(@Nullable String componentType) {
            this.componentType = componentType;
            return this;
        }
        @CustomType.Setter
        public Builder environmentName(@Nullable String environmentName) {
            this.environmentName = environmentName;
            return this;
        }
        @CustomType.Setter
        public Builder events(@Nullable ComponentEvents events) {
            this.events = events;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder overrides(@Nullable ComponentOverrides overrides) {
            this.overrides = overrides;
            return this;
        }
        @CustomType.Setter
        public Builder properties(@Nullable ComponentProperties properties) {
            this.properties = properties;
            return this;
        }
        @CustomType.Setter
        public Builder schemaVersion(@Nullable String schemaVersion) {
            this.schemaVersion = schemaVersion;
            return this;
        }
        @CustomType.Setter
        public Builder sourceId(@Nullable String sourceId) {
            this.sourceId = sourceId;
            return this;
        }
        @CustomType.Setter
        public Builder variants(@Nullable List<ComponentVariant> variants) {
            this.variants = variants;
            return this;
        }
        public Builder variants(ComponentVariant... variants) {
            return variants(List.of(variants));
        }
        public GetComponentResult build() {
            final var o = new GetComponentResult();
            o.appId = appId;
            o.bindingProperties = bindingProperties;
            o.children = children;
            o.collectionProperties = collectionProperties;
            o.componentType = componentType;
            o.environmentName = environmentName;
            o.events = events;
            o.id = id;
            o.name = name;
            o.overrides = overrides;
            o.properties = properties;
            o.schemaVersion = schemaVersion;
            o.sourceId = sourceId;
            o.variants = variants;
            return o;
        }
    }
}
