// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.robomaker;

import com.pulumi.awsnative.robomaker.inputs.RobotApplicationRobotSoftwareSuiteArgs;
import com.pulumi.awsnative.robomaker.inputs.RobotApplicationSourceConfigArgs;
import com.pulumi.awsnative.robomaker.inputs.RobotApplicationTagsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RobotApplicationArgs extends com.pulumi.resources.ResourceArgs {

    public static final RobotApplicationArgs Empty = new RobotApplicationArgs();

    /**
     * The revision ID of robot application.
     * 
     */
    @Import(name="currentRevisionId")
    private @Nullable Output<String> currentRevisionId;

    /**
     * @return The revision ID of robot application.
     * 
     */
    public Optional<Output<String>> currentRevisionId() {
        return Optional.ofNullable(this.currentRevisionId);
    }

    /**
     * The URI of the Docker image for the robot application.
     * 
     */
    @Import(name="environment")
    private @Nullable Output<String> environment;

    /**
     * @return The URI of the Docker image for the robot application.
     * 
     */
    public Optional<Output<String>> environment() {
        return Optional.ofNullable(this.environment);
    }

    /**
     * The name of the robot application.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the robot application.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="robotSoftwareSuite", required=true)
    private Output<RobotApplicationRobotSoftwareSuiteArgs> robotSoftwareSuite;

    public Output<RobotApplicationRobotSoftwareSuiteArgs> robotSoftwareSuite() {
        return this.robotSoftwareSuite;
    }

    /**
     * The sources of the robot application.
     * 
     */
    @Import(name="sources")
    private @Nullable Output<List<RobotApplicationSourceConfigArgs>> sources;

    /**
     * @return The sources of the robot application.
     * 
     */
    public Optional<Output<List<RobotApplicationSourceConfigArgs>>> sources() {
        return Optional.ofNullable(this.sources);
    }

    @Import(name="tags")
    private @Nullable Output<RobotApplicationTagsArgs> tags;

    public Optional<Output<RobotApplicationTagsArgs>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private RobotApplicationArgs() {}

    private RobotApplicationArgs(RobotApplicationArgs $) {
        this.currentRevisionId = $.currentRevisionId;
        this.environment = $.environment;
        this.name = $.name;
        this.robotSoftwareSuite = $.robotSoftwareSuite;
        this.sources = $.sources;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RobotApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RobotApplicationArgs $;

        public Builder() {
            $ = new RobotApplicationArgs();
        }

        public Builder(RobotApplicationArgs defaults) {
            $ = new RobotApplicationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param currentRevisionId The revision ID of robot application.
         * 
         * @return builder
         * 
         */
        public Builder currentRevisionId(@Nullable Output<String> currentRevisionId) {
            $.currentRevisionId = currentRevisionId;
            return this;
        }

        /**
         * @param currentRevisionId The revision ID of robot application.
         * 
         * @return builder
         * 
         */
        public Builder currentRevisionId(String currentRevisionId) {
            return currentRevisionId(Output.of(currentRevisionId));
        }

        /**
         * @param environment The URI of the Docker image for the robot application.
         * 
         * @return builder
         * 
         */
        public Builder environment(@Nullable Output<String> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment The URI of the Docker image for the robot application.
         * 
         * @return builder
         * 
         */
        public Builder environment(String environment) {
            return environment(Output.of(environment));
        }

        /**
         * @param name The name of the robot application.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the robot application.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder robotSoftwareSuite(Output<RobotApplicationRobotSoftwareSuiteArgs> robotSoftwareSuite) {
            $.robotSoftwareSuite = robotSoftwareSuite;
            return this;
        }

        public Builder robotSoftwareSuite(RobotApplicationRobotSoftwareSuiteArgs robotSoftwareSuite) {
            return robotSoftwareSuite(Output.of(robotSoftwareSuite));
        }

        /**
         * @param sources The sources of the robot application.
         * 
         * @return builder
         * 
         */
        public Builder sources(@Nullable Output<List<RobotApplicationSourceConfigArgs>> sources) {
            $.sources = sources;
            return this;
        }

        /**
         * @param sources The sources of the robot application.
         * 
         * @return builder
         * 
         */
        public Builder sources(List<RobotApplicationSourceConfigArgs> sources) {
            return sources(Output.of(sources));
        }

        /**
         * @param sources The sources of the robot application.
         * 
         * @return builder
         * 
         */
        public Builder sources(RobotApplicationSourceConfigArgs... sources) {
            return sources(List.of(sources));
        }

        public Builder tags(@Nullable Output<RobotApplicationTagsArgs> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(RobotApplicationTagsArgs tags) {
            return tags(Output.of(tags));
        }

        public RobotApplicationArgs build() {
            $.robotSoftwareSuite = Objects.requireNonNull($.robotSoftwareSuite, "expected parameter 'robotSoftwareSuite' to be non-null");
            return $;
        }
    }

}
