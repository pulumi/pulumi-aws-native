// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2.outputs;

import com.pulumi.awsnative.ec2.enums.FlowLogDestinationOptionsPropertiesFileFormat;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class DestinationOptionsProperties {
    private FlowLogDestinationOptionsPropertiesFileFormat fileFormat;
    private Boolean hiveCompatiblePartitions;
    private Boolean perHourPartition;

    private DestinationOptionsProperties() {}
    public FlowLogDestinationOptionsPropertiesFileFormat fileFormat() {
        return this.fileFormat;
    }
    public Boolean hiveCompatiblePartitions() {
        return this.hiveCompatiblePartitions;
    }
    public Boolean perHourPartition() {
        return this.perHourPartition;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DestinationOptionsProperties defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private FlowLogDestinationOptionsPropertiesFileFormat fileFormat;
        private Boolean hiveCompatiblePartitions;
        private Boolean perHourPartition;
        public Builder() {}
        public Builder(DestinationOptionsProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fileFormat = defaults.fileFormat;
    	      this.hiveCompatiblePartitions = defaults.hiveCompatiblePartitions;
    	      this.perHourPartition = defaults.perHourPartition;
        }

        @CustomType.Setter
        public Builder fileFormat(FlowLogDestinationOptionsPropertiesFileFormat fileFormat) {
            this.fileFormat = Objects.requireNonNull(fileFormat);
            return this;
        }
        @CustomType.Setter
        public Builder hiveCompatiblePartitions(Boolean hiveCompatiblePartitions) {
            this.hiveCompatiblePartitions = Objects.requireNonNull(hiveCompatiblePartitions);
            return this;
        }
        @CustomType.Setter
        public Builder perHourPartition(Boolean perHourPartition) {
            this.perHourPartition = Objects.requireNonNull(perHourPartition);
            return this;
        }
        public DestinationOptionsProperties build() {
            final var o = new DestinationOptionsProperties();
            o.fileFormat = fileFormat;
            o.hiveCompatiblePartitions = hiveCompatiblePartitions;
            o.perHourPartition = perHourPartition;
            return o;
        }
    }
}
