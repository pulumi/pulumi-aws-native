// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotevents.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A structure that contains an asset property value. For more information, see [Variant](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_Variant.html) in the *AWS IoT SiteWise API Reference*.
 * 
 */
public final class AlarmModelAssetPropertyVariantArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlarmModelAssetPropertyVariantArgs Empty = new AlarmModelAssetPropertyVariantArgs();

    /**
     * The asset property value is a Boolean value that must be `TRUE` or `FALSE`. You can also specify an expression. If you use an expression, the evaluated result should be a Boolean value.
     * 
     */
    @Import(name="booleanValue")
    private @Nullable Output<String> booleanValue;

    /**
     * @return The asset property value is a Boolean value that must be `TRUE` or `FALSE`. You can also specify an expression. If you use an expression, the evaluated result should be a Boolean value.
     * 
     */
    public Optional<Output<String>> booleanValue() {
        return Optional.ofNullable(this.booleanValue);
    }

    /**
     * The asset property value is a double. You can also specify an expression. If you use an expression, the evaluated result should be a double.
     * 
     */
    @Import(name="doubleValue")
    private @Nullable Output<String> doubleValue;

    /**
     * @return The asset property value is a double. You can also specify an expression. If you use an expression, the evaluated result should be a double.
     * 
     */
    public Optional<Output<String>> doubleValue() {
        return Optional.ofNullable(this.doubleValue);
    }

    /**
     * The asset property value is an integer. You can also specify an expression. If you use an expression, the evaluated result should be an integer.
     * 
     */
    @Import(name="integerValue")
    private @Nullable Output<String> integerValue;

    /**
     * @return The asset property value is an integer. You can also specify an expression. If you use an expression, the evaluated result should be an integer.
     * 
     */
    public Optional<Output<String>> integerValue() {
        return Optional.ofNullable(this.integerValue);
    }

    /**
     * The asset property value is a string. You can also specify an expression. If you use an expression, the evaluated result should be a string.
     * 
     */
    @Import(name="stringValue")
    private @Nullable Output<String> stringValue;

    /**
     * @return The asset property value is a string. You can also specify an expression. If you use an expression, the evaluated result should be a string.
     * 
     */
    public Optional<Output<String>> stringValue() {
        return Optional.ofNullable(this.stringValue);
    }

    private AlarmModelAssetPropertyVariantArgs() {}

    private AlarmModelAssetPropertyVariantArgs(AlarmModelAssetPropertyVariantArgs $) {
        this.booleanValue = $.booleanValue;
        this.doubleValue = $.doubleValue;
        this.integerValue = $.integerValue;
        this.stringValue = $.stringValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlarmModelAssetPropertyVariantArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlarmModelAssetPropertyVariantArgs $;

        public Builder() {
            $ = new AlarmModelAssetPropertyVariantArgs();
        }

        public Builder(AlarmModelAssetPropertyVariantArgs defaults) {
            $ = new AlarmModelAssetPropertyVariantArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param booleanValue The asset property value is a Boolean value that must be `TRUE` or `FALSE`. You can also specify an expression. If you use an expression, the evaluated result should be a Boolean value.
         * 
         * @return builder
         * 
         */
        public Builder booleanValue(@Nullable Output<String> booleanValue) {
            $.booleanValue = booleanValue;
            return this;
        }

        /**
         * @param booleanValue The asset property value is a Boolean value that must be `TRUE` or `FALSE`. You can also specify an expression. If you use an expression, the evaluated result should be a Boolean value.
         * 
         * @return builder
         * 
         */
        public Builder booleanValue(String booleanValue) {
            return booleanValue(Output.of(booleanValue));
        }

        /**
         * @param doubleValue The asset property value is a double. You can also specify an expression. If you use an expression, the evaluated result should be a double.
         * 
         * @return builder
         * 
         */
        public Builder doubleValue(@Nullable Output<String> doubleValue) {
            $.doubleValue = doubleValue;
            return this;
        }

        /**
         * @param doubleValue The asset property value is a double. You can also specify an expression. If you use an expression, the evaluated result should be a double.
         * 
         * @return builder
         * 
         */
        public Builder doubleValue(String doubleValue) {
            return doubleValue(Output.of(doubleValue));
        }

        /**
         * @param integerValue The asset property value is an integer. You can also specify an expression. If you use an expression, the evaluated result should be an integer.
         * 
         * @return builder
         * 
         */
        public Builder integerValue(@Nullable Output<String> integerValue) {
            $.integerValue = integerValue;
            return this;
        }

        /**
         * @param integerValue The asset property value is an integer. You can also specify an expression. If you use an expression, the evaluated result should be an integer.
         * 
         * @return builder
         * 
         */
        public Builder integerValue(String integerValue) {
            return integerValue(Output.of(integerValue));
        }

        /**
         * @param stringValue The asset property value is a string. You can also specify an expression. If you use an expression, the evaluated result should be a string.
         * 
         * @return builder
         * 
         */
        public Builder stringValue(@Nullable Output<String> stringValue) {
            $.stringValue = stringValue;
            return this;
        }

        /**
         * @param stringValue The asset property value is a string. You can also specify an expression. If you use an expression, the evaluated result should be a string.
         * 
         * @return builder
         * 
         */
        public Builder stringValue(String stringValue) {
            return stringValue(Output.of(stringValue));
        }

        public AlarmModelAssetPropertyVariantArgs build() {
            return $;
        }
    }

}
