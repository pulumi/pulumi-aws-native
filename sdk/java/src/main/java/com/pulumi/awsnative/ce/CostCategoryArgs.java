// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ce;

import com.pulumi.awsnative.ce.enums.CostCategoryRuleVersion;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CostCategoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final CostCategoryArgs Empty = new CostCategoryArgs();

    /**
     * The default value for the cost category
     * 
     */
    @Import(name="defaultValue")
    private @Nullable Output<String> defaultValue;

    /**
     * @return The default value for the cost category
     * 
     */
    public Optional<Output<String>> defaultValue() {
        return Optional.ofNullable(this.defaultValue);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="ruleVersion", required=true)
    private Output<CostCategoryRuleVersion> ruleVersion;

    public Output<CostCategoryRuleVersion> ruleVersion() {
        return this.ruleVersion;
    }

    /**
     * JSON array format of Expression in Billing and Cost Management API
     * 
     */
    @Import(name="rules", required=true)
    private Output<String> rules;

    /**
     * @return JSON array format of Expression in Billing and Cost Management API
     * 
     */
    public Output<String> rules() {
        return this.rules;
    }

    /**
     * Json array format of CostCategorySplitChargeRule in Billing and Cost Management API
     * 
     */
    @Import(name="splitChargeRules")
    private @Nullable Output<String> splitChargeRules;

    /**
     * @return Json array format of CostCategorySplitChargeRule in Billing and Cost Management API
     * 
     */
    public Optional<Output<String>> splitChargeRules() {
        return Optional.ofNullable(this.splitChargeRules);
    }

    private CostCategoryArgs() {}

    private CostCategoryArgs(CostCategoryArgs $) {
        this.defaultValue = $.defaultValue;
        this.name = $.name;
        this.ruleVersion = $.ruleVersion;
        this.rules = $.rules;
        this.splitChargeRules = $.splitChargeRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CostCategoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CostCategoryArgs $;

        public Builder() {
            $ = new CostCategoryArgs();
        }

        public Builder(CostCategoryArgs defaults) {
            $ = new CostCategoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultValue The default value for the cost category
         * 
         * @return builder
         * 
         */
        public Builder defaultValue(@Nullable Output<String> defaultValue) {
            $.defaultValue = defaultValue;
            return this;
        }

        /**
         * @param defaultValue The default value for the cost category
         * 
         * @return builder
         * 
         */
        public Builder defaultValue(String defaultValue) {
            return defaultValue(Output.of(defaultValue));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder ruleVersion(Output<CostCategoryRuleVersion> ruleVersion) {
            $.ruleVersion = ruleVersion;
            return this;
        }

        public Builder ruleVersion(CostCategoryRuleVersion ruleVersion) {
            return ruleVersion(Output.of(ruleVersion));
        }

        /**
         * @param rules JSON array format of Expression in Billing and Cost Management API
         * 
         * @return builder
         * 
         */
        public Builder rules(Output<String> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules JSON array format of Expression in Billing and Cost Management API
         * 
         * @return builder
         * 
         */
        public Builder rules(String rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param splitChargeRules Json array format of CostCategorySplitChargeRule in Billing and Cost Management API
         * 
         * @return builder
         * 
         */
        public Builder splitChargeRules(@Nullable Output<String> splitChargeRules) {
            $.splitChargeRules = splitChargeRules;
            return this;
        }

        /**
         * @param splitChargeRules Json array format of CostCategorySplitChargeRule in Billing and Cost Management API
         * 
         * @return builder
         * 
         */
        public Builder splitChargeRules(String splitChargeRules) {
            return splitChargeRules(Output.of(splitChargeRules));
        }

        public CostCategoryArgs build() {
            $.ruleVersion = Objects.requireNonNull($.ruleVersion, "expected parameter 'ruleVersion' to be non-null");
            $.rules = Objects.requireNonNull($.rules, "expected parameter 'rules' to be non-null");
            return $;
        }
    }

}
