// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.rekognition.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;


/**
 * A bounding box denoting a region of interest in the frame to be analyzed.
 * 
 */
public final class StreamProcessorBoundingBoxArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamProcessorBoundingBoxArgs Empty = new StreamProcessorBoundingBoxArgs();

    @Import(name="height", required=true)
    private Output<Double> height;

    public Output<Double> height() {
        return this.height;
    }

    @Import(name="left", required=true)
    private Output<Double> left;

    public Output<Double> left() {
        return this.left;
    }

    @Import(name="top", required=true)
    private Output<Double> top;

    public Output<Double> top() {
        return this.top;
    }

    @Import(name="width", required=true)
    private Output<Double> width;

    public Output<Double> width() {
        return this.width;
    }

    private StreamProcessorBoundingBoxArgs() {}

    private StreamProcessorBoundingBoxArgs(StreamProcessorBoundingBoxArgs $) {
        this.height = $.height;
        this.left = $.left;
        this.top = $.top;
        this.width = $.width;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamProcessorBoundingBoxArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamProcessorBoundingBoxArgs $;

        public Builder() {
            $ = new StreamProcessorBoundingBoxArgs();
        }

        public Builder(StreamProcessorBoundingBoxArgs defaults) {
            $ = new StreamProcessorBoundingBoxArgs(Objects.requireNonNull(defaults));
        }

        public Builder height(Output<Double> height) {
            $.height = height;
            return this;
        }

        public Builder height(Double height) {
            return height(Output.of(height));
        }

        public Builder left(Output<Double> left) {
            $.left = left;
            return this;
        }

        public Builder left(Double left) {
            return left(Output.of(left));
        }

        public Builder top(Output<Double> top) {
            $.top = top;
            return this;
        }

        public Builder top(Double top) {
            return top(Output.of(top));
        }

        public Builder width(Output<Double> width) {
            $.width = width;
            return this;
        }

        public Builder width(Double width) {
            return width(Output.of(width));
        }

        public StreamProcessorBoundingBoxArgs build() {
            $.height = Objects.requireNonNull($.height, "expected parameter 'height' to be non-null");
            $.left = Objects.requireNonNull($.left, "expected parameter 'left' to be non-null");
            $.top = Objects.requireNonNull($.top, "expected parameter 'top' to be non-null");
            $.width = Objects.requireNonNull($.width, "expected parameter 'width' to be non-null");
            return $;
        }
    }

}
