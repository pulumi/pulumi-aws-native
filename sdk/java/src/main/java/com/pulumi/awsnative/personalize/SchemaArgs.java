// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.personalize;

import com.pulumi.awsnative.personalize.enums.SchemaDomain;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SchemaArgs extends com.pulumi.resources.ResourceArgs {

    public static final SchemaArgs Empty = new SchemaArgs();

    /**
     * The domain of a Domain dataset group.
     * 
     */
    @Import(name="domain")
    private @Nullable Output<SchemaDomain> domain;

    /**
     * @return The domain of a Domain dataset group.
     * 
     */
    public Optional<Output<SchemaDomain>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * Name for the schema.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name for the schema.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A schema in Avro JSON format.
     * 
     */
    @Import(name="schema", required=true)
    private Output<String> schema;

    /**
     * @return A schema in Avro JSON format.
     * 
     */
    public Output<String> schema() {
        return this.schema;
    }

    private SchemaArgs() {}

    private SchemaArgs(SchemaArgs $) {
        this.domain = $.domain;
        this.name = $.name;
        this.schema = $.schema;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SchemaArgs $;

        public Builder() {
            $ = new SchemaArgs();
        }

        public Builder(SchemaArgs defaults) {
            $ = new SchemaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domain The domain of a Domain dataset group.
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable Output<SchemaDomain> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain The domain of a Domain dataset group.
         * 
         * @return builder
         * 
         */
        public Builder domain(SchemaDomain domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param name Name for the schema.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name for the schema.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param schema A schema in Avro JSON format.
         * 
         * @return builder
         * 
         */
        public Builder schema(Output<String> schema) {
            $.schema = schema;
            return this;
        }

        /**
         * @param schema A schema in Avro JSON format.
         * 
         * @return builder
         * 
         */
        public Builder schema(String schema) {
            return schema(Output.of(schema));
        }

        public SchemaArgs build() {
            $.schema = Objects.requireNonNull($.schema, "expected parameter 'schema' to be non-null");
            return $;
        }
    }

}
