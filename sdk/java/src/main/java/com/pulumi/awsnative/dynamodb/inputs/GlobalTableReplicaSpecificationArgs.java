// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.dynamodb.inputs;

import com.pulumi.awsnative.dynamodb.inputs.GlobalTableContributorInsightsSpecificationArgs;
import com.pulumi.awsnative.dynamodb.inputs.GlobalTablePointInTimeRecoverySpecificationArgs;
import com.pulumi.awsnative.dynamodb.inputs.GlobalTableReadProvisionedThroughputSettingsArgs;
import com.pulumi.awsnative.dynamodb.inputs.GlobalTableReplicaGlobalSecondaryIndexSpecificationArgs;
import com.pulumi.awsnative.dynamodb.inputs.GlobalTableReplicaSSESpecificationArgs;
import com.pulumi.awsnative.dynamodb.inputs.GlobalTableTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GlobalTableReplicaSpecificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final GlobalTableReplicaSpecificationArgs Empty = new GlobalTableReplicaSpecificationArgs();

    @Import(name="contributorInsightsSpecification")
    private @Nullable Output<GlobalTableContributorInsightsSpecificationArgs> contributorInsightsSpecification;

    public Optional<Output<GlobalTableContributorInsightsSpecificationArgs>> contributorInsightsSpecification() {
        return Optional.ofNullable(this.contributorInsightsSpecification);
    }

    @Import(name="globalSecondaryIndexes")
    private @Nullable Output<List<GlobalTableReplicaGlobalSecondaryIndexSpecificationArgs>> globalSecondaryIndexes;

    public Optional<Output<List<GlobalTableReplicaGlobalSecondaryIndexSpecificationArgs>>> globalSecondaryIndexes() {
        return Optional.ofNullable(this.globalSecondaryIndexes);
    }

    @Import(name="pointInTimeRecoverySpecification")
    private @Nullable Output<GlobalTablePointInTimeRecoverySpecificationArgs> pointInTimeRecoverySpecification;

    public Optional<Output<GlobalTablePointInTimeRecoverySpecificationArgs>> pointInTimeRecoverySpecification() {
        return Optional.ofNullable(this.pointInTimeRecoverySpecification);
    }

    @Import(name="readProvisionedThroughputSettings")
    private @Nullable Output<GlobalTableReadProvisionedThroughputSettingsArgs> readProvisionedThroughputSettings;

    public Optional<Output<GlobalTableReadProvisionedThroughputSettingsArgs>> readProvisionedThroughputSettings() {
        return Optional.ofNullable(this.readProvisionedThroughputSettings);
    }

    @Import(name="region", required=true)
    private Output<String> region;

    public Output<String> region() {
        return this.region;
    }

    @Import(name="sSESpecification")
    private @Nullable Output<GlobalTableReplicaSSESpecificationArgs> sSESpecification;

    public Optional<Output<GlobalTableReplicaSSESpecificationArgs>> sSESpecification() {
        return Optional.ofNullable(this.sSESpecification);
    }

    @Import(name="tableClass")
    private @Nullable Output<String> tableClass;

    public Optional<Output<String>> tableClass() {
        return Optional.ofNullable(this.tableClass);
    }

    @Import(name="tags")
    private @Nullable Output<List<GlobalTableTagArgs>> tags;

    public Optional<Output<List<GlobalTableTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GlobalTableReplicaSpecificationArgs() {}

    private GlobalTableReplicaSpecificationArgs(GlobalTableReplicaSpecificationArgs $) {
        this.contributorInsightsSpecification = $.contributorInsightsSpecification;
        this.globalSecondaryIndexes = $.globalSecondaryIndexes;
        this.pointInTimeRecoverySpecification = $.pointInTimeRecoverySpecification;
        this.readProvisionedThroughputSettings = $.readProvisionedThroughputSettings;
        this.region = $.region;
        this.sSESpecification = $.sSESpecification;
        this.tableClass = $.tableClass;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GlobalTableReplicaSpecificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GlobalTableReplicaSpecificationArgs $;

        public Builder() {
            $ = new GlobalTableReplicaSpecificationArgs();
        }

        public Builder(GlobalTableReplicaSpecificationArgs defaults) {
            $ = new GlobalTableReplicaSpecificationArgs(Objects.requireNonNull(defaults));
        }

        public Builder contributorInsightsSpecification(@Nullable Output<GlobalTableContributorInsightsSpecificationArgs> contributorInsightsSpecification) {
            $.contributorInsightsSpecification = contributorInsightsSpecification;
            return this;
        }

        public Builder contributorInsightsSpecification(GlobalTableContributorInsightsSpecificationArgs contributorInsightsSpecification) {
            return contributorInsightsSpecification(Output.of(contributorInsightsSpecification));
        }

        public Builder globalSecondaryIndexes(@Nullable Output<List<GlobalTableReplicaGlobalSecondaryIndexSpecificationArgs>> globalSecondaryIndexes) {
            $.globalSecondaryIndexes = globalSecondaryIndexes;
            return this;
        }

        public Builder globalSecondaryIndexes(List<GlobalTableReplicaGlobalSecondaryIndexSpecificationArgs> globalSecondaryIndexes) {
            return globalSecondaryIndexes(Output.of(globalSecondaryIndexes));
        }

        public Builder globalSecondaryIndexes(GlobalTableReplicaGlobalSecondaryIndexSpecificationArgs... globalSecondaryIndexes) {
            return globalSecondaryIndexes(List.of(globalSecondaryIndexes));
        }

        public Builder pointInTimeRecoverySpecification(@Nullable Output<GlobalTablePointInTimeRecoverySpecificationArgs> pointInTimeRecoverySpecification) {
            $.pointInTimeRecoverySpecification = pointInTimeRecoverySpecification;
            return this;
        }

        public Builder pointInTimeRecoverySpecification(GlobalTablePointInTimeRecoverySpecificationArgs pointInTimeRecoverySpecification) {
            return pointInTimeRecoverySpecification(Output.of(pointInTimeRecoverySpecification));
        }

        public Builder readProvisionedThroughputSettings(@Nullable Output<GlobalTableReadProvisionedThroughputSettingsArgs> readProvisionedThroughputSettings) {
            $.readProvisionedThroughputSettings = readProvisionedThroughputSettings;
            return this;
        }

        public Builder readProvisionedThroughputSettings(GlobalTableReadProvisionedThroughputSettingsArgs readProvisionedThroughputSettings) {
            return readProvisionedThroughputSettings(Output.of(readProvisionedThroughputSettings));
        }

        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder sSESpecification(@Nullable Output<GlobalTableReplicaSSESpecificationArgs> sSESpecification) {
            $.sSESpecification = sSESpecification;
            return this;
        }

        public Builder sSESpecification(GlobalTableReplicaSSESpecificationArgs sSESpecification) {
            return sSESpecification(Output.of(sSESpecification));
        }

        public Builder tableClass(@Nullable Output<String> tableClass) {
            $.tableClass = tableClass;
            return this;
        }

        public Builder tableClass(String tableClass) {
            return tableClass(Output.of(tableClass));
        }

        public Builder tags(@Nullable Output<List<GlobalTableTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<GlobalTableTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(GlobalTableTagArgs... tags) {
            return tags(List.of(tags));
        }

        public GlobalTableReplicaSpecificationArgs build() {
            $.region = Objects.requireNonNull($.region, "expected parameter 'region' to be non-null");
            return $;
        }
    }

}
