// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iot.outputs;

import com.pulumi.awsnative.iot.outputs.JobTemplateRateIncreaseCriteria;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class JobTemplateExponentialRolloutRate {
    /**
     * @return The minimum number of things that will be notified of a pending job, per minute at the start of job rollout. This parameter allows you to define the initial rate of rollout.
     * 
     */
    private Integer baseRatePerMinute;
    /**
     * @return The exponential factor to increase the rate of rollout for a job.
     * 
     */
    private Double incrementFactor;
    /**
     * @return The criteria to initiate the increase in rate of rollout for a job.
     * 
     */
    private JobTemplateRateIncreaseCriteria rateIncreaseCriteria;

    private JobTemplateExponentialRolloutRate() {}
    /**
     * @return The minimum number of things that will be notified of a pending job, per minute at the start of job rollout. This parameter allows you to define the initial rate of rollout.
     * 
     */
    public Integer baseRatePerMinute() {
        return this.baseRatePerMinute;
    }
    /**
     * @return The exponential factor to increase the rate of rollout for a job.
     * 
     */
    public Double incrementFactor() {
        return this.incrementFactor;
    }
    /**
     * @return The criteria to initiate the increase in rate of rollout for a job.
     * 
     */
    public JobTemplateRateIncreaseCriteria rateIncreaseCriteria() {
        return this.rateIncreaseCriteria;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobTemplateExponentialRolloutRate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer baseRatePerMinute;
        private Double incrementFactor;
        private JobTemplateRateIncreaseCriteria rateIncreaseCriteria;
        public Builder() {}
        public Builder(JobTemplateExponentialRolloutRate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseRatePerMinute = defaults.baseRatePerMinute;
    	      this.incrementFactor = defaults.incrementFactor;
    	      this.rateIncreaseCriteria = defaults.rateIncreaseCriteria;
        }

        @CustomType.Setter
        public Builder baseRatePerMinute(Integer baseRatePerMinute) {
            this.baseRatePerMinute = Objects.requireNonNull(baseRatePerMinute);
            return this;
        }
        @CustomType.Setter
        public Builder incrementFactor(Double incrementFactor) {
            this.incrementFactor = Objects.requireNonNull(incrementFactor);
            return this;
        }
        @CustomType.Setter
        public Builder rateIncreaseCriteria(JobTemplateRateIncreaseCriteria rateIncreaseCriteria) {
            this.rateIncreaseCriteria = Objects.requireNonNull(rateIncreaseCriteria);
            return this;
        }
        public JobTemplateExponentialRolloutRate build() {
            final var o = new JobTemplateExponentialRolloutRate();
            o.baseRatePerMinute = baseRatePerMinute;
            o.incrementFactor = incrementFactor;
            o.rateIncreaseCriteria = rateIncreaseCriteria;
            return o;
        }
    }
}
