// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Metadata properties of the tracking entity, trial, or trial component.
 * 
 */
public final class ModelPackageMetadataPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelPackageMetadataPropertiesArgs Empty = new ModelPackageMetadataPropertiesArgs();

    /**
     * The commit ID.
     * 
     */
    @Import(name="commitId")
    private @Nullable Output<String> commitId;

    /**
     * @return The commit ID.
     * 
     */
    public Optional<Output<String>> commitId() {
        return Optional.ofNullable(this.commitId);
    }

    /**
     * The entity this entity was generated by.
     * 
     */
    @Import(name="generatedBy")
    private @Nullable Output<String> generatedBy;

    /**
     * @return The entity this entity was generated by.
     * 
     */
    public Optional<Output<String>> generatedBy() {
        return Optional.ofNullable(this.generatedBy);
    }

    /**
     * The project ID metadata.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return The project ID metadata.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The repository metadata.
     * 
     */
    @Import(name="repository")
    private @Nullable Output<String> repository;

    /**
     * @return The repository metadata.
     * 
     */
    public Optional<Output<String>> repository() {
        return Optional.ofNullable(this.repository);
    }

    private ModelPackageMetadataPropertiesArgs() {}

    private ModelPackageMetadataPropertiesArgs(ModelPackageMetadataPropertiesArgs $) {
        this.commitId = $.commitId;
        this.generatedBy = $.generatedBy;
        this.projectId = $.projectId;
        this.repository = $.repository;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelPackageMetadataPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelPackageMetadataPropertiesArgs $;

        public Builder() {
            $ = new ModelPackageMetadataPropertiesArgs();
        }

        public Builder(ModelPackageMetadataPropertiesArgs defaults) {
            $ = new ModelPackageMetadataPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param commitId The commit ID.
         * 
         * @return builder
         * 
         */
        public Builder commitId(@Nullable Output<String> commitId) {
            $.commitId = commitId;
            return this;
        }

        /**
         * @param commitId The commit ID.
         * 
         * @return builder
         * 
         */
        public Builder commitId(String commitId) {
            return commitId(Output.of(commitId));
        }

        /**
         * @param generatedBy The entity this entity was generated by.
         * 
         * @return builder
         * 
         */
        public Builder generatedBy(@Nullable Output<String> generatedBy) {
            $.generatedBy = generatedBy;
            return this;
        }

        /**
         * @param generatedBy The entity this entity was generated by.
         * 
         * @return builder
         * 
         */
        public Builder generatedBy(String generatedBy) {
            return generatedBy(Output.of(generatedBy));
        }

        /**
         * @param projectId The project ID metadata.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The project ID metadata.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param repository The repository metadata.
         * 
         * @return builder
         * 
         */
        public Builder repository(@Nullable Output<String> repository) {
            $.repository = repository;
            return this;
        }

        /**
         * @param repository The repository metadata.
         * 
         * @return builder
         * 
         */
        public Builder repository(String repository) {
            return repository(Output.of(repository));
        }

        public ModelPackageMetadataPropertiesArgs build() {
            return $;
        }
    }

}
