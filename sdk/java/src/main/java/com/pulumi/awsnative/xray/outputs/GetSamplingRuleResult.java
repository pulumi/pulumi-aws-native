// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.xray.outputs;

import com.pulumi.awsnative.xray.outputs.SamplingRule;
import com.pulumi.awsnative.xray.outputs.SamplingRuleRecord;
import com.pulumi.awsnative.xray.outputs.SamplingRuleUpdate;
import com.pulumi.awsnative.xray.outputs.TagsItemProperties;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSamplingRuleResult {
    private @Nullable String ruleARN;
    private @Nullable String ruleName;
    private @Nullable SamplingRule samplingRule;
    private @Nullable SamplingRuleRecord samplingRuleRecord;
    private @Nullable SamplingRuleUpdate samplingRuleUpdate;
    private @Nullable List<TagsItemProperties> tags;

    private GetSamplingRuleResult() {}
    public Optional<String> ruleARN() {
        return Optional.ofNullable(this.ruleARN);
    }
    public Optional<String> ruleName() {
        return Optional.ofNullable(this.ruleName);
    }
    public Optional<SamplingRule> samplingRule() {
        return Optional.ofNullable(this.samplingRule);
    }
    public Optional<SamplingRuleRecord> samplingRuleRecord() {
        return Optional.ofNullable(this.samplingRuleRecord);
    }
    public Optional<SamplingRuleUpdate> samplingRuleUpdate() {
        return Optional.ofNullable(this.samplingRuleUpdate);
    }
    public List<TagsItemProperties> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSamplingRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String ruleARN;
        private @Nullable String ruleName;
        private @Nullable SamplingRule samplingRule;
        private @Nullable SamplingRuleRecord samplingRuleRecord;
        private @Nullable SamplingRuleUpdate samplingRuleUpdate;
        private @Nullable List<TagsItemProperties> tags;
        public Builder() {}
        public Builder(GetSamplingRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ruleARN = defaults.ruleARN;
    	      this.ruleName = defaults.ruleName;
    	      this.samplingRule = defaults.samplingRule;
    	      this.samplingRuleRecord = defaults.samplingRuleRecord;
    	      this.samplingRuleUpdate = defaults.samplingRuleUpdate;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder ruleARN(@Nullable String ruleARN) {
            this.ruleARN = ruleARN;
            return this;
        }
        @CustomType.Setter
        public Builder ruleName(@Nullable String ruleName) {
            this.ruleName = ruleName;
            return this;
        }
        @CustomType.Setter
        public Builder samplingRule(@Nullable SamplingRule samplingRule) {
            this.samplingRule = samplingRule;
            return this;
        }
        @CustomType.Setter
        public Builder samplingRuleRecord(@Nullable SamplingRuleRecord samplingRuleRecord) {
            this.samplingRuleRecord = samplingRuleRecord;
            return this;
        }
        @CustomType.Setter
        public Builder samplingRuleUpdate(@Nullable SamplingRuleUpdate samplingRuleUpdate) {
            this.samplingRuleUpdate = samplingRuleUpdate;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<TagsItemProperties> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(TagsItemProperties... tags) {
            return tags(List.of(tags));
        }
        public GetSamplingRuleResult build() {
            final var o = new GetSamplingRuleResult();
            o.ruleARN = ruleARN;
            o.ruleName = ruleName;
            o.samplingRule = samplingRule;
            o.samplingRuleRecord = samplingRuleRecord;
            o.samplingRuleUpdate = samplingRuleUpdate;
            o.tags = tags;
            return o;
        }
    }
}
