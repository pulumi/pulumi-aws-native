// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.outputs;

import com.pulumi.awsnative.sagemaker.outputs.DomainSettings;
import com.pulumi.awsnative.sagemaker.outputs.DomainUserSettings;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainResult {
    /**
     * @return The default user settings.
     * 
     */
    private @Nullable DomainUserSettings defaultUserSettings;
    /**
     * @return The Amazon Resource Name (ARN) of the created domain.
     * 
     */
    private @Nullable String domainArn;
    /**
     * @return The domain name.
     * 
     */
    private @Nullable String domainId;
    private @Nullable DomainSettings domainSettings;
    /**
     * @return The ID of the Amazon Elastic File System (EFS) managed by this Domain.
     * 
     */
    private @Nullable String homeEfsFileSystemId;
    /**
     * @return The ID of the security group that authorizes traffic between the RSessionGateway apps and the RStudioServerPro app.
     * 
     */
    private @Nullable String securityGroupIdForDomainBoundary;
    /**
     * @return The SSO managed application instance ID.
     * 
     */
    private @Nullable String singleSignOnManagedApplicationInstanceId;
    /**
     * @return The URL to the created domain.
     * 
     */
    private @Nullable String url;

    private GetDomainResult() {}
    /**
     * @return The default user settings.
     * 
     */
    public Optional<DomainUserSettings> defaultUserSettings() {
        return Optional.ofNullable(this.defaultUserSettings);
    }
    /**
     * @return The Amazon Resource Name (ARN) of the created domain.
     * 
     */
    public Optional<String> domainArn() {
        return Optional.ofNullable(this.domainArn);
    }
    /**
     * @return The domain name.
     * 
     */
    public Optional<String> domainId() {
        return Optional.ofNullable(this.domainId);
    }
    public Optional<DomainSettings> domainSettings() {
        return Optional.ofNullable(this.domainSettings);
    }
    /**
     * @return The ID of the Amazon Elastic File System (EFS) managed by this Domain.
     * 
     */
    public Optional<String> homeEfsFileSystemId() {
        return Optional.ofNullable(this.homeEfsFileSystemId);
    }
    /**
     * @return The ID of the security group that authorizes traffic between the RSessionGateway apps and the RStudioServerPro app.
     * 
     */
    public Optional<String> securityGroupIdForDomainBoundary() {
        return Optional.ofNullable(this.securityGroupIdForDomainBoundary);
    }
    /**
     * @return The SSO managed application instance ID.
     * 
     */
    public Optional<String> singleSignOnManagedApplicationInstanceId() {
        return Optional.ofNullable(this.singleSignOnManagedApplicationInstanceId);
    }
    /**
     * @return The URL to the created domain.
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DomainUserSettings defaultUserSettings;
        private @Nullable String domainArn;
        private @Nullable String domainId;
        private @Nullable DomainSettings domainSettings;
        private @Nullable String homeEfsFileSystemId;
        private @Nullable String securityGroupIdForDomainBoundary;
        private @Nullable String singleSignOnManagedApplicationInstanceId;
        private @Nullable String url;
        public Builder() {}
        public Builder(GetDomainResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultUserSettings = defaults.defaultUserSettings;
    	      this.domainArn = defaults.domainArn;
    	      this.domainId = defaults.domainId;
    	      this.domainSettings = defaults.domainSettings;
    	      this.homeEfsFileSystemId = defaults.homeEfsFileSystemId;
    	      this.securityGroupIdForDomainBoundary = defaults.securityGroupIdForDomainBoundary;
    	      this.singleSignOnManagedApplicationInstanceId = defaults.singleSignOnManagedApplicationInstanceId;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder defaultUserSettings(@Nullable DomainUserSettings defaultUserSettings) {
            this.defaultUserSettings = defaultUserSettings;
            return this;
        }
        @CustomType.Setter
        public Builder domainArn(@Nullable String domainArn) {
            this.domainArn = domainArn;
            return this;
        }
        @CustomType.Setter
        public Builder domainId(@Nullable String domainId) {
            this.domainId = domainId;
            return this;
        }
        @CustomType.Setter
        public Builder domainSettings(@Nullable DomainSettings domainSettings) {
            this.domainSettings = domainSettings;
            return this;
        }
        @CustomType.Setter
        public Builder homeEfsFileSystemId(@Nullable String homeEfsFileSystemId) {
            this.homeEfsFileSystemId = homeEfsFileSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupIdForDomainBoundary(@Nullable String securityGroupIdForDomainBoundary) {
            this.securityGroupIdForDomainBoundary = securityGroupIdForDomainBoundary;
            return this;
        }
        @CustomType.Setter
        public Builder singleSignOnManagedApplicationInstanceId(@Nullable String singleSignOnManagedApplicationInstanceId) {
            this.singleSignOnManagedApplicationInstanceId = singleSignOnManagedApplicationInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {
            this.url = url;
            return this;
        }
        public GetDomainResult build() {
            final var o = new GetDomainResult();
            o.defaultUserSettings = defaultUserSettings;
            o.domainArn = domainArn;
            o.domainId = domainId;
            o.domainSettings = domainSettings;
            o.homeEfsFileSystemId = homeEfsFileSystemId;
            o.securityGroupIdForDomainBoundary = securityGroupIdForDomainBoundary;
            o.singleSignOnManagedApplicationInstanceId = singleSignOnManagedApplicationInstanceId;
            o.url = url;
            return o;
        }
    }
}
