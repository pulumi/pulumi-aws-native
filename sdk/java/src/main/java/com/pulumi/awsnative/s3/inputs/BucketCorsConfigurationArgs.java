// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.inputs.BucketCorsRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


public final class BucketCorsConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketCorsConfigurationArgs Empty = new BucketCorsConfigurationArgs();

    @Import(name="corsRules", required=true)
    private Output<List<BucketCorsRuleArgs>> corsRules;

    public Output<List<BucketCorsRuleArgs>> corsRules() {
        return this.corsRules;
    }

    private BucketCorsConfigurationArgs() {}

    private BucketCorsConfigurationArgs(BucketCorsConfigurationArgs $) {
        this.corsRules = $.corsRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketCorsConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketCorsConfigurationArgs $;

        public Builder() {
            $ = new BucketCorsConfigurationArgs();
        }

        public Builder(BucketCorsConfigurationArgs defaults) {
            $ = new BucketCorsConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder corsRules(Output<List<BucketCorsRuleArgs>> corsRules) {
            $.corsRules = corsRules;
            return this;
        }

        public Builder corsRules(List<BucketCorsRuleArgs> corsRules) {
            return corsRules(Output.of(corsRules));
        }

        public Builder corsRules(BucketCorsRuleArgs... corsRules) {
            return corsRules(List.of(corsRules));
        }

        public BucketCorsConfigurationArgs build() {
            $.corsRules = Objects.requireNonNull($.corsRules, "expected parameter 'corsRules' to be non-null");
            return $;
        }
    }

}
