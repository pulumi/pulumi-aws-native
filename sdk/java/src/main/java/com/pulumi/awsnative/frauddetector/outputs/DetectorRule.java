// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.frauddetector.outputs;

import com.pulumi.awsnative.frauddetector.enums.DetectorRuleLanguage;
import com.pulumi.awsnative.frauddetector.outputs.DetectorOutcome;
import com.pulumi.awsnative.frauddetector.outputs.DetectorTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DetectorRule {
    private @Nullable String arn;
    /**
     * @return The time when the event type was created.
     * 
     */
    private @Nullable String createdTime;
    /**
     * @return The description.
     * 
     */
    private @Nullable String description;
    private @Nullable String detectorId;
    private @Nullable String expression;
    private @Nullable DetectorRuleLanguage language;
    /**
     * @return The time when the event type was last updated.
     * 
     */
    private @Nullable String lastUpdatedTime;
    private @Nullable List<DetectorOutcome> outcomes;
    private @Nullable String ruleId;
    private @Nullable String ruleVersion;
    /**
     * @return Tags associated with this event type.
     * 
     */
    private @Nullable List<DetectorTag> tags;

    private DetectorRule() {}
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return The time when the event type was created.
     * 
     */
    public Optional<String> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }
    /**
     * @return The description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<String> detectorId() {
        return Optional.ofNullable(this.detectorId);
    }
    public Optional<String> expression() {
        return Optional.ofNullable(this.expression);
    }
    public Optional<DetectorRuleLanguage> language() {
        return Optional.ofNullable(this.language);
    }
    /**
     * @return The time when the event type was last updated.
     * 
     */
    public Optional<String> lastUpdatedTime() {
        return Optional.ofNullable(this.lastUpdatedTime);
    }
    public List<DetectorOutcome> outcomes() {
        return this.outcomes == null ? List.of() : this.outcomes;
    }
    public Optional<String> ruleId() {
        return Optional.ofNullable(this.ruleId);
    }
    public Optional<String> ruleVersion() {
        return Optional.ofNullable(this.ruleVersion);
    }
    /**
     * @return Tags associated with this event type.
     * 
     */
    public List<DetectorTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DetectorRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String createdTime;
        private @Nullable String description;
        private @Nullable String detectorId;
        private @Nullable String expression;
        private @Nullable DetectorRuleLanguage language;
        private @Nullable String lastUpdatedTime;
        private @Nullable List<DetectorOutcome> outcomes;
        private @Nullable String ruleId;
        private @Nullable String ruleVersion;
        private @Nullable List<DetectorTag> tags;
        public Builder() {}
        public Builder(DetectorRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.createdTime = defaults.createdTime;
    	      this.description = defaults.description;
    	      this.detectorId = defaults.detectorId;
    	      this.expression = defaults.expression;
    	      this.language = defaults.language;
    	      this.lastUpdatedTime = defaults.lastUpdatedTime;
    	      this.outcomes = defaults.outcomes;
    	      this.ruleId = defaults.ruleId;
    	      this.ruleVersion = defaults.ruleVersion;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder createdTime(@Nullable String createdTime) {
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder detectorId(@Nullable String detectorId) {
            this.detectorId = detectorId;
            return this;
        }
        @CustomType.Setter
        public Builder expression(@Nullable String expression) {
            this.expression = expression;
            return this;
        }
        @CustomType.Setter
        public Builder language(@Nullable DetectorRuleLanguage language) {
            this.language = language;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedTime(@Nullable String lastUpdatedTime) {
            this.lastUpdatedTime = lastUpdatedTime;
            return this;
        }
        @CustomType.Setter
        public Builder outcomes(@Nullable List<DetectorOutcome> outcomes) {
            this.outcomes = outcomes;
            return this;
        }
        public Builder outcomes(DetectorOutcome... outcomes) {
            return outcomes(List.of(outcomes));
        }
        @CustomType.Setter
        public Builder ruleId(@Nullable String ruleId) {
            this.ruleId = ruleId;
            return this;
        }
        @CustomType.Setter
        public Builder ruleVersion(@Nullable String ruleVersion) {
            this.ruleVersion = ruleVersion;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<DetectorTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(DetectorTag... tags) {
            return tags(List.of(tags));
        }
        public DetectorRule build() {
            final var o = new DetectorRule();
            o.arn = arn;
            o.createdTime = createdTime;
            o.description = description;
            o.detectorId = detectorId;
            o.expression = expression;
            o.language = language;
            o.lastUpdatedTime = lastUpdatedTime;
            o.outcomes = outcomes;
            o.ruleId = ruleId;
            o.ruleVersion = ruleVersion;
            o.tags = tags;
            return o;
        }
    }
}
