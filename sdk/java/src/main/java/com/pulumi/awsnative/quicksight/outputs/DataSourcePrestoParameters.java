// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DataSourcePrestoParameters {
    /**
     * @return &lt;p&gt;Catalog.&lt;/p&gt;
     * 
     */
    private String catalog;
    /**
     * @return &lt;p&gt;Host.&lt;/p&gt;
     * 
     */
    private String host;
    /**
     * @return &lt;p&gt;Port.&lt;/p&gt;
     * 
     */
    private Double port;

    private DataSourcePrestoParameters() {}
    /**
     * @return &lt;p&gt;Catalog.&lt;/p&gt;
     * 
     */
    public String catalog() {
        return this.catalog;
    }
    /**
     * @return &lt;p&gt;Host.&lt;/p&gt;
     * 
     */
    public String host() {
        return this.host;
    }
    /**
     * @return &lt;p&gt;Port.&lt;/p&gt;
     * 
     */
    public Double port() {
        return this.port;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourcePrestoParameters defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String catalog;
        private String host;
        private Double port;
        public Builder() {}
        public Builder(DataSourcePrestoParameters defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.catalog = defaults.catalog;
    	      this.host = defaults.host;
    	      this.port = defaults.port;
        }

        @CustomType.Setter
        public Builder catalog(String catalog) {
            this.catalog = Objects.requireNonNull(catalog);
            return this;
        }
        @CustomType.Setter
        public Builder host(String host) {
            this.host = Objects.requireNonNull(host);
            return this;
        }
        @CustomType.Setter
        public Builder port(Double port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        public DataSourcePrestoParameters build() {
            final var o = new DataSourcePrestoParameters();
            o.catalog = catalog;
            o.host = host;
            o.port = port;
            return o;
        }
    }
}
