// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.apigateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentMethodSettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentMethodSettingArgs Empty = new DeploymentMethodSettingArgs();

    /**
     * Indicates whether the cached responses are encrypted
     * 
     */
    @Import(name="cacheDataEncrypted")
    private @Nullable Output<Boolean> cacheDataEncrypted;

    /**
     * @return Indicates whether the cached responses are encrypted
     * 
     */
    public Optional<Output<Boolean>> cacheDataEncrypted() {
        return Optional.ofNullable(this.cacheDataEncrypted);
    }

    /**
     * The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches responses.
     * 
     */
    @Import(name="cacheTtlInSeconds")
    private @Nullable Output<Integer> cacheTtlInSeconds;

    /**
     * @return The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches responses.
     * 
     */
    public Optional<Output<Integer>> cacheTtlInSeconds() {
        return Optional.ofNullable(this.cacheTtlInSeconds);
    }

    /**
     * Indicates whether responses are cached and returned for requests. You must enable a cache cluster on the stage to cache responses.
     * 
     */
    @Import(name="cachingEnabled")
    private @Nullable Output<Boolean> cachingEnabled;

    /**
     * @return Indicates whether responses are cached and returned for requests. You must enable a cache cluster on the stage to cache responses.
     * 
     */
    public Optional<Output<Boolean>> cachingEnabled() {
        return Optional.ofNullable(this.cachingEnabled);
    }

    /**
     * Indicates whether data trace logging is enabled for methods in the stage. API Gateway pushes these logs to Amazon CloudWatch Logs.
     * 
     */
    @Import(name="dataTraceEnabled")
    private @Nullable Output<Boolean> dataTraceEnabled;

    /**
     * @return Indicates whether data trace logging is enabled for methods in the stage. API Gateway pushes these logs to Amazon CloudWatch Logs.
     * 
     */
    public Optional<Output<Boolean>> dataTraceEnabled() {
        return Optional.ofNullable(this.dataTraceEnabled);
    }

    /**
     * The HTTP method.
     * 
     */
    @Import(name="httpMethod")
    private @Nullable Output<String> httpMethod;

    /**
     * @return The HTTP method.
     * 
     */
    public Optional<Output<String>> httpMethod() {
        return Optional.ofNullable(this.httpMethod);
    }

    /**
     * The logging level for this method. For valid values, see the loggingLevel property of the Stage resource in the Amazon API Gateway API Reference.
     * 
     */
    @Import(name="loggingLevel")
    private @Nullable Output<String> loggingLevel;

    /**
     * @return The logging level for this method. For valid values, see the loggingLevel property of the Stage resource in the Amazon API Gateway API Reference.
     * 
     */
    public Optional<Output<String>> loggingLevel() {
        return Optional.ofNullable(this.loggingLevel);
    }

    /**
     * Indicates whether Amazon CloudWatch metrics are enabled for methods in the stage.
     * 
     */
    @Import(name="metricsEnabled")
    private @Nullable Output<Boolean> metricsEnabled;

    /**
     * @return Indicates whether Amazon CloudWatch metrics are enabled for methods in the stage.
     * 
     */
    public Optional<Output<Boolean>> metricsEnabled() {
        return Optional.ofNullable(this.metricsEnabled);
    }

    /**
     * The resource path for this method. Forward slashes (/) are encoded as ~1 and the initial slash must include a forward slash.
     * 
     */
    @Import(name="resourcePath")
    private @Nullable Output<String> resourcePath;

    /**
     * @return The resource path for this method. Forward slashes (/) are encoded as ~1 and the initial slash must include a forward slash.
     * 
     */
    public Optional<Output<String>> resourcePath() {
        return Optional.ofNullable(this.resourcePath);
    }

    /**
     * The number of burst requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
     * 
     */
    @Import(name="throttlingBurstLimit")
    private @Nullable Output<Integer> throttlingBurstLimit;

    /**
     * @return The number of burst requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
     * 
     */
    public Optional<Output<Integer>> throttlingBurstLimit() {
        return Optional.ofNullable(this.throttlingBurstLimit);
    }

    /**
     * The number of steady-state requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
     * 
     */
    @Import(name="throttlingRateLimit")
    private @Nullable Output<Double> throttlingRateLimit;

    /**
     * @return The number of steady-state requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
     * 
     */
    public Optional<Output<Double>> throttlingRateLimit() {
        return Optional.ofNullable(this.throttlingRateLimit);
    }

    private DeploymentMethodSettingArgs() {}

    private DeploymentMethodSettingArgs(DeploymentMethodSettingArgs $) {
        this.cacheDataEncrypted = $.cacheDataEncrypted;
        this.cacheTtlInSeconds = $.cacheTtlInSeconds;
        this.cachingEnabled = $.cachingEnabled;
        this.dataTraceEnabled = $.dataTraceEnabled;
        this.httpMethod = $.httpMethod;
        this.loggingLevel = $.loggingLevel;
        this.metricsEnabled = $.metricsEnabled;
        this.resourcePath = $.resourcePath;
        this.throttlingBurstLimit = $.throttlingBurstLimit;
        this.throttlingRateLimit = $.throttlingRateLimit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentMethodSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentMethodSettingArgs $;

        public Builder() {
            $ = new DeploymentMethodSettingArgs();
        }

        public Builder(DeploymentMethodSettingArgs defaults) {
            $ = new DeploymentMethodSettingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cacheDataEncrypted Indicates whether the cached responses are encrypted
         * 
         * @return builder
         * 
         */
        public Builder cacheDataEncrypted(@Nullable Output<Boolean> cacheDataEncrypted) {
            $.cacheDataEncrypted = cacheDataEncrypted;
            return this;
        }

        /**
         * @param cacheDataEncrypted Indicates whether the cached responses are encrypted
         * 
         * @return builder
         * 
         */
        public Builder cacheDataEncrypted(Boolean cacheDataEncrypted) {
            return cacheDataEncrypted(Output.of(cacheDataEncrypted));
        }

        /**
         * @param cacheTtlInSeconds The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches responses.
         * 
         * @return builder
         * 
         */
        public Builder cacheTtlInSeconds(@Nullable Output<Integer> cacheTtlInSeconds) {
            $.cacheTtlInSeconds = cacheTtlInSeconds;
            return this;
        }

        /**
         * @param cacheTtlInSeconds The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches responses.
         * 
         * @return builder
         * 
         */
        public Builder cacheTtlInSeconds(Integer cacheTtlInSeconds) {
            return cacheTtlInSeconds(Output.of(cacheTtlInSeconds));
        }

        /**
         * @param cachingEnabled Indicates whether responses are cached and returned for requests. You must enable a cache cluster on the stage to cache responses.
         * 
         * @return builder
         * 
         */
        public Builder cachingEnabled(@Nullable Output<Boolean> cachingEnabled) {
            $.cachingEnabled = cachingEnabled;
            return this;
        }

        /**
         * @param cachingEnabled Indicates whether responses are cached and returned for requests. You must enable a cache cluster on the stage to cache responses.
         * 
         * @return builder
         * 
         */
        public Builder cachingEnabled(Boolean cachingEnabled) {
            return cachingEnabled(Output.of(cachingEnabled));
        }

        /**
         * @param dataTraceEnabled Indicates whether data trace logging is enabled for methods in the stage. API Gateway pushes these logs to Amazon CloudWatch Logs.
         * 
         * @return builder
         * 
         */
        public Builder dataTraceEnabled(@Nullable Output<Boolean> dataTraceEnabled) {
            $.dataTraceEnabled = dataTraceEnabled;
            return this;
        }

        /**
         * @param dataTraceEnabled Indicates whether data trace logging is enabled for methods in the stage. API Gateway pushes these logs to Amazon CloudWatch Logs.
         * 
         * @return builder
         * 
         */
        public Builder dataTraceEnabled(Boolean dataTraceEnabled) {
            return dataTraceEnabled(Output.of(dataTraceEnabled));
        }

        /**
         * @param httpMethod The HTTP method.
         * 
         * @return builder
         * 
         */
        public Builder httpMethod(@Nullable Output<String> httpMethod) {
            $.httpMethod = httpMethod;
            return this;
        }

        /**
         * @param httpMethod The HTTP method.
         * 
         * @return builder
         * 
         */
        public Builder httpMethod(String httpMethod) {
            return httpMethod(Output.of(httpMethod));
        }

        /**
         * @param loggingLevel The logging level for this method. For valid values, see the loggingLevel property of the Stage resource in the Amazon API Gateway API Reference.
         * 
         * @return builder
         * 
         */
        public Builder loggingLevel(@Nullable Output<String> loggingLevel) {
            $.loggingLevel = loggingLevel;
            return this;
        }

        /**
         * @param loggingLevel The logging level for this method. For valid values, see the loggingLevel property of the Stage resource in the Amazon API Gateway API Reference.
         * 
         * @return builder
         * 
         */
        public Builder loggingLevel(String loggingLevel) {
            return loggingLevel(Output.of(loggingLevel));
        }

        /**
         * @param metricsEnabled Indicates whether Amazon CloudWatch metrics are enabled for methods in the stage.
         * 
         * @return builder
         * 
         */
        public Builder metricsEnabled(@Nullable Output<Boolean> metricsEnabled) {
            $.metricsEnabled = metricsEnabled;
            return this;
        }

        /**
         * @param metricsEnabled Indicates whether Amazon CloudWatch metrics are enabled for methods in the stage.
         * 
         * @return builder
         * 
         */
        public Builder metricsEnabled(Boolean metricsEnabled) {
            return metricsEnabled(Output.of(metricsEnabled));
        }

        /**
         * @param resourcePath The resource path for this method. Forward slashes (/) are encoded as ~1 and the initial slash must include a forward slash.
         * 
         * @return builder
         * 
         */
        public Builder resourcePath(@Nullable Output<String> resourcePath) {
            $.resourcePath = resourcePath;
            return this;
        }

        /**
         * @param resourcePath The resource path for this method. Forward slashes (/) are encoded as ~1 and the initial slash must include a forward slash.
         * 
         * @return builder
         * 
         */
        public Builder resourcePath(String resourcePath) {
            return resourcePath(Output.of(resourcePath));
        }

        /**
         * @param throttlingBurstLimit The number of burst requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
         * 
         * @return builder
         * 
         */
        public Builder throttlingBurstLimit(@Nullable Output<Integer> throttlingBurstLimit) {
            $.throttlingBurstLimit = throttlingBurstLimit;
            return this;
        }

        /**
         * @param throttlingBurstLimit The number of burst requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
         * 
         * @return builder
         * 
         */
        public Builder throttlingBurstLimit(Integer throttlingBurstLimit) {
            return throttlingBurstLimit(Output.of(throttlingBurstLimit));
        }

        /**
         * @param throttlingRateLimit The number of steady-state requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
         * 
         * @return builder
         * 
         */
        public Builder throttlingRateLimit(@Nullable Output<Double> throttlingRateLimit) {
            $.throttlingRateLimit = throttlingRateLimit;
            return this;
        }

        /**
         * @param throttlingRateLimit The number of steady-state requests per second that API Gateway permits across all APIs, stages, and methods in your AWS account.
         * 
         * @return builder
         * 
         */
        public Builder throttlingRateLimit(Double throttlingRateLimit) {
            return throttlingRateLimit(Output.of(throttlingRateLimit));
        }

        public DeploymentMethodSettingArgs build() {
            return $;
        }
    }

}
