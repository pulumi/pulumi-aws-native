// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.dynamodb.inputs;

import com.pulumi.awsnative.dynamodb.inputs.GlobalTableKeySchemaArgs;
import com.pulumi.awsnative.dynamodb.inputs.GlobalTableProjectionArgs;
import com.pulumi.awsnative.dynamodb.inputs.GlobalTableWriteProvisionedThroughputSettingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GlobalTableGlobalSecondaryIndexArgs extends com.pulumi.resources.ResourceArgs {

    public static final GlobalTableGlobalSecondaryIndexArgs Empty = new GlobalTableGlobalSecondaryIndexArgs();

    @Import(name="indexName", required=true)
    private Output<String> indexName;

    public Output<String> indexName() {
        return this.indexName;
    }

    @Import(name="keySchema", required=true)
    private Output<List<GlobalTableKeySchemaArgs>> keySchema;

    public Output<List<GlobalTableKeySchemaArgs>> keySchema() {
        return this.keySchema;
    }

    @Import(name="projection", required=true)
    private Output<GlobalTableProjectionArgs> projection;

    public Output<GlobalTableProjectionArgs> projection() {
        return this.projection;
    }

    @Import(name="writeProvisionedThroughputSettings")
    private @Nullable Output<GlobalTableWriteProvisionedThroughputSettingsArgs> writeProvisionedThroughputSettings;

    public Optional<Output<GlobalTableWriteProvisionedThroughputSettingsArgs>> writeProvisionedThroughputSettings() {
        return Optional.ofNullable(this.writeProvisionedThroughputSettings);
    }

    private GlobalTableGlobalSecondaryIndexArgs() {}

    private GlobalTableGlobalSecondaryIndexArgs(GlobalTableGlobalSecondaryIndexArgs $) {
        this.indexName = $.indexName;
        this.keySchema = $.keySchema;
        this.projection = $.projection;
        this.writeProvisionedThroughputSettings = $.writeProvisionedThroughputSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GlobalTableGlobalSecondaryIndexArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GlobalTableGlobalSecondaryIndexArgs $;

        public Builder() {
            $ = new GlobalTableGlobalSecondaryIndexArgs();
        }

        public Builder(GlobalTableGlobalSecondaryIndexArgs defaults) {
            $ = new GlobalTableGlobalSecondaryIndexArgs(Objects.requireNonNull(defaults));
        }

        public Builder indexName(Output<String> indexName) {
            $.indexName = indexName;
            return this;
        }

        public Builder indexName(String indexName) {
            return indexName(Output.of(indexName));
        }

        public Builder keySchema(Output<List<GlobalTableKeySchemaArgs>> keySchema) {
            $.keySchema = keySchema;
            return this;
        }

        public Builder keySchema(List<GlobalTableKeySchemaArgs> keySchema) {
            return keySchema(Output.of(keySchema));
        }

        public Builder keySchema(GlobalTableKeySchemaArgs... keySchema) {
            return keySchema(List.of(keySchema));
        }

        public Builder projection(Output<GlobalTableProjectionArgs> projection) {
            $.projection = projection;
            return this;
        }

        public Builder projection(GlobalTableProjectionArgs projection) {
            return projection(Output.of(projection));
        }

        public Builder writeProvisionedThroughputSettings(@Nullable Output<GlobalTableWriteProvisionedThroughputSettingsArgs> writeProvisionedThroughputSettings) {
            $.writeProvisionedThroughputSettings = writeProvisionedThroughputSettings;
            return this;
        }

        public Builder writeProvisionedThroughputSettings(GlobalTableWriteProvisionedThroughputSettingsArgs writeProvisionedThroughputSettings) {
            return writeProvisionedThroughputSettings(Output.of(writeProvisionedThroughputSettings));
        }

        public GlobalTableGlobalSecondaryIndexArgs build() {
            $.indexName = Objects.requireNonNull($.indexName, "expected parameter 'indexName' to be non-null");
            $.keySchema = Objects.requireNonNull($.keySchema, "expected parameter 'keySchema' to be non-null");
            $.projection = Objects.requireNonNull($.projection, "expected parameter 'projection' to be non-null");
            return $;
        }
    }

}
