// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotevents.inputs;

import com.pulumi.awsnative.iotevents.inputs.DetectorModelPayloadArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Sends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.
 * 
 */
public final class DetectorModelFirehoseArgs extends com.pulumi.resources.ResourceArgs {

    public static final DetectorModelFirehoseArgs Empty = new DetectorModelFirehoseArgs();

    /**
     * The name of the Kinesis Data Firehose delivery stream where the data is written.
     * 
     */
    @Import(name="deliveryStreamName", required=true)
    private Output<String> deliveryStreamName;

    /**
     * @return The name of the Kinesis Data Firehose delivery stream where the data is written.
     * 
     */
    public Output<String> deliveryStreamName() {
        return this.deliveryStreamName;
    }

    @Import(name="payload")
    private @Nullable Output<DetectorModelPayloadArgs> payload;

    public Optional<Output<DetectorModelPayloadArgs>> payload() {
        return Optional.ofNullable(this.payload);
    }

    /**
     * A character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: &#39;\n&#39; (newline), &#39;\t&#39; (tab), &#39;\r\n&#39; (Windows newline), &#39;,&#39; (comma).
     * 
     */
    @Import(name="separator")
    private @Nullable Output<String> separator;

    /**
     * @return A character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: &#39;\n&#39; (newline), &#39;\t&#39; (tab), &#39;\r\n&#39; (Windows newline), &#39;,&#39; (comma).
     * 
     */
    public Optional<Output<String>> separator() {
        return Optional.ofNullable(this.separator);
    }

    private DetectorModelFirehoseArgs() {}

    private DetectorModelFirehoseArgs(DetectorModelFirehoseArgs $) {
        this.deliveryStreamName = $.deliveryStreamName;
        this.payload = $.payload;
        this.separator = $.separator;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DetectorModelFirehoseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DetectorModelFirehoseArgs $;

        public Builder() {
            $ = new DetectorModelFirehoseArgs();
        }

        public Builder(DetectorModelFirehoseArgs defaults) {
            $ = new DetectorModelFirehoseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deliveryStreamName The name of the Kinesis Data Firehose delivery stream where the data is written.
         * 
         * @return builder
         * 
         */
        public Builder deliveryStreamName(Output<String> deliveryStreamName) {
            $.deliveryStreamName = deliveryStreamName;
            return this;
        }

        /**
         * @param deliveryStreamName The name of the Kinesis Data Firehose delivery stream where the data is written.
         * 
         * @return builder
         * 
         */
        public Builder deliveryStreamName(String deliveryStreamName) {
            return deliveryStreamName(Output.of(deliveryStreamName));
        }

        public Builder payload(@Nullable Output<DetectorModelPayloadArgs> payload) {
            $.payload = payload;
            return this;
        }

        public Builder payload(DetectorModelPayloadArgs payload) {
            return payload(Output.of(payload));
        }

        /**
         * @param separator A character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: &#39;\n&#39; (newline), &#39;\t&#39; (tab), &#39;\r\n&#39; (Windows newline), &#39;,&#39; (comma).
         * 
         * @return builder
         * 
         */
        public Builder separator(@Nullable Output<String> separator) {
            $.separator = separator;
            return this;
        }

        /**
         * @param separator A character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: &#39;\n&#39; (newline), &#39;\t&#39; (tab), &#39;\r\n&#39; (Windows newline), &#39;,&#39; (comma).
         * 
         * @return builder
         * 
         */
        public Builder separator(String separator) {
            return separator(Output.of(separator));
        }

        public DetectorModelFirehoseArgs build() {
            $.deliveryStreamName = Objects.requireNonNull($.deliveryStreamName, "expected parameter 'deliveryStreamName' to be non-null");
            return $;
        }
    }

}
