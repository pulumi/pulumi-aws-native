// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.inputs;

import com.pulumi.awsnative.sagemaker.inputs.MonitoringScheduleBaselineConfigArgs;
import com.pulumi.awsnative.sagemaker.inputs.MonitoringScheduleMonitoringAppSpecificationArgs;
import com.pulumi.awsnative.sagemaker.inputs.MonitoringScheduleMonitoringInputArgs;
import com.pulumi.awsnative.sagemaker.inputs.MonitoringScheduleMonitoringOutputConfigArgs;
import com.pulumi.awsnative.sagemaker.inputs.MonitoringScheduleMonitoringResourcesArgs;
import com.pulumi.awsnative.sagemaker.inputs.MonitoringScheduleNetworkConfigArgs;
import com.pulumi.awsnative.sagemaker.inputs.MonitoringScheduleStoppingConditionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines the monitoring job.
 * 
 */
public final class MonitoringScheduleMonitoringJobDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitoringScheduleMonitoringJobDefinitionArgs Empty = new MonitoringScheduleMonitoringJobDefinitionArgs();

    @Import(name="baselineConfig")
    private @Nullable Output<MonitoringScheduleBaselineConfigArgs> baselineConfig;

    public Optional<Output<MonitoringScheduleBaselineConfigArgs>> baselineConfig() {
        return Optional.ofNullable(this.baselineConfig);
    }

    /**
     * Sets the environment variables in the Docker container
     * 
     */
    @Import(name="environment")
    private @Nullable Output<Object> environment;

    /**
     * @return Sets the environment variables in the Docker container
     * 
     */
    public Optional<Output<Object>> environment() {
        return Optional.ofNullable(this.environment);
    }

    @Import(name="monitoringAppSpecification", required=true)
    private Output<MonitoringScheduleMonitoringAppSpecificationArgs> monitoringAppSpecification;

    public Output<MonitoringScheduleMonitoringAppSpecificationArgs> monitoringAppSpecification() {
        return this.monitoringAppSpecification;
    }

    @Import(name="monitoringInputs", required=true)
    private Output<List<MonitoringScheduleMonitoringInputArgs>> monitoringInputs;

    public Output<List<MonitoringScheduleMonitoringInputArgs>> monitoringInputs() {
        return this.monitoringInputs;
    }

    @Import(name="monitoringOutputConfig", required=true)
    private Output<MonitoringScheduleMonitoringOutputConfigArgs> monitoringOutputConfig;

    public Output<MonitoringScheduleMonitoringOutputConfigArgs> monitoringOutputConfig() {
        return this.monitoringOutputConfig;
    }

    @Import(name="monitoringResources", required=true)
    private Output<MonitoringScheduleMonitoringResourcesArgs> monitoringResources;

    public Output<MonitoringScheduleMonitoringResourcesArgs> monitoringResources() {
        return this.monitoringResources;
    }

    @Import(name="networkConfig")
    private @Nullable Output<MonitoringScheduleNetworkConfigArgs> networkConfig;

    public Optional<Output<MonitoringScheduleNetworkConfigArgs>> networkConfig() {
        return Optional.ofNullable(this.networkConfig);
    }

    /**
     * The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    @Import(name="stoppingCondition")
    private @Nullable Output<MonitoringScheduleStoppingConditionArgs> stoppingCondition;

    public Optional<Output<MonitoringScheduleStoppingConditionArgs>> stoppingCondition() {
        return Optional.ofNullable(this.stoppingCondition);
    }

    private MonitoringScheduleMonitoringJobDefinitionArgs() {}

    private MonitoringScheduleMonitoringJobDefinitionArgs(MonitoringScheduleMonitoringJobDefinitionArgs $) {
        this.baselineConfig = $.baselineConfig;
        this.environment = $.environment;
        this.monitoringAppSpecification = $.monitoringAppSpecification;
        this.monitoringInputs = $.monitoringInputs;
        this.monitoringOutputConfig = $.monitoringOutputConfig;
        this.monitoringResources = $.monitoringResources;
        this.networkConfig = $.networkConfig;
        this.roleArn = $.roleArn;
        this.stoppingCondition = $.stoppingCondition;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitoringScheduleMonitoringJobDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoringScheduleMonitoringJobDefinitionArgs $;

        public Builder() {
            $ = new MonitoringScheduleMonitoringJobDefinitionArgs();
        }

        public Builder(MonitoringScheduleMonitoringJobDefinitionArgs defaults) {
            $ = new MonitoringScheduleMonitoringJobDefinitionArgs(Objects.requireNonNull(defaults));
        }

        public Builder baselineConfig(@Nullable Output<MonitoringScheduleBaselineConfigArgs> baselineConfig) {
            $.baselineConfig = baselineConfig;
            return this;
        }

        public Builder baselineConfig(MonitoringScheduleBaselineConfigArgs baselineConfig) {
            return baselineConfig(Output.of(baselineConfig));
        }

        /**
         * @param environment Sets the environment variables in the Docker container
         * 
         * @return builder
         * 
         */
        public Builder environment(@Nullable Output<Object> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment Sets the environment variables in the Docker container
         * 
         * @return builder
         * 
         */
        public Builder environment(Object environment) {
            return environment(Output.of(environment));
        }

        public Builder monitoringAppSpecification(Output<MonitoringScheduleMonitoringAppSpecificationArgs> monitoringAppSpecification) {
            $.monitoringAppSpecification = monitoringAppSpecification;
            return this;
        }

        public Builder monitoringAppSpecification(MonitoringScheduleMonitoringAppSpecificationArgs monitoringAppSpecification) {
            return monitoringAppSpecification(Output.of(monitoringAppSpecification));
        }

        public Builder monitoringInputs(Output<List<MonitoringScheduleMonitoringInputArgs>> monitoringInputs) {
            $.monitoringInputs = monitoringInputs;
            return this;
        }

        public Builder monitoringInputs(List<MonitoringScheduleMonitoringInputArgs> monitoringInputs) {
            return monitoringInputs(Output.of(monitoringInputs));
        }

        public Builder monitoringInputs(MonitoringScheduleMonitoringInputArgs... monitoringInputs) {
            return monitoringInputs(List.of(monitoringInputs));
        }

        public Builder monitoringOutputConfig(Output<MonitoringScheduleMonitoringOutputConfigArgs> monitoringOutputConfig) {
            $.monitoringOutputConfig = monitoringOutputConfig;
            return this;
        }

        public Builder monitoringOutputConfig(MonitoringScheduleMonitoringOutputConfigArgs monitoringOutputConfig) {
            return monitoringOutputConfig(Output.of(monitoringOutputConfig));
        }

        public Builder monitoringResources(Output<MonitoringScheduleMonitoringResourcesArgs> monitoringResources) {
            $.monitoringResources = monitoringResources;
            return this;
        }

        public Builder monitoringResources(MonitoringScheduleMonitoringResourcesArgs monitoringResources) {
            return monitoringResources(Output.of(monitoringResources));
        }

        public Builder networkConfig(@Nullable Output<MonitoringScheduleNetworkConfigArgs> networkConfig) {
            $.networkConfig = networkConfig;
            return this;
        }

        public Builder networkConfig(MonitoringScheduleNetworkConfigArgs networkConfig) {
            return networkConfig(Output.of(networkConfig));
        }

        /**
         * @param roleArn The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder stoppingCondition(@Nullable Output<MonitoringScheduleStoppingConditionArgs> stoppingCondition) {
            $.stoppingCondition = stoppingCondition;
            return this;
        }

        public Builder stoppingCondition(MonitoringScheduleStoppingConditionArgs stoppingCondition) {
            return stoppingCondition(Output.of(stoppingCondition));
        }

        public MonitoringScheduleMonitoringJobDefinitionArgs build() {
            $.monitoringAppSpecification = Objects.requireNonNull($.monitoringAppSpecification, "expected parameter 'monitoringAppSpecification' to be non-null");
            $.monitoringInputs = Objects.requireNonNull($.monitoringInputs, "expected parameter 'monitoringInputs' to be non-null");
            $.monitoringOutputConfig = Objects.requireNonNull($.monitoringOutputConfig, "expected parameter 'monitoringOutputConfig' to be non-null");
            $.monitoringResources = Objects.requireNonNull($.monitoringResources, "expected parameter 'monitoringResources' to be non-null");
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            return $;
        }
    }

}
