// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.timestream.inputs;

import com.pulumi.awsnative.timestream.inputs.ScheduledQueryS3ConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


/**
 * Configuration for error reporting. Error reports will be generated when a problem is encountered when writing the query results.
 * 
 */
public final class ScheduledQueryErrorReportConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduledQueryErrorReportConfigurationArgs Empty = new ScheduledQueryErrorReportConfigurationArgs();

    @Import(name="s3Configuration", required=true)
    private Output<ScheduledQueryS3ConfigurationArgs> s3Configuration;

    public Output<ScheduledQueryS3ConfigurationArgs> s3Configuration() {
        return this.s3Configuration;
    }

    private ScheduledQueryErrorReportConfigurationArgs() {}

    private ScheduledQueryErrorReportConfigurationArgs(ScheduledQueryErrorReportConfigurationArgs $) {
        this.s3Configuration = $.s3Configuration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduledQueryErrorReportConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduledQueryErrorReportConfigurationArgs $;

        public Builder() {
            $ = new ScheduledQueryErrorReportConfigurationArgs();
        }

        public Builder(ScheduledQueryErrorReportConfigurationArgs defaults) {
            $ = new ScheduledQueryErrorReportConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder s3Configuration(Output<ScheduledQueryS3ConfigurationArgs> s3Configuration) {
            $.s3Configuration = s3Configuration;
            return this;
        }

        public Builder s3Configuration(ScheduledQueryS3ConfigurationArgs s3Configuration) {
            return s3Configuration(Output.of(s3Configuration));
        }

        public ScheduledQueryErrorReportConfigurationArgs build() {
            $.s3Configuration = Objects.requireNonNull($.s3Configuration, "expected parameter 's3Configuration' to be non-null");
            return $;
        }
    }

}
