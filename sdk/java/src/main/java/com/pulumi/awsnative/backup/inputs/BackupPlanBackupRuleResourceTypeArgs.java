// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.backup.inputs;

import com.pulumi.awsnative.backup.inputs.BackupPlanCopyActionResourceTypeArgs;
import com.pulumi.awsnative.backup.inputs.BackupPlanLifecycleResourceTypeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupPlanBackupRuleResourceTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackupPlanBackupRuleResourceTypeArgs Empty = new BackupPlanBackupRuleResourceTypeArgs();

    @Import(name="completionWindowMinutes")
    private @Nullable Output<Double> completionWindowMinutes;

    public Optional<Output<Double>> completionWindowMinutes() {
        return Optional.ofNullable(this.completionWindowMinutes);
    }

    @Import(name="copyActions")
    private @Nullable Output<List<BackupPlanCopyActionResourceTypeArgs>> copyActions;

    public Optional<Output<List<BackupPlanCopyActionResourceTypeArgs>>> copyActions() {
        return Optional.ofNullable(this.copyActions);
    }

    @Import(name="enableContinuousBackup")
    private @Nullable Output<Boolean> enableContinuousBackup;

    public Optional<Output<Boolean>> enableContinuousBackup() {
        return Optional.ofNullable(this.enableContinuousBackup);
    }

    @Import(name="lifecycle")
    private @Nullable Output<BackupPlanLifecycleResourceTypeArgs> lifecycle;

    public Optional<Output<BackupPlanLifecycleResourceTypeArgs>> lifecycle() {
        return Optional.ofNullable(this.lifecycle);
    }

    @Import(name="recoveryPointTags")
    private @Nullable Output<Object> recoveryPointTags;

    public Optional<Output<Object>> recoveryPointTags() {
        return Optional.ofNullable(this.recoveryPointTags);
    }

    @Import(name="ruleName", required=true)
    private Output<String> ruleName;

    public Output<String> ruleName() {
        return this.ruleName;
    }

    @Import(name="scheduleExpression")
    private @Nullable Output<String> scheduleExpression;

    public Optional<Output<String>> scheduleExpression() {
        return Optional.ofNullable(this.scheduleExpression);
    }

    @Import(name="startWindowMinutes")
    private @Nullable Output<Double> startWindowMinutes;

    public Optional<Output<Double>> startWindowMinutes() {
        return Optional.ofNullable(this.startWindowMinutes);
    }

    @Import(name="targetBackupVault", required=true)
    private Output<String> targetBackupVault;

    public Output<String> targetBackupVault() {
        return this.targetBackupVault;
    }

    private BackupPlanBackupRuleResourceTypeArgs() {}

    private BackupPlanBackupRuleResourceTypeArgs(BackupPlanBackupRuleResourceTypeArgs $) {
        this.completionWindowMinutes = $.completionWindowMinutes;
        this.copyActions = $.copyActions;
        this.enableContinuousBackup = $.enableContinuousBackup;
        this.lifecycle = $.lifecycle;
        this.recoveryPointTags = $.recoveryPointTags;
        this.ruleName = $.ruleName;
        this.scheduleExpression = $.scheduleExpression;
        this.startWindowMinutes = $.startWindowMinutes;
        this.targetBackupVault = $.targetBackupVault;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupPlanBackupRuleResourceTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupPlanBackupRuleResourceTypeArgs $;

        public Builder() {
            $ = new BackupPlanBackupRuleResourceTypeArgs();
        }

        public Builder(BackupPlanBackupRuleResourceTypeArgs defaults) {
            $ = new BackupPlanBackupRuleResourceTypeArgs(Objects.requireNonNull(defaults));
        }

        public Builder completionWindowMinutes(@Nullable Output<Double> completionWindowMinutes) {
            $.completionWindowMinutes = completionWindowMinutes;
            return this;
        }

        public Builder completionWindowMinutes(Double completionWindowMinutes) {
            return completionWindowMinutes(Output.of(completionWindowMinutes));
        }

        public Builder copyActions(@Nullable Output<List<BackupPlanCopyActionResourceTypeArgs>> copyActions) {
            $.copyActions = copyActions;
            return this;
        }

        public Builder copyActions(List<BackupPlanCopyActionResourceTypeArgs> copyActions) {
            return copyActions(Output.of(copyActions));
        }

        public Builder copyActions(BackupPlanCopyActionResourceTypeArgs... copyActions) {
            return copyActions(List.of(copyActions));
        }

        public Builder enableContinuousBackup(@Nullable Output<Boolean> enableContinuousBackup) {
            $.enableContinuousBackup = enableContinuousBackup;
            return this;
        }

        public Builder enableContinuousBackup(Boolean enableContinuousBackup) {
            return enableContinuousBackup(Output.of(enableContinuousBackup));
        }

        public Builder lifecycle(@Nullable Output<BackupPlanLifecycleResourceTypeArgs> lifecycle) {
            $.lifecycle = lifecycle;
            return this;
        }

        public Builder lifecycle(BackupPlanLifecycleResourceTypeArgs lifecycle) {
            return lifecycle(Output.of(lifecycle));
        }

        public Builder recoveryPointTags(@Nullable Output<Object> recoveryPointTags) {
            $.recoveryPointTags = recoveryPointTags;
            return this;
        }

        public Builder recoveryPointTags(Object recoveryPointTags) {
            return recoveryPointTags(Output.of(recoveryPointTags));
        }

        public Builder ruleName(Output<String> ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        public Builder ruleName(String ruleName) {
            return ruleName(Output.of(ruleName));
        }

        public Builder scheduleExpression(@Nullable Output<String> scheduleExpression) {
            $.scheduleExpression = scheduleExpression;
            return this;
        }

        public Builder scheduleExpression(String scheduleExpression) {
            return scheduleExpression(Output.of(scheduleExpression));
        }

        public Builder startWindowMinutes(@Nullable Output<Double> startWindowMinutes) {
            $.startWindowMinutes = startWindowMinutes;
            return this;
        }

        public Builder startWindowMinutes(Double startWindowMinutes) {
            return startWindowMinutes(Output.of(startWindowMinutes));
        }

        public Builder targetBackupVault(Output<String> targetBackupVault) {
            $.targetBackupVault = targetBackupVault;
            return this;
        }

        public Builder targetBackupVault(String targetBackupVault) {
            return targetBackupVault(Output.of(targetBackupVault));
        }

        public BackupPlanBackupRuleResourceTypeArgs build() {
            $.ruleName = Objects.requireNonNull($.ruleName, "expected parameter 'ruleName' to be non-null");
            $.targetBackupVault = Objects.requireNonNull($.targetBackupVault, "expected parameter 'targetBackupVault' to be non-null");
            return $;
        }
    }

}
