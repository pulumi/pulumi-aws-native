// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.emr.inputs;

import com.pulumi.awsnative.emr.enums.StudioSessionMappingIdentityType;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetStudioSessionMappingPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetStudioSessionMappingPlainArgs Empty = new GetStudioSessionMappingPlainArgs();

    /**
     * The name of the user or group. For more information, see UserName and DisplayName in the AWS SSO Identity Store API Reference. Either IdentityName or IdentityId must be specified.
     * 
     */
    @Import(name="identityName", required=true)
    private String identityName;

    /**
     * @return The name of the user or group. For more information, see UserName and DisplayName in the AWS SSO Identity Store API Reference. Either IdentityName or IdentityId must be specified.
     * 
     */
    public String identityName() {
        return this.identityName;
    }

    /**
     * Specifies whether the identity to map to the Studio is a user or a group.
     * 
     */
    @Import(name="identityType", required=true)
    private StudioSessionMappingIdentityType identityType;

    /**
     * @return Specifies whether the identity to map to the Studio is a user or a group.
     * 
     */
    public StudioSessionMappingIdentityType identityType() {
        return this.identityType;
    }

    /**
     * The ID of the Amazon EMR Studio to which the user or group will be mapped.
     * 
     */
    @Import(name="studioId", required=true)
    private String studioId;

    /**
     * @return The ID of the Amazon EMR Studio to which the user or group will be mapped.
     * 
     */
    public String studioId() {
        return this.studioId;
    }

    private GetStudioSessionMappingPlainArgs() {}

    private GetStudioSessionMappingPlainArgs(GetStudioSessionMappingPlainArgs $) {
        this.identityName = $.identityName;
        this.identityType = $.identityType;
        this.studioId = $.studioId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStudioSessionMappingPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStudioSessionMappingPlainArgs $;

        public Builder() {
            $ = new GetStudioSessionMappingPlainArgs();
        }

        public Builder(GetStudioSessionMappingPlainArgs defaults) {
            $ = new GetStudioSessionMappingPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param identityName The name of the user or group. For more information, see UserName and DisplayName in the AWS SSO Identity Store API Reference. Either IdentityName or IdentityId must be specified.
         * 
         * @return builder
         * 
         */
        public Builder identityName(String identityName) {
            $.identityName = identityName;
            return this;
        }

        /**
         * @param identityType Specifies whether the identity to map to the Studio is a user or a group.
         * 
         * @return builder
         * 
         */
        public Builder identityType(StudioSessionMappingIdentityType identityType) {
            $.identityType = identityType;
            return this;
        }

        /**
         * @param studioId The ID of the Amazon EMR Studio to which the user or group will be mapped.
         * 
         * @return builder
         * 
         */
        public Builder studioId(String studioId) {
            $.studioId = studioId;
            return this;
        }

        public GetStudioSessionMappingPlainArgs build() {
            $.identityName = Objects.requireNonNull($.identityName, "expected parameter 'identityName' to be non-null");
            $.identityType = Objects.requireNonNull($.identityType, "expected parameter 'identityType' to be non-null");
            $.studioId = Objects.requireNonNull($.studioId, "expected parameter 'studioId' to be non-null");
            return $;
        }
    }

}
