// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.efs;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.efs.AccessPointArgs;
import com.pulumi.awsnative.efs.outputs.AccessPointPosixUser;
import com.pulumi.awsnative.efs.outputs.AccessPointRootDirectory;
import com.pulumi.awsnative.efs.outputs.AccessPointTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource Type definition for AWS::EFS::AccessPoint
 * 
 */
@ResourceType(type="aws-native:efs:AccessPoint")
public class AccessPoint extends com.pulumi.resources.CustomResource {
    @Export(name="accessPointId", type=String.class, parameters={})
    private Output<String> accessPointId;

    public Output<String> accessPointId() {
        return this.accessPointId;
    }
    @Export(name="accessPointTags", type=List.class, parameters={AccessPointTag.class})
    private Output</* @Nullable */ List<AccessPointTag>> accessPointTags;

    public Output<Optional<List<AccessPointTag>>> accessPointTags() {
        return Codegen.optional(this.accessPointTags);
    }
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    /**
     * (optional) A string of up to 64 ASCII characters that Amazon EFS uses to ensure idempotent creation.
     * 
     */
    @Export(name="clientToken", type=String.class, parameters={})
    private Output</* @Nullable */ String> clientToken;

    /**
     * @return (optional) A string of up to 64 ASCII characters that Amazon EFS uses to ensure idempotent creation.
     * 
     */
    public Output<Optional<String>> clientToken() {
        return Codegen.optional(this.clientToken);
    }
    /**
     * The ID of the EFS file system that the access point provides access to.
     * 
     */
    @Export(name="fileSystemId", type=String.class, parameters={})
    private Output<String> fileSystemId;

    /**
     * @return The ID of the EFS file system that the access point provides access to.
     * 
     */
    public Output<String> fileSystemId() {
        return this.fileSystemId;
    }
    /**
     * The operating system user and group applied to all file system requests made using the access point.
     * 
     */
    @Export(name="posixUser", type=AccessPointPosixUser.class, parameters={})
    private Output</* @Nullable */ AccessPointPosixUser> posixUser;

    /**
     * @return The operating system user and group applied to all file system requests made using the access point.
     * 
     */
    public Output<Optional<AccessPointPosixUser>> posixUser() {
        return Codegen.optional(this.posixUser);
    }
    /**
     * Specifies the directory on the Amazon EFS file system that the access point exposes as the root directory of your file system to NFS clients using the access point. The clients using the access point can only access the root directory and below. If the RootDirectory&gt;Path specified does not exist, EFS creates it and applies the CreationInfo settings when a client connects to an access point. When specifying a RootDirectory, you need to provide the Path, and the CreationInfo is optional.
     * 
     */
    @Export(name="rootDirectory", type=AccessPointRootDirectory.class, parameters={})
    private Output</* @Nullable */ AccessPointRootDirectory> rootDirectory;

    /**
     * @return Specifies the directory on the Amazon EFS file system that the access point exposes as the root directory of your file system to NFS clients using the access point. The clients using the access point can only access the root directory and below. If the RootDirectory&gt;Path specified does not exist, EFS creates it and applies the CreationInfo settings when a client connects to an access point. When specifying a RootDirectory, you need to provide the Path, and the CreationInfo is optional.
     * 
     */
    public Output<Optional<AccessPointRootDirectory>> rootDirectory() {
        return Codegen.optional(this.rootDirectory);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AccessPoint(String name) {
        this(name, AccessPointArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AccessPoint(String name, AccessPointArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AccessPoint(String name, AccessPointArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:efs:AccessPoint", name, args == null ? AccessPointArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AccessPoint(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:efs:AccessPoint", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AccessPoint get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AccessPoint(name, id, options);
    }
}
