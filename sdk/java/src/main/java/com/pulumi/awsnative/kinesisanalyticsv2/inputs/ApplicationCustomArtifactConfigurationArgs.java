// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisanalyticsv2.inputs;

import com.pulumi.awsnative.kinesisanalyticsv2.enums.ApplicationCustomArtifactConfigurationArtifactType;
import com.pulumi.awsnative.kinesisanalyticsv2.inputs.ApplicationMavenReferenceArgs;
import com.pulumi.awsnative.kinesisanalyticsv2.inputs.ApplicationS3ContentLocationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The configuration of connectors and user-defined functions.
 * 
 */
public final class ApplicationCustomArtifactConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationCustomArtifactConfigurationArgs Empty = new ApplicationCustomArtifactConfigurationArgs();

    /**
     * Set this to either `UDF` or `DEPENDENCY_JAR`. `UDF` stands for user-defined functions. This type of artifact must be in an S3 bucket. A `DEPENDENCY_JAR` can be in either Maven or an S3 bucket.
     * 
     */
    @Import(name="artifactType", required=true)
    private Output<ApplicationCustomArtifactConfigurationArtifactType> artifactType;

    /**
     * @return Set this to either `UDF` or `DEPENDENCY_JAR`. `UDF` stands for user-defined functions. This type of artifact must be in an S3 bucket. A `DEPENDENCY_JAR` can be in either Maven or an S3 bucket.
     * 
     */
    public Output<ApplicationCustomArtifactConfigurationArtifactType> artifactType() {
        return this.artifactType;
    }

    /**
     * The parameters required to fully specify a Maven reference.
     * 
     */
    @Import(name="mavenReference")
    private @Nullable Output<ApplicationMavenReferenceArgs> mavenReference;

    /**
     * @return The parameters required to fully specify a Maven reference.
     * 
     */
    public Optional<Output<ApplicationMavenReferenceArgs>> mavenReference() {
        return Optional.ofNullable(this.mavenReference);
    }

    /**
     * The location of the custom artifacts.
     * 
     */
    @Import(name="s3ContentLocation")
    private @Nullable Output<ApplicationS3ContentLocationArgs> s3ContentLocation;

    /**
     * @return The location of the custom artifacts.
     * 
     */
    public Optional<Output<ApplicationS3ContentLocationArgs>> s3ContentLocation() {
        return Optional.ofNullable(this.s3ContentLocation);
    }

    private ApplicationCustomArtifactConfigurationArgs() {}

    private ApplicationCustomArtifactConfigurationArgs(ApplicationCustomArtifactConfigurationArgs $) {
        this.artifactType = $.artifactType;
        this.mavenReference = $.mavenReference;
        this.s3ContentLocation = $.s3ContentLocation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationCustomArtifactConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationCustomArtifactConfigurationArgs $;

        public Builder() {
            $ = new ApplicationCustomArtifactConfigurationArgs();
        }

        public Builder(ApplicationCustomArtifactConfigurationArgs defaults) {
            $ = new ApplicationCustomArtifactConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param artifactType Set this to either `UDF` or `DEPENDENCY_JAR`. `UDF` stands for user-defined functions. This type of artifact must be in an S3 bucket. A `DEPENDENCY_JAR` can be in either Maven or an S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder artifactType(Output<ApplicationCustomArtifactConfigurationArtifactType> artifactType) {
            $.artifactType = artifactType;
            return this;
        }

        /**
         * @param artifactType Set this to either `UDF` or `DEPENDENCY_JAR`. `UDF` stands for user-defined functions. This type of artifact must be in an S3 bucket. A `DEPENDENCY_JAR` can be in either Maven or an S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder artifactType(ApplicationCustomArtifactConfigurationArtifactType artifactType) {
            return artifactType(Output.of(artifactType));
        }

        /**
         * @param mavenReference The parameters required to fully specify a Maven reference.
         * 
         * @return builder
         * 
         */
        public Builder mavenReference(@Nullable Output<ApplicationMavenReferenceArgs> mavenReference) {
            $.mavenReference = mavenReference;
            return this;
        }

        /**
         * @param mavenReference The parameters required to fully specify a Maven reference.
         * 
         * @return builder
         * 
         */
        public Builder mavenReference(ApplicationMavenReferenceArgs mavenReference) {
            return mavenReference(Output.of(mavenReference));
        }

        /**
         * @param s3ContentLocation The location of the custom artifacts.
         * 
         * @return builder
         * 
         */
        public Builder s3ContentLocation(@Nullable Output<ApplicationS3ContentLocationArgs> s3ContentLocation) {
            $.s3ContentLocation = s3ContentLocation;
            return this;
        }

        /**
         * @param s3ContentLocation The location of the custom artifacts.
         * 
         * @return builder
         * 
         */
        public Builder s3ContentLocation(ApplicationS3ContentLocationArgs s3ContentLocation) {
            return s3ContentLocation(Output.of(s3ContentLocation));
        }

        public ApplicationCustomArtifactConfigurationArgs build() {
            $.artifactType = Objects.requireNonNull($.artifactType, "expected parameter 'artifactType' to be non-null");
            return $;
        }
    }

}
