// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sso.outputs;

import com.pulumi.awsnative.sso.outputs.PermissionSetTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPermissionSetResult {
    /**
     * @return The permission set description.
     * 
     */
    private @Nullable String description;
    /**
     * @return The inline policy to put in permission set.
     * 
     */
    private @Nullable Object inlinePolicy;
    private @Nullable List<String> managedPolicies;
    /**
     * @return The permission set that the policy will be attached to
     * 
     */
    private @Nullable String permissionSetArn;
    /**
     * @return The relay state URL that redirect links to any service in the AWS Management Console.
     * 
     */
    private @Nullable String relayStateType;
    /**
     * @return The length of time that a user can be signed in to an AWS account.
     * 
     */
    private @Nullable String sessionDuration;
    private @Nullable List<PermissionSetTag> tags;

    private GetPermissionSetResult() {}
    /**
     * @return The permission set description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The inline policy to put in permission set.
     * 
     */
    public Optional<Object> inlinePolicy() {
        return Optional.ofNullable(this.inlinePolicy);
    }
    public List<String> managedPolicies() {
        return this.managedPolicies == null ? List.of() : this.managedPolicies;
    }
    /**
     * @return The permission set that the policy will be attached to
     * 
     */
    public Optional<String> permissionSetArn() {
        return Optional.ofNullable(this.permissionSetArn);
    }
    /**
     * @return The relay state URL that redirect links to any service in the AWS Management Console.
     * 
     */
    public Optional<String> relayStateType() {
        return Optional.ofNullable(this.relayStateType);
    }
    /**
     * @return The length of time that a user can be signed in to an AWS account.
     * 
     */
    public Optional<String> sessionDuration() {
        return Optional.ofNullable(this.sessionDuration);
    }
    public List<PermissionSetTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPermissionSetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private @Nullable Object inlinePolicy;
        private @Nullable List<String> managedPolicies;
        private @Nullable String permissionSetArn;
        private @Nullable String relayStateType;
        private @Nullable String sessionDuration;
        private @Nullable List<PermissionSetTag> tags;
        public Builder() {}
        public Builder(GetPermissionSetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.inlinePolicy = defaults.inlinePolicy;
    	      this.managedPolicies = defaults.managedPolicies;
    	      this.permissionSetArn = defaults.permissionSetArn;
    	      this.relayStateType = defaults.relayStateType;
    	      this.sessionDuration = defaults.sessionDuration;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder inlinePolicy(@Nullable Object inlinePolicy) {
            this.inlinePolicy = inlinePolicy;
            return this;
        }
        @CustomType.Setter
        public Builder managedPolicies(@Nullable List<String> managedPolicies) {
            this.managedPolicies = managedPolicies;
            return this;
        }
        public Builder managedPolicies(String... managedPolicies) {
            return managedPolicies(List.of(managedPolicies));
        }
        @CustomType.Setter
        public Builder permissionSetArn(@Nullable String permissionSetArn) {
            this.permissionSetArn = permissionSetArn;
            return this;
        }
        @CustomType.Setter
        public Builder relayStateType(@Nullable String relayStateType) {
            this.relayStateType = relayStateType;
            return this;
        }
        @CustomType.Setter
        public Builder sessionDuration(@Nullable String sessionDuration) {
            this.sessionDuration = sessionDuration;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<PermissionSetTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(PermissionSetTag... tags) {
            return tags(List.of(tags));
        }
        public GetPermissionSetResult build() {
            final var o = new GetPermissionSetResult();
            o.description = description;
            o.inlinePolicy = inlinePolicy;
            o.managedPolicies = managedPolicies;
            o.permissionSetArn = permissionSetArn;
            o.relayStateType = relayStateType;
            o.sessionDuration = sessionDuration;
            o.tags = tags;
            return o;
        }
    }
}
