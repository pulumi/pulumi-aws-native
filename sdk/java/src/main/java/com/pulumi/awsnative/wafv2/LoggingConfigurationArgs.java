// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.wafv2;

import com.pulumi.awsnative.wafv2.inputs.LoggingConfigurationFieldToMatchArgs;
import com.pulumi.awsnative.wafv2.inputs.LoggingFilterPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoggingConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoggingConfigurationArgs Empty = new LoggingConfigurationArgs();

    /**
     * The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
     * 
     */
    @Import(name="logDestinationConfigs", required=true)
    private Output<List<String>> logDestinationConfigs;

    /**
     * @return The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
     * 
     */
    public Output<List<String>> logDestinationConfigs() {
        return this.logDestinationConfigs;
    }

    /**
     * Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.
     * 
     */
    @Import(name="loggingFilter")
    private @Nullable Output<LoggingFilterPropertiesArgs> loggingFilter;

    /**
     * @return Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.
     * 
     */
    public Optional<Output<LoggingFilterPropertiesArgs>> loggingFilter() {
        return Optional.ofNullable(this.loggingFilter);
    }

    /**
     * The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx.
     * 
     */
    @Import(name="redactedFields")
    private @Nullable Output<List<LoggingConfigurationFieldToMatchArgs>> redactedFields;

    /**
     * @return The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx.
     * 
     */
    public Optional<Output<List<LoggingConfigurationFieldToMatchArgs>>> redactedFields() {
        return Optional.ofNullable(this.redactedFields);
    }

    /**
     * The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
     * 
     */
    @Import(name="resourceArn", required=true)
    private Output<String> resourceArn;

    /**
     * @return The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
     * 
     */
    public Output<String> resourceArn() {
        return this.resourceArn;
    }

    private LoggingConfigurationArgs() {}

    private LoggingConfigurationArgs(LoggingConfigurationArgs $) {
        this.logDestinationConfigs = $.logDestinationConfigs;
        this.loggingFilter = $.loggingFilter;
        this.redactedFields = $.redactedFields;
        this.resourceArn = $.resourceArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoggingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoggingConfigurationArgs $;

        public Builder() {
            $ = new LoggingConfigurationArgs();
        }

        public Builder(LoggingConfigurationArgs defaults) {
            $ = new LoggingConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logDestinationConfigs The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
         * 
         * @return builder
         * 
         */
        public Builder logDestinationConfigs(Output<List<String>> logDestinationConfigs) {
            $.logDestinationConfigs = logDestinationConfigs;
            return this;
        }

        /**
         * @param logDestinationConfigs The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
         * 
         * @return builder
         * 
         */
        public Builder logDestinationConfigs(List<String> logDestinationConfigs) {
            return logDestinationConfigs(Output.of(logDestinationConfigs));
        }

        /**
         * @param logDestinationConfigs The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
         * 
         * @return builder
         * 
         */
        public Builder logDestinationConfigs(String... logDestinationConfigs) {
            return logDestinationConfigs(List.of(logDestinationConfigs));
        }

        /**
         * @param loggingFilter Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.
         * 
         * @return builder
         * 
         */
        public Builder loggingFilter(@Nullable Output<LoggingFilterPropertiesArgs> loggingFilter) {
            $.loggingFilter = loggingFilter;
            return this;
        }

        /**
         * @param loggingFilter Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.
         * 
         * @return builder
         * 
         */
        public Builder loggingFilter(LoggingFilterPropertiesArgs loggingFilter) {
            return loggingFilter(Output.of(loggingFilter));
        }

        /**
         * @param redactedFields The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx.
         * 
         * @return builder
         * 
         */
        public Builder redactedFields(@Nullable Output<List<LoggingConfigurationFieldToMatchArgs>> redactedFields) {
            $.redactedFields = redactedFields;
            return this;
        }

        /**
         * @param redactedFields The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx.
         * 
         * @return builder
         * 
         */
        public Builder redactedFields(List<LoggingConfigurationFieldToMatchArgs> redactedFields) {
            return redactedFields(Output.of(redactedFields));
        }

        /**
         * @param redactedFields The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx.
         * 
         * @return builder
         * 
         */
        public Builder redactedFields(LoggingConfigurationFieldToMatchArgs... redactedFields) {
            return redactedFields(List.of(redactedFields));
        }

        /**
         * @param resourceArn The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
         * 
         * @return builder
         * 
         */
        public Builder resourceArn(Output<String> resourceArn) {
            $.resourceArn = resourceArn;
            return this;
        }

        /**
         * @param resourceArn The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
         * 
         * @return builder
         * 
         */
        public Builder resourceArn(String resourceArn) {
            return resourceArn(Output.of(resourceArn));
        }

        public LoggingConfigurationArgs build() {
            $.logDestinationConfigs = Objects.requireNonNull($.logDestinationConfigs, "expected parameter 'logDestinationConfigs' to be non-null");
            $.resourceArn = Objects.requireNonNull($.resourceArn, "expected parameter 'resourceArn' to be non-null");
            return $;
        }
    }

}
