// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.datasync.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The Amazon Resource Name (ARN) of the AWS IAM role that is used to access an Amazon S3 bucket.
 * 
 */
public final class LocationS3S3ConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final LocationS3S3ConfigArgs Empty = new LocationS3S3ConfigArgs();

    /**
     * The ARN of the IAM role of the Amazon S3 bucket.
     * 
     */
    @Import(name="bucketAccessRoleArn", required=true)
    private Output<String> bucketAccessRoleArn;

    /**
     * @return The ARN of the IAM role of the Amazon S3 bucket.
     * 
     */
    public Output<String> bucketAccessRoleArn() {
        return this.bucketAccessRoleArn;
    }

    private LocationS3S3ConfigArgs() {}

    private LocationS3S3ConfigArgs(LocationS3S3ConfigArgs $) {
        this.bucketAccessRoleArn = $.bucketAccessRoleArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LocationS3S3ConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LocationS3S3ConfigArgs $;

        public Builder() {
            $ = new LocationS3S3ConfigArgs();
        }

        public Builder(LocationS3S3ConfigArgs defaults) {
            $ = new LocationS3S3ConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketAccessRoleArn The ARN of the IAM role of the Amazon S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucketAccessRoleArn(Output<String> bucketAccessRoleArn) {
            $.bucketAccessRoleArn = bucketAccessRoleArn;
            return this;
        }

        /**
         * @param bucketAccessRoleArn The ARN of the IAM role of the Amazon S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucketAccessRoleArn(String bucketAccessRoleArn) {
            return bucketAccessRoleArn(Output.of(bucketAccessRoleArn));
        }

        public LocationS3S3ConfigArgs build() {
            $.bucketAccessRoleArn = Objects.requireNonNull($.bucketAccessRoleArn, "expected parameter 'bucketAccessRoleArn' to be non-null");
            return $;
        }
    }

}
