// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ecs.outputs;

import com.pulumi.awsnative.ecs.enums.TaskDefinitionEFSVolumeConfigurationTransitEncryption;
import com.pulumi.awsnative.ecs.outputs.TaskDefinitionAuthorizationConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TaskDefinitionEFSVolumeConfiguration {
    private @Nullable TaskDefinitionAuthorizationConfig authorizationConfig;
    private String filesystemId;
    private @Nullable String rootDirectory;
    private @Nullable TaskDefinitionEFSVolumeConfigurationTransitEncryption transitEncryption;
    private @Nullable Integer transitEncryptionPort;

    private TaskDefinitionEFSVolumeConfiguration() {}
    public Optional<TaskDefinitionAuthorizationConfig> authorizationConfig() {
        return Optional.ofNullable(this.authorizationConfig);
    }
    public String filesystemId() {
        return this.filesystemId;
    }
    public Optional<String> rootDirectory() {
        return Optional.ofNullable(this.rootDirectory);
    }
    public Optional<TaskDefinitionEFSVolumeConfigurationTransitEncryption> transitEncryption() {
        return Optional.ofNullable(this.transitEncryption);
    }
    public Optional<Integer> transitEncryptionPort() {
        return Optional.ofNullable(this.transitEncryptionPort);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskDefinitionEFSVolumeConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable TaskDefinitionAuthorizationConfig authorizationConfig;
        private String filesystemId;
        private @Nullable String rootDirectory;
        private @Nullable TaskDefinitionEFSVolumeConfigurationTransitEncryption transitEncryption;
        private @Nullable Integer transitEncryptionPort;
        public Builder() {}
        public Builder(TaskDefinitionEFSVolumeConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationConfig = defaults.authorizationConfig;
    	      this.filesystemId = defaults.filesystemId;
    	      this.rootDirectory = defaults.rootDirectory;
    	      this.transitEncryption = defaults.transitEncryption;
    	      this.transitEncryptionPort = defaults.transitEncryptionPort;
        }

        @CustomType.Setter
        public Builder authorizationConfig(@Nullable TaskDefinitionAuthorizationConfig authorizationConfig) {
            this.authorizationConfig = authorizationConfig;
            return this;
        }
        @CustomType.Setter
        public Builder filesystemId(String filesystemId) {
            this.filesystemId = Objects.requireNonNull(filesystemId);
            return this;
        }
        @CustomType.Setter
        public Builder rootDirectory(@Nullable String rootDirectory) {
            this.rootDirectory = rootDirectory;
            return this;
        }
        @CustomType.Setter
        public Builder transitEncryption(@Nullable TaskDefinitionEFSVolumeConfigurationTransitEncryption transitEncryption) {
            this.transitEncryption = transitEncryption;
            return this;
        }
        @CustomType.Setter
        public Builder transitEncryptionPort(@Nullable Integer transitEncryptionPort) {
            this.transitEncryptionPort = transitEncryptionPort;
            return this;
        }
        public TaskDefinitionEFSVolumeConfiguration build() {
            final var o = new TaskDefinitionEFSVolumeConfiguration();
            o.authorizationConfig = authorizationConfig;
            o.filesystemId = filesystemId;
            o.rootDirectory = rootDirectory;
            o.transitEncryption = transitEncryption;
            o.transitEncryptionPort = transitEncryptionPort;
            return o;
        }
    }
}
