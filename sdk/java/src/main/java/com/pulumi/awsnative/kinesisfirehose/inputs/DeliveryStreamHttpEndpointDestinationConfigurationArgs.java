// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisfirehose.inputs;

import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamBufferingHintsArgs;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamCloudWatchLoggingOptionsArgs;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamHttpEndpointConfigurationArgs;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamHttpEndpointRequestConfigurationArgs;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamProcessingConfigurationArgs;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamRetryOptionsArgs;
import com.pulumi.awsnative.kinesisfirehose.inputs.DeliveryStreamS3DestinationConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeliveryStreamHttpEndpointDestinationConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeliveryStreamHttpEndpointDestinationConfigurationArgs Empty = new DeliveryStreamHttpEndpointDestinationConfigurationArgs();

    @Import(name="bufferingHints")
    private @Nullable Output<DeliveryStreamBufferingHintsArgs> bufferingHints;

    public Optional<Output<DeliveryStreamBufferingHintsArgs>> bufferingHints() {
        return Optional.ofNullable(this.bufferingHints);
    }

    @Import(name="cloudWatchLoggingOptions")
    private @Nullable Output<DeliveryStreamCloudWatchLoggingOptionsArgs> cloudWatchLoggingOptions;

    public Optional<Output<DeliveryStreamCloudWatchLoggingOptionsArgs>> cloudWatchLoggingOptions() {
        return Optional.ofNullable(this.cloudWatchLoggingOptions);
    }

    @Import(name="endpointConfiguration", required=true)
    private Output<DeliveryStreamHttpEndpointConfigurationArgs> endpointConfiguration;

    public Output<DeliveryStreamHttpEndpointConfigurationArgs> endpointConfiguration() {
        return this.endpointConfiguration;
    }

    @Import(name="processingConfiguration")
    private @Nullable Output<DeliveryStreamProcessingConfigurationArgs> processingConfiguration;

    public Optional<Output<DeliveryStreamProcessingConfigurationArgs>> processingConfiguration() {
        return Optional.ofNullable(this.processingConfiguration);
    }

    @Import(name="requestConfiguration")
    private @Nullable Output<DeliveryStreamHttpEndpointRequestConfigurationArgs> requestConfiguration;

    public Optional<Output<DeliveryStreamHttpEndpointRequestConfigurationArgs>> requestConfiguration() {
        return Optional.ofNullable(this.requestConfiguration);
    }

    @Import(name="retryOptions")
    private @Nullable Output<DeliveryStreamRetryOptionsArgs> retryOptions;

    public Optional<Output<DeliveryStreamRetryOptionsArgs>> retryOptions() {
        return Optional.ofNullable(this.retryOptions);
    }

    @Import(name="roleARN")
    private @Nullable Output<String> roleARN;

    public Optional<Output<String>> roleARN() {
        return Optional.ofNullable(this.roleARN);
    }

    @Import(name="s3BackupMode")
    private @Nullable Output<String> s3BackupMode;

    public Optional<Output<String>> s3BackupMode() {
        return Optional.ofNullable(this.s3BackupMode);
    }

    @Import(name="s3Configuration", required=true)
    private Output<DeliveryStreamS3DestinationConfigurationArgs> s3Configuration;

    public Output<DeliveryStreamS3DestinationConfigurationArgs> s3Configuration() {
        return this.s3Configuration;
    }

    private DeliveryStreamHttpEndpointDestinationConfigurationArgs() {}

    private DeliveryStreamHttpEndpointDestinationConfigurationArgs(DeliveryStreamHttpEndpointDestinationConfigurationArgs $) {
        this.bufferingHints = $.bufferingHints;
        this.cloudWatchLoggingOptions = $.cloudWatchLoggingOptions;
        this.endpointConfiguration = $.endpointConfiguration;
        this.processingConfiguration = $.processingConfiguration;
        this.requestConfiguration = $.requestConfiguration;
        this.retryOptions = $.retryOptions;
        this.roleARN = $.roleARN;
        this.s3BackupMode = $.s3BackupMode;
        this.s3Configuration = $.s3Configuration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeliveryStreamHttpEndpointDestinationConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeliveryStreamHttpEndpointDestinationConfigurationArgs $;

        public Builder() {
            $ = new DeliveryStreamHttpEndpointDestinationConfigurationArgs();
        }

        public Builder(DeliveryStreamHttpEndpointDestinationConfigurationArgs defaults) {
            $ = new DeliveryStreamHttpEndpointDestinationConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder bufferingHints(@Nullable Output<DeliveryStreamBufferingHintsArgs> bufferingHints) {
            $.bufferingHints = bufferingHints;
            return this;
        }

        public Builder bufferingHints(DeliveryStreamBufferingHintsArgs bufferingHints) {
            return bufferingHints(Output.of(bufferingHints));
        }

        public Builder cloudWatchLoggingOptions(@Nullable Output<DeliveryStreamCloudWatchLoggingOptionsArgs> cloudWatchLoggingOptions) {
            $.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
            return this;
        }

        public Builder cloudWatchLoggingOptions(DeliveryStreamCloudWatchLoggingOptionsArgs cloudWatchLoggingOptions) {
            return cloudWatchLoggingOptions(Output.of(cloudWatchLoggingOptions));
        }

        public Builder endpointConfiguration(Output<DeliveryStreamHttpEndpointConfigurationArgs> endpointConfiguration) {
            $.endpointConfiguration = endpointConfiguration;
            return this;
        }

        public Builder endpointConfiguration(DeliveryStreamHttpEndpointConfigurationArgs endpointConfiguration) {
            return endpointConfiguration(Output.of(endpointConfiguration));
        }

        public Builder processingConfiguration(@Nullable Output<DeliveryStreamProcessingConfigurationArgs> processingConfiguration) {
            $.processingConfiguration = processingConfiguration;
            return this;
        }

        public Builder processingConfiguration(DeliveryStreamProcessingConfigurationArgs processingConfiguration) {
            return processingConfiguration(Output.of(processingConfiguration));
        }

        public Builder requestConfiguration(@Nullable Output<DeliveryStreamHttpEndpointRequestConfigurationArgs> requestConfiguration) {
            $.requestConfiguration = requestConfiguration;
            return this;
        }

        public Builder requestConfiguration(DeliveryStreamHttpEndpointRequestConfigurationArgs requestConfiguration) {
            return requestConfiguration(Output.of(requestConfiguration));
        }

        public Builder retryOptions(@Nullable Output<DeliveryStreamRetryOptionsArgs> retryOptions) {
            $.retryOptions = retryOptions;
            return this;
        }

        public Builder retryOptions(DeliveryStreamRetryOptionsArgs retryOptions) {
            return retryOptions(Output.of(retryOptions));
        }

        public Builder roleARN(@Nullable Output<String> roleARN) {
            $.roleARN = roleARN;
            return this;
        }

        public Builder roleARN(String roleARN) {
            return roleARN(Output.of(roleARN));
        }

        public Builder s3BackupMode(@Nullable Output<String> s3BackupMode) {
            $.s3BackupMode = s3BackupMode;
            return this;
        }

        public Builder s3BackupMode(String s3BackupMode) {
            return s3BackupMode(Output.of(s3BackupMode));
        }

        public Builder s3Configuration(Output<DeliveryStreamS3DestinationConfigurationArgs> s3Configuration) {
            $.s3Configuration = s3Configuration;
            return this;
        }

        public Builder s3Configuration(DeliveryStreamS3DestinationConfigurationArgs s3Configuration) {
            return s3Configuration(Output.of(s3Configuration));
        }

        public DeliveryStreamHttpEndpointDestinationConfigurationArgs build() {
            $.endpointConfiguration = Objects.requireNonNull($.endpointConfiguration, "expected parameter 'endpointConfiguration' to be non-null");
            $.s3Configuration = Objects.requireNonNull($.s3Configuration, "expected parameter 's3Configuration' to be non-null");
            return $;
        }
    }

}
