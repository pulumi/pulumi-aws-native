// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudfront.inputs;

import com.pulumi.awsnative.cloudfront.inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CachePolicyConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final CachePolicyConfigArgs Empty = new CachePolicyConfigArgs();

    @Import(name="comment")
    private @Nullable Output<String> comment;

    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    @Import(name="defaultTTL", required=true)
    private Output<Double> defaultTTL;

    public Output<Double> defaultTTL() {
        return this.defaultTTL;
    }

    @Import(name="maxTTL", required=true)
    private Output<Double> maxTTL;

    public Output<Double> maxTTL() {
        return this.maxTTL;
    }

    @Import(name="minTTL", required=true)
    private Output<Double> minTTL;

    public Output<Double> minTTL() {
        return this.minTTL;
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="parametersInCacheKeyAndForwardedToOrigin", required=true)
    private Output<CachePolicyParametersInCacheKeyAndForwardedToOriginArgs> parametersInCacheKeyAndForwardedToOrigin;

    public Output<CachePolicyParametersInCacheKeyAndForwardedToOriginArgs> parametersInCacheKeyAndForwardedToOrigin() {
        return this.parametersInCacheKeyAndForwardedToOrigin;
    }

    private CachePolicyConfigArgs() {}

    private CachePolicyConfigArgs(CachePolicyConfigArgs $) {
        this.comment = $.comment;
        this.defaultTTL = $.defaultTTL;
        this.maxTTL = $.maxTTL;
        this.minTTL = $.minTTL;
        this.name = $.name;
        this.parametersInCacheKeyAndForwardedToOrigin = $.parametersInCacheKeyAndForwardedToOrigin;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CachePolicyConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CachePolicyConfigArgs $;

        public Builder() {
            $ = new CachePolicyConfigArgs();
        }

        public Builder(CachePolicyConfigArgs defaults) {
            $ = new CachePolicyConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        public Builder defaultTTL(Output<Double> defaultTTL) {
            $.defaultTTL = defaultTTL;
            return this;
        }

        public Builder defaultTTL(Double defaultTTL) {
            return defaultTTL(Output.of(defaultTTL));
        }

        public Builder maxTTL(Output<Double> maxTTL) {
            $.maxTTL = maxTTL;
            return this;
        }

        public Builder maxTTL(Double maxTTL) {
            return maxTTL(Output.of(maxTTL));
        }

        public Builder minTTL(Output<Double> minTTL) {
            $.minTTL = minTTL;
            return this;
        }

        public Builder minTTL(Double minTTL) {
            return minTTL(Output.of(minTTL));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder parametersInCacheKeyAndForwardedToOrigin(Output<CachePolicyParametersInCacheKeyAndForwardedToOriginArgs> parametersInCacheKeyAndForwardedToOrigin) {
            $.parametersInCacheKeyAndForwardedToOrigin = parametersInCacheKeyAndForwardedToOrigin;
            return this;
        }

        public Builder parametersInCacheKeyAndForwardedToOrigin(CachePolicyParametersInCacheKeyAndForwardedToOriginArgs parametersInCacheKeyAndForwardedToOrigin) {
            return parametersInCacheKeyAndForwardedToOrigin(Output.of(parametersInCacheKeyAndForwardedToOrigin));
        }

        public CachePolicyConfigArgs build() {
            $.defaultTTL = Objects.requireNonNull($.defaultTTL, "expected parameter 'defaultTTL' to be non-null");
            $.maxTTL = Objects.requireNonNull($.maxTTL, "expected parameter 'maxTTL' to be non-null");
            $.minTTL = Objects.requireNonNull($.minTTL, "expected parameter 'minTTL' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.parametersInCacheKeyAndForwardedToOrigin = Objects.requireNonNull($.parametersInCacheKeyAndForwardedToOrigin, "expected parameter 'parametersInCacheKeyAndForwardedToOrigin' to be non-null");
            return $;
        }
    }

}
