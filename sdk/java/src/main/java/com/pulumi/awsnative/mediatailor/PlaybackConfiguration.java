// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.mediatailor;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.mediatailor.PlaybackConfigurationArgs;
import com.pulumi.awsnative.mediatailor.outputs.PlaybackConfigurationAvailSuppression;
import com.pulumi.awsnative.mediatailor.outputs.PlaybackConfigurationBumper;
import com.pulumi.awsnative.mediatailor.outputs.PlaybackConfigurationCdnConfiguration;
import com.pulumi.awsnative.mediatailor.outputs.PlaybackConfigurationConfigurationAliases;
import com.pulumi.awsnative.mediatailor.outputs.PlaybackConfigurationDashConfiguration;
import com.pulumi.awsnative.mediatailor.outputs.PlaybackConfigurationHlsConfiguration;
import com.pulumi.awsnative.mediatailor.outputs.PlaybackConfigurationLivePreRollConfiguration;
import com.pulumi.awsnative.mediatailor.outputs.PlaybackConfigurationManifestProcessingRules;
import com.pulumi.awsnative.mediatailor.outputs.PlaybackConfigurationTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource schema for AWS::MediaTailor::PlaybackConfiguration
 * 
 */
@ResourceType(type="aws-native:mediatailor:PlaybackConfiguration")
public class PlaybackConfiguration extends com.pulumi.resources.CustomResource {
    /**
     * The URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing you can provide a static VAST URL. The maximum length is 25,000 characters.
     * 
     */
    @Export(name="adDecisionServerUrl", type=String.class, parameters={})
    private Output<String> adDecisionServerUrl;

    /**
     * @return The URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing you can provide a static VAST URL. The maximum length is 25,000 characters.
     * 
     */
    public Output<String> adDecisionServerUrl() {
        return this.adDecisionServerUrl;
    }
    /**
     * The configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see Ad Suppression (https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
     * 
     */
    @Export(name="availSuppression", type=PlaybackConfigurationAvailSuppression.class, parameters={})
    private Output</* @Nullable */ PlaybackConfigurationAvailSuppression> availSuppression;

    /**
     * @return The configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see Ad Suppression (https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
     * 
     */
    public Output<Optional<PlaybackConfigurationAvailSuppression>> availSuppression() {
        return Codegen.optional(this.availSuppression);
    }
    /**
     * The configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see Bumpers (https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html).
     * 
     */
    @Export(name="bumper", type=PlaybackConfigurationBumper.class, parameters={})
    private Output</* @Nullable */ PlaybackConfigurationBumper> bumper;

    /**
     * @return The configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see Bumpers (https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html).
     * 
     */
    public Output<Optional<PlaybackConfigurationBumper>> bumper() {
        return Codegen.optional(this.bumper);
    }
    /**
     * The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.
     * 
     */
    @Export(name="cdnConfiguration", type=PlaybackConfigurationCdnConfiguration.class, parameters={})
    private Output</* @Nullable */ PlaybackConfigurationCdnConfiguration> cdnConfiguration;

    /**
     * @return The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.
     * 
     */
    public Output<Optional<PlaybackConfigurationCdnConfiguration>> cdnConfiguration() {
        return Codegen.optional(this.cdnConfiguration);
    }
    /**
     * The player parameters and aliases used as dynamic variables during session initialization. For more information, see Domain Variables.
     * 
     */
    @Export(name="configurationAliases", type=PlaybackConfigurationConfigurationAliases.class, parameters={})
    private Output</* @Nullable */ PlaybackConfigurationConfigurationAliases> configurationAliases;

    /**
     * @return The player parameters and aliases used as dynamic variables during session initialization. For more information, see Domain Variables.
     * 
     */
    public Output<Optional<PlaybackConfigurationConfigurationAliases>> configurationAliases() {
        return Codegen.optional(this.configurationAliases);
    }
    /**
     * The configuration for DASH content.
     * 
     */
    @Export(name="dashConfiguration", type=PlaybackConfigurationDashConfiguration.class, parameters={})
    private Output</* @Nullable */ PlaybackConfigurationDashConfiguration> dashConfiguration;

    /**
     * @return The configuration for DASH content.
     * 
     */
    public Output<Optional<PlaybackConfigurationDashConfiguration>> dashConfiguration() {
        return Codegen.optional(this.dashConfiguration);
    }
    /**
     * The configuration for HLS content.
     * 
     */
    @Export(name="hlsConfiguration", type=PlaybackConfigurationHlsConfiguration.class, parameters={})
    private Output</* @Nullable */ PlaybackConfigurationHlsConfiguration> hlsConfiguration;

    /**
     * @return The configuration for HLS content.
     * 
     */
    public Output<Optional<PlaybackConfigurationHlsConfiguration>> hlsConfiguration() {
        return Codegen.optional(this.hlsConfiguration);
    }
    /**
     * The configuration for pre-roll ad insertion.
     * 
     */
    @Export(name="livePreRollConfiguration", type=PlaybackConfigurationLivePreRollConfiguration.class, parameters={})
    private Output</* @Nullable */ PlaybackConfigurationLivePreRollConfiguration> livePreRollConfiguration;

    /**
     * @return The configuration for pre-roll ad insertion.
     * 
     */
    public Output<Optional<PlaybackConfigurationLivePreRollConfiguration>> livePreRollConfiguration() {
        return Codegen.optional(this.livePreRollConfiguration);
    }
    /**
     * The configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.
     * 
     */
    @Export(name="manifestProcessingRules", type=PlaybackConfigurationManifestProcessingRules.class, parameters={})
    private Output</* @Nullable */ PlaybackConfigurationManifestProcessingRules> manifestProcessingRules;

    /**
     * @return The configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.
     * 
     */
    public Output<Optional<PlaybackConfigurationManifestProcessingRules>> manifestProcessingRules() {
        return Codegen.optional(this.manifestProcessingRules);
    }
    /**
     * The identifier for the playback configuration.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The identifier for the playback configuration.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Defines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to ad replacement in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see Ad Behavior in AWS Elemental MediaTailor (https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
     * 
     */
    @Export(name="personalizationThresholdSeconds", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> personalizationThresholdSeconds;

    /**
     * @return Defines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to ad replacement in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see Ad Behavior in AWS Elemental MediaTailor (https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
     * 
     */
    public Output<Optional<Integer>> personalizationThresholdSeconds() {
        return Codegen.optional(this.personalizationThresholdSeconds);
    }
    /**
     * The Amazon Resource Name (ARN) for the playback configuration.
     * 
     */
    @Export(name="playbackConfigurationArn", type=String.class, parameters={})
    private Output<String> playbackConfigurationArn;

    /**
     * @return The Amazon Resource Name (ARN) for the playback configuration.
     * 
     */
    public Output<String> playbackConfigurationArn() {
        return this.playbackConfigurationArn;
    }
    /**
     * The URL that the player accesses to get a manifest from MediaTailor. This session will use server-side reporting.
     * 
     */
    @Export(name="playbackEndpointPrefix", type=String.class, parameters={})
    private Output<String> playbackEndpointPrefix;

    /**
     * @return The URL that the player accesses to get a manifest from MediaTailor. This session will use server-side reporting.
     * 
     */
    public Output<String> playbackEndpointPrefix() {
        return this.playbackEndpointPrefix;
    }
    /**
     * The URL that the player uses to initialize a session that uses client-side reporting.
     * 
     */
    @Export(name="sessionInitializationEndpointPrefix", type=String.class, parameters={})
    private Output<String> sessionInitializationEndpointPrefix;

    /**
     * @return The URL that the player uses to initialize a session that uses client-side reporting.
     * 
     */
    public Output<String> sessionInitializationEndpointPrefix() {
        return this.sessionInitializationEndpointPrefix;
    }
    /**
     * The URL for a high-quality video asset to transcode and use to fill in time that&#39;s not used by ads. AWS Elemental MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID configurations. For VPAID, the slate is required because MediaTailor provides it in the slots that are designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.
     * 
     */
    @Export(name="slateAdUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> slateAdUrl;

    /**
     * @return The URL for a high-quality video asset to transcode and use to fill in time that&#39;s not used by ads. AWS Elemental MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID configurations. For VPAID, the slate is required because MediaTailor provides it in the slots that are designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.
     * 
     */
    public Output<Optional<String>> slateAdUrl() {
        return Codegen.optional(this.slateAdUrl);
    }
    /**
     * The tags to assign to the playback configuration.
     * 
     */
    @Export(name="tags", type=List.class, parameters={PlaybackConfigurationTag.class})
    private Output</* @Nullable */ List<PlaybackConfigurationTag>> tags;

    /**
     * @return The tags to assign to the playback configuration.
     * 
     */
    public Output<Optional<List<PlaybackConfigurationTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.
     * 
     */
    @Export(name="transcodeProfileName", type=String.class, parameters={})
    private Output</* @Nullable */ String> transcodeProfileName;

    /**
     * @return The name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.
     * 
     */
    public Output<Optional<String>> transcodeProfileName() {
        return Codegen.optional(this.transcodeProfileName);
    }
    /**
     * The URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.
     * 
     */
    @Export(name="videoContentSourceUrl", type=String.class, parameters={})
    private Output<String> videoContentSourceUrl;

    /**
     * @return The URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.
     * 
     */
    public Output<String> videoContentSourceUrl() {
        return this.videoContentSourceUrl;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PlaybackConfiguration(String name) {
        this(name, PlaybackConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PlaybackConfiguration(String name, PlaybackConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PlaybackConfiguration(String name, PlaybackConfigurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:mediatailor:PlaybackConfiguration", name, args == null ? PlaybackConfigurationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PlaybackConfiguration(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:mediatailor:PlaybackConfiguration", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PlaybackConfiguration get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PlaybackConfiguration(name, id, options);
    }
}
