// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.enums.BucketMetricsStatus;
import com.pulumi.awsnative.s3.inputs.BucketReplicationTimeValueArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketMetricsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketMetricsArgs Empty = new BucketMetricsArgs();

    @Import(name="eventThreshold")
    private @Nullable Output<BucketReplicationTimeValueArgs> eventThreshold;

    public Optional<Output<BucketReplicationTimeValueArgs>> eventThreshold() {
        return Optional.ofNullable(this.eventThreshold);
    }

    @Import(name="status", required=true)
    private Output<BucketMetricsStatus> status;

    public Output<BucketMetricsStatus> status() {
        return this.status;
    }

    private BucketMetricsArgs() {}

    private BucketMetricsArgs(BucketMetricsArgs $) {
        this.eventThreshold = $.eventThreshold;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketMetricsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketMetricsArgs $;

        public Builder() {
            $ = new BucketMetricsArgs();
        }

        public Builder(BucketMetricsArgs defaults) {
            $ = new BucketMetricsArgs(Objects.requireNonNull(defaults));
        }

        public Builder eventThreshold(@Nullable Output<BucketReplicationTimeValueArgs> eventThreshold) {
            $.eventThreshold = eventThreshold;
            return this;
        }

        public Builder eventThreshold(BucketReplicationTimeValueArgs eventThreshold) {
            return eventThreshold(Output.of(eventThreshold));
        }

        public Builder status(Output<BucketMetricsStatus> status) {
            $.status = status;
            return this;
        }

        public Builder status(BucketMetricsStatus status) {
            return status(Output.of(status));
        }

        public BucketMetricsArgs build() {
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
