// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lambda.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The filter object that defines parameters for ESM filtering.
 * 
 */
public final class EventSourceMappingFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventSourceMappingFilterArgs Empty = new EventSourceMappingFilterArgs();

    /**
     * The filter pattern that defines which events should be passed for invocations.
     * 
     */
    @Import(name="pattern")
    private @Nullable Output<String> pattern;

    /**
     * @return The filter pattern that defines which events should be passed for invocations.
     * 
     */
    public Optional<Output<String>> pattern() {
        return Optional.ofNullable(this.pattern);
    }

    private EventSourceMappingFilterArgs() {}

    private EventSourceMappingFilterArgs(EventSourceMappingFilterArgs $) {
        this.pattern = $.pattern;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventSourceMappingFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventSourceMappingFilterArgs $;

        public Builder() {
            $ = new EventSourceMappingFilterArgs();
        }

        public Builder(EventSourceMappingFilterArgs defaults) {
            $ = new EventSourceMappingFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param pattern The filter pattern that defines which events should be passed for invocations.
         * 
         * @return builder
         * 
         */
        public Builder pattern(@Nullable Output<String> pattern) {
            $.pattern = pattern;
            return this;
        }

        /**
         * @param pattern The filter pattern that defines which events should be passed for invocations.
         * 
         * @return builder
         * 
         */
        public Builder pattern(String pattern) {
            return pattern(Output.of(pattern));
        }

        public EventSourceMappingFilterArgs build() {
            return $;
        }
    }

}
