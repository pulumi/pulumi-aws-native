// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudformation.outputs;

import com.pulumi.awsnative.cloudformation.enums.PublisherIdentityProvider;
import com.pulumi.awsnative.cloudformation.enums.PublisherStatus;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPublisherResult {
    /**
     * @return The type of account used as the identity provider when registering this publisher with CloudFormation.
     * 
     */
    private @Nullable PublisherIdentityProvider identityProvider;
    /**
     * @return The publisher id assigned by CloudFormation for publishing in this region.
     * 
     */
    private @Nullable String publisherId;
    /**
     * @return The URL to the publisher&#39;s profile with the identity provider.
     * 
     */
    private @Nullable String publisherProfile;
    /**
     * @return Whether the publisher is verified.
     * 
     */
    private @Nullable PublisherStatus publisherStatus;

    private GetPublisherResult() {}
    /**
     * @return The type of account used as the identity provider when registering this publisher with CloudFormation.
     * 
     */
    public Optional<PublisherIdentityProvider> identityProvider() {
        return Optional.ofNullable(this.identityProvider);
    }
    /**
     * @return The publisher id assigned by CloudFormation for publishing in this region.
     * 
     */
    public Optional<String> publisherId() {
        return Optional.ofNullable(this.publisherId);
    }
    /**
     * @return The URL to the publisher&#39;s profile with the identity provider.
     * 
     */
    public Optional<String> publisherProfile() {
        return Optional.ofNullable(this.publisherProfile);
    }
    /**
     * @return Whether the publisher is verified.
     * 
     */
    public Optional<PublisherStatus> publisherStatus() {
        return Optional.ofNullable(this.publisherStatus);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPublisherResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable PublisherIdentityProvider identityProvider;
        private @Nullable String publisherId;
        private @Nullable String publisherProfile;
        private @Nullable PublisherStatus publisherStatus;
        public Builder() {}
        public Builder(GetPublisherResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identityProvider = defaults.identityProvider;
    	      this.publisherId = defaults.publisherId;
    	      this.publisherProfile = defaults.publisherProfile;
    	      this.publisherStatus = defaults.publisherStatus;
        }

        @CustomType.Setter
        public Builder identityProvider(@Nullable PublisherIdentityProvider identityProvider) {
            this.identityProvider = identityProvider;
            return this;
        }
        @CustomType.Setter
        public Builder publisherId(@Nullable String publisherId) {
            this.publisherId = publisherId;
            return this;
        }
        @CustomType.Setter
        public Builder publisherProfile(@Nullable String publisherProfile) {
            this.publisherProfile = publisherProfile;
            return this;
        }
        @CustomType.Setter
        public Builder publisherStatus(@Nullable PublisherStatus publisherStatus) {
            this.publisherStatus = publisherStatus;
            return this;
        }
        public GetPublisherResult build() {
            final var o = new GetPublisherResult();
            o.identityProvider = identityProvider;
            o.publisherId = publisherId;
            o.publisherProfile = publisherProfile;
            o.publisherStatus = publisherStatus;
            return o;
        }
    }
}
