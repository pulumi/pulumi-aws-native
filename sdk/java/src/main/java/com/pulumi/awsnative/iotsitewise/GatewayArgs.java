// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotsitewise;

import com.pulumi.awsnative.iotsitewise.inputs.GatewayCapabilitySummaryArgs;
import com.pulumi.awsnative.iotsitewise.inputs.GatewayPlatformArgs;
import com.pulumi.awsnative.iotsitewise.inputs.GatewayTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewayArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayArgs Empty = new GatewayArgs();

    /**
     * A list of gateway capability summaries that each contain a namespace and status.
     * 
     */
    @Import(name="gatewayCapabilitySummaries")
    private @Nullable Output<List<GatewayCapabilitySummaryArgs>> gatewayCapabilitySummaries;

    /**
     * @return A list of gateway capability summaries that each contain a namespace and status.
     * 
     */
    public Optional<Output<List<GatewayCapabilitySummaryArgs>>> gatewayCapabilitySummaries() {
        return Optional.ofNullable(this.gatewayCapabilitySummaries);
    }

    /**
     * A unique, friendly name for the gateway.
     * 
     */
    @Import(name="gatewayName")
    private @Nullable Output<String> gatewayName;

    /**
     * @return A unique, friendly name for the gateway.
     * 
     */
    public Optional<Output<String>> gatewayName() {
        return Optional.ofNullable(this.gatewayName);
    }

    /**
     * The gateway&#39;s platform. You can only specify one platform in a gateway.
     * 
     */
    @Import(name="gatewayPlatform", required=true)
    private Output<GatewayPlatformArgs> gatewayPlatform;

    /**
     * @return The gateway&#39;s platform. You can only specify one platform in a gateway.
     * 
     */
    public Output<GatewayPlatformArgs> gatewayPlatform() {
        return this.gatewayPlatform;
    }

    /**
     * A list of key-value pairs that contain metadata for the gateway.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<GatewayTagArgs>> tags;

    /**
     * @return A list of key-value pairs that contain metadata for the gateway.
     * 
     */
    public Optional<Output<List<GatewayTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GatewayArgs() {}

    private GatewayArgs(GatewayArgs $) {
        this.gatewayCapabilitySummaries = $.gatewayCapabilitySummaries;
        this.gatewayName = $.gatewayName;
        this.gatewayPlatform = $.gatewayPlatform;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayArgs $;

        public Builder() {
            $ = new GatewayArgs();
        }

        public Builder(GatewayArgs defaults) {
            $ = new GatewayArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gatewayCapabilitySummaries A list of gateway capability summaries that each contain a namespace and status.
         * 
         * @return builder
         * 
         */
        public Builder gatewayCapabilitySummaries(@Nullable Output<List<GatewayCapabilitySummaryArgs>> gatewayCapabilitySummaries) {
            $.gatewayCapabilitySummaries = gatewayCapabilitySummaries;
            return this;
        }

        /**
         * @param gatewayCapabilitySummaries A list of gateway capability summaries that each contain a namespace and status.
         * 
         * @return builder
         * 
         */
        public Builder gatewayCapabilitySummaries(List<GatewayCapabilitySummaryArgs> gatewayCapabilitySummaries) {
            return gatewayCapabilitySummaries(Output.of(gatewayCapabilitySummaries));
        }

        /**
         * @param gatewayCapabilitySummaries A list of gateway capability summaries that each contain a namespace and status.
         * 
         * @return builder
         * 
         */
        public Builder gatewayCapabilitySummaries(GatewayCapabilitySummaryArgs... gatewayCapabilitySummaries) {
            return gatewayCapabilitySummaries(List.of(gatewayCapabilitySummaries));
        }

        /**
         * @param gatewayName A unique, friendly name for the gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayName(@Nullable Output<String> gatewayName) {
            $.gatewayName = gatewayName;
            return this;
        }

        /**
         * @param gatewayName A unique, friendly name for the gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayName(String gatewayName) {
            return gatewayName(Output.of(gatewayName));
        }

        /**
         * @param gatewayPlatform The gateway&#39;s platform. You can only specify one platform in a gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayPlatform(Output<GatewayPlatformArgs> gatewayPlatform) {
            $.gatewayPlatform = gatewayPlatform;
            return this;
        }

        /**
         * @param gatewayPlatform The gateway&#39;s platform. You can only specify one platform in a gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayPlatform(GatewayPlatformArgs gatewayPlatform) {
            return gatewayPlatform(Output.of(gatewayPlatform));
        }

        /**
         * @param tags A list of key-value pairs that contain metadata for the gateway.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<GatewayTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A list of key-value pairs that contain metadata for the gateway.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<GatewayTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A list of key-value pairs that contain metadata for the gateway.
         * 
         * @return builder
         * 
         */
        public Builder tags(GatewayTagArgs... tags) {
            return tags(List.of(tags));
        }

        public GatewayArgs build() {
            $.gatewayPlatform = Objects.requireNonNull($.gatewayPlatform, "expected parameter 'gatewayPlatform' to be non-null");
            return $;
        }
    }

}
