// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudformation.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetStackSetArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetStackSetArgs Empty = new GetStackSetArgs();

    /**
     * The ID of the stack set that you&#39;re creating.
     * 
     */
    @Import(name="stackSetId", required=true)
    private Output<String> stackSetId;

    /**
     * @return The ID of the stack set that you&#39;re creating.
     * 
     */
    public Output<String> stackSetId() {
        return this.stackSetId;
    }

    private GetStackSetArgs() {}

    private GetStackSetArgs(GetStackSetArgs $) {
        this.stackSetId = $.stackSetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStackSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStackSetArgs $;

        public Builder() {
            $ = new GetStackSetArgs();
        }

        public Builder(GetStackSetArgs defaults) {
            $ = new GetStackSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param stackSetId The ID of the stack set that you&#39;re creating.
         * 
         * @return builder
         * 
         */
        public Builder stackSetId(Output<String> stackSetId) {
            $.stackSetId = stackSetId;
            return this;
        }

        /**
         * @param stackSetId The ID of the stack set that you&#39;re creating.
         * 
         * @return builder
         * 
         */
        public Builder stackSetId(String stackSetId) {
            return stackSetId(Output.of(stackSetId));
        }

        public GetStackSetArgs build() {
            $.stackSetId = Objects.requireNonNull($.stackSetId, "expected parameter 'stackSetId' to be non-null");
            return $;
        }
    }

}
