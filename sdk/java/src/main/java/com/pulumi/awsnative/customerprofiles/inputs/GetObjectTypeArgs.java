// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.customerprofiles.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetObjectTypeArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetObjectTypeArgs Empty = new GetObjectTypeArgs();

    /**
     * The unique name of the domain.
     * 
     */
    @Import(name="domainName", required=true)
    private Output<String> domainName;

    /**
     * @return The unique name of the domain.
     * 
     */
    public Output<String> domainName() {
        return this.domainName;
    }

    /**
     * The name of the profile object type.
     * 
     */
    @Import(name="objectTypeName", required=true)
    private Output<String> objectTypeName;

    /**
     * @return The name of the profile object type.
     * 
     */
    public Output<String> objectTypeName() {
        return this.objectTypeName;
    }

    private GetObjectTypeArgs() {}

    private GetObjectTypeArgs(GetObjectTypeArgs $) {
        this.domainName = $.domainName;
        this.objectTypeName = $.objectTypeName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetObjectTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetObjectTypeArgs $;

        public Builder() {
            $ = new GetObjectTypeArgs();
        }

        public Builder(GetObjectTypeArgs defaults) {
            $ = new GetObjectTypeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainName The unique name of the domain.
         * 
         * @return builder
         * 
         */
        public Builder domainName(Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        /**
         * @param domainName The unique name of the domain.
         * 
         * @return builder
         * 
         */
        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        /**
         * @param objectTypeName The name of the profile object type.
         * 
         * @return builder
         * 
         */
        public Builder objectTypeName(Output<String> objectTypeName) {
            $.objectTypeName = objectTypeName;
            return this;
        }

        /**
         * @param objectTypeName The name of the profile object type.
         * 
         * @return builder
         * 
         */
        public Builder objectTypeName(String objectTypeName) {
            return objectTypeName(Output.of(objectTypeName));
        }

        public GetObjectTypeArgs build() {
            $.domainName = Objects.requireNonNull($.domainName, "expected parameter 'domainName' to be non-null");
            $.objectTypeName = Objects.requireNonNull($.objectTypeName, "expected parameter 'objectTypeName' to be non-null");
            return $;
        }
    }

}
