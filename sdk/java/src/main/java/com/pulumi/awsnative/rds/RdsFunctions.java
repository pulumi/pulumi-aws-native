// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.rds;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.rds.inputs.GetDBClusterParameterGroupArgs;
import com.pulumi.awsnative.rds.inputs.GetDBClusterParameterGroupPlainArgs;
import com.pulumi.awsnative.rds.inputs.GetDBParameterGroupArgs;
import com.pulumi.awsnative.rds.inputs.GetDBParameterGroupPlainArgs;
import com.pulumi.awsnative.rds.inputs.GetDBProxyArgs;
import com.pulumi.awsnative.rds.inputs.GetDBProxyEndpointArgs;
import com.pulumi.awsnative.rds.inputs.GetDBProxyEndpointPlainArgs;
import com.pulumi.awsnative.rds.inputs.GetDBProxyPlainArgs;
import com.pulumi.awsnative.rds.inputs.GetDBProxyTargetGroupArgs;
import com.pulumi.awsnative.rds.inputs.GetDBProxyTargetGroupPlainArgs;
import com.pulumi.awsnative.rds.inputs.GetDBSubnetGroupArgs;
import com.pulumi.awsnative.rds.inputs.GetDBSubnetGroupPlainArgs;
import com.pulumi.awsnative.rds.inputs.GetEventSubscriptionArgs;
import com.pulumi.awsnative.rds.inputs.GetEventSubscriptionPlainArgs;
import com.pulumi.awsnative.rds.inputs.GetGlobalClusterArgs;
import com.pulumi.awsnative.rds.inputs.GetGlobalClusterPlainArgs;
import com.pulumi.awsnative.rds.outputs.GetDBClusterParameterGroupResult;
import com.pulumi.awsnative.rds.outputs.GetDBParameterGroupResult;
import com.pulumi.awsnative.rds.outputs.GetDBProxyEndpointResult;
import com.pulumi.awsnative.rds.outputs.GetDBProxyResult;
import com.pulumi.awsnative.rds.outputs.GetDBProxyTargetGroupResult;
import com.pulumi.awsnative.rds.outputs.GetDBSubnetGroupResult;
import com.pulumi.awsnative.rds.outputs.GetEventSubscriptionResult;
import com.pulumi.awsnative.rds.outputs.GetGlobalClusterResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class RdsFunctions {
    /**
     * The AWS::RDS::DBClusterParameterGroup resource creates a new Amazon RDS DB cluster parameter group. For more information, see Managing an Amazon Aurora DB Cluster in the Amazon Aurora User Guide.
     * 
     */
    public static Output<GetDBClusterParameterGroupResult> getDBClusterParameterGroup(GetDBClusterParameterGroupArgs args) {
        return getDBClusterParameterGroup(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::RDS::DBClusterParameterGroup resource creates a new Amazon RDS DB cluster parameter group. For more information, see Managing an Amazon Aurora DB Cluster in the Amazon Aurora User Guide.
     * 
     */
    public static CompletableFuture<GetDBClusterParameterGroupResult> getDBClusterParameterGroupPlain(GetDBClusterParameterGroupPlainArgs args) {
        return getDBClusterParameterGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::RDS::DBClusterParameterGroup resource creates a new Amazon RDS DB cluster parameter group. For more information, see Managing an Amazon Aurora DB Cluster in the Amazon Aurora User Guide.
     * 
     */
    public static Output<GetDBClusterParameterGroupResult> getDBClusterParameterGroup(GetDBClusterParameterGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:rds:getDBClusterParameterGroup", TypeShape.of(GetDBClusterParameterGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::RDS::DBClusterParameterGroup resource creates a new Amazon RDS DB cluster parameter group. For more information, see Managing an Amazon Aurora DB Cluster in the Amazon Aurora User Guide.
     * 
     */
    public static CompletableFuture<GetDBClusterParameterGroupResult> getDBClusterParameterGroupPlain(GetDBClusterParameterGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:rds:getDBClusterParameterGroup", TypeShape.of(GetDBClusterParameterGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::RDS::DBParameterGroup resource creates a custom parameter group for an RDS database family
     * 
     */
    public static Output<GetDBParameterGroupResult> getDBParameterGroup(GetDBParameterGroupArgs args) {
        return getDBParameterGroup(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::RDS::DBParameterGroup resource creates a custom parameter group for an RDS database family
     * 
     */
    public static CompletableFuture<GetDBParameterGroupResult> getDBParameterGroupPlain(GetDBParameterGroupPlainArgs args) {
        return getDBParameterGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::RDS::DBParameterGroup resource creates a custom parameter group for an RDS database family
     * 
     */
    public static Output<GetDBParameterGroupResult> getDBParameterGroup(GetDBParameterGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:rds:getDBParameterGroup", TypeShape.of(GetDBParameterGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::RDS::DBParameterGroup resource creates a custom parameter group for an RDS database family
     * 
     */
    public static CompletableFuture<GetDBParameterGroupResult> getDBParameterGroupPlain(GetDBParameterGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:rds:getDBParameterGroup", TypeShape.of(GetDBParameterGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource schema for AWS::RDS::DBProxy
     * 
     */
    public static Output<GetDBProxyResult> getDBProxy(GetDBProxyArgs args) {
        return getDBProxy(args, InvokeOptions.Empty);
    }
    /**
     * Resource schema for AWS::RDS::DBProxy
     * 
     */
    public static CompletableFuture<GetDBProxyResult> getDBProxyPlain(GetDBProxyPlainArgs args) {
        return getDBProxyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource schema for AWS::RDS::DBProxy
     * 
     */
    public static Output<GetDBProxyResult> getDBProxy(GetDBProxyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:rds:getDBProxy", TypeShape.of(GetDBProxyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource schema for AWS::RDS::DBProxy
     * 
     */
    public static CompletableFuture<GetDBProxyResult> getDBProxyPlain(GetDBProxyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:rds:getDBProxy", TypeShape.of(GetDBProxyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource schema for AWS::RDS::DBProxyEndpoint.
     * 
     */
    public static Output<GetDBProxyEndpointResult> getDBProxyEndpoint(GetDBProxyEndpointArgs args) {
        return getDBProxyEndpoint(args, InvokeOptions.Empty);
    }
    /**
     * Resource schema for AWS::RDS::DBProxyEndpoint.
     * 
     */
    public static CompletableFuture<GetDBProxyEndpointResult> getDBProxyEndpointPlain(GetDBProxyEndpointPlainArgs args) {
        return getDBProxyEndpointPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource schema for AWS::RDS::DBProxyEndpoint.
     * 
     */
    public static Output<GetDBProxyEndpointResult> getDBProxyEndpoint(GetDBProxyEndpointArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:rds:getDBProxyEndpoint", TypeShape.of(GetDBProxyEndpointResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource schema for AWS::RDS::DBProxyEndpoint.
     * 
     */
    public static CompletableFuture<GetDBProxyEndpointResult> getDBProxyEndpointPlain(GetDBProxyEndpointPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:rds:getDBProxyEndpoint", TypeShape.of(GetDBProxyEndpointResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource schema for AWS::RDS::DBProxyTargetGroup
     * 
     */
    public static Output<GetDBProxyTargetGroupResult> getDBProxyTargetGroup(GetDBProxyTargetGroupArgs args) {
        return getDBProxyTargetGroup(args, InvokeOptions.Empty);
    }
    /**
     * Resource schema for AWS::RDS::DBProxyTargetGroup
     * 
     */
    public static CompletableFuture<GetDBProxyTargetGroupResult> getDBProxyTargetGroupPlain(GetDBProxyTargetGroupPlainArgs args) {
        return getDBProxyTargetGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource schema for AWS::RDS::DBProxyTargetGroup
     * 
     */
    public static Output<GetDBProxyTargetGroupResult> getDBProxyTargetGroup(GetDBProxyTargetGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:rds:getDBProxyTargetGroup", TypeShape.of(GetDBProxyTargetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource schema for AWS::RDS::DBProxyTargetGroup
     * 
     */
    public static CompletableFuture<GetDBProxyTargetGroupResult> getDBProxyTargetGroupPlain(GetDBProxyTargetGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:rds:getDBProxyTargetGroup", TypeShape.of(GetDBProxyTargetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::RDS::DBSubnetGroup resource creates a database subnet group. Subnet groups must contain at least two subnets in two different Availability Zones in the same region.
     * 
     */
    public static Output<GetDBSubnetGroupResult> getDBSubnetGroup(GetDBSubnetGroupArgs args) {
        return getDBSubnetGroup(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::RDS::DBSubnetGroup resource creates a database subnet group. Subnet groups must contain at least two subnets in two different Availability Zones in the same region.
     * 
     */
    public static CompletableFuture<GetDBSubnetGroupResult> getDBSubnetGroupPlain(GetDBSubnetGroupPlainArgs args) {
        return getDBSubnetGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::RDS::DBSubnetGroup resource creates a database subnet group. Subnet groups must contain at least two subnets in two different Availability Zones in the same region.
     * 
     */
    public static Output<GetDBSubnetGroupResult> getDBSubnetGroup(GetDBSubnetGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:rds:getDBSubnetGroup", TypeShape.of(GetDBSubnetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::RDS::DBSubnetGroup resource creates a database subnet group. Subnet groups must contain at least two subnets in two different Availability Zones in the same region.
     * 
     */
    public static CompletableFuture<GetDBSubnetGroupResult> getDBSubnetGroupPlain(GetDBSubnetGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:rds:getDBSubnetGroup", TypeShape.of(GetDBSubnetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::RDS::EventSubscription resource allows you to receive notifications for Amazon Relational Database Service events through the Amazon Simple Notification Service (Amazon SNS). For more information, see Using Amazon RDS Event Notification in the Amazon RDS User Guide.
     * 
     */
    public static Output<GetEventSubscriptionResult> getEventSubscription(GetEventSubscriptionArgs args) {
        return getEventSubscription(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::RDS::EventSubscription resource allows you to receive notifications for Amazon Relational Database Service events through the Amazon Simple Notification Service (Amazon SNS). For more information, see Using Amazon RDS Event Notification in the Amazon RDS User Guide.
     * 
     */
    public static CompletableFuture<GetEventSubscriptionResult> getEventSubscriptionPlain(GetEventSubscriptionPlainArgs args) {
        return getEventSubscriptionPlain(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::RDS::EventSubscription resource allows you to receive notifications for Amazon Relational Database Service events through the Amazon Simple Notification Service (Amazon SNS). For more information, see Using Amazon RDS Event Notification in the Amazon RDS User Guide.
     * 
     */
    public static Output<GetEventSubscriptionResult> getEventSubscription(GetEventSubscriptionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:rds:getEventSubscription", TypeShape.of(GetEventSubscriptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::RDS::EventSubscription resource allows you to receive notifications for Amazon Relational Database Service events through the Amazon Simple Notification Service (Amazon SNS). For more information, see Using Amazon RDS Event Notification in the Amazon RDS User Guide.
     * 
     */
    public static CompletableFuture<GetEventSubscriptionResult> getEventSubscriptionPlain(GetEventSubscriptionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:rds:getEventSubscription", TypeShape.of(GetEventSubscriptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::RDS::GlobalCluster
     * 
     */
    public static Output<GetGlobalClusterResult> getGlobalCluster(GetGlobalClusterArgs args) {
        return getGlobalCluster(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::RDS::GlobalCluster
     * 
     */
    public static CompletableFuture<GetGlobalClusterResult> getGlobalClusterPlain(GetGlobalClusterPlainArgs args) {
        return getGlobalClusterPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource Type definition for AWS::RDS::GlobalCluster
     * 
     */
    public static Output<GetGlobalClusterResult> getGlobalCluster(GetGlobalClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:rds:getGlobalCluster", TypeShape.of(GetGlobalClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource Type definition for AWS::RDS::GlobalCluster
     * 
     */
    public static CompletableFuture<GetGlobalClusterResult> getGlobalClusterPlain(GetGlobalClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:rds:getGlobalCluster", TypeShape.of(GetGlobalClusterResult.class), args, Utilities.withVersion(options));
    }
}
