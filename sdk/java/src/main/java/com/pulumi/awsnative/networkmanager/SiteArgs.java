// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.networkmanager;

import com.pulumi.awsnative.networkmanager.inputs.SiteLocationArgs;
import com.pulumi.awsnative.networkmanager.inputs.SiteTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SiteArgs extends com.pulumi.resources.ResourceArgs {

    public static final SiteArgs Empty = new SiteArgs();

    /**
     * The description of the site.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the site.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The ID of the global network.
     * 
     */
    @Import(name="globalNetworkId", required=true)
    private Output<String> globalNetworkId;

    /**
     * @return The ID of the global network.
     * 
     */
    public Output<String> globalNetworkId() {
        return this.globalNetworkId;
    }

    /**
     * The location of the site.
     * 
     */
    @Import(name="location")
    private @Nullable Output<SiteLocationArgs> location;

    /**
     * @return The location of the site.
     * 
     */
    public Optional<Output<SiteLocationArgs>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The tags for the site.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<SiteTagArgs>> tags;

    /**
     * @return The tags for the site.
     * 
     */
    public Optional<Output<List<SiteTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private SiteArgs() {}

    private SiteArgs(SiteArgs $) {
        this.description = $.description;
        this.globalNetworkId = $.globalNetworkId;
        this.location = $.location;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SiteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SiteArgs $;

        public Builder() {
            $ = new SiteArgs();
        }

        public Builder(SiteArgs defaults) {
            $ = new SiteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the site.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the site.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param globalNetworkId The ID of the global network.
         * 
         * @return builder
         * 
         */
        public Builder globalNetworkId(Output<String> globalNetworkId) {
            $.globalNetworkId = globalNetworkId;
            return this;
        }

        /**
         * @param globalNetworkId The ID of the global network.
         * 
         * @return builder
         * 
         */
        public Builder globalNetworkId(String globalNetworkId) {
            return globalNetworkId(Output.of(globalNetworkId));
        }

        /**
         * @param location The location of the site.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<SiteLocationArgs> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the site.
         * 
         * @return builder
         * 
         */
        public Builder location(SiteLocationArgs location) {
            return location(Output.of(location));
        }

        /**
         * @param tags The tags for the site.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<SiteTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags for the site.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<SiteTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The tags for the site.
         * 
         * @return builder
         * 
         */
        public Builder tags(SiteTagArgs... tags) {
            return tags(List.of(tags));
        }

        public SiteArgs build() {
            $.globalNetworkId = Objects.requireNonNull($.globalNetworkId, "expected parameter 'globalNetworkId' to be non-null");
            return $;
        }
    }

}
