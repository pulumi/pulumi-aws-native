// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sqs.outputs;

import com.pulumi.awsnative.sqs.outputs.QueueTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetQueueResult {
    /**
     * @return Amazon Resource Name (ARN) of the queue.
     * 
     */
    private @Nullable String arn;
    /**
     * @return For first-in-first-out (FIFO) queues, specifies whether to enable content-based deduplication. During the deduplication interval, Amazon SQS treats messages that are sent with identical content as duplicates and delivers only one copy of the message.
     * 
     */
    private @Nullable Boolean contentBasedDeduplication;
    /**
     * @return Specifies whether message deduplication occurs at the message group or queue level. Valid values are messageGroup and queue.
     * 
     */
    private @Nullable String deduplicationScope;
    /**
     * @return The time in seconds for which the delivery of all messages in the queue is delayed. You can specify an integer value of 0 to 900 (15 minutes). The default value is 0.
     * 
     */
    private @Nullable Integer delaySeconds;
    /**
     * @return Specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are perQueue and perMessageGroupId. The perMessageGroupId value is allowed only when the value for DeduplicationScope is messageGroup.
     * 
     */
    private @Nullable String fifoThroughputLimit;
    /**
     * @return The length of time in seconds for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again. The value must be an integer between 60 (1 minute) and 86,400 (24 hours). The default is 300 (5 minutes).
     * 
     */
    private @Nullable Integer kmsDataKeyReusePeriodSeconds;
    /**
     * @return The ID of an AWS managed customer master key (CMK) for Amazon SQS or a custom CMK. To use the AWS managed CMK for Amazon SQS, specify the (default) alias alias/aws/sqs.
     * 
     */
    private @Nullable String kmsMasterKeyId;
    /**
     * @return The limit of how many bytes that a message can contain before Amazon SQS rejects it. You can specify an integer value from 1,024 bytes (1 KiB) to 262,144 bytes (256 KiB). The default value is 262,144 (256 KiB).
     * 
     */
    private @Nullable Integer maximumMessageSize;
    /**
     * @return The number of seconds that Amazon SQS retains a message. You can specify an integer value from 60 seconds (1 minute) to 1,209,600 seconds (14 days). The default value is 345,600 seconds (4 days).
     * 
     */
    private @Nullable Integer messageRetentionPeriod;
    /**
     * @return URL of the source queue.
     * 
     */
    private @Nullable String queueUrl;
    /**
     * @return Specifies the duration, in seconds, that the ReceiveMessage action call waits until a message is in the queue in order to include it in the response, rather than returning an empty response if a message isn&#39;t yet available. You can specify an integer from 1 to 20. Short polling is used as the default or when you specify 0 for this property.
     * 
     */
    private @Nullable Integer receiveMessageWaitTimeSeconds;
    /**
     * @return The string that includes the parameters for the permissions for the dead-letter queue redrive permission and which source queues can specify dead-letter queues as a JSON object.
     * 
     */
    private @Nullable Object redriveAllowPolicy;
    /**
     * @return A string that includes the parameters for the dead-letter queue functionality (redrive policy) of the source queue.
     * 
     */
    private @Nullable Object redrivePolicy;
    /**
     * @return Enables server-side queue encryption using SQS owned encryption keys. Only one server-side encryption option is supported per queue (e.g. SSE-KMS or SSE-SQS ).
     * 
     */
    private @Nullable Boolean sqsManagedSseEnabled;
    /**
     * @return The tags that you attach to this queue.
     * 
     */
    private @Nullable List<QueueTag> tags;
    /**
     * @return The length of time during which a message will be unavailable after a message is delivered from the queue. This blocks other components from receiving the same message and gives the initial component time to process and delete the message from the queue. Values must be from 0 to 43,200 seconds (12 hours). If you don&#39;t specify a value, AWS CloudFormation uses the default value of 30 seconds.
     * 
     */
    private @Nullable Integer visibilityTimeout;

    private GetQueueResult() {}
    /**
     * @return Amazon Resource Name (ARN) of the queue.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return For first-in-first-out (FIFO) queues, specifies whether to enable content-based deduplication. During the deduplication interval, Amazon SQS treats messages that are sent with identical content as duplicates and delivers only one copy of the message.
     * 
     */
    public Optional<Boolean> contentBasedDeduplication() {
        return Optional.ofNullable(this.contentBasedDeduplication);
    }
    /**
     * @return Specifies whether message deduplication occurs at the message group or queue level. Valid values are messageGroup and queue.
     * 
     */
    public Optional<String> deduplicationScope() {
        return Optional.ofNullable(this.deduplicationScope);
    }
    /**
     * @return The time in seconds for which the delivery of all messages in the queue is delayed. You can specify an integer value of 0 to 900 (15 minutes). The default value is 0.
     * 
     */
    public Optional<Integer> delaySeconds() {
        return Optional.ofNullable(this.delaySeconds);
    }
    /**
     * @return Specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are perQueue and perMessageGroupId. The perMessageGroupId value is allowed only when the value for DeduplicationScope is messageGroup.
     * 
     */
    public Optional<String> fifoThroughputLimit() {
        return Optional.ofNullable(this.fifoThroughputLimit);
    }
    /**
     * @return The length of time in seconds for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again. The value must be an integer between 60 (1 minute) and 86,400 (24 hours). The default is 300 (5 minutes).
     * 
     */
    public Optional<Integer> kmsDataKeyReusePeriodSeconds() {
        return Optional.ofNullable(this.kmsDataKeyReusePeriodSeconds);
    }
    /**
     * @return The ID of an AWS managed customer master key (CMK) for Amazon SQS or a custom CMK. To use the AWS managed CMK for Amazon SQS, specify the (default) alias alias/aws/sqs.
     * 
     */
    public Optional<String> kmsMasterKeyId() {
        return Optional.ofNullable(this.kmsMasterKeyId);
    }
    /**
     * @return The limit of how many bytes that a message can contain before Amazon SQS rejects it. You can specify an integer value from 1,024 bytes (1 KiB) to 262,144 bytes (256 KiB). The default value is 262,144 (256 KiB).
     * 
     */
    public Optional<Integer> maximumMessageSize() {
        return Optional.ofNullable(this.maximumMessageSize);
    }
    /**
     * @return The number of seconds that Amazon SQS retains a message. You can specify an integer value from 60 seconds (1 minute) to 1,209,600 seconds (14 days). The default value is 345,600 seconds (4 days).
     * 
     */
    public Optional<Integer> messageRetentionPeriod() {
        return Optional.ofNullable(this.messageRetentionPeriod);
    }
    /**
     * @return URL of the source queue.
     * 
     */
    public Optional<String> queueUrl() {
        return Optional.ofNullable(this.queueUrl);
    }
    /**
     * @return Specifies the duration, in seconds, that the ReceiveMessage action call waits until a message is in the queue in order to include it in the response, rather than returning an empty response if a message isn&#39;t yet available. You can specify an integer from 1 to 20. Short polling is used as the default or when you specify 0 for this property.
     * 
     */
    public Optional<Integer> receiveMessageWaitTimeSeconds() {
        return Optional.ofNullable(this.receiveMessageWaitTimeSeconds);
    }
    /**
     * @return The string that includes the parameters for the permissions for the dead-letter queue redrive permission and which source queues can specify dead-letter queues as a JSON object.
     * 
     */
    public Optional<Object> redriveAllowPolicy() {
        return Optional.ofNullable(this.redriveAllowPolicy);
    }
    /**
     * @return A string that includes the parameters for the dead-letter queue functionality (redrive policy) of the source queue.
     * 
     */
    public Optional<Object> redrivePolicy() {
        return Optional.ofNullable(this.redrivePolicy);
    }
    /**
     * @return Enables server-side queue encryption using SQS owned encryption keys. Only one server-side encryption option is supported per queue (e.g. SSE-KMS or SSE-SQS ).
     * 
     */
    public Optional<Boolean> sqsManagedSseEnabled() {
        return Optional.ofNullable(this.sqsManagedSseEnabled);
    }
    /**
     * @return The tags that you attach to this queue.
     * 
     */
    public List<QueueTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return The length of time during which a message will be unavailable after a message is delivered from the queue. This blocks other components from receiving the same message and gives the initial component time to process and delete the message from the queue. Values must be from 0 to 43,200 seconds (12 hours). If you don&#39;t specify a value, AWS CloudFormation uses the default value of 30 seconds.
     * 
     */
    public Optional<Integer> visibilityTimeout() {
        return Optional.ofNullable(this.visibilityTimeout);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetQueueResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable Boolean contentBasedDeduplication;
        private @Nullable String deduplicationScope;
        private @Nullable Integer delaySeconds;
        private @Nullable String fifoThroughputLimit;
        private @Nullable Integer kmsDataKeyReusePeriodSeconds;
        private @Nullable String kmsMasterKeyId;
        private @Nullable Integer maximumMessageSize;
        private @Nullable Integer messageRetentionPeriod;
        private @Nullable String queueUrl;
        private @Nullable Integer receiveMessageWaitTimeSeconds;
        private @Nullable Object redriveAllowPolicy;
        private @Nullable Object redrivePolicy;
        private @Nullable Boolean sqsManagedSseEnabled;
        private @Nullable List<QueueTag> tags;
        private @Nullable Integer visibilityTimeout;
        public Builder() {}
        public Builder(GetQueueResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.contentBasedDeduplication = defaults.contentBasedDeduplication;
    	      this.deduplicationScope = defaults.deduplicationScope;
    	      this.delaySeconds = defaults.delaySeconds;
    	      this.fifoThroughputLimit = defaults.fifoThroughputLimit;
    	      this.kmsDataKeyReusePeriodSeconds = defaults.kmsDataKeyReusePeriodSeconds;
    	      this.kmsMasterKeyId = defaults.kmsMasterKeyId;
    	      this.maximumMessageSize = defaults.maximumMessageSize;
    	      this.messageRetentionPeriod = defaults.messageRetentionPeriod;
    	      this.queueUrl = defaults.queueUrl;
    	      this.receiveMessageWaitTimeSeconds = defaults.receiveMessageWaitTimeSeconds;
    	      this.redriveAllowPolicy = defaults.redriveAllowPolicy;
    	      this.redrivePolicy = defaults.redrivePolicy;
    	      this.sqsManagedSseEnabled = defaults.sqsManagedSseEnabled;
    	      this.tags = defaults.tags;
    	      this.visibilityTimeout = defaults.visibilityTimeout;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder contentBasedDeduplication(@Nullable Boolean contentBasedDeduplication) {
            this.contentBasedDeduplication = contentBasedDeduplication;
            return this;
        }
        @CustomType.Setter
        public Builder deduplicationScope(@Nullable String deduplicationScope) {
            this.deduplicationScope = deduplicationScope;
            return this;
        }
        @CustomType.Setter
        public Builder delaySeconds(@Nullable Integer delaySeconds) {
            this.delaySeconds = delaySeconds;
            return this;
        }
        @CustomType.Setter
        public Builder fifoThroughputLimit(@Nullable String fifoThroughputLimit) {
            this.fifoThroughputLimit = fifoThroughputLimit;
            return this;
        }
        @CustomType.Setter
        public Builder kmsDataKeyReusePeriodSeconds(@Nullable Integer kmsDataKeyReusePeriodSeconds) {
            this.kmsDataKeyReusePeriodSeconds = kmsDataKeyReusePeriodSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder kmsMasterKeyId(@Nullable String kmsMasterKeyId) {
            this.kmsMasterKeyId = kmsMasterKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder maximumMessageSize(@Nullable Integer maximumMessageSize) {
            this.maximumMessageSize = maximumMessageSize;
            return this;
        }
        @CustomType.Setter
        public Builder messageRetentionPeriod(@Nullable Integer messageRetentionPeriod) {
            this.messageRetentionPeriod = messageRetentionPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder queueUrl(@Nullable String queueUrl) {
            this.queueUrl = queueUrl;
            return this;
        }
        @CustomType.Setter
        public Builder receiveMessageWaitTimeSeconds(@Nullable Integer receiveMessageWaitTimeSeconds) {
            this.receiveMessageWaitTimeSeconds = receiveMessageWaitTimeSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder redriveAllowPolicy(@Nullable Object redriveAllowPolicy) {
            this.redriveAllowPolicy = redriveAllowPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder redrivePolicy(@Nullable Object redrivePolicy) {
            this.redrivePolicy = redrivePolicy;
            return this;
        }
        @CustomType.Setter
        public Builder sqsManagedSseEnabled(@Nullable Boolean sqsManagedSseEnabled) {
            this.sqsManagedSseEnabled = sqsManagedSseEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<QueueTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(QueueTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder visibilityTimeout(@Nullable Integer visibilityTimeout) {
            this.visibilityTimeout = visibilityTimeout;
            return this;
        }
        public GetQueueResult build() {
            final var o = new GetQueueResult();
            o.arn = arn;
            o.contentBasedDeduplication = contentBasedDeduplication;
            o.deduplicationScope = deduplicationScope;
            o.delaySeconds = delaySeconds;
            o.fifoThroughputLimit = fifoThroughputLimit;
            o.kmsDataKeyReusePeriodSeconds = kmsDataKeyReusePeriodSeconds;
            o.kmsMasterKeyId = kmsMasterKeyId;
            o.maximumMessageSize = maximumMessageSize;
            o.messageRetentionPeriod = messageRetentionPeriod;
            o.queueUrl = queueUrl;
            o.receiveMessageWaitTimeSeconds = receiveMessageWaitTimeSeconds;
            o.redriveAllowPolicy = redriveAllowPolicy;
            o.redrivePolicy = redrivePolicy;
            o.sqsManagedSseEnabled = sqsManagedSseEnabled;
            o.tags = tags;
            o.visibilityTimeout = visibilityTimeout;
            return o;
        }
    }
}
