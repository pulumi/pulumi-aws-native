// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.imagebuilder.outputs;

import com.pulumi.awsnative.imagebuilder.outputs.DistributionConfigurationAmiDistributionConfiguration;
import com.pulumi.awsnative.imagebuilder.outputs.DistributionConfigurationContainerDistributionConfiguration;
import com.pulumi.awsnative.imagebuilder.outputs.DistributionConfigurationFastLaunchConfiguration;
import com.pulumi.awsnative.imagebuilder.outputs.DistributionConfigurationLaunchTemplateConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DistributionConfigurationDistribution {
    private @Nullable DistributionConfigurationAmiDistributionConfiguration amiDistributionConfiguration;
    private @Nullable DistributionConfigurationContainerDistributionConfiguration containerDistributionConfiguration;
    /**
     * @return The Windows faster-launching configurations to use for AMI distribution.
     * 
     */
    private @Nullable List<DistributionConfigurationFastLaunchConfiguration> fastLaunchConfigurations;
    /**
     * @return A group of launchTemplateConfiguration settings that apply to image distribution.
     * 
     */
    private @Nullable List<DistributionConfigurationLaunchTemplateConfiguration> launchTemplateConfigurations;
    /**
     * @return The License Manager Configuration to associate with the AMI in the specified Region.
     * 
     */
    private @Nullable List<String> licenseConfigurationArns;
    /**
     * @return region
     * 
     */
    private String region;

    private DistributionConfigurationDistribution() {}
    public Optional<DistributionConfigurationAmiDistributionConfiguration> amiDistributionConfiguration() {
        return Optional.ofNullable(this.amiDistributionConfiguration);
    }
    public Optional<DistributionConfigurationContainerDistributionConfiguration> containerDistributionConfiguration() {
        return Optional.ofNullable(this.containerDistributionConfiguration);
    }
    /**
     * @return The Windows faster-launching configurations to use for AMI distribution.
     * 
     */
    public List<DistributionConfigurationFastLaunchConfiguration> fastLaunchConfigurations() {
        return this.fastLaunchConfigurations == null ? List.of() : this.fastLaunchConfigurations;
    }
    /**
     * @return A group of launchTemplateConfiguration settings that apply to image distribution.
     * 
     */
    public List<DistributionConfigurationLaunchTemplateConfiguration> launchTemplateConfigurations() {
        return this.launchTemplateConfigurations == null ? List.of() : this.launchTemplateConfigurations;
    }
    /**
     * @return The License Manager Configuration to associate with the AMI in the specified Region.
     * 
     */
    public List<String> licenseConfigurationArns() {
        return this.licenseConfigurationArns == null ? List.of() : this.licenseConfigurationArns;
    }
    /**
     * @return region
     * 
     */
    public String region() {
        return this.region;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DistributionConfigurationDistribution defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DistributionConfigurationAmiDistributionConfiguration amiDistributionConfiguration;
        private @Nullable DistributionConfigurationContainerDistributionConfiguration containerDistributionConfiguration;
        private @Nullable List<DistributionConfigurationFastLaunchConfiguration> fastLaunchConfigurations;
        private @Nullable List<DistributionConfigurationLaunchTemplateConfiguration> launchTemplateConfigurations;
        private @Nullable List<String> licenseConfigurationArns;
        private String region;
        public Builder() {}
        public Builder(DistributionConfigurationDistribution defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.amiDistributionConfiguration = defaults.amiDistributionConfiguration;
    	      this.containerDistributionConfiguration = defaults.containerDistributionConfiguration;
    	      this.fastLaunchConfigurations = defaults.fastLaunchConfigurations;
    	      this.launchTemplateConfigurations = defaults.launchTemplateConfigurations;
    	      this.licenseConfigurationArns = defaults.licenseConfigurationArns;
    	      this.region = defaults.region;
        }

        @CustomType.Setter
        public Builder amiDistributionConfiguration(@Nullable DistributionConfigurationAmiDistributionConfiguration amiDistributionConfiguration) {
            this.amiDistributionConfiguration = amiDistributionConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder containerDistributionConfiguration(@Nullable DistributionConfigurationContainerDistributionConfiguration containerDistributionConfiguration) {
            this.containerDistributionConfiguration = containerDistributionConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder fastLaunchConfigurations(@Nullable List<DistributionConfigurationFastLaunchConfiguration> fastLaunchConfigurations) {
            this.fastLaunchConfigurations = fastLaunchConfigurations;
            return this;
        }
        public Builder fastLaunchConfigurations(DistributionConfigurationFastLaunchConfiguration... fastLaunchConfigurations) {
            return fastLaunchConfigurations(List.of(fastLaunchConfigurations));
        }
        @CustomType.Setter
        public Builder launchTemplateConfigurations(@Nullable List<DistributionConfigurationLaunchTemplateConfiguration> launchTemplateConfigurations) {
            this.launchTemplateConfigurations = launchTemplateConfigurations;
            return this;
        }
        public Builder launchTemplateConfigurations(DistributionConfigurationLaunchTemplateConfiguration... launchTemplateConfigurations) {
            return launchTemplateConfigurations(List.of(launchTemplateConfigurations));
        }
        @CustomType.Setter
        public Builder licenseConfigurationArns(@Nullable List<String> licenseConfigurationArns) {
            this.licenseConfigurationArns = licenseConfigurationArns;
            return this;
        }
        public Builder licenseConfigurationArns(String... licenseConfigurationArns) {
            return licenseConfigurationArns(List.of(licenseConfigurationArns));
        }
        @CustomType.Setter
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        public DistributionConfigurationDistribution build() {
            final var o = new DistributionConfigurationDistribution();
            o.amiDistributionConfiguration = amiDistributionConfiguration;
            o.containerDistributionConfiguration = containerDistributionConfiguration;
            o.fastLaunchConfigurations = fastLaunchConfigurations;
            o.launchTemplateConfigurations = launchTemplateConfigurations;
            o.licenseConfigurationArns = licenseConfigurationArns;
            o.region = region;
            return o;
        }
    }
}
