// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight.outputs;

import com.pulumi.awsnative.quicksight.enums.DashboardResourceStatus;
import com.pulumi.awsnative.quicksight.outputs.DashboardError;
import com.pulumi.awsnative.quicksight.outputs.DashboardSheet;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardVersion {
    /**
     * @return &lt;p&gt;The Amazon Resource Name (ARN) of the resource.&lt;/p&gt;
     * 
     */
    private @Nullable String arn;
    /**
     * @return &lt;p&gt;The time that this dashboard version was created.&lt;/p&gt;
     * 
     */
    private @Nullable String createdTime;
    /**
     * @return &lt;p&gt;The Amazon Resource Numbers (ARNs) for the datasets that are associated with this
     *             version of the dashboard.&lt;/p&gt;
     * 
     */
    private @Nullable List<String> dataSetArns;
    /**
     * @return &lt;p&gt;Description.&lt;/p&gt;
     * 
     */
    private @Nullable String description;
    /**
     * @return &lt;p&gt;Errors associated with this dashboard version.&lt;/p&gt;
     * 
     */
    private @Nullable List<DashboardError> errors;
    /**
     * @return &lt;p&gt;A list of the associated sheets with the unique identifier and name of each sheet.&lt;/p&gt;
     * 
     */
    private @Nullable List<DashboardSheet> sheets;
    /**
     * @return &lt;p&gt;Source entity ARN.&lt;/p&gt;
     * 
     */
    private @Nullable String sourceEntityArn;
    private @Nullable DashboardResourceStatus status;
    /**
     * @return &lt;p&gt;The ARN of the theme associated with a version of the dashboard.&lt;/p&gt;
     * 
     */
    private @Nullable String themeArn;
    /**
     * @return &lt;p&gt;Version number for this version of the dashboard.&lt;/p&gt;
     * 
     */
    private @Nullable Double versionNumber;

    private DashboardVersion() {}
    /**
     * @return &lt;p&gt;The Amazon Resource Name (ARN) of the resource.&lt;/p&gt;
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return &lt;p&gt;The time that this dashboard version was created.&lt;/p&gt;
     * 
     */
    public Optional<String> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }
    /**
     * @return &lt;p&gt;The Amazon Resource Numbers (ARNs) for the datasets that are associated with this
     *             version of the dashboard.&lt;/p&gt;
     * 
     */
    public List<String> dataSetArns() {
        return this.dataSetArns == null ? List.of() : this.dataSetArns;
    }
    /**
     * @return &lt;p&gt;Description.&lt;/p&gt;
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return &lt;p&gt;Errors associated with this dashboard version.&lt;/p&gt;
     * 
     */
    public List<DashboardError> errors() {
        return this.errors == null ? List.of() : this.errors;
    }
    /**
     * @return &lt;p&gt;A list of the associated sheets with the unique identifier and name of each sheet.&lt;/p&gt;
     * 
     */
    public List<DashboardSheet> sheets() {
        return this.sheets == null ? List.of() : this.sheets;
    }
    /**
     * @return &lt;p&gt;Source entity ARN.&lt;/p&gt;
     * 
     */
    public Optional<String> sourceEntityArn() {
        return Optional.ofNullable(this.sourceEntityArn);
    }
    public Optional<DashboardResourceStatus> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return &lt;p&gt;The ARN of the theme associated with a version of the dashboard.&lt;/p&gt;
     * 
     */
    public Optional<String> themeArn() {
        return Optional.ofNullable(this.themeArn);
    }
    /**
     * @return &lt;p&gt;Version number for this version of the dashboard.&lt;/p&gt;
     * 
     */
    public Optional<Double> versionNumber() {
        return Optional.ofNullable(this.versionNumber);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardVersion defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String createdTime;
        private @Nullable List<String> dataSetArns;
        private @Nullable String description;
        private @Nullable List<DashboardError> errors;
        private @Nullable List<DashboardSheet> sheets;
        private @Nullable String sourceEntityArn;
        private @Nullable DashboardResourceStatus status;
        private @Nullable String themeArn;
        private @Nullable Double versionNumber;
        public Builder() {}
        public Builder(DashboardVersion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.createdTime = defaults.createdTime;
    	      this.dataSetArns = defaults.dataSetArns;
    	      this.description = defaults.description;
    	      this.errors = defaults.errors;
    	      this.sheets = defaults.sheets;
    	      this.sourceEntityArn = defaults.sourceEntityArn;
    	      this.status = defaults.status;
    	      this.themeArn = defaults.themeArn;
    	      this.versionNumber = defaults.versionNumber;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder createdTime(@Nullable String createdTime) {
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder dataSetArns(@Nullable List<String> dataSetArns) {
            this.dataSetArns = dataSetArns;
            return this;
        }
        public Builder dataSetArns(String... dataSetArns) {
            return dataSetArns(List.of(dataSetArns));
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder errors(@Nullable List<DashboardError> errors) {
            this.errors = errors;
            return this;
        }
        public Builder errors(DashboardError... errors) {
            return errors(List.of(errors));
        }
        @CustomType.Setter
        public Builder sheets(@Nullable List<DashboardSheet> sheets) {
            this.sheets = sheets;
            return this;
        }
        public Builder sheets(DashboardSheet... sheets) {
            return sheets(List.of(sheets));
        }
        @CustomType.Setter
        public Builder sourceEntityArn(@Nullable String sourceEntityArn) {
            this.sourceEntityArn = sourceEntityArn;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable DashboardResourceStatus status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder themeArn(@Nullable String themeArn) {
            this.themeArn = themeArn;
            return this;
        }
        @CustomType.Setter
        public Builder versionNumber(@Nullable Double versionNumber) {
            this.versionNumber = versionNumber;
            return this;
        }
        public DashboardVersion build() {
            final var o = new DashboardVersion();
            o.arn = arn;
            o.createdTime = createdTime;
            o.dataSetArns = dataSetArns;
            o.description = description;
            o.errors = errors;
            o.sheets = sheets;
            o.sourceEntityArn = sourceEntityArn;
            o.status = status;
            o.themeArn = themeArn;
            o.versionNumber = versionNumber;
            return o;
        }
    }
}
