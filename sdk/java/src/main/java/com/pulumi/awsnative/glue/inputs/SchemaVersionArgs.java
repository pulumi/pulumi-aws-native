// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.glue.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specify checkpoint version for update. This is only required to update the Compatibility.
 * 
 */
public final class SchemaVersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final SchemaVersionArgs Empty = new SchemaVersionArgs();

    /**
     * Indicates if the latest version needs to be updated.
     * 
     */
    @Import(name="isLatest")
    private @Nullable Output<Boolean> isLatest;

    /**
     * @return Indicates if the latest version needs to be updated.
     * 
     */
    public Optional<Output<Boolean>> isLatest() {
        return Optional.ofNullable(this.isLatest);
    }

    /**
     * Indicates the version number in the schema to update.
     * 
     */
    @Import(name="versionNumber")
    private @Nullable Output<Integer> versionNumber;

    /**
     * @return Indicates the version number in the schema to update.
     * 
     */
    public Optional<Output<Integer>> versionNumber() {
        return Optional.ofNullable(this.versionNumber);
    }

    private SchemaVersionArgs() {}

    private SchemaVersionArgs(SchemaVersionArgs $) {
        this.isLatest = $.isLatest;
        this.versionNumber = $.versionNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SchemaVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SchemaVersionArgs $;

        public Builder() {
            $ = new SchemaVersionArgs();
        }

        public Builder(SchemaVersionArgs defaults) {
            $ = new SchemaVersionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param isLatest Indicates if the latest version needs to be updated.
         * 
         * @return builder
         * 
         */
        public Builder isLatest(@Nullable Output<Boolean> isLatest) {
            $.isLatest = isLatest;
            return this;
        }

        /**
         * @param isLatest Indicates if the latest version needs to be updated.
         * 
         * @return builder
         * 
         */
        public Builder isLatest(Boolean isLatest) {
            return isLatest(Output.of(isLatest));
        }

        /**
         * @param versionNumber Indicates the version number in the schema to update.
         * 
         * @return builder
         * 
         */
        public Builder versionNumber(@Nullable Output<Integer> versionNumber) {
            $.versionNumber = versionNumber;
            return this;
        }

        /**
         * @param versionNumber Indicates the version number in the schema to update.
         * 
         * @return builder
         * 
         */
        public Builder versionNumber(Integer versionNumber) {
            return versionNumber(Output.of(versionNumber));
        }

        public SchemaVersionArgs build() {
            return $;
        }
    }

}
