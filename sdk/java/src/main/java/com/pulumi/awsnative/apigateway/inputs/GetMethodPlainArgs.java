// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.apigateway.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetMethodPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMethodPlainArgs Empty = new GetMethodPlainArgs();

    /**
     * The backend system that the method calls when it receives a request.
     * 
     */
    @Import(name="httpMethod", required=true)
    private String httpMethod;

    /**
     * @return The backend system that the method calls when it receives a request.
     * 
     */
    public String httpMethod() {
        return this.httpMethod;
    }

    /**
     * The ID of an API Gateway resource.
     * 
     */
    @Import(name="resourceId", required=true)
    private String resourceId;

    /**
     * @return The ID of an API Gateway resource.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * The ID of the RestApi resource in which API Gateway creates the method.
     * 
     */
    @Import(name="restApiId", required=true)
    private String restApiId;

    /**
     * @return The ID of the RestApi resource in which API Gateway creates the method.
     * 
     */
    public String restApiId() {
        return this.restApiId;
    }

    private GetMethodPlainArgs() {}

    private GetMethodPlainArgs(GetMethodPlainArgs $) {
        this.httpMethod = $.httpMethod;
        this.resourceId = $.resourceId;
        this.restApiId = $.restApiId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMethodPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMethodPlainArgs $;

        public Builder() {
            $ = new GetMethodPlainArgs();
        }

        public Builder(GetMethodPlainArgs defaults) {
            $ = new GetMethodPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param httpMethod The backend system that the method calls when it receives a request.
         * 
         * @return builder
         * 
         */
        public Builder httpMethod(String httpMethod) {
            $.httpMethod = httpMethod;
            return this;
        }

        /**
         * @param resourceId The ID of an API Gateway resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param restApiId The ID of the RestApi resource in which API Gateway creates the method.
         * 
         * @return builder
         * 
         */
        public Builder restApiId(String restApiId) {
            $.restApiId = restApiId;
            return this;
        }

        public GetMethodPlainArgs build() {
            $.httpMethod = Objects.requireNonNull($.httpMethod, "expected parameter 'httpMethod' to be non-null");
            $.resourceId = Objects.requireNonNull($.resourceId, "expected parameter 'resourceId' to be non-null");
            $.restApiId = Objects.requireNonNull($.restApiId, "expected parameter 'restApiId' to be non-null");
            return $;
        }
    }

}
