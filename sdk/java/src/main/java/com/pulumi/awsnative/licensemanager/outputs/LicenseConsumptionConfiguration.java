// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.licensemanager.outputs;

import com.pulumi.awsnative.licensemanager.outputs.LicenseBorrowConfiguration;
import com.pulumi.awsnative.licensemanager.outputs.LicenseProvisionalConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LicenseConsumptionConfiguration {
    private @Nullable LicenseBorrowConfiguration borrowConfiguration;
    private @Nullable LicenseProvisionalConfiguration provisionalConfiguration;
    private @Nullable String renewType;

    private LicenseConsumptionConfiguration() {}
    public Optional<LicenseBorrowConfiguration> borrowConfiguration() {
        return Optional.ofNullable(this.borrowConfiguration);
    }
    public Optional<LicenseProvisionalConfiguration> provisionalConfiguration() {
        return Optional.ofNullable(this.provisionalConfiguration);
    }
    public Optional<String> renewType() {
        return Optional.ofNullable(this.renewType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LicenseConsumptionConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable LicenseBorrowConfiguration borrowConfiguration;
        private @Nullable LicenseProvisionalConfiguration provisionalConfiguration;
        private @Nullable String renewType;
        public Builder() {}
        public Builder(LicenseConsumptionConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.borrowConfiguration = defaults.borrowConfiguration;
    	      this.provisionalConfiguration = defaults.provisionalConfiguration;
    	      this.renewType = defaults.renewType;
        }

        @CustomType.Setter
        public Builder borrowConfiguration(@Nullable LicenseBorrowConfiguration borrowConfiguration) {
            this.borrowConfiguration = borrowConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder provisionalConfiguration(@Nullable LicenseProvisionalConfiguration provisionalConfiguration) {
            this.provisionalConfiguration = provisionalConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder renewType(@Nullable String renewType) {
            this.renewType = renewType;
            return this;
        }
        public LicenseConsumptionConfiguration build() {
            final var o = new LicenseConsumptionConfiguration();
            o.borrowConfiguration = borrowConfiguration;
            o.provisionalConfiguration = provisionalConfiguration;
            o.renewType = renewType;
            return o;
        }
    }
}
