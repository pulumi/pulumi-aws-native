// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.eks;

import com.pulumi.awsnative.eks.enums.IdentityProviderConfigType;
import com.pulumi.awsnative.eks.inputs.IdentityProviderConfigOidcIdentityProviderConfigArgs;
import com.pulumi.awsnative.eks.inputs.IdentityProviderConfigTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IdentityProviderConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final IdentityProviderConfigArgs Empty = new IdentityProviderConfigArgs();

    /**
     * The name of the identity provider configuration.
     * 
     */
    @Import(name="clusterName", required=true)
    private Output<String> clusterName;

    /**
     * @return The name of the identity provider configuration.
     * 
     */
    public Output<String> clusterName() {
        return this.clusterName;
    }

    /**
     * The name of the OIDC provider configuration.
     * 
     */
    @Import(name="identityProviderConfigName")
    private @Nullable Output<String> identityProviderConfigName;

    /**
     * @return The name of the OIDC provider configuration.
     * 
     */
    public Optional<Output<String>> identityProviderConfigName() {
        return Optional.ofNullable(this.identityProviderConfigName);
    }

    @Import(name="oidc")
    private @Nullable Output<IdentityProviderConfigOidcIdentityProviderConfigArgs> oidc;

    public Optional<Output<IdentityProviderConfigOidcIdentityProviderConfigArgs>> oidc() {
        return Optional.ofNullable(this.oidc);
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<IdentityProviderConfigTagArgs>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public Optional<Output<List<IdentityProviderConfigTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The type of the identity provider configuration.
     * 
     */
    @Import(name="type", required=true)
    private Output<IdentityProviderConfigType> type;

    /**
     * @return The type of the identity provider configuration.
     * 
     */
    public Output<IdentityProviderConfigType> type() {
        return this.type;
    }

    private IdentityProviderConfigArgs() {}

    private IdentityProviderConfigArgs(IdentityProviderConfigArgs $) {
        this.clusterName = $.clusterName;
        this.identityProviderConfigName = $.identityProviderConfigName;
        this.oidc = $.oidc;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IdentityProviderConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IdentityProviderConfigArgs $;

        public Builder() {
            $ = new IdentityProviderConfigArgs();
        }

        public Builder(IdentityProviderConfigArgs defaults) {
            $ = new IdentityProviderConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterName The name of the identity provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName The name of the identity provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @param identityProviderConfigName The name of the OIDC provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder identityProviderConfigName(@Nullable Output<String> identityProviderConfigName) {
            $.identityProviderConfigName = identityProviderConfigName;
            return this;
        }

        /**
         * @param identityProviderConfigName The name of the OIDC provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder identityProviderConfigName(String identityProviderConfigName) {
            return identityProviderConfigName(Output.of(identityProviderConfigName));
        }

        public Builder oidc(@Nullable Output<IdentityProviderConfigOidcIdentityProviderConfigArgs> oidc) {
            $.oidc = oidc;
            return this;
        }

        public Builder oidc(IdentityProviderConfigOidcIdentityProviderConfigArgs oidc) {
            return oidc(Output.of(oidc));
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<IdentityProviderConfigTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<IdentityProviderConfigTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(IdentityProviderConfigTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param type The type of the identity provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<IdentityProviderConfigType> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the identity provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder type(IdentityProviderConfigType type) {
            return type(Output.of(type));
        }

        public IdentityProviderConfigArgs build() {
            $.clusterName = Objects.requireNonNull($.clusterName, "expected parameter 'clusterName' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
