// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lightsail.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstancePort {
    /**
     * @return Access Direction for Protocol of the Instance(inbound/outbound).
     * 
     */
    private @Nullable String accessDirection;
    /**
     * @return Access From Protocol of the Instance.
     * 
     */
    private @Nullable String accessFrom;
    /**
     * @return Access Type Protocol of the Instance.
     * 
     */
    private @Nullable String accessType;
    private @Nullable List<String> cidrListAliases;
    private @Nullable List<String> cidrs;
    /**
     * @return CommonName for Protocol of the Instance.
     * 
     */
    private @Nullable String commonName;
    /**
     * @return From Port of the Instance.
     * 
     */
    private @Nullable Integer fromPort;
    private @Nullable List<String> ipv6Cidrs;
    /**
     * @return Port Protocol of the Instance.
     * 
     */
    private @Nullable String protocol;
    /**
     * @return To Port of the Instance.
     * 
     */
    private @Nullable Integer toPort;

    private InstancePort() {}
    /**
     * @return Access Direction for Protocol of the Instance(inbound/outbound).
     * 
     */
    public Optional<String> accessDirection() {
        return Optional.ofNullable(this.accessDirection);
    }
    /**
     * @return Access From Protocol of the Instance.
     * 
     */
    public Optional<String> accessFrom() {
        return Optional.ofNullable(this.accessFrom);
    }
    /**
     * @return Access Type Protocol of the Instance.
     * 
     */
    public Optional<String> accessType() {
        return Optional.ofNullable(this.accessType);
    }
    public List<String> cidrListAliases() {
        return this.cidrListAliases == null ? List.of() : this.cidrListAliases;
    }
    public List<String> cidrs() {
        return this.cidrs == null ? List.of() : this.cidrs;
    }
    /**
     * @return CommonName for Protocol of the Instance.
     * 
     */
    public Optional<String> commonName() {
        return Optional.ofNullable(this.commonName);
    }
    /**
     * @return From Port of the Instance.
     * 
     */
    public Optional<Integer> fromPort() {
        return Optional.ofNullable(this.fromPort);
    }
    public List<String> ipv6Cidrs() {
        return this.ipv6Cidrs == null ? List.of() : this.ipv6Cidrs;
    }
    /**
     * @return Port Protocol of the Instance.
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }
    /**
     * @return To Port of the Instance.
     * 
     */
    public Optional<Integer> toPort() {
        return Optional.ofNullable(this.toPort);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstancePort defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessDirection;
        private @Nullable String accessFrom;
        private @Nullable String accessType;
        private @Nullable List<String> cidrListAliases;
        private @Nullable List<String> cidrs;
        private @Nullable String commonName;
        private @Nullable Integer fromPort;
        private @Nullable List<String> ipv6Cidrs;
        private @Nullable String protocol;
        private @Nullable Integer toPort;
        public Builder() {}
        public Builder(InstancePort defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessDirection = defaults.accessDirection;
    	      this.accessFrom = defaults.accessFrom;
    	      this.accessType = defaults.accessType;
    	      this.cidrListAliases = defaults.cidrListAliases;
    	      this.cidrs = defaults.cidrs;
    	      this.commonName = defaults.commonName;
    	      this.fromPort = defaults.fromPort;
    	      this.ipv6Cidrs = defaults.ipv6Cidrs;
    	      this.protocol = defaults.protocol;
    	      this.toPort = defaults.toPort;
        }

        @CustomType.Setter
        public Builder accessDirection(@Nullable String accessDirection) {
            this.accessDirection = accessDirection;
            return this;
        }
        @CustomType.Setter
        public Builder accessFrom(@Nullable String accessFrom) {
            this.accessFrom = accessFrom;
            return this;
        }
        @CustomType.Setter
        public Builder accessType(@Nullable String accessType) {
            this.accessType = accessType;
            return this;
        }
        @CustomType.Setter
        public Builder cidrListAliases(@Nullable List<String> cidrListAliases) {
            this.cidrListAliases = cidrListAliases;
            return this;
        }
        public Builder cidrListAliases(String... cidrListAliases) {
            return cidrListAliases(List.of(cidrListAliases));
        }
        @CustomType.Setter
        public Builder cidrs(@Nullable List<String> cidrs) {
            this.cidrs = cidrs;
            return this;
        }
        public Builder cidrs(String... cidrs) {
            return cidrs(List.of(cidrs));
        }
        @CustomType.Setter
        public Builder commonName(@Nullable String commonName) {
            this.commonName = commonName;
            return this;
        }
        @CustomType.Setter
        public Builder fromPort(@Nullable Integer fromPort) {
            this.fromPort = fromPort;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Cidrs(@Nullable List<String> ipv6Cidrs) {
            this.ipv6Cidrs = ipv6Cidrs;
            return this;
        }
        public Builder ipv6Cidrs(String... ipv6Cidrs) {
            return ipv6Cidrs(List.of(ipv6Cidrs));
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder toPort(@Nullable Integer toPort) {
            this.toPort = toPort;
            return this;
        }
        public InstancePort build() {
            final var o = new InstancePort();
            o.accessDirection = accessDirection;
            o.accessFrom = accessFrom;
            o.accessType = accessType;
            o.cidrListAliases = cidrListAliases;
            o.cidrs = cidrs;
            o.commonName = commonName;
            o.fromPort = fromPort;
            o.ipv6Cidrs = ipv6Cidrs;
            o.protocol = protocol;
            o.toPort = toPort;
            return o;
        }
    }
}
