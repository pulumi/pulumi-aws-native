// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.evidently.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LaunchGroupObjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final LaunchGroupObjectArgs Empty = new LaunchGroupObjectArgs();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="feature", required=true)
    private Output<String> feature;

    public Output<String> feature() {
        return this.feature;
    }

    @Import(name="groupName", required=true)
    private Output<String> groupName;

    public Output<String> groupName() {
        return this.groupName;
    }

    @Import(name="variation", required=true)
    private Output<String> variation;

    public Output<String> variation() {
        return this.variation;
    }

    private LaunchGroupObjectArgs() {}

    private LaunchGroupObjectArgs(LaunchGroupObjectArgs $) {
        this.description = $.description;
        this.feature = $.feature;
        this.groupName = $.groupName;
        this.variation = $.variation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LaunchGroupObjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LaunchGroupObjectArgs $;

        public Builder() {
            $ = new LaunchGroupObjectArgs();
        }

        public Builder(LaunchGroupObjectArgs defaults) {
            $ = new LaunchGroupObjectArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder feature(Output<String> feature) {
            $.feature = feature;
            return this;
        }

        public Builder feature(String feature) {
            return feature(Output.of(feature));
        }

        public Builder groupName(Output<String> groupName) {
            $.groupName = groupName;
            return this;
        }

        public Builder groupName(String groupName) {
            return groupName(Output.of(groupName));
        }

        public Builder variation(Output<String> variation) {
            $.variation = variation;
            return this;
        }

        public Builder variation(String variation) {
            return variation(Output.of(variation));
        }

        public LaunchGroupObjectArgs build() {
            $.feature = Objects.requireNonNull($.feature, "expected parameter 'feature' to be non-null");
            $.groupName = Objects.requireNonNull($.groupName, "expected parameter 'groupName' to be non-null");
            $.variation = Objects.requireNonNull($.variation, "expected parameter 'variation' to be non-null");
            return $;
        }
    }

}
