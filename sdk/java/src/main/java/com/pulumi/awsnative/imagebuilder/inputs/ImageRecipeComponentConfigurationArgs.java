// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.imagebuilder.inputs;

import com.pulumi.awsnative.imagebuilder.inputs.ImageRecipeComponentParameterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Configuration details of the component.
 * 
 */
public final class ImageRecipeComponentConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageRecipeComponentConfigurationArgs Empty = new ImageRecipeComponentConfigurationArgs();

    /**
     * The Amazon Resource Name (ARN) of the component.
     * 
     */
    @Import(name="componentArn")
    private @Nullable Output<String> componentArn;

    /**
     * @return The Amazon Resource Name (ARN) of the component.
     * 
     */
    public Optional<Output<String>> componentArn() {
        return Optional.ofNullable(this.componentArn);
    }

    /**
     * A group of parameter settings that are used to configure the component for a specific recipe.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<List<ImageRecipeComponentParameterArgs>> parameters;

    /**
     * @return A group of parameter settings that are used to configure the component for a specific recipe.
     * 
     */
    public Optional<Output<List<ImageRecipeComponentParameterArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    private ImageRecipeComponentConfigurationArgs() {}

    private ImageRecipeComponentConfigurationArgs(ImageRecipeComponentConfigurationArgs $) {
        this.componentArn = $.componentArn;
        this.parameters = $.parameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageRecipeComponentConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageRecipeComponentConfigurationArgs $;

        public Builder() {
            $ = new ImageRecipeComponentConfigurationArgs();
        }

        public Builder(ImageRecipeComponentConfigurationArgs defaults) {
            $ = new ImageRecipeComponentConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param componentArn The Amazon Resource Name (ARN) of the component.
         * 
         * @return builder
         * 
         */
        public Builder componentArn(@Nullable Output<String> componentArn) {
            $.componentArn = componentArn;
            return this;
        }

        /**
         * @param componentArn The Amazon Resource Name (ARN) of the component.
         * 
         * @return builder
         * 
         */
        public Builder componentArn(String componentArn) {
            return componentArn(Output.of(componentArn));
        }

        /**
         * @param parameters A group of parameter settings that are used to configure the component for a specific recipe.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<List<ImageRecipeComponentParameterArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters A group of parameter settings that are used to configure the component for a specific recipe.
         * 
         * @return builder
         * 
         */
        public Builder parameters(List<ImageRecipeComponentParameterArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param parameters A group of parameter settings that are used to configure the component for a specific recipe.
         * 
         * @return builder
         * 
         */
        public Builder parameters(ImageRecipeComponentParameterArgs... parameters) {
            return parameters(List.of(parameters));
        }

        public ImageRecipeComponentConfigurationArgs build() {
            return $;
        }
    }

}
