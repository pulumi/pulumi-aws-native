// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.outputs;

import com.pulumi.awsnative.sagemaker.outputs.MonitoringScheduleBaselineConfig;
import com.pulumi.awsnative.sagemaker.outputs.MonitoringScheduleMonitoringAppSpecification;
import com.pulumi.awsnative.sagemaker.outputs.MonitoringScheduleMonitoringInput;
import com.pulumi.awsnative.sagemaker.outputs.MonitoringScheduleMonitoringOutputConfig;
import com.pulumi.awsnative.sagemaker.outputs.MonitoringScheduleMonitoringResources;
import com.pulumi.awsnative.sagemaker.outputs.MonitoringScheduleNetworkConfig;
import com.pulumi.awsnative.sagemaker.outputs.MonitoringScheduleStoppingCondition;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitoringScheduleMonitoringJobDefinition {
    private @Nullable MonitoringScheduleBaselineConfig baselineConfig;
    /**
     * @return Sets the environment variables in the Docker container
     * 
     */
    private @Nullable Object environment;
    private MonitoringScheduleMonitoringAppSpecification monitoringAppSpecification;
    private List<MonitoringScheduleMonitoringInput> monitoringInputs;
    private MonitoringScheduleMonitoringOutputConfig monitoringOutputConfig;
    private MonitoringScheduleMonitoringResources monitoringResources;
    private @Nullable MonitoringScheduleNetworkConfig networkConfig;
    /**
     * @return The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
     * 
     */
    private String roleArn;
    private @Nullable MonitoringScheduleStoppingCondition stoppingCondition;

    private MonitoringScheduleMonitoringJobDefinition() {}
    public Optional<MonitoringScheduleBaselineConfig> baselineConfig() {
        return Optional.ofNullable(this.baselineConfig);
    }
    /**
     * @return Sets the environment variables in the Docker container
     * 
     */
    public Optional<Object> environment() {
        return Optional.ofNullable(this.environment);
    }
    public MonitoringScheduleMonitoringAppSpecification monitoringAppSpecification() {
        return this.monitoringAppSpecification;
    }
    public List<MonitoringScheduleMonitoringInput> monitoringInputs() {
        return this.monitoringInputs;
    }
    public MonitoringScheduleMonitoringOutputConfig monitoringOutputConfig() {
        return this.monitoringOutputConfig;
    }
    public MonitoringScheduleMonitoringResources monitoringResources() {
        return this.monitoringResources;
    }
    public Optional<MonitoringScheduleNetworkConfig> networkConfig() {
        return Optional.ofNullable(this.networkConfig);
    }
    /**
     * @return The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
     * 
     */
    public String roleArn() {
        return this.roleArn;
    }
    public Optional<MonitoringScheduleStoppingCondition> stoppingCondition() {
        return Optional.ofNullable(this.stoppingCondition);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoringScheduleMonitoringJobDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable MonitoringScheduleBaselineConfig baselineConfig;
        private @Nullable Object environment;
        private MonitoringScheduleMonitoringAppSpecification monitoringAppSpecification;
        private List<MonitoringScheduleMonitoringInput> monitoringInputs;
        private MonitoringScheduleMonitoringOutputConfig monitoringOutputConfig;
        private MonitoringScheduleMonitoringResources monitoringResources;
        private @Nullable MonitoringScheduleNetworkConfig networkConfig;
        private String roleArn;
        private @Nullable MonitoringScheduleStoppingCondition stoppingCondition;
        public Builder() {}
        public Builder(MonitoringScheduleMonitoringJobDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baselineConfig = defaults.baselineConfig;
    	      this.environment = defaults.environment;
    	      this.monitoringAppSpecification = defaults.monitoringAppSpecification;
    	      this.monitoringInputs = defaults.monitoringInputs;
    	      this.monitoringOutputConfig = defaults.monitoringOutputConfig;
    	      this.monitoringResources = defaults.monitoringResources;
    	      this.networkConfig = defaults.networkConfig;
    	      this.roleArn = defaults.roleArn;
    	      this.stoppingCondition = defaults.stoppingCondition;
        }

        @CustomType.Setter
        public Builder baselineConfig(@Nullable MonitoringScheduleBaselineConfig baselineConfig) {
            this.baselineConfig = baselineConfig;
            return this;
        }
        @CustomType.Setter
        public Builder environment(@Nullable Object environment) {
            this.environment = environment;
            return this;
        }
        @CustomType.Setter
        public Builder monitoringAppSpecification(MonitoringScheduleMonitoringAppSpecification monitoringAppSpecification) {
            this.monitoringAppSpecification = Objects.requireNonNull(monitoringAppSpecification);
            return this;
        }
        @CustomType.Setter
        public Builder monitoringInputs(List<MonitoringScheduleMonitoringInput> monitoringInputs) {
            this.monitoringInputs = Objects.requireNonNull(monitoringInputs);
            return this;
        }
        public Builder monitoringInputs(MonitoringScheduleMonitoringInput... monitoringInputs) {
            return monitoringInputs(List.of(monitoringInputs));
        }
        @CustomType.Setter
        public Builder monitoringOutputConfig(MonitoringScheduleMonitoringOutputConfig monitoringOutputConfig) {
            this.monitoringOutputConfig = Objects.requireNonNull(monitoringOutputConfig);
            return this;
        }
        @CustomType.Setter
        public Builder monitoringResources(MonitoringScheduleMonitoringResources monitoringResources) {
            this.monitoringResources = Objects.requireNonNull(monitoringResources);
            return this;
        }
        @CustomType.Setter
        public Builder networkConfig(@Nullable MonitoringScheduleNetworkConfig networkConfig) {
            this.networkConfig = networkConfig;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(String roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }
        @CustomType.Setter
        public Builder stoppingCondition(@Nullable MonitoringScheduleStoppingCondition stoppingCondition) {
            this.stoppingCondition = stoppingCondition;
            return this;
        }
        public MonitoringScheduleMonitoringJobDefinition build() {
            final var o = new MonitoringScheduleMonitoringJobDefinition();
            o.baselineConfig = baselineConfig;
            o.environment = environment;
            o.monitoringAppSpecification = monitoringAppSpecification;
            o.monitoringInputs = monitoringInputs;
            o.monitoringOutputConfig = monitoringOutputConfig;
            o.monitoringResources = monitoringResources;
            o.networkConfig = networkConfig;
            o.roleArn = roleArn;
            o.stoppingCondition = stoppingCondition;
            return o;
        }
    }
}
