// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.applicationinsights.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationHANAPrometheusExporter {
    /**
     * @return A flag which indicates agreeing to install SAP HANA DB client.
     * 
     */
    private Boolean agreeToInstallHANADBClient;
    /**
     * @return The HANA DB port.
     * 
     */
    private String hANAPort;
    /**
     * @return HANA DB SID.
     * 
     */
    private String hANASID;
    /**
     * @return The secret name which manages the HANA DB credentials e.g. {
     *   &#34;username&#34;: &#34;&lt;&gt;&#34;,
     *   &#34;password&#34;: &#34;&lt;&gt;&#34;
     * }.
     * 
     */
    private String hANASecretName;
    /**
     * @return Prometheus exporter port.
     * 
     */
    private @Nullable String prometheusPort;

    private ApplicationHANAPrometheusExporter() {}
    /**
     * @return A flag which indicates agreeing to install SAP HANA DB client.
     * 
     */
    public Boolean agreeToInstallHANADBClient() {
        return this.agreeToInstallHANADBClient;
    }
    /**
     * @return The HANA DB port.
     * 
     */
    public String hANAPort() {
        return this.hANAPort;
    }
    /**
     * @return HANA DB SID.
     * 
     */
    public String hANASID() {
        return this.hANASID;
    }
    /**
     * @return The secret name which manages the HANA DB credentials e.g. {
     *   &#34;username&#34;: &#34;&lt;&gt;&#34;,
     *   &#34;password&#34;: &#34;&lt;&gt;&#34;
     * }.
     * 
     */
    public String hANASecretName() {
        return this.hANASecretName;
    }
    /**
     * @return Prometheus exporter port.
     * 
     */
    public Optional<String> prometheusPort() {
        return Optional.ofNullable(this.prometheusPort);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationHANAPrometheusExporter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean agreeToInstallHANADBClient;
        private String hANAPort;
        private String hANASID;
        private String hANASecretName;
        private @Nullable String prometheusPort;
        public Builder() {}
        public Builder(ApplicationHANAPrometheusExporter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agreeToInstallHANADBClient = defaults.agreeToInstallHANADBClient;
    	      this.hANAPort = defaults.hANAPort;
    	      this.hANASID = defaults.hANASID;
    	      this.hANASecretName = defaults.hANASecretName;
    	      this.prometheusPort = defaults.prometheusPort;
        }

        @CustomType.Setter
        public Builder agreeToInstallHANADBClient(Boolean agreeToInstallHANADBClient) {
            this.agreeToInstallHANADBClient = Objects.requireNonNull(agreeToInstallHANADBClient);
            return this;
        }
        @CustomType.Setter
        public Builder hANAPort(String hANAPort) {
            this.hANAPort = Objects.requireNonNull(hANAPort);
            return this;
        }
        @CustomType.Setter
        public Builder hANASID(String hANASID) {
            this.hANASID = Objects.requireNonNull(hANASID);
            return this;
        }
        @CustomType.Setter
        public Builder hANASecretName(String hANASecretName) {
            this.hANASecretName = Objects.requireNonNull(hANASecretName);
            return this;
        }
        @CustomType.Setter
        public Builder prometheusPort(@Nullable String prometheusPort) {
            this.prometheusPort = prometheusPort;
            return this;
        }
        public ApplicationHANAPrometheusExporter build() {
            final var o = new ApplicationHANAPrometheusExporter();
            o.agreeToInstallHANADBClient = agreeToInstallHANADBClient;
            o.hANAPort = hANAPort;
            o.hANASID = hANASID;
            o.hANASecretName = hANASecretName;
            o.prometheusPort = prometheusPort;
            return o;
        }
    }
}
