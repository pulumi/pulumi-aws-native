// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iam;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceProfileArgs Empty = new InstanceProfileArgs();

    /**
     * The name of the instance profile to create.
     * 
     */
    @Import(name="instanceProfileName")
    private @Nullable Output<String> instanceProfileName;

    /**
     * @return The name of the instance profile to create.
     * 
     */
    public Optional<Output<String>> instanceProfileName() {
        return Optional.ofNullable(this.instanceProfileName);
    }

    /**
     * The path to the instance profile.
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return The path to the instance profile.
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * The name of the role to associate with the instance profile. Only one role can be assigned to an EC2 instance at a time, and all applications on the instance share the same role and permissions.
     * 
     */
    @Import(name="roles", required=true)
    private Output<List<String>> roles;

    /**
     * @return The name of the role to associate with the instance profile. Only one role can be assigned to an EC2 instance at a time, and all applications on the instance share the same role and permissions.
     * 
     */
    public Output<List<String>> roles() {
        return this.roles;
    }

    private InstanceProfileArgs() {}

    private InstanceProfileArgs(InstanceProfileArgs $) {
        this.instanceProfileName = $.instanceProfileName;
        this.path = $.path;
        this.roles = $.roles;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceProfileArgs $;

        public Builder() {
            $ = new InstanceProfileArgs();
        }

        public Builder(InstanceProfileArgs defaults) {
            $ = new InstanceProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param instanceProfileName The name of the instance profile to create.
         * 
         * @return builder
         * 
         */
        public Builder instanceProfileName(@Nullable Output<String> instanceProfileName) {
            $.instanceProfileName = instanceProfileName;
            return this;
        }

        /**
         * @param instanceProfileName The name of the instance profile to create.
         * 
         * @return builder
         * 
         */
        public Builder instanceProfileName(String instanceProfileName) {
            return instanceProfileName(Output.of(instanceProfileName));
        }

        /**
         * @param path The path to the instance profile.
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path The path to the instance profile.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        /**
         * @param roles The name of the role to associate with the instance profile. Only one role can be assigned to an EC2 instance at a time, and all applications on the instance share the same role and permissions.
         * 
         * @return builder
         * 
         */
        public Builder roles(Output<List<String>> roles) {
            $.roles = roles;
            return this;
        }

        /**
         * @param roles The name of the role to associate with the instance profile. Only one role can be assigned to an EC2 instance at a time, and all applications on the instance share the same role and permissions.
         * 
         * @return builder
         * 
         */
        public Builder roles(List<String> roles) {
            return roles(Output.of(roles));
        }

        /**
         * @param roles The name of the role to associate with the instance profile. Only one role can be assigned to an EC2 instance at a time, and all applications on the instance share the same role and permissions.
         * 
         * @return builder
         * 
         */
        public Builder roles(String... roles) {
            return roles(List.of(roles));
        }

        public InstanceProfileArgs build() {
            $.roles = Objects.requireNonNull($.roles, "expected parameter 'roles' to be non-null");
            return $;
        }
    }

}
