// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.enums.BucketRuleStatus;
import com.pulumi.awsnative.s3.inputs.BucketAbortIncompleteMultipartUploadArgs;
import com.pulumi.awsnative.s3.inputs.BucketNoncurrentVersionExpirationArgs;
import com.pulumi.awsnative.s3.inputs.BucketNoncurrentVersionTransitionArgs;
import com.pulumi.awsnative.s3.inputs.BucketTagFilterArgs;
import com.pulumi.awsnative.s3.inputs.BucketTransitionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * You must specify at least one of the following properties: AbortIncompleteMultipartUpload, ExpirationDate, ExpirationInDays, NoncurrentVersionExpirationInDays, NoncurrentVersionTransition, NoncurrentVersionTransitions, Transition, or Transitions.
 * 
 */
public final class BucketRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketRuleArgs Empty = new BucketRuleArgs();

    @Import(name="abortIncompleteMultipartUpload")
    private @Nullable Output<BucketAbortIncompleteMultipartUploadArgs> abortIncompleteMultipartUpload;

    public Optional<Output<BucketAbortIncompleteMultipartUploadArgs>> abortIncompleteMultipartUpload() {
        return Optional.ofNullable(this.abortIncompleteMultipartUpload);
    }

    @Import(name="expirationDate")
    private @Nullable Output<String> expirationDate;

    public Optional<Output<String>> expirationDate() {
        return Optional.ofNullable(this.expirationDate);
    }

    @Import(name="expirationInDays")
    private @Nullable Output<Integer> expirationInDays;

    public Optional<Output<Integer>> expirationInDays() {
        return Optional.ofNullable(this.expirationInDays);
    }

    @Import(name="expiredObjectDeleteMarker")
    private @Nullable Output<Boolean> expiredObjectDeleteMarker;

    public Optional<Output<Boolean>> expiredObjectDeleteMarker() {
        return Optional.ofNullable(this.expiredObjectDeleteMarker);
    }

    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="noncurrentVersionExpiration")
    private @Nullable Output<BucketNoncurrentVersionExpirationArgs> noncurrentVersionExpiration;

    public Optional<Output<BucketNoncurrentVersionExpirationArgs>> noncurrentVersionExpiration() {
        return Optional.ofNullable(this.noncurrentVersionExpiration);
    }

    @Import(name="noncurrentVersionExpirationInDays")
    private @Nullable Output<Integer> noncurrentVersionExpirationInDays;

    public Optional<Output<Integer>> noncurrentVersionExpirationInDays() {
        return Optional.ofNullable(this.noncurrentVersionExpirationInDays);
    }

    @Import(name="noncurrentVersionTransition")
    private @Nullable Output<BucketNoncurrentVersionTransitionArgs> noncurrentVersionTransition;

    public Optional<Output<BucketNoncurrentVersionTransitionArgs>> noncurrentVersionTransition() {
        return Optional.ofNullable(this.noncurrentVersionTransition);
    }

    @Import(name="noncurrentVersionTransitions")
    private @Nullable Output<List<BucketNoncurrentVersionTransitionArgs>> noncurrentVersionTransitions;

    public Optional<Output<List<BucketNoncurrentVersionTransitionArgs>>> noncurrentVersionTransitions() {
        return Optional.ofNullable(this.noncurrentVersionTransitions);
    }

    @Import(name="objectSizeGreaterThan")
    private @Nullable Output<String> objectSizeGreaterThan;

    public Optional<Output<String>> objectSizeGreaterThan() {
        return Optional.ofNullable(this.objectSizeGreaterThan);
    }

    @Import(name="objectSizeLessThan")
    private @Nullable Output<String> objectSizeLessThan;

    public Optional<Output<String>> objectSizeLessThan() {
        return Optional.ofNullable(this.objectSizeLessThan);
    }

    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    @Import(name="status", required=true)
    private Output<BucketRuleStatus> status;

    public Output<BucketRuleStatus> status() {
        return this.status;
    }

    @Import(name="tagFilters")
    private @Nullable Output<List<BucketTagFilterArgs>> tagFilters;

    public Optional<Output<List<BucketTagFilterArgs>>> tagFilters() {
        return Optional.ofNullable(this.tagFilters);
    }

    @Import(name="transition")
    private @Nullable Output<BucketTransitionArgs> transition;

    public Optional<Output<BucketTransitionArgs>> transition() {
        return Optional.ofNullable(this.transition);
    }

    @Import(name="transitions")
    private @Nullable Output<List<BucketTransitionArgs>> transitions;

    public Optional<Output<List<BucketTransitionArgs>>> transitions() {
        return Optional.ofNullable(this.transitions);
    }

    private BucketRuleArgs() {}

    private BucketRuleArgs(BucketRuleArgs $) {
        this.abortIncompleteMultipartUpload = $.abortIncompleteMultipartUpload;
        this.expirationDate = $.expirationDate;
        this.expirationInDays = $.expirationInDays;
        this.expiredObjectDeleteMarker = $.expiredObjectDeleteMarker;
        this.id = $.id;
        this.noncurrentVersionExpiration = $.noncurrentVersionExpiration;
        this.noncurrentVersionExpirationInDays = $.noncurrentVersionExpirationInDays;
        this.noncurrentVersionTransition = $.noncurrentVersionTransition;
        this.noncurrentVersionTransitions = $.noncurrentVersionTransitions;
        this.objectSizeGreaterThan = $.objectSizeGreaterThan;
        this.objectSizeLessThan = $.objectSizeLessThan;
        this.prefix = $.prefix;
        this.status = $.status;
        this.tagFilters = $.tagFilters;
        this.transition = $.transition;
        this.transitions = $.transitions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketRuleArgs $;

        public Builder() {
            $ = new BucketRuleArgs();
        }

        public Builder(BucketRuleArgs defaults) {
            $ = new BucketRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder abortIncompleteMultipartUpload(@Nullable Output<BucketAbortIncompleteMultipartUploadArgs> abortIncompleteMultipartUpload) {
            $.abortIncompleteMultipartUpload = abortIncompleteMultipartUpload;
            return this;
        }

        public Builder abortIncompleteMultipartUpload(BucketAbortIncompleteMultipartUploadArgs abortIncompleteMultipartUpload) {
            return abortIncompleteMultipartUpload(Output.of(abortIncompleteMultipartUpload));
        }

        public Builder expirationDate(@Nullable Output<String> expirationDate) {
            $.expirationDate = expirationDate;
            return this;
        }

        public Builder expirationDate(String expirationDate) {
            return expirationDate(Output.of(expirationDate));
        }

        public Builder expirationInDays(@Nullable Output<Integer> expirationInDays) {
            $.expirationInDays = expirationInDays;
            return this;
        }

        public Builder expirationInDays(Integer expirationInDays) {
            return expirationInDays(Output.of(expirationInDays));
        }

        public Builder expiredObjectDeleteMarker(@Nullable Output<Boolean> expiredObjectDeleteMarker) {
            $.expiredObjectDeleteMarker = expiredObjectDeleteMarker;
            return this;
        }

        public Builder expiredObjectDeleteMarker(Boolean expiredObjectDeleteMarker) {
            return expiredObjectDeleteMarker(Output.of(expiredObjectDeleteMarker));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder noncurrentVersionExpiration(@Nullable Output<BucketNoncurrentVersionExpirationArgs> noncurrentVersionExpiration) {
            $.noncurrentVersionExpiration = noncurrentVersionExpiration;
            return this;
        }

        public Builder noncurrentVersionExpiration(BucketNoncurrentVersionExpirationArgs noncurrentVersionExpiration) {
            return noncurrentVersionExpiration(Output.of(noncurrentVersionExpiration));
        }

        public Builder noncurrentVersionExpirationInDays(@Nullable Output<Integer> noncurrentVersionExpirationInDays) {
            $.noncurrentVersionExpirationInDays = noncurrentVersionExpirationInDays;
            return this;
        }

        public Builder noncurrentVersionExpirationInDays(Integer noncurrentVersionExpirationInDays) {
            return noncurrentVersionExpirationInDays(Output.of(noncurrentVersionExpirationInDays));
        }

        public Builder noncurrentVersionTransition(@Nullable Output<BucketNoncurrentVersionTransitionArgs> noncurrentVersionTransition) {
            $.noncurrentVersionTransition = noncurrentVersionTransition;
            return this;
        }

        public Builder noncurrentVersionTransition(BucketNoncurrentVersionTransitionArgs noncurrentVersionTransition) {
            return noncurrentVersionTransition(Output.of(noncurrentVersionTransition));
        }

        public Builder noncurrentVersionTransitions(@Nullable Output<List<BucketNoncurrentVersionTransitionArgs>> noncurrentVersionTransitions) {
            $.noncurrentVersionTransitions = noncurrentVersionTransitions;
            return this;
        }

        public Builder noncurrentVersionTransitions(List<BucketNoncurrentVersionTransitionArgs> noncurrentVersionTransitions) {
            return noncurrentVersionTransitions(Output.of(noncurrentVersionTransitions));
        }

        public Builder noncurrentVersionTransitions(BucketNoncurrentVersionTransitionArgs... noncurrentVersionTransitions) {
            return noncurrentVersionTransitions(List.of(noncurrentVersionTransitions));
        }

        public Builder objectSizeGreaterThan(@Nullable Output<String> objectSizeGreaterThan) {
            $.objectSizeGreaterThan = objectSizeGreaterThan;
            return this;
        }

        public Builder objectSizeGreaterThan(String objectSizeGreaterThan) {
            return objectSizeGreaterThan(Output.of(objectSizeGreaterThan));
        }

        public Builder objectSizeLessThan(@Nullable Output<String> objectSizeLessThan) {
            $.objectSizeLessThan = objectSizeLessThan;
            return this;
        }

        public Builder objectSizeLessThan(String objectSizeLessThan) {
            return objectSizeLessThan(Output.of(objectSizeLessThan));
        }

        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        public Builder status(Output<BucketRuleStatus> status) {
            $.status = status;
            return this;
        }

        public Builder status(BucketRuleStatus status) {
            return status(Output.of(status));
        }

        public Builder tagFilters(@Nullable Output<List<BucketTagFilterArgs>> tagFilters) {
            $.tagFilters = tagFilters;
            return this;
        }

        public Builder tagFilters(List<BucketTagFilterArgs> tagFilters) {
            return tagFilters(Output.of(tagFilters));
        }

        public Builder tagFilters(BucketTagFilterArgs... tagFilters) {
            return tagFilters(List.of(tagFilters));
        }

        public Builder transition(@Nullable Output<BucketTransitionArgs> transition) {
            $.transition = transition;
            return this;
        }

        public Builder transition(BucketTransitionArgs transition) {
            return transition(Output.of(transition));
        }

        public Builder transitions(@Nullable Output<List<BucketTransitionArgs>> transitions) {
            $.transitions = transitions;
            return this;
        }

        public Builder transitions(List<BucketTransitionArgs> transitions) {
            return transitions(Output.of(transitions));
        }

        public Builder transitions(BucketTransitionArgs... transitions) {
            return transitions(List.of(transitions));
        }

        public BucketRuleArgs build() {
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
