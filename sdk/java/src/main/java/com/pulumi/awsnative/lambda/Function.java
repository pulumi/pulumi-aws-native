// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lambda;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.lambda.FunctionArgs;
import com.pulumi.awsnative.lambda.enums.FunctionArchitecturesItem;
import com.pulumi.awsnative.lambda.enums.FunctionPackageType;
import com.pulumi.awsnative.lambda.outputs.FunctionCode;
import com.pulumi.awsnative.lambda.outputs.FunctionDeadLetterConfig;
import com.pulumi.awsnative.lambda.outputs.FunctionEnvironment;
import com.pulumi.awsnative.lambda.outputs.FunctionEphemeralStorage;
import com.pulumi.awsnative.lambda.outputs.FunctionFileSystemConfig;
import com.pulumi.awsnative.lambda.outputs.FunctionImageConfig;
import com.pulumi.awsnative.lambda.outputs.FunctionTag;
import com.pulumi.awsnative.lambda.outputs.FunctionTracingConfig;
import com.pulumi.awsnative.lambda.outputs.FunctionVpcConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource Type definition for AWS::Lambda::Function
 * 
 * ## Example Usage
 * 
 */
@ResourceType(type="aws-native:lambda:Function")
public class Function extends com.pulumi.resources.CustomResource {
    @Export(name="architectures", type=List.class, parameters={FunctionArchitecturesItem.class})
    private Output</* @Nullable */ List<FunctionArchitecturesItem>> architectures;

    public Output<Optional<List<FunctionArchitecturesItem>>> architectures() {
        return Codegen.optional(this.architectures);
    }
    /**
     * Unique identifier for function resources
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return Unique identifier for function resources
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * The code for the function.
     * 
     */
    @Export(name="code", type=FunctionCode.class, parameters={})
    private Output<FunctionCode> code;

    /**
     * @return The code for the function.
     * 
     */
    public Output<FunctionCode> code() {
        return this.code;
    }
    /**
     * A unique Arn for CodeSigningConfig resource
     * 
     */
    @Export(name="codeSigningConfigArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> codeSigningConfigArn;

    /**
     * @return A unique Arn for CodeSigningConfig resource
     * 
     */
    public Output<Optional<String>> codeSigningConfigArn() {
        return Codegen.optional(this.codeSigningConfigArn);
    }
    /**
     * A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
     * 
     */
    @Export(name="deadLetterConfig", type=FunctionDeadLetterConfig.class, parameters={})
    private Output</* @Nullable */ FunctionDeadLetterConfig> deadLetterConfig;

    /**
     * @return A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.
     * 
     */
    public Output<Optional<FunctionDeadLetterConfig>> deadLetterConfig() {
        return Codegen.optional(this.deadLetterConfig);
    }
    /**
     * A description of the function.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return A description of the function.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Environment variables that are accessible from function code during execution.
     * 
     */
    @Export(name="environment", type=FunctionEnvironment.class, parameters={})
    private Output</* @Nullable */ FunctionEnvironment> environment;

    /**
     * @return Environment variables that are accessible from function code during execution.
     * 
     */
    public Output<Optional<FunctionEnvironment>> environment() {
        return Codegen.optional(this.environment);
    }
    /**
     * A function&#39;s ephemeral storage settings.
     * 
     */
    @Export(name="ephemeralStorage", type=FunctionEphemeralStorage.class, parameters={})
    private Output</* @Nullable */ FunctionEphemeralStorage> ephemeralStorage;

    /**
     * @return A function&#39;s ephemeral storage settings.
     * 
     */
    public Output<Optional<FunctionEphemeralStorage>> ephemeralStorage() {
        return Codegen.optional(this.ephemeralStorage);
    }
    /**
     * Connection settings for an Amazon EFS file system. To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an AWS::EFS::MountTarget resource, you must also specify a DependsOn attribute to ensure that the mount target is created or updated before the function.
     * 
     */
    @Export(name="fileSystemConfigs", type=List.class, parameters={FunctionFileSystemConfig.class})
    private Output</* @Nullable */ List<FunctionFileSystemConfig>> fileSystemConfigs;

    /**
     * @return Connection settings for an Amazon EFS file system. To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an AWS::EFS::MountTarget resource, you must also specify a DependsOn attribute to ensure that the mount target is created or updated before the function.
     * 
     */
    public Output<Optional<List<FunctionFileSystemConfig>>> fileSystemConfigs() {
        return Codegen.optional(this.fileSystemConfigs);
    }
    /**
     * The name of the Lambda function, up to 64 characters in length. If you don&#39;t specify a name, AWS CloudFormation generates one.
     * 
     */
    @Export(name="functionName", type=String.class, parameters={})
    private Output</* @Nullable */ String> functionName;

    /**
     * @return The name of the Lambda function, up to 64 characters in length. If you don&#39;t specify a name, AWS CloudFormation generates one.
     * 
     */
    public Output<Optional<String>> functionName() {
        return Codegen.optional(this.functionName);
    }
    /**
     * The name of the method within your code that Lambda calls to execute your function. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime
     * 
     */
    @Export(name="handler", type=String.class, parameters={})
    private Output</* @Nullable */ String> handler;

    /**
     * @return The name of the method within your code that Lambda calls to execute your function. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime
     * 
     */
    public Output<Optional<String>> handler() {
        return Codegen.optional(this.handler);
    }
    /**
     * ImageConfig
     * 
     */
    @Export(name="imageConfig", type=FunctionImageConfig.class, parameters={})
    private Output</* @Nullable */ FunctionImageConfig> imageConfig;

    /**
     * @return ImageConfig
     * 
     */
    public Output<Optional<FunctionImageConfig>> imageConfig() {
        return Codegen.optional(this.imageConfig);
    }
    /**
     * The ARN of the AWS Key Management Service (AWS KMS) key that&#39;s used to encrypt your function&#39;s environment variables. If it&#39;s not provided, AWS Lambda uses a default service key.
     * 
     */
    @Export(name="kmsKeyArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> kmsKeyArn;

    /**
     * @return The ARN of the AWS Key Management Service (AWS KMS) key that&#39;s used to encrypt your function&#39;s environment variables. If it&#39;s not provided, AWS Lambda uses a default service key.
     * 
     */
    public Output<Optional<String>> kmsKeyArn() {
        return Codegen.optional(this.kmsKeyArn);
    }
    /**
     * A list of function layers to add to the function&#39;s execution environment. Specify each layer by its ARN, including the version.
     * 
     */
    @Export(name="layers", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> layers;

    /**
     * @return A list of function layers to add to the function&#39;s execution environment. Specify each layer by its ARN, including the version.
     * 
     */
    public Output<Optional<List<String>>> layers() {
        return Codegen.optional(this.layers);
    }
    /**
     * The amount of memory that your function has access to. Increasing the function&#39;s memory also increases its CPU allocation. The default value is 128 MB. The value must be a multiple of 64 MB.
     * 
     */
    @Export(name="memorySize", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> memorySize;

    /**
     * @return The amount of memory that your function has access to. Increasing the function&#39;s memory also increases its CPU allocation. The default value is 128 MB. The value must be a multiple of 64 MB.
     * 
     */
    public Output<Optional<Integer>> memorySize() {
        return Codegen.optional(this.memorySize);
    }
    /**
     * PackageType.
     * 
     */
    @Export(name="packageType", type=FunctionPackageType.class, parameters={})
    private Output</* @Nullable */ FunctionPackageType> packageType;

    /**
     * @return PackageType.
     * 
     */
    public Output<Optional<FunctionPackageType>> packageType() {
        return Codegen.optional(this.packageType);
    }
    /**
     * The number of simultaneous executions to reserve for the function.
     * 
     */
    @Export(name="reservedConcurrentExecutions", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> reservedConcurrentExecutions;

    /**
     * @return The number of simultaneous executions to reserve for the function.
     * 
     */
    public Output<Optional<Integer>> reservedConcurrentExecutions() {
        return Codegen.optional(this.reservedConcurrentExecutions);
    }
    /**
     * The Amazon Resource Name (ARN) of the function&#39;s execution role.
     * 
     */
    @Export(name="role", type=String.class, parameters={})
    private Output<String> role;

    /**
     * @return The Amazon Resource Name (ARN) of the function&#39;s execution role.
     * 
     */
    public Output<String> role() {
        return this.role;
    }
    /**
     * The identifier of the function&#39;s runtime.
     * 
     */
    @Export(name="runtime", type=String.class, parameters={})
    private Output</* @Nullable */ String> runtime;

    /**
     * @return The identifier of the function&#39;s runtime.
     * 
     */
    public Output<Optional<String>> runtime() {
        return Codegen.optional(this.runtime);
    }
    /**
     * A list of tags to apply to the function.
     * 
     */
    @Export(name="tags", type=List.class, parameters={FunctionTag.class})
    private Output</* @Nullable */ List<FunctionTag>> tags;

    /**
     * @return A list of tags to apply to the function.
     * 
     */
    public Output<Optional<List<FunctionTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds.
     * 
     */
    @Export(name="timeout", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> timeout;

    /**
     * @return The amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds.
     * 
     */
    public Output<Optional<Integer>> timeout() {
        return Codegen.optional(this.timeout);
    }
    /**
     * Set Mode to Active to sample and trace a subset of incoming requests with AWS X-Ray.
     * 
     */
    @Export(name="tracingConfig", type=FunctionTracingConfig.class, parameters={})
    private Output</* @Nullable */ FunctionTracingConfig> tracingConfig;

    /**
     * @return Set Mode to Active to sample and trace a subset of incoming requests with AWS X-Ray.
     * 
     */
    public Output<Optional<FunctionTracingConfig>> tracingConfig() {
        return Codegen.optional(this.tracingConfig);
    }
    /**
     * For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.
     * 
     */
    @Export(name="vpcConfig", type=FunctionVpcConfig.class, parameters={})
    private Output</* @Nullable */ FunctionVpcConfig> vpcConfig;

    /**
     * @return For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.
     * 
     */
    public Output<Optional<FunctionVpcConfig>> vpcConfig() {
        return Codegen.optional(this.vpcConfig);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Function(String name) {
        this(name, FunctionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Function(String name, FunctionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Function(String name, FunctionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:lambda:Function", name, args == null ? FunctionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Function(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:lambda:Function", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Function get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Function(name, id, options);
    }
}
