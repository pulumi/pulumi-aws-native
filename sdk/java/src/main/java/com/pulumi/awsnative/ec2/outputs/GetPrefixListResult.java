// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2.outputs;

import com.pulumi.awsnative.ec2.enums.PrefixListAddressFamily;
import com.pulumi.awsnative.ec2.outputs.PrefixListEntry;
import com.pulumi.awsnative.ec2.outputs.PrefixListTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPrefixListResult {
    /**
     * @return Ip Version of Prefix List.
     * 
     */
    private @Nullable PrefixListAddressFamily addressFamily;
    /**
     * @return The Amazon Resource Name (ARN) of the Prefix List.
     * 
     */
    private @Nullable String arn;
    /**
     * @return Entries of Prefix List.
     * 
     */
    private @Nullable List<PrefixListEntry> entries;
    /**
     * @return Max Entries of Prefix List.
     * 
     */
    private @Nullable Integer maxEntries;
    /**
     * @return Owner Id of Prefix List.
     * 
     */
    private @Nullable String ownerId;
    /**
     * @return Id of Prefix List.
     * 
     */
    private @Nullable String prefixListId;
    /**
     * @return Name of Prefix List.
     * 
     */
    private @Nullable String prefixListName;
    /**
     * @return Tags for Prefix List
     * 
     */
    private @Nullable List<PrefixListTag> tags;
    /**
     * @return Version of Prefix List.
     * 
     */
    private @Nullable Integer version;

    private GetPrefixListResult() {}
    /**
     * @return Ip Version of Prefix List.
     * 
     */
    public Optional<PrefixListAddressFamily> addressFamily() {
        return Optional.ofNullable(this.addressFamily);
    }
    /**
     * @return The Amazon Resource Name (ARN) of the Prefix List.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Entries of Prefix List.
     * 
     */
    public List<PrefixListEntry> entries() {
        return this.entries == null ? List.of() : this.entries;
    }
    /**
     * @return Max Entries of Prefix List.
     * 
     */
    public Optional<Integer> maxEntries() {
        return Optional.ofNullable(this.maxEntries);
    }
    /**
     * @return Owner Id of Prefix List.
     * 
     */
    public Optional<String> ownerId() {
        return Optional.ofNullable(this.ownerId);
    }
    /**
     * @return Id of Prefix List.
     * 
     */
    public Optional<String> prefixListId() {
        return Optional.ofNullable(this.prefixListId);
    }
    /**
     * @return Name of Prefix List.
     * 
     */
    public Optional<String> prefixListName() {
        return Optional.ofNullable(this.prefixListName);
    }
    /**
     * @return Tags for Prefix List
     * 
     */
    public List<PrefixListTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return Version of Prefix List.
     * 
     */
    public Optional<Integer> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrefixListResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable PrefixListAddressFamily addressFamily;
        private @Nullable String arn;
        private @Nullable List<PrefixListEntry> entries;
        private @Nullable Integer maxEntries;
        private @Nullable String ownerId;
        private @Nullable String prefixListId;
        private @Nullable String prefixListName;
        private @Nullable List<PrefixListTag> tags;
        private @Nullable Integer version;
        public Builder() {}
        public Builder(GetPrefixListResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressFamily = defaults.addressFamily;
    	      this.arn = defaults.arn;
    	      this.entries = defaults.entries;
    	      this.maxEntries = defaults.maxEntries;
    	      this.ownerId = defaults.ownerId;
    	      this.prefixListId = defaults.prefixListId;
    	      this.prefixListName = defaults.prefixListName;
    	      this.tags = defaults.tags;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder addressFamily(@Nullable PrefixListAddressFamily addressFamily) {
            this.addressFamily = addressFamily;
            return this;
        }
        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder entries(@Nullable List<PrefixListEntry> entries) {
            this.entries = entries;
            return this;
        }
        public Builder entries(PrefixListEntry... entries) {
            return entries(List.of(entries));
        }
        @CustomType.Setter
        public Builder maxEntries(@Nullable Integer maxEntries) {
            this.maxEntries = maxEntries;
            return this;
        }
        @CustomType.Setter
        public Builder ownerId(@Nullable String ownerId) {
            this.ownerId = ownerId;
            return this;
        }
        @CustomType.Setter
        public Builder prefixListId(@Nullable String prefixListId) {
            this.prefixListId = prefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder prefixListName(@Nullable String prefixListName) {
            this.prefixListName = prefixListName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<PrefixListTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(PrefixListTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder version(@Nullable Integer version) {
            this.version = version;
            return this;
        }
        public GetPrefixListResult build() {
            final var o = new GetPrefixListResult();
            o.addressFamily = addressFamily;
            o.arn = arn;
            o.entries = entries;
            o.maxEntries = maxEntries;
            o.ownerId = ownerId;
            o.prefixListId = prefixListId;
            o.prefixListName = prefixListName;
            o.tags = tags;
            o.version = version;
            return o;
        }
    }
}
