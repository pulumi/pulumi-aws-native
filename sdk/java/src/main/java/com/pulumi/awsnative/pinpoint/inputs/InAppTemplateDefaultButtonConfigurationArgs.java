// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.pinpoint.inputs;

import com.pulumi.awsnative.pinpoint.enums.InAppTemplateButtonAction;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InAppTemplateDefaultButtonConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final InAppTemplateDefaultButtonConfigurationArgs Empty = new InAppTemplateDefaultButtonConfigurationArgs();

    @Import(name="backgroundColor")
    private @Nullable Output<String> backgroundColor;

    public Optional<Output<String>> backgroundColor() {
        return Optional.ofNullable(this.backgroundColor);
    }

    @Import(name="borderRadius")
    private @Nullable Output<Integer> borderRadius;

    public Optional<Output<Integer>> borderRadius() {
        return Optional.ofNullable(this.borderRadius);
    }

    @Import(name="buttonAction")
    private @Nullable Output<InAppTemplateButtonAction> buttonAction;

    public Optional<Output<InAppTemplateButtonAction>> buttonAction() {
        return Optional.ofNullable(this.buttonAction);
    }

    @Import(name="link")
    private @Nullable Output<String> link;

    public Optional<Output<String>> link() {
        return Optional.ofNullable(this.link);
    }

    @Import(name="text")
    private @Nullable Output<String> text;

    public Optional<Output<String>> text() {
        return Optional.ofNullable(this.text);
    }

    @Import(name="textColor")
    private @Nullable Output<String> textColor;

    public Optional<Output<String>> textColor() {
        return Optional.ofNullable(this.textColor);
    }

    private InAppTemplateDefaultButtonConfigurationArgs() {}

    private InAppTemplateDefaultButtonConfigurationArgs(InAppTemplateDefaultButtonConfigurationArgs $) {
        this.backgroundColor = $.backgroundColor;
        this.borderRadius = $.borderRadius;
        this.buttonAction = $.buttonAction;
        this.link = $.link;
        this.text = $.text;
        this.textColor = $.textColor;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InAppTemplateDefaultButtonConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InAppTemplateDefaultButtonConfigurationArgs $;

        public Builder() {
            $ = new InAppTemplateDefaultButtonConfigurationArgs();
        }

        public Builder(InAppTemplateDefaultButtonConfigurationArgs defaults) {
            $ = new InAppTemplateDefaultButtonConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder backgroundColor(@Nullable Output<String> backgroundColor) {
            $.backgroundColor = backgroundColor;
            return this;
        }

        public Builder backgroundColor(String backgroundColor) {
            return backgroundColor(Output.of(backgroundColor));
        }

        public Builder borderRadius(@Nullable Output<Integer> borderRadius) {
            $.borderRadius = borderRadius;
            return this;
        }

        public Builder borderRadius(Integer borderRadius) {
            return borderRadius(Output.of(borderRadius));
        }

        public Builder buttonAction(@Nullable Output<InAppTemplateButtonAction> buttonAction) {
            $.buttonAction = buttonAction;
            return this;
        }

        public Builder buttonAction(InAppTemplateButtonAction buttonAction) {
            return buttonAction(Output.of(buttonAction));
        }

        public Builder link(@Nullable Output<String> link) {
            $.link = link;
            return this;
        }

        public Builder link(String link) {
            return link(Output.of(link));
        }

        public Builder text(@Nullable Output<String> text) {
            $.text = text;
            return this;
        }

        public Builder text(String text) {
            return text(Output.of(text));
        }

        public Builder textColor(@Nullable Output<String> textColor) {
            $.textColor = textColor;
            return this;
        }

        public Builder textColor(String textColor) {
            return textColor(Output.of(textColor));
        }

        public InAppTemplateDefaultButtonConfigurationArgs build() {
            return $;
        }
    }

}
