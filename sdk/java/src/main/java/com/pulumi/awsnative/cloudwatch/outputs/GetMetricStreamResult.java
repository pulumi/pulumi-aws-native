// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudwatch.outputs;

import com.pulumi.awsnative.cloudwatch.outputs.MetricStreamFilter;
import com.pulumi.awsnative.cloudwatch.outputs.MetricStreamStatisticsConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMetricStreamResult {
    /**
     * @return Amazon Resource Name of the metric stream.
     * 
     */
    private @Nullable String arn;
    /**
     * @return The date of creation of the metric stream.
     * 
     */
    private @Nullable String creationDate;
    /**
     * @return Define which metrics will be not streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
     * 
     */
    private @Nullable List<MetricStreamFilter> excludeFilters;
    /**
     * @return The ARN of the Kinesis Firehose where to stream the data.
     * 
     */
    private @Nullable String firehoseArn;
    /**
     * @return Define which metrics will be streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
     * 
     */
    private @Nullable List<MetricStreamFilter> includeFilters;
    /**
     * @return The date of the last update of the metric stream.
     * 
     */
    private @Nullable String lastUpdateDate;
    /**
     * @return The output format of the data streamed to the Kinesis Firehose.
     * 
     */
    private @Nullable String outputFormat;
    /**
     * @return The ARN of the role that provides access to the Kinesis Firehose.
     * 
     */
    private @Nullable String roleArn;
    /**
     * @return Displays the state of the Metric Stream.
     * 
     */
    private @Nullable String state;
    /**
     * @return By default, a metric stream always sends the MAX, MIN, SUM, and SAMPLECOUNT statistics for each metric that is streamed. You can use this parameter to have the metric stream also send additional statistics in the stream. This array can have up to 100 members.
     * 
     */
    private @Nullable List<MetricStreamStatisticsConfiguration> statisticsConfigurations;

    private GetMetricStreamResult() {}
    /**
     * @return Amazon Resource Name of the metric stream.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return The date of creation of the metric stream.
     * 
     */
    public Optional<String> creationDate() {
        return Optional.ofNullable(this.creationDate);
    }
    /**
     * @return Define which metrics will be not streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
     * 
     */
    public List<MetricStreamFilter> excludeFilters() {
        return this.excludeFilters == null ? List.of() : this.excludeFilters;
    }
    /**
     * @return The ARN of the Kinesis Firehose where to stream the data.
     * 
     */
    public Optional<String> firehoseArn() {
        return Optional.ofNullable(this.firehoseArn);
    }
    /**
     * @return Define which metrics will be streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
     * 
     */
    public List<MetricStreamFilter> includeFilters() {
        return this.includeFilters == null ? List.of() : this.includeFilters;
    }
    /**
     * @return The date of the last update of the metric stream.
     * 
     */
    public Optional<String> lastUpdateDate() {
        return Optional.ofNullable(this.lastUpdateDate);
    }
    /**
     * @return The output format of the data streamed to the Kinesis Firehose.
     * 
     */
    public Optional<String> outputFormat() {
        return Optional.ofNullable(this.outputFormat);
    }
    /**
     * @return The ARN of the role that provides access to the Kinesis Firehose.
     * 
     */
    public Optional<String> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }
    /**
     * @return Displays the state of the Metric Stream.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return By default, a metric stream always sends the MAX, MIN, SUM, and SAMPLECOUNT statistics for each metric that is streamed. You can use this parameter to have the metric stream also send additional statistics in the stream. This array can have up to 100 members.
     * 
     */
    public List<MetricStreamStatisticsConfiguration> statisticsConfigurations() {
        return this.statisticsConfigurations == null ? List.of() : this.statisticsConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMetricStreamResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String creationDate;
        private @Nullable List<MetricStreamFilter> excludeFilters;
        private @Nullable String firehoseArn;
        private @Nullable List<MetricStreamFilter> includeFilters;
        private @Nullable String lastUpdateDate;
        private @Nullable String outputFormat;
        private @Nullable String roleArn;
        private @Nullable String state;
        private @Nullable List<MetricStreamStatisticsConfiguration> statisticsConfigurations;
        public Builder() {}
        public Builder(GetMetricStreamResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.creationDate = defaults.creationDate;
    	      this.excludeFilters = defaults.excludeFilters;
    	      this.firehoseArn = defaults.firehoseArn;
    	      this.includeFilters = defaults.includeFilters;
    	      this.lastUpdateDate = defaults.lastUpdateDate;
    	      this.outputFormat = defaults.outputFormat;
    	      this.roleArn = defaults.roleArn;
    	      this.state = defaults.state;
    	      this.statisticsConfigurations = defaults.statisticsConfigurations;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder creationDate(@Nullable String creationDate) {
            this.creationDate = creationDate;
            return this;
        }
        @CustomType.Setter
        public Builder excludeFilters(@Nullable List<MetricStreamFilter> excludeFilters) {
            this.excludeFilters = excludeFilters;
            return this;
        }
        public Builder excludeFilters(MetricStreamFilter... excludeFilters) {
            return excludeFilters(List.of(excludeFilters));
        }
        @CustomType.Setter
        public Builder firehoseArn(@Nullable String firehoseArn) {
            this.firehoseArn = firehoseArn;
            return this;
        }
        @CustomType.Setter
        public Builder includeFilters(@Nullable List<MetricStreamFilter> includeFilters) {
            this.includeFilters = includeFilters;
            return this;
        }
        public Builder includeFilters(MetricStreamFilter... includeFilters) {
            return includeFilters(List.of(includeFilters));
        }
        @CustomType.Setter
        public Builder lastUpdateDate(@Nullable String lastUpdateDate) {
            this.lastUpdateDate = lastUpdateDate;
            return this;
        }
        @CustomType.Setter
        public Builder outputFormat(@Nullable String outputFormat) {
            this.outputFormat = outputFormat;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(@Nullable String roleArn) {
            this.roleArn = roleArn;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder statisticsConfigurations(@Nullable List<MetricStreamStatisticsConfiguration> statisticsConfigurations) {
            this.statisticsConfigurations = statisticsConfigurations;
            return this;
        }
        public Builder statisticsConfigurations(MetricStreamStatisticsConfiguration... statisticsConfigurations) {
            return statisticsConfigurations(List.of(statisticsConfigurations));
        }
        public GetMetricStreamResult build() {
            final var o = new GetMetricStreamResult();
            o.arn = arn;
            o.creationDate = creationDate;
            o.excludeFilters = excludeFilters;
            o.firehoseArn = firehoseArn;
            o.includeFilters = includeFilters;
            o.lastUpdateDate = lastUpdateDate;
            o.outputFormat = outputFormat;
            o.roleArn = roleArn;
            o.state = state;
            o.statisticsConfigurations = statisticsConfigurations;
            return o;
        }
    }
}
