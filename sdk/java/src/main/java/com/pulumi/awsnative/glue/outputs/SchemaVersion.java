// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.glue.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SchemaVersion {
    /**
     * @return Indicates if the latest version needs to be updated.
     * 
     */
    private @Nullable Boolean isLatest;
    /**
     * @return Indicates the version number in the schema to update.
     * 
     */
    private @Nullable Integer versionNumber;

    private SchemaVersion() {}
    /**
     * @return Indicates if the latest version needs to be updated.
     * 
     */
    public Optional<Boolean> isLatest() {
        return Optional.ofNullable(this.isLatest);
    }
    /**
     * @return Indicates the version number in the schema to update.
     * 
     */
    public Optional<Integer> versionNumber() {
        return Optional.ofNullable(this.versionNumber);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SchemaVersion defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean isLatest;
        private @Nullable Integer versionNumber;
        public Builder() {}
        public Builder(SchemaVersion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isLatest = defaults.isLatest;
    	      this.versionNumber = defaults.versionNumber;
        }

        @CustomType.Setter
        public Builder isLatest(@Nullable Boolean isLatest) {
            this.isLatest = isLatest;
            return this;
        }
        @CustomType.Setter
        public Builder versionNumber(@Nullable Integer versionNumber) {
            this.versionNumber = versionNumber;
            return this;
        }
        public SchemaVersion build() {
            final var o = new SchemaVersion();
            o.isLatest = isLatest;
            o.versionNumber = versionNumber;
            return o;
        }
    }
}
