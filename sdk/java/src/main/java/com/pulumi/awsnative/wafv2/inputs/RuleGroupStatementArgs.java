// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.wafv2.inputs;

import com.pulumi.awsnative.wafv2.inputs.RuleGroupAndStatementArgs;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupByteMatchStatementArgs;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupGeoMatchStatementArgs;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupIPSetReferenceStatementArgs;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupLabelMatchStatementArgs;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupNotStatementArgs;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupOrStatementArgs;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupRateBasedStatementArgs;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupRegexMatchStatementArgs;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupRegexPatternSetReferenceStatementArgs;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupSizeConstraintStatementArgs;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupSqliMatchStatementArgs;
import com.pulumi.awsnative.wafv2.inputs.RuleGroupXssMatchStatementArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * First level statement that contains conditions, such as ByteMatch, SizeConstraint, etc
 * 
 */
public final class RuleGroupStatementArgs extends com.pulumi.resources.ResourceArgs {

    public static final RuleGroupStatementArgs Empty = new RuleGroupStatementArgs();

    @Import(name="andStatement")
    private @Nullable Output<RuleGroupAndStatementArgs> andStatement;

    public Optional<Output<RuleGroupAndStatementArgs>> andStatement() {
        return Optional.ofNullable(this.andStatement);
    }

    @Import(name="byteMatchStatement")
    private @Nullable Output<RuleGroupByteMatchStatementArgs> byteMatchStatement;

    public Optional<Output<RuleGroupByteMatchStatementArgs>> byteMatchStatement() {
        return Optional.ofNullable(this.byteMatchStatement);
    }

    @Import(name="geoMatchStatement")
    private @Nullable Output<RuleGroupGeoMatchStatementArgs> geoMatchStatement;

    public Optional<Output<RuleGroupGeoMatchStatementArgs>> geoMatchStatement() {
        return Optional.ofNullable(this.geoMatchStatement);
    }

    @Import(name="iPSetReferenceStatement")
    private @Nullable Output<RuleGroupIPSetReferenceStatementArgs> iPSetReferenceStatement;

    public Optional<Output<RuleGroupIPSetReferenceStatementArgs>> iPSetReferenceStatement() {
        return Optional.ofNullable(this.iPSetReferenceStatement);
    }

    @Import(name="labelMatchStatement")
    private @Nullable Output<RuleGroupLabelMatchStatementArgs> labelMatchStatement;

    public Optional<Output<RuleGroupLabelMatchStatementArgs>> labelMatchStatement() {
        return Optional.ofNullable(this.labelMatchStatement);
    }

    @Import(name="notStatement")
    private @Nullable Output<RuleGroupNotStatementArgs> notStatement;

    public Optional<Output<RuleGroupNotStatementArgs>> notStatement() {
        return Optional.ofNullable(this.notStatement);
    }

    @Import(name="orStatement")
    private @Nullable Output<RuleGroupOrStatementArgs> orStatement;

    public Optional<Output<RuleGroupOrStatementArgs>> orStatement() {
        return Optional.ofNullable(this.orStatement);
    }

    @Import(name="rateBasedStatement")
    private @Nullable Output<RuleGroupRateBasedStatementArgs> rateBasedStatement;

    public Optional<Output<RuleGroupRateBasedStatementArgs>> rateBasedStatement() {
        return Optional.ofNullable(this.rateBasedStatement);
    }

    @Import(name="regexMatchStatement")
    private @Nullable Output<RuleGroupRegexMatchStatementArgs> regexMatchStatement;

    public Optional<Output<RuleGroupRegexMatchStatementArgs>> regexMatchStatement() {
        return Optional.ofNullable(this.regexMatchStatement);
    }

    @Import(name="regexPatternSetReferenceStatement")
    private @Nullable Output<RuleGroupRegexPatternSetReferenceStatementArgs> regexPatternSetReferenceStatement;

    public Optional<Output<RuleGroupRegexPatternSetReferenceStatementArgs>> regexPatternSetReferenceStatement() {
        return Optional.ofNullable(this.regexPatternSetReferenceStatement);
    }

    @Import(name="sizeConstraintStatement")
    private @Nullable Output<RuleGroupSizeConstraintStatementArgs> sizeConstraintStatement;

    public Optional<Output<RuleGroupSizeConstraintStatementArgs>> sizeConstraintStatement() {
        return Optional.ofNullable(this.sizeConstraintStatement);
    }

    @Import(name="sqliMatchStatement")
    private @Nullable Output<RuleGroupSqliMatchStatementArgs> sqliMatchStatement;

    public Optional<Output<RuleGroupSqliMatchStatementArgs>> sqliMatchStatement() {
        return Optional.ofNullable(this.sqliMatchStatement);
    }

    @Import(name="xssMatchStatement")
    private @Nullable Output<RuleGroupXssMatchStatementArgs> xssMatchStatement;

    public Optional<Output<RuleGroupXssMatchStatementArgs>> xssMatchStatement() {
        return Optional.ofNullable(this.xssMatchStatement);
    }

    private RuleGroupStatementArgs() {}

    private RuleGroupStatementArgs(RuleGroupStatementArgs $) {
        this.andStatement = $.andStatement;
        this.byteMatchStatement = $.byteMatchStatement;
        this.geoMatchStatement = $.geoMatchStatement;
        this.iPSetReferenceStatement = $.iPSetReferenceStatement;
        this.labelMatchStatement = $.labelMatchStatement;
        this.notStatement = $.notStatement;
        this.orStatement = $.orStatement;
        this.rateBasedStatement = $.rateBasedStatement;
        this.regexMatchStatement = $.regexMatchStatement;
        this.regexPatternSetReferenceStatement = $.regexPatternSetReferenceStatement;
        this.sizeConstraintStatement = $.sizeConstraintStatement;
        this.sqliMatchStatement = $.sqliMatchStatement;
        this.xssMatchStatement = $.xssMatchStatement;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuleGroupStatementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuleGroupStatementArgs $;

        public Builder() {
            $ = new RuleGroupStatementArgs();
        }

        public Builder(RuleGroupStatementArgs defaults) {
            $ = new RuleGroupStatementArgs(Objects.requireNonNull(defaults));
        }

        public Builder andStatement(@Nullable Output<RuleGroupAndStatementArgs> andStatement) {
            $.andStatement = andStatement;
            return this;
        }

        public Builder andStatement(RuleGroupAndStatementArgs andStatement) {
            return andStatement(Output.of(andStatement));
        }

        public Builder byteMatchStatement(@Nullable Output<RuleGroupByteMatchStatementArgs> byteMatchStatement) {
            $.byteMatchStatement = byteMatchStatement;
            return this;
        }

        public Builder byteMatchStatement(RuleGroupByteMatchStatementArgs byteMatchStatement) {
            return byteMatchStatement(Output.of(byteMatchStatement));
        }

        public Builder geoMatchStatement(@Nullable Output<RuleGroupGeoMatchStatementArgs> geoMatchStatement) {
            $.geoMatchStatement = geoMatchStatement;
            return this;
        }

        public Builder geoMatchStatement(RuleGroupGeoMatchStatementArgs geoMatchStatement) {
            return geoMatchStatement(Output.of(geoMatchStatement));
        }

        public Builder iPSetReferenceStatement(@Nullable Output<RuleGroupIPSetReferenceStatementArgs> iPSetReferenceStatement) {
            $.iPSetReferenceStatement = iPSetReferenceStatement;
            return this;
        }

        public Builder iPSetReferenceStatement(RuleGroupIPSetReferenceStatementArgs iPSetReferenceStatement) {
            return iPSetReferenceStatement(Output.of(iPSetReferenceStatement));
        }

        public Builder labelMatchStatement(@Nullable Output<RuleGroupLabelMatchStatementArgs> labelMatchStatement) {
            $.labelMatchStatement = labelMatchStatement;
            return this;
        }

        public Builder labelMatchStatement(RuleGroupLabelMatchStatementArgs labelMatchStatement) {
            return labelMatchStatement(Output.of(labelMatchStatement));
        }

        public Builder notStatement(@Nullable Output<RuleGroupNotStatementArgs> notStatement) {
            $.notStatement = notStatement;
            return this;
        }

        public Builder notStatement(RuleGroupNotStatementArgs notStatement) {
            return notStatement(Output.of(notStatement));
        }

        public Builder orStatement(@Nullable Output<RuleGroupOrStatementArgs> orStatement) {
            $.orStatement = orStatement;
            return this;
        }

        public Builder orStatement(RuleGroupOrStatementArgs orStatement) {
            return orStatement(Output.of(orStatement));
        }

        public Builder rateBasedStatement(@Nullable Output<RuleGroupRateBasedStatementArgs> rateBasedStatement) {
            $.rateBasedStatement = rateBasedStatement;
            return this;
        }

        public Builder rateBasedStatement(RuleGroupRateBasedStatementArgs rateBasedStatement) {
            return rateBasedStatement(Output.of(rateBasedStatement));
        }

        public Builder regexMatchStatement(@Nullable Output<RuleGroupRegexMatchStatementArgs> regexMatchStatement) {
            $.regexMatchStatement = regexMatchStatement;
            return this;
        }

        public Builder regexMatchStatement(RuleGroupRegexMatchStatementArgs regexMatchStatement) {
            return regexMatchStatement(Output.of(regexMatchStatement));
        }

        public Builder regexPatternSetReferenceStatement(@Nullable Output<RuleGroupRegexPatternSetReferenceStatementArgs> regexPatternSetReferenceStatement) {
            $.regexPatternSetReferenceStatement = regexPatternSetReferenceStatement;
            return this;
        }

        public Builder regexPatternSetReferenceStatement(RuleGroupRegexPatternSetReferenceStatementArgs regexPatternSetReferenceStatement) {
            return regexPatternSetReferenceStatement(Output.of(regexPatternSetReferenceStatement));
        }

        public Builder sizeConstraintStatement(@Nullable Output<RuleGroupSizeConstraintStatementArgs> sizeConstraintStatement) {
            $.sizeConstraintStatement = sizeConstraintStatement;
            return this;
        }

        public Builder sizeConstraintStatement(RuleGroupSizeConstraintStatementArgs sizeConstraintStatement) {
            return sizeConstraintStatement(Output.of(sizeConstraintStatement));
        }

        public Builder sqliMatchStatement(@Nullable Output<RuleGroupSqliMatchStatementArgs> sqliMatchStatement) {
            $.sqliMatchStatement = sqliMatchStatement;
            return this;
        }

        public Builder sqliMatchStatement(RuleGroupSqliMatchStatementArgs sqliMatchStatement) {
            return sqliMatchStatement(Output.of(sqliMatchStatement));
        }

        public Builder xssMatchStatement(@Nullable Output<RuleGroupXssMatchStatementArgs> xssMatchStatement) {
            $.xssMatchStatement = xssMatchStatement;
            return this;
        }

        public Builder xssMatchStatement(RuleGroupXssMatchStatementArgs xssMatchStatement) {
            return xssMatchStatement(Output.of(xssMatchStatement));
        }

        public RuleGroupStatementArgs build() {
            return $;
        }
    }

}
