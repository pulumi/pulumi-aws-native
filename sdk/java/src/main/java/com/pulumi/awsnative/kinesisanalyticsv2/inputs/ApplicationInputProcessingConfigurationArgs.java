// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisanalyticsv2.inputs;

import com.pulumi.awsnative.kinesisanalyticsv2.inputs.ApplicationInputLambdaProcessorArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * For an SQL-based Amazon Kinesis Data Analytics application, describes a processor that is used to preprocess the records in the stream before being processed by your application code. Currently, the only input processor available is Amazon Lambda.
 * 
 */
public final class ApplicationInputProcessingConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationInputProcessingConfigurationArgs Empty = new ApplicationInputProcessingConfigurationArgs();

    /**
     * The InputLambdaProcessor that is used to preprocess the records in the stream before being processed by your application code.
     * 
     */
    @Import(name="inputLambdaProcessor")
    private @Nullable Output<ApplicationInputLambdaProcessorArgs> inputLambdaProcessor;

    /**
     * @return The InputLambdaProcessor that is used to preprocess the records in the stream before being processed by your application code.
     * 
     */
    public Optional<Output<ApplicationInputLambdaProcessorArgs>> inputLambdaProcessor() {
        return Optional.ofNullable(this.inputLambdaProcessor);
    }

    private ApplicationInputProcessingConfigurationArgs() {}

    private ApplicationInputProcessingConfigurationArgs(ApplicationInputProcessingConfigurationArgs $) {
        this.inputLambdaProcessor = $.inputLambdaProcessor;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationInputProcessingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationInputProcessingConfigurationArgs $;

        public Builder() {
            $ = new ApplicationInputProcessingConfigurationArgs();
        }

        public Builder(ApplicationInputProcessingConfigurationArgs defaults) {
            $ = new ApplicationInputProcessingConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param inputLambdaProcessor The InputLambdaProcessor that is used to preprocess the records in the stream before being processed by your application code.
         * 
         * @return builder
         * 
         */
        public Builder inputLambdaProcessor(@Nullable Output<ApplicationInputLambdaProcessorArgs> inputLambdaProcessor) {
            $.inputLambdaProcessor = inputLambdaProcessor;
            return this;
        }

        /**
         * @param inputLambdaProcessor The InputLambdaProcessor that is used to preprocess the records in the stream before being processed by your application code.
         * 
         * @return builder
         * 
         */
        public Builder inputLambdaProcessor(ApplicationInputLambdaProcessorArgs inputLambdaProcessor) {
            return inputLambdaProcessor(Output.of(inputLambdaProcessor));
        }

        public ApplicationInputProcessingConfigurationArgs build() {
            return $;
        }
    }

}
