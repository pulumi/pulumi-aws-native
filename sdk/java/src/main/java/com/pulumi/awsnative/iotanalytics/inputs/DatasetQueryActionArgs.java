// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotanalytics.inputs;

import com.pulumi.awsnative.iotanalytics.inputs.DatasetFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatasetQueryActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatasetQueryActionArgs Empty = new DatasetQueryActionArgs();

    @Import(name="filters")
    private @Nullable Output<List<DatasetFilterArgs>> filters;

    public Optional<Output<List<DatasetFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="sqlQuery", required=true)
    private Output<String> sqlQuery;

    public Output<String> sqlQuery() {
        return this.sqlQuery;
    }

    private DatasetQueryActionArgs() {}

    private DatasetQueryActionArgs(DatasetQueryActionArgs $) {
        this.filters = $.filters;
        this.sqlQuery = $.sqlQuery;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetQueryActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetQueryActionArgs $;

        public Builder() {
            $ = new DatasetQueryActionArgs();
        }

        public Builder(DatasetQueryActionArgs defaults) {
            $ = new DatasetQueryActionArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<DatasetFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<DatasetFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(DatasetFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public Builder sqlQuery(Output<String> sqlQuery) {
            $.sqlQuery = sqlQuery;
            return this;
        }

        public Builder sqlQuery(String sqlQuery) {
            return sqlQuery(Output.of(sqlQuery));
        }

        public DatasetQueryActionArgs build() {
            $.sqlQuery = Objects.requireNonNull($.sqlQuery, "expected parameter 'sqlQuery' to be non-null");
            return $;
        }
    }

}
