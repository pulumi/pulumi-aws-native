// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.networkmanager;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.networkmanager.inputs.GetDeviceArgs;
import com.pulumi.awsnative.networkmanager.inputs.GetDevicePlainArgs;
import com.pulumi.awsnative.networkmanager.inputs.GetGlobalNetworkArgs;
import com.pulumi.awsnative.networkmanager.inputs.GetGlobalNetworkPlainArgs;
import com.pulumi.awsnative.networkmanager.inputs.GetLinkArgs;
import com.pulumi.awsnative.networkmanager.inputs.GetLinkPlainArgs;
import com.pulumi.awsnative.networkmanager.inputs.GetSiteArgs;
import com.pulumi.awsnative.networkmanager.inputs.GetSitePlainArgs;
import com.pulumi.awsnative.networkmanager.outputs.GetDeviceResult;
import com.pulumi.awsnative.networkmanager.outputs.GetGlobalNetworkResult;
import com.pulumi.awsnative.networkmanager.outputs.GetLinkResult;
import com.pulumi.awsnative.networkmanager.outputs.GetSiteResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class NetworkmanagerFunctions {
    /**
     * The AWS::NetworkManager::Device type describes a device.
     * 
     */
    public static Output<GetDeviceResult> getDevice(GetDeviceArgs args) {
        return getDevice(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::NetworkManager::Device type describes a device.
     * 
     */
    public static CompletableFuture<GetDeviceResult> getDevicePlain(GetDevicePlainArgs args) {
        return getDevicePlain(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::NetworkManager::Device type describes a device.
     * 
     */
    public static Output<GetDeviceResult> getDevice(GetDeviceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:networkmanager:getDevice", TypeShape.of(GetDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::NetworkManager::Device type describes a device.
     * 
     */
    public static CompletableFuture<GetDeviceResult> getDevicePlain(GetDevicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:networkmanager:getDevice", TypeShape.of(GetDeviceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::NetworkManager::GlobalNetwork type specifies a global network of the user&#39;s account
     * 
     */
    public static Output<GetGlobalNetworkResult> getGlobalNetwork(GetGlobalNetworkArgs args) {
        return getGlobalNetwork(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::NetworkManager::GlobalNetwork type specifies a global network of the user&#39;s account
     * 
     */
    public static CompletableFuture<GetGlobalNetworkResult> getGlobalNetworkPlain(GetGlobalNetworkPlainArgs args) {
        return getGlobalNetworkPlain(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::NetworkManager::GlobalNetwork type specifies a global network of the user&#39;s account
     * 
     */
    public static Output<GetGlobalNetworkResult> getGlobalNetwork(GetGlobalNetworkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:networkmanager:getGlobalNetwork", TypeShape.of(GetGlobalNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::NetworkManager::GlobalNetwork type specifies a global network of the user&#39;s account
     * 
     */
    public static CompletableFuture<GetGlobalNetworkResult> getGlobalNetworkPlain(GetGlobalNetworkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:networkmanager:getGlobalNetwork", TypeShape.of(GetGlobalNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::NetworkManager::Link type describes a link.
     * 
     */
    public static Output<GetLinkResult> getLink(GetLinkArgs args) {
        return getLink(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::NetworkManager::Link type describes a link.
     * 
     */
    public static CompletableFuture<GetLinkResult> getLinkPlain(GetLinkPlainArgs args) {
        return getLinkPlain(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::NetworkManager::Link type describes a link.
     * 
     */
    public static Output<GetLinkResult> getLink(GetLinkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:networkmanager:getLink", TypeShape.of(GetLinkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::NetworkManager::Link type describes a link.
     * 
     */
    public static CompletableFuture<GetLinkResult> getLinkPlain(GetLinkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:networkmanager:getLink", TypeShape.of(GetLinkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::NetworkManager::Site type describes a site.
     * 
     */
    public static Output<GetSiteResult> getSite(GetSiteArgs args) {
        return getSite(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::NetworkManager::Site type describes a site.
     * 
     */
    public static CompletableFuture<GetSiteResult> getSitePlain(GetSitePlainArgs args) {
        return getSitePlain(args, InvokeOptions.Empty);
    }
    /**
     * The AWS::NetworkManager::Site type describes a site.
     * 
     */
    public static Output<GetSiteResult> getSite(GetSiteArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aws-native:networkmanager:getSite", TypeShape.of(GetSiteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The AWS::NetworkManager::Site type describes a site.
     * 
     */
    public static CompletableFuture<GetSiteResult> getSitePlain(GetSitePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aws-native:networkmanager:getSite", TypeShape.of(GetSiteResult.class), args, Utilities.withVersion(options));
    }
}
