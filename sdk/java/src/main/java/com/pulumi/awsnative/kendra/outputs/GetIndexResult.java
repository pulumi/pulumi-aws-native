// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kendra.outputs;

import com.pulumi.awsnative.kendra.enums.IndexUserContextPolicy;
import com.pulumi.awsnative.kendra.outputs.IndexCapacityUnitsConfiguration;
import com.pulumi.awsnative.kendra.outputs.IndexDocumentMetadataConfiguration;
import com.pulumi.awsnative.kendra.outputs.IndexTag;
import com.pulumi.awsnative.kendra.outputs.IndexUserTokenConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIndexResult {
    private @Nullable String arn;
    /**
     * @return Capacity units
     * 
     */
    private @Nullable IndexCapacityUnitsConfiguration capacityUnits;
    /**
     * @return A description for the index
     * 
     */
    private @Nullable String description;
    /**
     * @return Document metadata configurations
     * 
     */
    private @Nullable List<IndexDocumentMetadataConfiguration> documentMetadataConfigurations;
    private @Nullable String id;
    private @Nullable String name;
    private @Nullable String roleArn;
    /**
     * @return Tags for labeling the index
     * 
     */
    private @Nullable List<IndexTag> tags;
    private @Nullable IndexUserContextPolicy userContextPolicy;
    private @Nullable List<IndexUserTokenConfiguration> userTokenConfigurations;

    private GetIndexResult() {}
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Capacity units
     * 
     */
    public Optional<IndexCapacityUnitsConfiguration> capacityUnits() {
        return Optional.ofNullable(this.capacityUnits);
    }
    /**
     * @return A description for the index
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Document metadata configurations
     * 
     */
    public List<IndexDocumentMetadataConfiguration> documentMetadataConfigurations() {
        return this.documentMetadataConfigurations == null ? List.of() : this.documentMetadataConfigurations;
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }
    /**
     * @return Tags for labeling the index
     * 
     */
    public List<IndexTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    public Optional<IndexUserContextPolicy> userContextPolicy() {
        return Optional.ofNullable(this.userContextPolicy);
    }
    public List<IndexUserTokenConfiguration> userTokenConfigurations() {
        return this.userTokenConfigurations == null ? List.of() : this.userTokenConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIndexResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable IndexCapacityUnitsConfiguration capacityUnits;
        private @Nullable String description;
        private @Nullable List<IndexDocumentMetadataConfiguration> documentMetadataConfigurations;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable String roleArn;
        private @Nullable List<IndexTag> tags;
        private @Nullable IndexUserContextPolicy userContextPolicy;
        private @Nullable List<IndexUserTokenConfiguration> userTokenConfigurations;
        public Builder() {}
        public Builder(GetIndexResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.capacityUnits = defaults.capacityUnits;
    	      this.description = defaults.description;
    	      this.documentMetadataConfigurations = defaults.documentMetadataConfigurations;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.roleArn = defaults.roleArn;
    	      this.tags = defaults.tags;
    	      this.userContextPolicy = defaults.userContextPolicy;
    	      this.userTokenConfigurations = defaults.userTokenConfigurations;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder capacityUnits(@Nullable IndexCapacityUnitsConfiguration capacityUnits) {
            this.capacityUnits = capacityUnits;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder documentMetadataConfigurations(@Nullable List<IndexDocumentMetadataConfiguration> documentMetadataConfigurations) {
            this.documentMetadataConfigurations = documentMetadataConfigurations;
            return this;
        }
        public Builder documentMetadataConfigurations(IndexDocumentMetadataConfiguration... documentMetadataConfigurations) {
            return documentMetadataConfigurations(List.of(documentMetadataConfigurations));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(@Nullable String roleArn) {
            this.roleArn = roleArn;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<IndexTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(IndexTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder userContextPolicy(@Nullable IndexUserContextPolicy userContextPolicy) {
            this.userContextPolicy = userContextPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder userTokenConfigurations(@Nullable List<IndexUserTokenConfiguration> userTokenConfigurations) {
            this.userTokenConfigurations = userTokenConfigurations;
            return this;
        }
        public Builder userTokenConfigurations(IndexUserTokenConfiguration... userTokenConfigurations) {
            return userTokenConfigurations(List.of(userTokenConfigurations));
        }
        public GetIndexResult build() {
            final var o = new GetIndexResult();
            o.arn = arn;
            o.capacityUnits = capacityUnits;
            o.description = description;
            o.documentMetadataConfigurations = documentMetadataConfigurations;
            o.id = id;
            o.name = name;
            o.roleArn = roleArn;
            o.tags = tags;
            o.userContextPolicy = userContextPolicy;
            o.userTokenConfigurations = userTokenConfigurations;
            return o;
        }
    }
}
