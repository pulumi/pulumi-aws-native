// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.customerprofiles.inputs;

import com.pulumi.awsnative.customerprofiles.inputs.IntegrationSourceFlowConfigArgs;
import com.pulumi.awsnative.customerprofiles.inputs.IntegrationTaskArgs;
import com.pulumi.awsnative.customerprofiles.inputs.IntegrationTriggerConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationFlowDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationFlowDefinitionArgs Empty = new IntegrationFlowDefinitionArgs();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="flowName", required=true)
    private Output<String> flowName;

    public Output<String> flowName() {
        return this.flowName;
    }

    @Import(name="kmsArn", required=true)
    private Output<String> kmsArn;

    public Output<String> kmsArn() {
        return this.kmsArn;
    }

    @Import(name="sourceFlowConfig", required=true)
    private Output<IntegrationSourceFlowConfigArgs> sourceFlowConfig;

    public Output<IntegrationSourceFlowConfigArgs> sourceFlowConfig() {
        return this.sourceFlowConfig;
    }

    @Import(name="tasks", required=true)
    private Output<List<IntegrationTaskArgs>> tasks;

    public Output<List<IntegrationTaskArgs>> tasks() {
        return this.tasks;
    }

    @Import(name="triggerConfig", required=true)
    private Output<IntegrationTriggerConfigArgs> triggerConfig;

    public Output<IntegrationTriggerConfigArgs> triggerConfig() {
        return this.triggerConfig;
    }

    private IntegrationFlowDefinitionArgs() {}

    private IntegrationFlowDefinitionArgs(IntegrationFlowDefinitionArgs $) {
        this.description = $.description;
        this.flowName = $.flowName;
        this.kmsArn = $.kmsArn;
        this.sourceFlowConfig = $.sourceFlowConfig;
        this.tasks = $.tasks;
        this.triggerConfig = $.triggerConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationFlowDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationFlowDefinitionArgs $;

        public Builder() {
            $ = new IntegrationFlowDefinitionArgs();
        }

        public Builder(IntegrationFlowDefinitionArgs defaults) {
            $ = new IntegrationFlowDefinitionArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder flowName(Output<String> flowName) {
            $.flowName = flowName;
            return this;
        }

        public Builder flowName(String flowName) {
            return flowName(Output.of(flowName));
        }

        public Builder kmsArn(Output<String> kmsArn) {
            $.kmsArn = kmsArn;
            return this;
        }

        public Builder kmsArn(String kmsArn) {
            return kmsArn(Output.of(kmsArn));
        }

        public Builder sourceFlowConfig(Output<IntegrationSourceFlowConfigArgs> sourceFlowConfig) {
            $.sourceFlowConfig = sourceFlowConfig;
            return this;
        }

        public Builder sourceFlowConfig(IntegrationSourceFlowConfigArgs sourceFlowConfig) {
            return sourceFlowConfig(Output.of(sourceFlowConfig));
        }

        public Builder tasks(Output<List<IntegrationTaskArgs>> tasks) {
            $.tasks = tasks;
            return this;
        }

        public Builder tasks(List<IntegrationTaskArgs> tasks) {
            return tasks(Output.of(tasks));
        }

        public Builder tasks(IntegrationTaskArgs... tasks) {
            return tasks(List.of(tasks));
        }

        public Builder triggerConfig(Output<IntegrationTriggerConfigArgs> triggerConfig) {
            $.triggerConfig = triggerConfig;
            return this;
        }

        public Builder triggerConfig(IntegrationTriggerConfigArgs triggerConfig) {
            return triggerConfig(Output.of(triggerConfig));
        }

        public IntegrationFlowDefinitionArgs build() {
            $.flowName = Objects.requireNonNull($.flowName, "expected parameter 'flowName' to be non-null");
            $.kmsArn = Objects.requireNonNull($.kmsArn, "expected parameter 'kmsArn' to be non-null");
            $.sourceFlowConfig = Objects.requireNonNull($.sourceFlowConfig, "expected parameter 'sourceFlowConfig' to be non-null");
            $.tasks = Objects.requireNonNull($.tasks, "expected parameter 'tasks' to be non-null");
            $.triggerConfig = Objects.requireNonNull($.triggerConfig, "expected parameter 'triggerConfig' to be non-null");
            return $;
        }
    }

}
