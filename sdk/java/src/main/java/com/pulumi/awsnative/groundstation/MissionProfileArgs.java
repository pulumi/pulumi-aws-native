// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.groundstation;

import com.pulumi.awsnative.groundstation.inputs.MissionProfileDataflowEdgeArgs;
import com.pulumi.awsnative.groundstation.inputs.MissionProfileTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MissionProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final MissionProfileArgs Empty = new MissionProfileArgs();

    /**
     * Post-pass time needed after the contact.
     * 
     */
    @Import(name="contactPostPassDurationSeconds")
    private @Nullable Output<Integer> contactPostPassDurationSeconds;

    /**
     * @return Post-pass time needed after the contact.
     * 
     */
    public Optional<Output<Integer>> contactPostPassDurationSeconds() {
        return Optional.ofNullable(this.contactPostPassDurationSeconds);
    }

    /**
     * Pre-pass time needed before the contact.
     * 
     */
    @Import(name="contactPrePassDurationSeconds")
    private @Nullable Output<Integer> contactPrePassDurationSeconds;

    /**
     * @return Pre-pass time needed before the contact.
     * 
     */
    public Optional<Output<Integer>> contactPrePassDurationSeconds() {
        return Optional.ofNullable(this.contactPrePassDurationSeconds);
    }

    @Import(name="dataflowEdges", required=true)
    private Output<List<MissionProfileDataflowEdgeArgs>> dataflowEdges;

    public Output<List<MissionProfileDataflowEdgeArgs>> dataflowEdges() {
        return this.dataflowEdges;
    }

    /**
     * Visibilities with shorter duration than the specified minimum viable contact duration will be ignored when searching for available contacts.
     * 
     */
    @Import(name="minimumViableContactDurationSeconds", required=true)
    private Output<Integer> minimumViableContactDurationSeconds;

    /**
     * @return Visibilities with shorter duration than the specified minimum viable contact duration will be ignored when searching for available contacts.
     * 
     */
    public Output<Integer> minimumViableContactDurationSeconds() {
        return this.minimumViableContactDurationSeconds;
    }

    /**
     * A name used to identify a mission profile.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A name used to identify a mission profile.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="tags")
    private @Nullable Output<List<MissionProfileTagArgs>> tags;

    public Optional<Output<List<MissionProfileTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="trackingConfigArn", required=true)
    private Output<String> trackingConfigArn;

    public Output<String> trackingConfigArn() {
        return this.trackingConfigArn;
    }

    private MissionProfileArgs() {}

    private MissionProfileArgs(MissionProfileArgs $) {
        this.contactPostPassDurationSeconds = $.contactPostPassDurationSeconds;
        this.contactPrePassDurationSeconds = $.contactPrePassDurationSeconds;
        this.dataflowEdges = $.dataflowEdges;
        this.minimumViableContactDurationSeconds = $.minimumViableContactDurationSeconds;
        this.name = $.name;
        this.tags = $.tags;
        this.trackingConfigArn = $.trackingConfigArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MissionProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MissionProfileArgs $;

        public Builder() {
            $ = new MissionProfileArgs();
        }

        public Builder(MissionProfileArgs defaults) {
            $ = new MissionProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param contactPostPassDurationSeconds Post-pass time needed after the contact.
         * 
         * @return builder
         * 
         */
        public Builder contactPostPassDurationSeconds(@Nullable Output<Integer> contactPostPassDurationSeconds) {
            $.contactPostPassDurationSeconds = contactPostPassDurationSeconds;
            return this;
        }

        /**
         * @param contactPostPassDurationSeconds Post-pass time needed after the contact.
         * 
         * @return builder
         * 
         */
        public Builder contactPostPassDurationSeconds(Integer contactPostPassDurationSeconds) {
            return contactPostPassDurationSeconds(Output.of(contactPostPassDurationSeconds));
        }

        /**
         * @param contactPrePassDurationSeconds Pre-pass time needed before the contact.
         * 
         * @return builder
         * 
         */
        public Builder contactPrePassDurationSeconds(@Nullable Output<Integer> contactPrePassDurationSeconds) {
            $.contactPrePassDurationSeconds = contactPrePassDurationSeconds;
            return this;
        }

        /**
         * @param contactPrePassDurationSeconds Pre-pass time needed before the contact.
         * 
         * @return builder
         * 
         */
        public Builder contactPrePassDurationSeconds(Integer contactPrePassDurationSeconds) {
            return contactPrePassDurationSeconds(Output.of(contactPrePassDurationSeconds));
        }

        public Builder dataflowEdges(Output<List<MissionProfileDataflowEdgeArgs>> dataflowEdges) {
            $.dataflowEdges = dataflowEdges;
            return this;
        }

        public Builder dataflowEdges(List<MissionProfileDataflowEdgeArgs> dataflowEdges) {
            return dataflowEdges(Output.of(dataflowEdges));
        }

        public Builder dataflowEdges(MissionProfileDataflowEdgeArgs... dataflowEdges) {
            return dataflowEdges(List.of(dataflowEdges));
        }

        /**
         * @param minimumViableContactDurationSeconds Visibilities with shorter duration than the specified minimum viable contact duration will be ignored when searching for available contacts.
         * 
         * @return builder
         * 
         */
        public Builder minimumViableContactDurationSeconds(Output<Integer> minimumViableContactDurationSeconds) {
            $.minimumViableContactDurationSeconds = minimumViableContactDurationSeconds;
            return this;
        }

        /**
         * @param minimumViableContactDurationSeconds Visibilities with shorter duration than the specified minimum viable contact duration will be ignored when searching for available contacts.
         * 
         * @return builder
         * 
         */
        public Builder minimumViableContactDurationSeconds(Integer minimumViableContactDurationSeconds) {
            return minimumViableContactDurationSeconds(Output.of(minimumViableContactDurationSeconds));
        }

        /**
         * @param name A name used to identify a mission profile.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A name used to identify a mission profile.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder tags(@Nullable Output<List<MissionProfileTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<MissionProfileTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(MissionProfileTagArgs... tags) {
            return tags(List.of(tags));
        }

        public Builder trackingConfigArn(Output<String> trackingConfigArn) {
            $.trackingConfigArn = trackingConfigArn;
            return this;
        }

        public Builder trackingConfigArn(String trackingConfigArn) {
            return trackingConfigArn(Output.of(trackingConfigArn));
        }

        public MissionProfileArgs build() {
            $.dataflowEdges = Objects.requireNonNull($.dataflowEdges, "expected parameter 'dataflowEdges' to be non-null");
            $.minimumViableContactDurationSeconds = Objects.requireNonNull($.minimumViableContactDurationSeconds, "expected parameter 'minimumViableContactDurationSeconds' to be non-null");
            $.trackingConfigArn = Objects.requireNonNull($.trackingConfigArn, "expected parameter 'trackingConfigArn' to be non-null");
            return $;
        }
    }

}
