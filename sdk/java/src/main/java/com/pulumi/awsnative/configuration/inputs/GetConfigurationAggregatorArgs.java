// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.configuration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetConfigurationAggregatorArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConfigurationAggregatorArgs Empty = new GetConfigurationAggregatorArgs();

    /**
     * The name of the aggregator.
     * 
     */
    @Import(name="configurationAggregatorName", required=true)
    private Output<String> configurationAggregatorName;

    /**
     * @return The name of the aggregator.
     * 
     */
    public Output<String> configurationAggregatorName() {
        return this.configurationAggregatorName;
    }

    private GetConfigurationAggregatorArgs() {}

    private GetConfigurationAggregatorArgs(GetConfigurationAggregatorArgs $) {
        this.configurationAggregatorName = $.configurationAggregatorName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConfigurationAggregatorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConfigurationAggregatorArgs $;

        public Builder() {
            $ = new GetConfigurationAggregatorArgs();
        }

        public Builder(GetConfigurationAggregatorArgs defaults) {
            $ = new GetConfigurationAggregatorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configurationAggregatorName The name of the aggregator.
         * 
         * @return builder
         * 
         */
        public Builder configurationAggregatorName(Output<String> configurationAggregatorName) {
            $.configurationAggregatorName = configurationAggregatorName;
            return this;
        }

        /**
         * @param configurationAggregatorName The name of the aggregator.
         * 
         * @return builder
         * 
         */
        public Builder configurationAggregatorName(String configurationAggregatorName) {
            return configurationAggregatorName(Output.of(configurationAggregatorName));
        }

        public GetConfigurationAggregatorArgs build() {
            $.configurationAggregatorName = Objects.requireNonNull($.configurationAggregatorName, "expected parameter 'configurationAggregatorName' to be non-null");
            return $;
        }
    }

}
