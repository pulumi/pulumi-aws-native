// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.frauddetector.inputs;

import com.pulumi.awsnative.frauddetector.enums.EventTypeEventVariableDataSource;
import com.pulumi.awsnative.frauddetector.enums.EventTypeEventVariableDataType;
import com.pulumi.awsnative.frauddetector.enums.EventTypeEventVariableVariableType;
import com.pulumi.awsnative.frauddetector.inputs.EventTypeTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventTypeEventVariableArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventTypeEventVariableArgs Empty = new EventTypeEventVariableArgs();

    @Import(name="arn")
    private @Nullable Output<String> arn;

    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * The time when the event type was created.
     * 
     */
    @Import(name="createdTime")
    private @Nullable Output<String> createdTime;

    /**
     * @return The time when the event type was created.
     * 
     */
    public Optional<Output<String>> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }

    @Import(name="dataSource")
    private @Nullable Output<EventTypeEventVariableDataSource> dataSource;

    public Optional<Output<EventTypeEventVariableDataSource>> dataSource() {
        return Optional.ofNullable(this.dataSource);
    }

    @Import(name="dataType")
    private @Nullable Output<EventTypeEventVariableDataType> dataType;

    public Optional<Output<EventTypeEventVariableDataType>> dataType() {
        return Optional.ofNullable(this.dataType);
    }

    @Import(name="defaultValue")
    private @Nullable Output<String> defaultValue;

    public Optional<Output<String>> defaultValue() {
        return Optional.ofNullable(this.defaultValue);
    }

    /**
     * The description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="inline")
    private @Nullable Output<Boolean> inline;

    public Optional<Output<Boolean>> inline() {
        return Optional.ofNullable(this.inline);
    }

    /**
     * The time when the event type was last updated.
     * 
     */
    @Import(name="lastUpdatedTime")
    private @Nullable Output<String> lastUpdatedTime;

    /**
     * @return The time when the event type was last updated.
     * 
     */
    public Optional<Output<String>> lastUpdatedTime() {
        return Optional.ofNullable(this.lastUpdatedTime);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Tags associated with this event type.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<EventTypeTagArgs>> tags;

    /**
     * @return Tags associated with this event type.
     * 
     */
    public Optional<Output<List<EventTypeTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="variableType")
    private @Nullable Output<EventTypeEventVariableVariableType> variableType;

    public Optional<Output<EventTypeEventVariableVariableType>> variableType() {
        return Optional.ofNullable(this.variableType);
    }

    private EventTypeEventVariableArgs() {}

    private EventTypeEventVariableArgs(EventTypeEventVariableArgs $) {
        this.arn = $.arn;
        this.createdTime = $.createdTime;
        this.dataSource = $.dataSource;
        this.dataType = $.dataType;
        this.defaultValue = $.defaultValue;
        this.description = $.description;
        this.inline = $.inline;
        this.lastUpdatedTime = $.lastUpdatedTime;
        this.name = $.name;
        this.tags = $.tags;
        this.variableType = $.variableType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventTypeEventVariableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventTypeEventVariableArgs $;

        public Builder() {
            $ = new EventTypeEventVariableArgs();
        }

        public Builder(EventTypeEventVariableArgs defaults) {
            $ = new EventTypeEventVariableArgs(Objects.requireNonNull(defaults));
        }

        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param createdTime The time when the event type was created.
         * 
         * @return builder
         * 
         */
        public Builder createdTime(@Nullable Output<String> createdTime) {
            $.createdTime = createdTime;
            return this;
        }

        /**
         * @param createdTime The time when the event type was created.
         * 
         * @return builder
         * 
         */
        public Builder createdTime(String createdTime) {
            return createdTime(Output.of(createdTime));
        }

        public Builder dataSource(@Nullable Output<EventTypeEventVariableDataSource> dataSource) {
            $.dataSource = dataSource;
            return this;
        }

        public Builder dataSource(EventTypeEventVariableDataSource dataSource) {
            return dataSource(Output.of(dataSource));
        }

        public Builder dataType(@Nullable Output<EventTypeEventVariableDataType> dataType) {
            $.dataType = dataType;
            return this;
        }

        public Builder dataType(EventTypeEventVariableDataType dataType) {
            return dataType(Output.of(dataType));
        }

        public Builder defaultValue(@Nullable Output<String> defaultValue) {
            $.defaultValue = defaultValue;
            return this;
        }

        public Builder defaultValue(String defaultValue) {
            return defaultValue(Output.of(defaultValue));
        }

        /**
         * @param description The description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder inline(@Nullable Output<Boolean> inline) {
            $.inline = inline;
            return this;
        }

        public Builder inline(Boolean inline) {
            return inline(Output.of(inline));
        }

        /**
         * @param lastUpdatedTime The time when the event type was last updated.
         * 
         * @return builder
         * 
         */
        public Builder lastUpdatedTime(@Nullable Output<String> lastUpdatedTime) {
            $.lastUpdatedTime = lastUpdatedTime;
            return this;
        }

        /**
         * @param lastUpdatedTime The time when the event type was last updated.
         * 
         * @return builder
         * 
         */
        public Builder lastUpdatedTime(String lastUpdatedTime) {
            return lastUpdatedTime(Output.of(lastUpdatedTime));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags Tags associated with this event type.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<EventTypeTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags associated with this event type.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<EventTypeTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Tags associated with this event type.
         * 
         * @return builder
         * 
         */
        public Builder tags(EventTypeTagArgs... tags) {
            return tags(List.of(tags));
        }

        public Builder variableType(@Nullable Output<EventTypeEventVariableVariableType> variableType) {
            $.variableType = variableType;
            return this;
        }

        public Builder variableType(EventTypeEventVariableVariableType variableType) {
            return variableType(Output.of(variableType));
        }

        public EventTypeEventVariableArgs build() {
            return $;
        }
    }

}
