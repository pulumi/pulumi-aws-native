// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.refactorspaces;

import com.pulumi.awsnative.refactorspaces.enums.RouteType;
import com.pulumi.awsnative.refactorspaces.inputs.RouteTagArgs;
import com.pulumi.awsnative.refactorspaces.inputs.RouteUriPathRouteInputArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouteArgs Empty = new RouteArgs();

    @Import(name="applicationIdentifier", required=true)
    private Output<String> applicationIdentifier;

    public Output<String> applicationIdentifier() {
        return this.applicationIdentifier;
    }

    @Import(name="environmentIdentifier", required=true)
    private Output<String> environmentIdentifier;

    public Output<String> environmentIdentifier() {
        return this.environmentIdentifier;
    }

    @Import(name="routeType")
    private @Nullable Output<RouteType> routeType;

    public Optional<Output<RouteType>> routeType() {
        return Optional.ofNullable(this.routeType);
    }

    @Import(name="serviceIdentifier", required=true)
    private Output<String> serviceIdentifier;

    public Output<String> serviceIdentifier() {
        return this.serviceIdentifier;
    }

    /**
     * Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<RouteTagArgs>> tags;

    /**
     * @return Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
     * 
     */
    public Optional<Output<List<RouteTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="uriPathRoute")
    private @Nullable Output<RouteUriPathRouteInputArgs> uriPathRoute;

    public Optional<Output<RouteUriPathRouteInputArgs>> uriPathRoute() {
        return Optional.ofNullable(this.uriPathRoute);
    }

    private RouteArgs() {}

    private RouteArgs(RouteArgs $) {
        this.applicationIdentifier = $.applicationIdentifier;
        this.environmentIdentifier = $.environmentIdentifier;
        this.routeType = $.routeType;
        this.serviceIdentifier = $.serviceIdentifier;
        this.tags = $.tags;
        this.uriPathRoute = $.uriPathRoute;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteArgs $;

        public Builder() {
            $ = new RouteArgs();
        }

        public Builder(RouteArgs defaults) {
            $ = new RouteArgs(Objects.requireNonNull(defaults));
        }

        public Builder applicationIdentifier(Output<String> applicationIdentifier) {
            $.applicationIdentifier = applicationIdentifier;
            return this;
        }

        public Builder applicationIdentifier(String applicationIdentifier) {
            return applicationIdentifier(Output.of(applicationIdentifier));
        }

        public Builder environmentIdentifier(Output<String> environmentIdentifier) {
            $.environmentIdentifier = environmentIdentifier;
            return this;
        }

        public Builder environmentIdentifier(String environmentIdentifier) {
            return environmentIdentifier(Output.of(environmentIdentifier));
        }

        public Builder routeType(@Nullable Output<RouteType> routeType) {
            $.routeType = routeType;
            return this;
        }

        public Builder routeType(RouteType routeType) {
            return routeType(Output.of(routeType));
        }

        public Builder serviceIdentifier(Output<String> serviceIdentifier) {
            $.serviceIdentifier = serviceIdentifier;
            return this;
        }

        public Builder serviceIdentifier(String serviceIdentifier) {
            return serviceIdentifier(Output.of(serviceIdentifier));
        }

        /**
         * @param tags Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<RouteTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<RouteTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
         * 
         * @return builder
         * 
         */
        public Builder tags(RouteTagArgs... tags) {
            return tags(List.of(tags));
        }

        public Builder uriPathRoute(@Nullable Output<RouteUriPathRouteInputArgs> uriPathRoute) {
            $.uriPathRoute = uriPathRoute;
            return this;
        }

        public Builder uriPathRoute(RouteUriPathRouteInputArgs uriPathRoute) {
            return uriPathRoute(Output.of(uriPathRoute));
        }

        public RouteArgs build() {
            $.applicationIdentifier = Objects.requireNonNull($.applicationIdentifier, "expected parameter 'applicationIdentifier' to be non-null");
            $.environmentIdentifier = Objects.requireNonNull($.environmentIdentifier, "expected parameter 'environmentIdentifier' to be non-null");
            $.serviceIdentifier = Objects.requireNonNull($.serviceIdentifier, "expected parameter 'serviceIdentifier' to be non-null");
            return $;
        }
    }

}
