// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.nimblestudio;

import com.pulumi.awsnative.nimblestudio.inputs.StudioEncryptionConfigurationArgs;
import com.pulumi.awsnative.nimblestudio.inputs.StudioTagsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StudioArgs extends com.pulumi.resources.ResourceArgs {

    public static final StudioArgs Empty = new StudioArgs();

    /**
     * &lt;p&gt;The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.&lt;/p&gt;
     * 
     */
    @Import(name="adminRoleArn", required=true)
    private Output<String> adminRoleArn;

    /**
     * @return &lt;p&gt;The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.&lt;/p&gt;
     * 
     */
    public Output<String> adminRoleArn() {
        return this.adminRoleArn;
    }

    /**
     * &lt;p&gt;A friendly name for the studio.&lt;/p&gt;
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return &lt;p&gt;A friendly name for the studio.&lt;/p&gt;
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    @Import(name="studioEncryptionConfiguration")
    private @Nullable Output<StudioEncryptionConfigurationArgs> studioEncryptionConfiguration;

    public Optional<Output<StudioEncryptionConfigurationArgs>> studioEncryptionConfiguration() {
        return Optional.ofNullable(this.studioEncryptionConfiguration);
    }

    /**
     * &lt;p&gt;The studio name that is used in the URL of the Nimble Studio portal when accessed by Nimble Studio users.&lt;/p&gt;
     * 
     */
    @Import(name="studioName")
    private @Nullable Output<String> studioName;

    /**
     * @return &lt;p&gt;The studio name that is used in the URL of the Nimble Studio portal when accessed by Nimble Studio users.&lt;/p&gt;
     * 
     */
    public Optional<Output<String>> studioName() {
        return Optional.ofNullable(this.studioName);
    }

    @Import(name="tags")
    private @Nullable Output<StudioTagsArgs> tags;

    public Optional<Output<StudioTagsArgs>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * &lt;p&gt;The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.&lt;/p&gt;
     * 
     */
    @Import(name="userRoleArn", required=true)
    private Output<String> userRoleArn;

    /**
     * @return &lt;p&gt;The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.&lt;/p&gt;
     * 
     */
    public Output<String> userRoleArn() {
        return this.userRoleArn;
    }

    private StudioArgs() {}

    private StudioArgs(StudioArgs $) {
        this.adminRoleArn = $.adminRoleArn;
        this.displayName = $.displayName;
        this.studioEncryptionConfiguration = $.studioEncryptionConfiguration;
        this.studioName = $.studioName;
        this.tags = $.tags;
        this.userRoleArn = $.userRoleArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StudioArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StudioArgs $;

        public Builder() {
            $ = new StudioArgs();
        }

        public Builder(StudioArgs defaults) {
            $ = new StudioArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminRoleArn &lt;p&gt;The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder adminRoleArn(Output<String> adminRoleArn) {
            $.adminRoleArn = adminRoleArn;
            return this;
        }

        /**
         * @param adminRoleArn &lt;p&gt;The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder adminRoleArn(String adminRoleArn) {
            return adminRoleArn(Output.of(adminRoleArn));
        }

        /**
         * @param displayName &lt;p&gt;A friendly name for the studio.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName &lt;p&gt;A friendly name for the studio.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder studioEncryptionConfiguration(@Nullable Output<StudioEncryptionConfigurationArgs> studioEncryptionConfiguration) {
            $.studioEncryptionConfiguration = studioEncryptionConfiguration;
            return this;
        }

        public Builder studioEncryptionConfiguration(StudioEncryptionConfigurationArgs studioEncryptionConfiguration) {
            return studioEncryptionConfiguration(Output.of(studioEncryptionConfiguration));
        }

        /**
         * @param studioName &lt;p&gt;The studio name that is used in the URL of the Nimble Studio portal when accessed by Nimble Studio users.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder studioName(@Nullable Output<String> studioName) {
            $.studioName = studioName;
            return this;
        }

        /**
         * @param studioName &lt;p&gt;The studio name that is used in the URL of the Nimble Studio portal when accessed by Nimble Studio users.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder studioName(String studioName) {
            return studioName(Output.of(studioName));
        }

        public Builder tags(@Nullable Output<StudioTagsArgs> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(StudioTagsArgs tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param userRoleArn &lt;p&gt;The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder userRoleArn(Output<String> userRoleArn) {
            $.userRoleArn = userRoleArn;
            return this;
        }

        /**
         * @param userRoleArn &lt;p&gt;The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder userRoleArn(String userRoleArn) {
            return userRoleArn(Output.of(userRoleArn));
        }

        public StudioArgs build() {
            $.adminRoleArn = Objects.requireNonNull($.adminRoleArn, "expected parameter 'adminRoleArn' to be non-null");
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.userRoleArn = Objects.requireNonNull($.userRoleArn, "expected parameter 'userRoleArn' to be non-null");
            return $;
        }
    }

}
