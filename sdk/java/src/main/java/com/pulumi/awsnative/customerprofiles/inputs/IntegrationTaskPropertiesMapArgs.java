// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.customerprofiles.inputs;

import com.pulumi.awsnative.customerprofiles.enums.IntegrationOperatorPropertiesKeys;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class IntegrationTaskPropertiesMapArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationTaskPropertiesMapArgs Empty = new IntegrationTaskPropertiesMapArgs();

    @Import(name="operatorPropertyKey", required=true)
    private Output<IntegrationOperatorPropertiesKeys> operatorPropertyKey;

    public Output<IntegrationOperatorPropertiesKeys> operatorPropertyKey() {
        return this.operatorPropertyKey;
    }

    @Import(name="property", required=true)
    private Output<String> property;

    public Output<String> property() {
        return this.property;
    }

    private IntegrationTaskPropertiesMapArgs() {}

    private IntegrationTaskPropertiesMapArgs(IntegrationTaskPropertiesMapArgs $) {
        this.operatorPropertyKey = $.operatorPropertyKey;
        this.property = $.property;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationTaskPropertiesMapArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationTaskPropertiesMapArgs $;

        public Builder() {
            $ = new IntegrationTaskPropertiesMapArgs();
        }

        public Builder(IntegrationTaskPropertiesMapArgs defaults) {
            $ = new IntegrationTaskPropertiesMapArgs(Objects.requireNonNull(defaults));
        }

        public Builder operatorPropertyKey(Output<IntegrationOperatorPropertiesKeys> operatorPropertyKey) {
            $.operatorPropertyKey = operatorPropertyKey;
            return this;
        }

        public Builder operatorPropertyKey(IntegrationOperatorPropertiesKeys operatorPropertyKey) {
            return operatorPropertyKey(Output.of(operatorPropertyKey));
        }

        public Builder property(Output<String> property) {
            $.property = property;
            return this;
        }

        public Builder property(String property) {
            return property(Output.of(property));
        }

        public IntegrationTaskPropertiesMapArgs build() {
            $.operatorPropertyKey = Objects.requireNonNull($.operatorPropertyKey, "expected parameter 'operatorPropertyKey' to be non-null");
            $.property = Objects.requireNonNull($.property, "expected parameter 'property' to be non-null");
            return $;
        }
    }

}
