// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.enums.BucketInventoryConfigurationIncludedObjectVersions;
import com.pulumi.awsnative.s3.enums.BucketInventoryConfigurationOptionalFieldsItem;
import com.pulumi.awsnative.s3.enums.BucketInventoryConfigurationScheduleFrequency;
import com.pulumi.awsnative.s3.inputs.BucketDestinationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketInventoryConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketInventoryConfigurationArgs Empty = new BucketInventoryConfigurationArgs();

    @Import(name="destination", required=true)
    private Output<BucketDestinationArgs> destination;

    public Output<BucketDestinationArgs> destination() {
        return this.destination;
    }

    /**
     * Specifies whether the inventory is enabled or disabled.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Specifies whether the inventory is enabled or disabled.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * The ID used to identify the inventory configuration.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The ID used to identify the inventory configuration.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * Object versions to include in the inventory list.
     * 
     */
    @Import(name="includedObjectVersions", required=true)
    private Output<BucketInventoryConfigurationIncludedObjectVersions> includedObjectVersions;

    /**
     * @return Object versions to include in the inventory list.
     * 
     */
    public Output<BucketInventoryConfigurationIncludedObjectVersions> includedObjectVersions() {
        return this.includedObjectVersions;
    }

    /**
     * Contains the optional fields that are included in the inventory results.
     * 
     */
    @Import(name="optionalFields")
    private @Nullable Output<List<BucketInventoryConfigurationOptionalFieldsItem>> optionalFields;

    /**
     * @return Contains the optional fields that are included in the inventory results.
     * 
     */
    public Optional<Output<List<BucketInventoryConfigurationOptionalFieldsItem>>> optionalFields() {
        return Optional.ofNullable(this.optionalFields);
    }

    /**
     * The prefix that is prepended to all inventory results.
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    /**
     * @return The prefix that is prepended to all inventory results.
     * 
     */
    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * Specifies the schedule for generating inventory results.
     * 
     */
    @Import(name="scheduleFrequency", required=true)
    private Output<BucketInventoryConfigurationScheduleFrequency> scheduleFrequency;

    /**
     * @return Specifies the schedule for generating inventory results.
     * 
     */
    public Output<BucketInventoryConfigurationScheduleFrequency> scheduleFrequency() {
        return this.scheduleFrequency;
    }

    private BucketInventoryConfigurationArgs() {}

    private BucketInventoryConfigurationArgs(BucketInventoryConfigurationArgs $) {
        this.destination = $.destination;
        this.enabled = $.enabled;
        this.id = $.id;
        this.includedObjectVersions = $.includedObjectVersions;
        this.optionalFields = $.optionalFields;
        this.prefix = $.prefix;
        this.scheduleFrequency = $.scheduleFrequency;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketInventoryConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketInventoryConfigurationArgs $;

        public Builder() {
            $ = new BucketInventoryConfigurationArgs();
        }

        public Builder(BucketInventoryConfigurationArgs defaults) {
            $ = new BucketInventoryConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder destination(Output<BucketDestinationArgs> destination) {
            $.destination = destination;
            return this;
        }

        public Builder destination(BucketDestinationArgs destination) {
            return destination(Output.of(destination));
        }

        /**
         * @param enabled Specifies whether the inventory is enabled or disabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Specifies whether the inventory is enabled or disabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param id The ID used to identify the inventory configuration.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID used to identify the inventory configuration.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param includedObjectVersions Object versions to include in the inventory list.
         * 
         * @return builder
         * 
         */
        public Builder includedObjectVersions(Output<BucketInventoryConfigurationIncludedObjectVersions> includedObjectVersions) {
            $.includedObjectVersions = includedObjectVersions;
            return this;
        }

        /**
         * @param includedObjectVersions Object versions to include in the inventory list.
         * 
         * @return builder
         * 
         */
        public Builder includedObjectVersions(BucketInventoryConfigurationIncludedObjectVersions includedObjectVersions) {
            return includedObjectVersions(Output.of(includedObjectVersions));
        }

        /**
         * @param optionalFields Contains the optional fields that are included in the inventory results.
         * 
         * @return builder
         * 
         */
        public Builder optionalFields(@Nullable Output<List<BucketInventoryConfigurationOptionalFieldsItem>> optionalFields) {
            $.optionalFields = optionalFields;
            return this;
        }

        /**
         * @param optionalFields Contains the optional fields that are included in the inventory results.
         * 
         * @return builder
         * 
         */
        public Builder optionalFields(List<BucketInventoryConfigurationOptionalFieldsItem> optionalFields) {
            return optionalFields(Output.of(optionalFields));
        }

        /**
         * @param optionalFields Contains the optional fields that are included in the inventory results.
         * 
         * @return builder
         * 
         */
        public Builder optionalFields(BucketInventoryConfigurationOptionalFieldsItem... optionalFields) {
            return optionalFields(List.of(optionalFields));
        }

        /**
         * @param prefix The prefix that is prepended to all inventory results.
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix The prefix that is prepended to all inventory results.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param scheduleFrequency Specifies the schedule for generating inventory results.
         * 
         * @return builder
         * 
         */
        public Builder scheduleFrequency(Output<BucketInventoryConfigurationScheduleFrequency> scheduleFrequency) {
            $.scheduleFrequency = scheduleFrequency;
            return this;
        }

        /**
         * @param scheduleFrequency Specifies the schedule for generating inventory results.
         * 
         * @return builder
         * 
         */
        public Builder scheduleFrequency(BucketInventoryConfigurationScheduleFrequency scheduleFrequency) {
            return scheduleFrequency(Output.of(scheduleFrequency));
        }

        public BucketInventoryConfigurationArgs build() {
            $.destination = Objects.requireNonNull($.destination, "expected parameter 'destination' to be non-null");
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.includedObjectVersions = Objects.requireNonNull($.includedObjectVersions, "expected parameter 'includedObjectVersions' to be non-null");
            $.scheduleFrequency = Objects.requireNonNull($.scheduleFrequency, "expected parameter 'scheduleFrequency' to be non-null");
            return $;
        }
    }

}
