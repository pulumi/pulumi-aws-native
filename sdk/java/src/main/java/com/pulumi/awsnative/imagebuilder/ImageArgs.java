// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.imagebuilder;

import com.pulumi.awsnative.imagebuilder.inputs.ImageTestsConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImageArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageArgs Empty = new ImageArgs();

    /**
     * The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.
     * 
     */
    @Import(name="containerRecipeArn")
    private @Nullable Output<String> containerRecipeArn;

    /**
     * @return The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.
     * 
     */
    public Optional<Output<String>> containerRecipeArn() {
        return Optional.ofNullable(this.containerRecipeArn);
    }

    /**
     * The Amazon Resource Name (ARN) of the distribution configuration.
     * 
     */
    @Import(name="distributionConfigurationArn")
    private @Nullable Output<String> distributionConfigurationArn;

    /**
     * @return The Amazon Resource Name (ARN) of the distribution configuration.
     * 
     */
    public Optional<Output<String>> distributionConfigurationArn() {
        return Optional.ofNullable(this.distributionConfigurationArn);
    }

    /**
     * Collects additional information about the image being created, including the operating system (OS) version and package list.
     * 
     */
    @Import(name="enhancedImageMetadataEnabled")
    private @Nullable Output<Boolean> enhancedImageMetadataEnabled;

    /**
     * @return Collects additional information about the image being created, including the operating system (OS) version and package list.
     * 
     */
    public Optional<Output<Boolean>> enhancedImageMetadataEnabled() {
        return Optional.ofNullable(this.enhancedImageMetadataEnabled);
    }

    /**
     * The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.
     * 
     */
    @Import(name="imageRecipeArn")
    private @Nullable Output<String> imageRecipeArn;

    /**
     * @return The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.
     * 
     */
    public Optional<Output<String>> imageRecipeArn() {
        return Optional.ofNullable(this.imageRecipeArn);
    }

    /**
     * The image tests configuration used when creating this image.
     * 
     */
    @Import(name="imageTestsConfiguration")
    private @Nullable Output<ImageTestsConfigurationArgs> imageTestsConfiguration;

    /**
     * @return The image tests configuration used when creating this image.
     * 
     */
    public Optional<Output<ImageTestsConfigurationArgs>> imageTestsConfiguration() {
        return Optional.ofNullable(this.imageTestsConfiguration);
    }

    /**
     * The Amazon Resource Name (ARN) of the infrastructure configuration.
     * 
     */
    @Import(name="infrastructureConfigurationArn")
    private @Nullable Output<String> infrastructureConfigurationArn;

    /**
     * @return The Amazon Resource Name (ARN) of the infrastructure configuration.
     * 
     */
    public Optional<Output<String>> infrastructureConfigurationArn() {
        return Optional.ofNullable(this.infrastructureConfigurationArn);
    }

    /**
     * The tags associated with the image.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Object> tags;

    /**
     * @return The tags associated with the image.
     * 
     */
    public Optional<Output<Object>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ImageArgs() {}

    private ImageArgs(ImageArgs $) {
        this.containerRecipeArn = $.containerRecipeArn;
        this.distributionConfigurationArn = $.distributionConfigurationArn;
        this.enhancedImageMetadataEnabled = $.enhancedImageMetadataEnabled;
        this.imageRecipeArn = $.imageRecipeArn;
        this.imageTestsConfiguration = $.imageTestsConfiguration;
        this.infrastructureConfigurationArn = $.infrastructureConfigurationArn;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageArgs $;

        public Builder() {
            $ = new ImageArgs();
        }

        public Builder(ImageArgs defaults) {
            $ = new ImageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerRecipeArn The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.
         * 
         * @return builder
         * 
         */
        public Builder containerRecipeArn(@Nullable Output<String> containerRecipeArn) {
            $.containerRecipeArn = containerRecipeArn;
            return this;
        }

        /**
         * @param containerRecipeArn The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.
         * 
         * @return builder
         * 
         */
        public Builder containerRecipeArn(String containerRecipeArn) {
            return containerRecipeArn(Output.of(containerRecipeArn));
        }

        /**
         * @param distributionConfigurationArn The Amazon Resource Name (ARN) of the distribution configuration.
         * 
         * @return builder
         * 
         */
        public Builder distributionConfigurationArn(@Nullable Output<String> distributionConfigurationArn) {
            $.distributionConfigurationArn = distributionConfigurationArn;
            return this;
        }

        /**
         * @param distributionConfigurationArn The Amazon Resource Name (ARN) of the distribution configuration.
         * 
         * @return builder
         * 
         */
        public Builder distributionConfigurationArn(String distributionConfigurationArn) {
            return distributionConfigurationArn(Output.of(distributionConfigurationArn));
        }

        /**
         * @param enhancedImageMetadataEnabled Collects additional information about the image being created, including the operating system (OS) version and package list.
         * 
         * @return builder
         * 
         */
        public Builder enhancedImageMetadataEnabled(@Nullable Output<Boolean> enhancedImageMetadataEnabled) {
            $.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
            return this;
        }

        /**
         * @param enhancedImageMetadataEnabled Collects additional information about the image being created, including the operating system (OS) version and package list.
         * 
         * @return builder
         * 
         */
        public Builder enhancedImageMetadataEnabled(Boolean enhancedImageMetadataEnabled) {
            return enhancedImageMetadataEnabled(Output.of(enhancedImageMetadataEnabled));
        }

        /**
         * @param imageRecipeArn The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.
         * 
         * @return builder
         * 
         */
        public Builder imageRecipeArn(@Nullable Output<String> imageRecipeArn) {
            $.imageRecipeArn = imageRecipeArn;
            return this;
        }

        /**
         * @param imageRecipeArn The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.
         * 
         * @return builder
         * 
         */
        public Builder imageRecipeArn(String imageRecipeArn) {
            return imageRecipeArn(Output.of(imageRecipeArn));
        }

        /**
         * @param imageTestsConfiguration The image tests configuration used when creating this image.
         * 
         * @return builder
         * 
         */
        public Builder imageTestsConfiguration(@Nullable Output<ImageTestsConfigurationArgs> imageTestsConfiguration) {
            $.imageTestsConfiguration = imageTestsConfiguration;
            return this;
        }

        /**
         * @param imageTestsConfiguration The image tests configuration used when creating this image.
         * 
         * @return builder
         * 
         */
        public Builder imageTestsConfiguration(ImageTestsConfigurationArgs imageTestsConfiguration) {
            return imageTestsConfiguration(Output.of(imageTestsConfiguration));
        }

        /**
         * @param infrastructureConfigurationArn The Amazon Resource Name (ARN) of the infrastructure configuration.
         * 
         * @return builder
         * 
         */
        public Builder infrastructureConfigurationArn(@Nullable Output<String> infrastructureConfigurationArn) {
            $.infrastructureConfigurationArn = infrastructureConfigurationArn;
            return this;
        }

        /**
         * @param infrastructureConfigurationArn The Amazon Resource Name (ARN) of the infrastructure configuration.
         * 
         * @return builder
         * 
         */
        public Builder infrastructureConfigurationArn(String infrastructureConfigurationArn) {
            return infrastructureConfigurationArn(Output.of(infrastructureConfigurationArn));
        }

        /**
         * @param tags The tags associated with the image.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Object> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags associated with the image.
         * 
         * @return builder
         * 
         */
        public Builder tags(Object tags) {
            return tags(Output.of(tags));
        }

        public ImageArgs build() {
            return $;
        }
    }

}
