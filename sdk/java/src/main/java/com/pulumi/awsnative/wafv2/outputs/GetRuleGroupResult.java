// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.wafv2.outputs;

import com.pulumi.awsnative.wafv2.outputs.RuleGroupCustomResponseBodies;
import com.pulumi.awsnative.wafv2.outputs.RuleGroupLabelSummary;
import com.pulumi.awsnative.wafv2.outputs.RuleGroupRule;
import com.pulumi.awsnative.wafv2.outputs.RuleGroupTag;
import com.pulumi.awsnative.wafv2.outputs.RuleGroupVisibilityConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRuleGroupResult {
    private @Nullable String arn;
    /**
     * @return Collection of Available Labels.
     * 
     */
    private @Nullable List<RuleGroupLabelSummary> availableLabels;
    private @Nullable Integer capacity;
    /**
     * @return Collection of Consumed Labels.
     * 
     */
    private @Nullable List<RuleGroupLabelSummary> consumedLabels;
    private @Nullable RuleGroupCustomResponseBodies customResponseBodies;
    private @Nullable String description;
    private @Nullable String id;
    private @Nullable String labelNamespace;
    /**
     * @return Collection of Rules.
     * 
     */
    private @Nullable List<RuleGroupRule> rules;
    private @Nullable List<RuleGroupTag> tags;
    private @Nullable RuleGroupVisibilityConfig visibilityConfig;

    private GetRuleGroupResult() {}
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return Collection of Available Labels.
     * 
     */
    public List<RuleGroupLabelSummary> availableLabels() {
        return this.availableLabels == null ? List.of() : this.availableLabels;
    }
    public Optional<Integer> capacity() {
        return Optional.ofNullable(this.capacity);
    }
    /**
     * @return Collection of Consumed Labels.
     * 
     */
    public List<RuleGroupLabelSummary> consumedLabels() {
        return this.consumedLabels == null ? List.of() : this.consumedLabels;
    }
    public Optional<RuleGroupCustomResponseBodies> customResponseBodies() {
        return Optional.ofNullable(this.customResponseBodies);
    }
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> labelNamespace() {
        return Optional.ofNullable(this.labelNamespace);
    }
    /**
     * @return Collection of Rules.
     * 
     */
    public List<RuleGroupRule> rules() {
        return this.rules == null ? List.of() : this.rules;
    }
    public List<RuleGroupTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    public Optional<RuleGroupVisibilityConfig> visibilityConfig() {
        return Optional.ofNullable(this.visibilityConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRuleGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable List<RuleGroupLabelSummary> availableLabels;
        private @Nullable Integer capacity;
        private @Nullable List<RuleGroupLabelSummary> consumedLabels;
        private @Nullable RuleGroupCustomResponseBodies customResponseBodies;
        private @Nullable String description;
        private @Nullable String id;
        private @Nullable String labelNamespace;
        private @Nullable List<RuleGroupRule> rules;
        private @Nullable List<RuleGroupTag> tags;
        private @Nullable RuleGroupVisibilityConfig visibilityConfig;
        public Builder() {}
        public Builder(GetRuleGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.availableLabels = defaults.availableLabels;
    	      this.capacity = defaults.capacity;
    	      this.consumedLabels = defaults.consumedLabels;
    	      this.customResponseBodies = defaults.customResponseBodies;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.labelNamespace = defaults.labelNamespace;
    	      this.rules = defaults.rules;
    	      this.tags = defaults.tags;
    	      this.visibilityConfig = defaults.visibilityConfig;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder availableLabels(@Nullable List<RuleGroupLabelSummary> availableLabels) {
            this.availableLabels = availableLabels;
            return this;
        }
        public Builder availableLabels(RuleGroupLabelSummary... availableLabels) {
            return availableLabels(List.of(availableLabels));
        }
        @CustomType.Setter
        public Builder capacity(@Nullable Integer capacity) {
            this.capacity = capacity;
            return this;
        }
        @CustomType.Setter
        public Builder consumedLabels(@Nullable List<RuleGroupLabelSummary> consumedLabels) {
            this.consumedLabels = consumedLabels;
            return this;
        }
        public Builder consumedLabels(RuleGroupLabelSummary... consumedLabels) {
            return consumedLabels(List.of(consumedLabels));
        }
        @CustomType.Setter
        public Builder customResponseBodies(@Nullable RuleGroupCustomResponseBodies customResponseBodies) {
            this.customResponseBodies = customResponseBodies;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder labelNamespace(@Nullable String labelNamespace) {
            this.labelNamespace = labelNamespace;
            return this;
        }
        @CustomType.Setter
        public Builder rules(@Nullable List<RuleGroupRule> rules) {
            this.rules = rules;
            return this;
        }
        public Builder rules(RuleGroupRule... rules) {
            return rules(List.of(rules));
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<RuleGroupTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(RuleGroupTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder visibilityConfig(@Nullable RuleGroupVisibilityConfig visibilityConfig) {
            this.visibilityConfig = visibilityConfig;
            return this;
        }
        public GetRuleGroupResult build() {
            final var o = new GetRuleGroupResult();
            o.arn = arn;
            o.availableLabels = availableLabels;
            o.capacity = capacity;
            o.consumedLabels = consumedLabels;
            o.customResponseBodies = customResponseBodies;
            o.description = description;
            o.id = id;
            o.labelNamespace = labelNamespace;
            o.rules = rules;
            o.tags = tags;
            o.visibilityConfig = visibilityConfig;
            return o;
        }
    }
}
