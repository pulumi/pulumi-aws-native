// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kafkaconnect.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectorProvisionedCapacity {
    /**
     * @return Specifies how many MSK Connect Units (MCU) are allocated to the connector.
     * 
     */
    private @Nullable Integer mcuCount;
    /**
     * @return Number of workers for a connector.
     * 
     */
    private Integer workerCount;

    private ConnectorProvisionedCapacity() {}
    /**
     * @return Specifies how many MSK Connect Units (MCU) are allocated to the connector.
     * 
     */
    public Optional<Integer> mcuCount() {
        return Optional.ofNullable(this.mcuCount);
    }
    /**
     * @return Number of workers for a connector.
     * 
     */
    public Integer workerCount() {
        return this.workerCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorProvisionedCapacity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer mcuCount;
        private Integer workerCount;
        public Builder() {}
        public Builder(ConnectorProvisionedCapacity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mcuCount = defaults.mcuCount;
    	      this.workerCount = defaults.workerCount;
        }

        @CustomType.Setter
        public Builder mcuCount(@Nullable Integer mcuCount) {
            this.mcuCount = mcuCount;
            return this;
        }
        @CustomType.Setter
        public Builder workerCount(Integer workerCount) {
            this.workerCount = Objects.requireNonNull(workerCount);
            return this;
        }
        public ConnectorProvisionedCapacity build() {
            final var o = new ConnectorProvisionedCapacity();
            o.mcuCount = mcuCount;
            o.workerCount = workerCount;
            return o;
        }
    }
}
