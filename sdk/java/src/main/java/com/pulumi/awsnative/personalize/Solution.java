// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.personalize;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.personalize.SolutionArgs;
import com.pulumi.awsnative.personalize.outputs.SolutionConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource schema for AWS::Personalize::Solution.
 * 
 */
@ResourceType(type="aws-native:personalize:Solution")
public class Solution extends com.pulumi.resources.CustomResource {
    /**
     * The ARN of the dataset group that provides the training data.
     * 
     */
    @Export(name="datasetGroupArn", type=String.class, parameters={})
    private Output<String> datasetGroupArn;

    /**
     * @return The ARN of the dataset group that provides the training data.
     * 
     */
    public Output<String> datasetGroupArn() {
        return this.datasetGroupArn;
    }
    /**
     * When your have multiple event types (using an EVENT_TYPE schema field), this parameter specifies which event type (for example, &#39;click&#39; or &#39;like&#39;) is used for training the model. If you do not provide an eventType, Amazon Personalize will use all interactions for training with equal weight regardless of type.
     * 
     */
    @Export(name="eventType", type=String.class, parameters={})
    private Output</* @Nullable */ String> eventType;

    /**
     * @return When your have multiple event types (using an EVENT_TYPE schema field), this parameter specifies which event type (for example, &#39;click&#39; or &#39;like&#39;) is used for training the model. If you do not provide an eventType, Amazon Personalize will use all interactions for training with equal weight regardless of type.
     * 
     */
    public Output<Optional<String>> eventType() {
        return Codegen.optional(this.eventType);
    }
    /**
     * The name for the solution
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name for the solution
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Whether to perform automated machine learning (AutoML). The default is false. For this case, you must specify recipeArn.
     * 
     */
    @Export(name="performAutoML", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> performAutoML;

    /**
     * @return Whether to perform automated machine learning (AutoML). The default is false. For this case, you must specify recipeArn.
     * 
     */
    public Output<Optional<Boolean>> performAutoML() {
        return Codegen.optional(this.performAutoML);
    }
    /**
     * Whether to perform hyperparameter optimization (HPO) on the specified or selected recipe. The default is false. When performing AutoML, this parameter is always true and you should not set it to false.
     * 
     */
    @Export(name="performHPO", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> performHPO;

    /**
     * @return Whether to perform hyperparameter optimization (HPO) on the specified or selected recipe. The default is false. When performing AutoML, this parameter is always true and you should not set it to false.
     * 
     */
    public Output<Optional<Boolean>> performHPO() {
        return Codegen.optional(this.performHPO);
    }
    /**
     * The ARN of the recipe to use for model training. Only specified when performAutoML is false.
     * 
     */
    @Export(name="recipeArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> recipeArn;

    /**
     * @return The ARN of the recipe to use for model training. Only specified when performAutoML is false.
     * 
     */
    public Output<Optional<String>> recipeArn() {
        return Codegen.optional(this.recipeArn);
    }
    @Export(name="solutionArn", type=String.class, parameters={})
    private Output<String> solutionArn;

    public Output<String> solutionArn() {
        return this.solutionArn;
    }
    @Export(name="solutionConfig", type=SolutionConfig.class, parameters={})
    private Output</* @Nullable */ SolutionConfig> solutionConfig;

    public Output<Optional<SolutionConfig>> solutionConfig() {
        return Codegen.optional(this.solutionConfig);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Solution(String name) {
        this(name, SolutionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Solution(String name, SolutionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Solution(String name, SolutionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:personalize:Solution", name, args == null ? SolutionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Solution(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:personalize:Solution", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Solution get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Solution(name, id, options);
    }
}
