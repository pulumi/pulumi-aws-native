// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2;

import com.pulumi.awsnative.ec2.inputs.IPAMScopeTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IPAMScopeArgs extends com.pulumi.resources.ResourceArgs {

    public static final IPAMScopeArgs Empty = new IPAMScopeArgs();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The Id of the IPAM this scope is a part of.
     * 
     */
    @Import(name="ipamId", required=true)
    private Output<String> ipamId;

    /**
     * @return The Id of the IPAM this scope is a part of.
     * 
     */
    public Output<String> ipamId() {
        return this.ipamId;
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<IPAMScopeTagArgs>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public Optional<Output<List<IPAMScopeTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private IPAMScopeArgs() {}

    private IPAMScopeArgs(IPAMScopeArgs $) {
        this.description = $.description;
        this.ipamId = $.ipamId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IPAMScopeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IPAMScopeArgs $;

        public Builder() {
            $ = new IPAMScopeArgs();
        }

        public Builder(IPAMScopeArgs defaults) {
            $ = new IPAMScopeArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param ipamId The Id of the IPAM this scope is a part of.
         * 
         * @return builder
         * 
         */
        public Builder ipamId(Output<String> ipamId) {
            $.ipamId = ipamId;
            return this;
        }

        /**
         * @param ipamId The Id of the IPAM this scope is a part of.
         * 
         * @return builder
         * 
         */
        public Builder ipamId(String ipamId) {
            return ipamId(Output.of(ipamId));
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<IPAMScopeTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<IPAMScopeTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(IPAMScopeTagArgs... tags) {
            return tags(List.of(tags));
        }

        public IPAMScopeArgs build() {
            $.ipamId = Objects.requireNonNull($.ipamId, "expected parameter 'ipamId' to be non-null");
            return $;
        }
    }

}
