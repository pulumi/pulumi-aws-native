// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ssmincidents.inputs;

import com.pulumi.awsnative.ssmincidents.enums.ResponsePlanSsmAutomationTargetAccount;
import com.pulumi.awsnative.ssmincidents.inputs.ResponsePlanDynamicSsmParameterArgs;
import com.pulumi.awsnative.ssmincidents.inputs.ResponsePlanSsmParameterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The configuration to use when starting the SSM automation document.
 * 
 */
public final class ResponsePlanSsmAutomationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResponsePlanSsmAutomationArgs Empty = new ResponsePlanSsmAutomationArgs();

    /**
     * The document name to use when starting the SSM automation document.
     * 
     */
    @Import(name="documentName", required=true)
    private Output<String> documentName;

    /**
     * @return The document name to use when starting the SSM automation document.
     * 
     */
    public Output<String> documentName() {
        return this.documentName;
    }

    /**
     * The version of the document to use when starting the SSM automation document.
     * 
     */
    @Import(name="documentVersion")
    private @Nullable Output<String> documentVersion;

    /**
     * @return The version of the document to use when starting the SSM automation document.
     * 
     */
    public Optional<Output<String>> documentVersion() {
        return Optional.ofNullable(this.documentVersion);
    }

    /**
     * The parameters with dynamic values to set when starting the SSM automation document.
     * 
     */
    @Import(name="dynamicParameters")
    private @Nullable Output<List<ResponsePlanDynamicSsmParameterArgs>> dynamicParameters;

    /**
     * @return The parameters with dynamic values to set when starting the SSM automation document.
     * 
     */
    public Optional<Output<List<ResponsePlanDynamicSsmParameterArgs>>> dynamicParameters() {
        return Optional.ofNullable(this.dynamicParameters);
    }

    /**
     * The parameters to set when starting the SSM automation document.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<List<ResponsePlanSsmParameterArgs>> parameters;

    /**
     * @return The parameters to set when starting the SSM automation document.
     * 
     */
    public Optional<Output<List<ResponsePlanSsmParameterArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The role ARN to use when starting the SSM automation document.
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return The role ARN to use when starting the SSM automation document.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    /**
     * The account type to use when starting the SSM automation document.
     * 
     */
    @Import(name="targetAccount")
    private @Nullable Output<ResponsePlanSsmAutomationTargetAccount> targetAccount;

    /**
     * @return The account type to use when starting the SSM automation document.
     * 
     */
    public Optional<Output<ResponsePlanSsmAutomationTargetAccount>> targetAccount() {
        return Optional.ofNullable(this.targetAccount);
    }

    private ResponsePlanSsmAutomationArgs() {}

    private ResponsePlanSsmAutomationArgs(ResponsePlanSsmAutomationArgs $) {
        this.documentName = $.documentName;
        this.documentVersion = $.documentVersion;
        this.dynamicParameters = $.dynamicParameters;
        this.parameters = $.parameters;
        this.roleArn = $.roleArn;
        this.targetAccount = $.targetAccount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResponsePlanSsmAutomationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResponsePlanSsmAutomationArgs $;

        public Builder() {
            $ = new ResponsePlanSsmAutomationArgs();
        }

        public Builder(ResponsePlanSsmAutomationArgs defaults) {
            $ = new ResponsePlanSsmAutomationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param documentName The document name to use when starting the SSM automation document.
         * 
         * @return builder
         * 
         */
        public Builder documentName(Output<String> documentName) {
            $.documentName = documentName;
            return this;
        }

        /**
         * @param documentName The document name to use when starting the SSM automation document.
         * 
         * @return builder
         * 
         */
        public Builder documentName(String documentName) {
            return documentName(Output.of(documentName));
        }

        /**
         * @param documentVersion The version of the document to use when starting the SSM automation document.
         * 
         * @return builder
         * 
         */
        public Builder documentVersion(@Nullable Output<String> documentVersion) {
            $.documentVersion = documentVersion;
            return this;
        }

        /**
         * @param documentVersion The version of the document to use when starting the SSM automation document.
         * 
         * @return builder
         * 
         */
        public Builder documentVersion(String documentVersion) {
            return documentVersion(Output.of(documentVersion));
        }

        /**
         * @param dynamicParameters The parameters with dynamic values to set when starting the SSM automation document.
         * 
         * @return builder
         * 
         */
        public Builder dynamicParameters(@Nullable Output<List<ResponsePlanDynamicSsmParameterArgs>> dynamicParameters) {
            $.dynamicParameters = dynamicParameters;
            return this;
        }

        /**
         * @param dynamicParameters The parameters with dynamic values to set when starting the SSM automation document.
         * 
         * @return builder
         * 
         */
        public Builder dynamicParameters(List<ResponsePlanDynamicSsmParameterArgs> dynamicParameters) {
            return dynamicParameters(Output.of(dynamicParameters));
        }

        /**
         * @param dynamicParameters The parameters with dynamic values to set when starting the SSM automation document.
         * 
         * @return builder
         * 
         */
        public Builder dynamicParameters(ResponsePlanDynamicSsmParameterArgs... dynamicParameters) {
            return dynamicParameters(List.of(dynamicParameters));
        }

        /**
         * @param parameters The parameters to set when starting the SSM automation document.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<List<ResponsePlanSsmParameterArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters The parameters to set when starting the SSM automation document.
         * 
         * @return builder
         * 
         */
        public Builder parameters(List<ResponsePlanSsmParameterArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param parameters The parameters to set when starting the SSM automation document.
         * 
         * @return builder
         * 
         */
        public Builder parameters(ResponsePlanSsmParameterArgs... parameters) {
            return parameters(List.of(parameters));
        }

        /**
         * @param roleArn The role ARN to use when starting the SSM automation document.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The role ARN to use when starting the SSM automation document.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param targetAccount The account type to use when starting the SSM automation document.
         * 
         * @return builder
         * 
         */
        public Builder targetAccount(@Nullable Output<ResponsePlanSsmAutomationTargetAccount> targetAccount) {
            $.targetAccount = targetAccount;
            return this;
        }

        /**
         * @param targetAccount The account type to use when starting the SSM automation document.
         * 
         * @return builder
         * 
         */
        public Builder targetAccount(ResponsePlanSsmAutomationTargetAccount targetAccount) {
            return targetAccount(Output.of(targetAccount));
        }

        public ResponsePlanSsmAutomationArgs build() {
            $.documentName = Objects.requireNonNull($.documentName, "expected parameter 'documentName' to be non-null");
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            return $;
        }
    }

}
