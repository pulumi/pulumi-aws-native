// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.rds;

import com.pulumi.awsnative.rds.enums.DBProxyTargetGroupTargetGroupName;
import com.pulumi.awsnative.rds.inputs.DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DBProxyTargetGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final DBProxyTargetGroupArgs Empty = new DBProxyTargetGroupArgs();

    @Import(name="connectionPoolConfigurationInfo")
    private @Nullable Output<DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs> connectionPoolConfigurationInfo;

    public Optional<Output<DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs>> connectionPoolConfigurationInfo() {
        return Optional.ofNullable(this.connectionPoolConfigurationInfo);
    }

    @Import(name="dBClusterIdentifiers")
    private @Nullable Output<List<String>> dBClusterIdentifiers;

    public Optional<Output<List<String>>> dBClusterIdentifiers() {
        return Optional.ofNullable(this.dBClusterIdentifiers);
    }

    @Import(name="dBInstanceIdentifiers")
    private @Nullable Output<List<String>> dBInstanceIdentifiers;

    public Optional<Output<List<String>>> dBInstanceIdentifiers() {
        return Optional.ofNullable(this.dBInstanceIdentifiers);
    }

    /**
     * The identifier for the proxy.
     * 
     */
    @Import(name="dBProxyName", required=true)
    private Output<String> dBProxyName;

    /**
     * @return The identifier for the proxy.
     * 
     */
    public Output<String> dBProxyName() {
        return this.dBProxyName;
    }

    /**
     * The identifier for the DBProxyTargetGroup
     * 
     */
    @Import(name="targetGroupName", required=true)
    private Output<DBProxyTargetGroupTargetGroupName> targetGroupName;

    /**
     * @return The identifier for the DBProxyTargetGroup
     * 
     */
    public Output<DBProxyTargetGroupTargetGroupName> targetGroupName() {
        return this.targetGroupName;
    }

    private DBProxyTargetGroupArgs() {}

    private DBProxyTargetGroupArgs(DBProxyTargetGroupArgs $) {
        this.connectionPoolConfigurationInfo = $.connectionPoolConfigurationInfo;
        this.dBClusterIdentifiers = $.dBClusterIdentifiers;
        this.dBInstanceIdentifiers = $.dBInstanceIdentifiers;
        this.dBProxyName = $.dBProxyName;
        this.targetGroupName = $.targetGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DBProxyTargetGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DBProxyTargetGroupArgs $;

        public Builder() {
            $ = new DBProxyTargetGroupArgs();
        }

        public Builder(DBProxyTargetGroupArgs defaults) {
            $ = new DBProxyTargetGroupArgs(Objects.requireNonNull(defaults));
        }

        public Builder connectionPoolConfigurationInfo(@Nullable Output<DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs> connectionPoolConfigurationInfo) {
            $.connectionPoolConfigurationInfo = connectionPoolConfigurationInfo;
            return this;
        }

        public Builder connectionPoolConfigurationInfo(DBProxyTargetGroupConnectionPoolConfigurationInfoFormatArgs connectionPoolConfigurationInfo) {
            return connectionPoolConfigurationInfo(Output.of(connectionPoolConfigurationInfo));
        }

        public Builder dBClusterIdentifiers(@Nullable Output<List<String>> dBClusterIdentifiers) {
            $.dBClusterIdentifiers = dBClusterIdentifiers;
            return this;
        }

        public Builder dBClusterIdentifiers(List<String> dBClusterIdentifiers) {
            return dBClusterIdentifiers(Output.of(dBClusterIdentifiers));
        }

        public Builder dBClusterIdentifiers(String... dBClusterIdentifiers) {
            return dBClusterIdentifiers(List.of(dBClusterIdentifiers));
        }

        public Builder dBInstanceIdentifiers(@Nullable Output<List<String>> dBInstanceIdentifiers) {
            $.dBInstanceIdentifiers = dBInstanceIdentifiers;
            return this;
        }

        public Builder dBInstanceIdentifiers(List<String> dBInstanceIdentifiers) {
            return dBInstanceIdentifiers(Output.of(dBInstanceIdentifiers));
        }

        public Builder dBInstanceIdentifiers(String... dBInstanceIdentifiers) {
            return dBInstanceIdentifiers(List.of(dBInstanceIdentifiers));
        }

        /**
         * @param dBProxyName The identifier for the proxy.
         * 
         * @return builder
         * 
         */
        public Builder dBProxyName(Output<String> dBProxyName) {
            $.dBProxyName = dBProxyName;
            return this;
        }

        /**
         * @param dBProxyName The identifier for the proxy.
         * 
         * @return builder
         * 
         */
        public Builder dBProxyName(String dBProxyName) {
            return dBProxyName(Output.of(dBProxyName));
        }

        /**
         * @param targetGroupName The identifier for the DBProxyTargetGroup
         * 
         * @return builder
         * 
         */
        public Builder targetGroupName(Output<DBProxyTargetGroupTargetGroupName> targetGroupName) {
            $.targetGroupName = targetGroupName;
            return this;
        }

        /**
         * @param targetGroupName The identifier for the DBProxyTargetGroup
         * 
         * @return builder
         * 
         */
        public Builder targetGroupName(DBProxyTargetGroupTargetGroupName targetGroupName) {
            return targetGroupName(Output.of(targetGroupName));
        }

        public DBProxyTargetGroupArgs build() {
            $.dBProxyName = Objects.requireNonNull($.dBProxyName, "expected parameter 'dBProxyName' to be non-null");
            $.targetGroupName = Objects.requireNonNull($.targetGroupName, "expected parameter 'targetGroupName' to be non-null");
            return $;
        }
    }

}
