// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.licensemanager.inputs;

import com.pulumi.awsnative.licensemanager.inputs.LicenseBorrowConfigurationArgs;
import com.pulumi.awsnative.licensemanager.inputs.LicenseProvisionalConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LicenseConsumptionConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final LicenseConsumptionConfigurationArgs Empty = new LicenseConsumptionConfigurationArgs();

    @Import(name="borrowConfiguration")
    private @Nullable Output<LicenseBorrowConfigurationArgs> borrowConfiguration;

    public Optional<Output<LicenseBorrowConfigurationArgs>> borrowConfiguration() {
        return Optional.ofNullable(this.borrowConfiguration);
    }

    @Import(name="provisionalConfiguration")
    private @Nullable Output<LicenseProvisionalConfigurationArgs> provisionalConfiguration;

    public Optional<Output<LicenseProvisionalConfigurationArgs>> provisionalConfiguration() {
        return Optional.ofNullable(this.provisionalConfiguration);
    }

    @Import(name="renewType")
    private @Nullable Output<String> renewType;

    public Optional<Output<String>> renewType() {
        return Optional.ofNullable(this.renewType);
    }

    private LicenseConsumptionConfigurationArgs() {}

    private LicenseConsumptionConfigurationArgs(LicenseConsumptionConfigurationArgs $) {
        this.borrowConfiguration = $.borrowConfiguration;
        this.provisionalConfiguration = $.provisionalConfiguration;
        this.renewType = $.renewType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LicenseConsumptionConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LicenseConsumptionConfigurationArgs $;

        public Builder() {
            $ = new LicenseConsumptionConfigurationArgs();
        }

        public Builder(LicenseConsumptionConfigurationArgs defaults) {
            $ = new LicenseConsumptionConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder borrowConfiguration(@Nullable Output<LicenseBorrowConfigurationArgs> borrowConfiguration) {
            $.borrowConfiguration = borrowConfiguration;
            return this;
        }

        public Builder borrowConfiguration(LicenseBorrowConfigurationArgs borrowConfiguration) {
            return borrowConfiguration(Output.of(borrowConfiguration));
        }

        public Builder provisionalConfiguration(@Nullable Output<LicenseProvisionalConfigurationArgs> provisionalConfiguration) {
            $.provisionalConfiguration = provisionalConfiguration;
            return this;
        }

        public Builder provisionalConfiguration(LicenseProvisionalConfigurationArgs provisionalConfiguration) {
            return provisionalConfiguration(Output.of(provisionalConfiguration));
        }

        public Builder renewType(@Nullable Output<String> renewType) {
            $.renewType = renewType;
            return this;
        }

        public Builder renewType(String renewType) {
            return renewType(Output.of(renewType));
        }

        public LicenseConsumptionConfigurationArgs build() {
            return $;
        }
    }

}
