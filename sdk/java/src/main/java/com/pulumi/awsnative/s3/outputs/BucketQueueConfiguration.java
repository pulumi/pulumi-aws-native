// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.outputs;

import com.pulumi.awsnative.s3.outputs.BucketNotificationFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketQueueConfiguration {
    /**
     * @return The Amazon S3 bucket event about which you want to publish messages to Amazon SQS.
     * 
     */
    private String event;
    /**
     * @return The filtering rules that determine which objects trigger notifications.
     * 
     */
    private @Nullable BucketNotificationFilter filter;
    /**
     * @return The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message when it detects events of the specified type.
     * 
     */
    private String queue;

    private BucketQueueConfiguration() {}
    /**
     * @return The Amazon S3 bucket event about which you want to publish messages to Amazon SQS.
     * 
     */
    public String event() {
        return this.event;
    }
    /**
     * @return The filtering rules that determine which objects trigger notifications.
     * 
     */
    public Optional<BucketNotificationFilter> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message when it detects events of the specified type.
     * 
     */
    public String queue() {
        return this.queue;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketQueueConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String event;
        private @Nullable BucketNotificationFilter filter;
        private String queue;
        public Builder() {}
        public Builder(BucketQueueConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.event = defaults.event;
    	      this.filter = defaults.filter;
    	      this.queue = defaults.queue;
        }

        @CustomType.Setter
        public Builder event(String event) {
            this.event = Objects.requireNonNull(event);
            return this;
        }
        @CustomType.Setter
        public Builder filter(@Nullable BucketNotificationFilter filter) {
            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder queue(String queue) {
            this.queue = Objects.requireNonNull(queue);
            return this;
        }
        public BucketQueueConfiguration build() {
            final var o = new BucketQueueConfiguration();
            o.event = event;
            o.filter = filter;
            o.queue = queue;
            return o;
        }
    }
}
