// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.connect.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * The queue configuration. This is required only if QuickConnectType is QUEUE.
 * 
 */
public final class QuickConnectQueueQuickConnectConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final QuickConnectQueueQuickConnectConfigArgs Empty = new QuickConnectQueueQuickConnectConfigArgs();

    @Import(name="contactFlowArn", required=true)
    private Output<String> contactFlowArn;

    public Output<String> contactFlowArn() {
        return this.contactFlowArn;
    }

    @Import(name="queueArn", required=true)
    private Output<String> queueArn;

    public Output<String> queueArn() {
        return this.queueArn;
    }

    private QuickConnectQueueQuickConnectConfigArgs() {}

    private QuickConnectQueueQuickConnectConfigArgs(QuickConnectQueueQuickConnectConfigArgs $) {
        this.contactFlowArn = $.contactFlowArn;
        this.queueArn = $.queueArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QuickConnectQueueQuickConnectConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QuickConnectQueueQuickConnectConfigArgs $;

        public Builder() {
            $ = new QuickConnectQueueQuickConnectConfigArgs();
        }

        public Builder(QuickConnectQueueQuickConnectConfigArgs defaults) {
            $ = new QuickConnectQueueQuickConnectConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder contactFlowArn(Output<String> contactFlowArn) {
            $.contactFlowArn = contactFlowArn;
            return this;
        }

        public Builder contactFlowArn(String contactFlowArn) {
            return contactFlowArn(Output.of(contactFlowArn));
        }

        public Builder queueArn(Output<String> queueArn) {
            $.queueArn = queueArn;
            return this;
        }

        public Builder queueArn(String queueArn) {
            return queueArn(Output.of(queueArn));
        }

        public QuickConnectQueueQuickConnectConfigArgs build() {
            $.contactFlowArn = Objects.requireNonNull($.contactFlowArn, "expected parameter 'contactFlowArn' to be non-null");
            $.queueArn = Objects.requireNonNull($.queueArn, "expected parameter 'queueArn' to be non-null");
            return $;
        }
    }

}
