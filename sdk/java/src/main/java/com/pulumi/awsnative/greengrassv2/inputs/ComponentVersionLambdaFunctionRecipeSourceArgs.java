// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.greengrassv2.inputs;

import com.pulumi.awsnative.greengrassv2.inputs.ComponentVersionComponentPlatformArgs;
import com.pulumi.awsnative.greengrassv2.inputs.ComponentVersionLambdaExecutionParametersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ComponentVersionLambdaFunctionRecipeSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ComponentVersionLambdaFunctionRecipeSourceArgs Empty = new ComponentVersionLambdaFunctionRecipeSourceArgs();

    @Import(name="componentDependencies")
    private @Nullable Output<Object> componentDependencies;

    public Optional<Output<Object>> componentDependencies() {
        return Optional.ofNullable(this.componentDependencies);
    }

    @Import(name="componentLambdaParameters")
    private @Nullable Output<ComponentVersionLambdaExecutionParametersArgs> componentLambdaParameters;

    public Optional<Output<ComponentVersionLambdaExecutionParametersArgs>> componentLambdaParameters() {
        return Optional.ofNullable(this.componentLambdaParameters);
    }

    @Import(name="componentName")
    private @Nullable Output<String> componentName;

    public Optional<Output<String>> componentName() {
        return Optional.ofNullable(this.componentName);
    }

    @Import(name="componentPlatforms")
    private @Nullable Output<List<ComponentVersionComponentPlatformArgs>> componentPlatforms;

    public Optional<Output<List<ComponentVersionComponentPlatformArgs>>> componentPlatforms() {
        return Optional.ofNullable(this.componentPlatforms);
    }

    @Import(name="componentVersion")
    private @Nullable Output<String> componentVersion;

    public Optional<Output<String>> componentVersion() {
        return Optional.ofNullable(this.componentVersion);
    }

    @Import(name="lambdaArn")
    private @Nullable Output<String> lambdaArn;

    public Optional<Output<String>> lambdaArn() {
        return Optional.ofNullable(this.lambdaArn);
    }

    private ComponentVersionLambdaFunctionRecipeSourceArgs() {}

    private ComponentVersionLambdaFunctionRecipeSourceArgs(ComponentVersionLambdaFunctionRecipeSourceArgs $) {
        this.componentDependencies = $.componentDependencies;
        this.componentLambdaParameters = $.componentLambdaParameters;
        this.componentName = $.componentName;
        this.componentPlatforms = $.componentPlatforms;
        this.componentVersion = $.componentVersion;
        this.lambdaArn = $.lambdaArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ComponentVersionLambdaFunctionRecipeSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComponentVersionLambdaFunctionRecipeSourceArgs $;

        public Builder() {
            $ = new ComponentVersionLambdaFunctionRecipeSourceArgs();
        }

        public Builder(ComponentVersionLambdaFunctionRecipeSourceArgs defaults) {
            $ = new ComponentVersionLambdaFunctionRecipeSourceArgs(Objects.requireNonNull(defaults));
        }

        public Builder componentDependencies(@Nullable Output<Object> componentDependencies) {
            $.componentDependencies = componentDependencies;
            return this;
        }

        public Builder componentDependencies(Object componentDependencies) {
            return componentDependencies(Output.of(componentDependencies));
        }

        public Builder componentLambdaParameters(@Nullable Output<ComponentVersionLambdaExecutionParametersArgs> componentLambdaParameters) {
            $.componentLambdaParameters = componentLambdaParameters;
            return this;
        }

        public Builder componentLambdaParameters(ComponentVersionLambdaExecutionParametersArgs componentLambdaParameters) {
            return componentLambdaParameters(Output.of(componentLambdaParameters));
        }

        public Builder componentName(@Nullable Output<String> componentName) {
            $.componentName = componentName;
            return this;
        }

        public Builder componentName(String componentName) {
            return componentName(Output.of(componentName));
        }

        public Builder componentPlatforms(@Nullable Output<List<ComponentVersionComponentPlatformArgs>> componentPlatforms) {
            $.componentPlatforms = componentPlatforms;
            return this;
        }

        public Builder componentPlatforms(List<ComponentVersionComponentPlatformArgs> componentPlatforms) {
            return componentPlatforms(Output.of(componentPlatforms));
        }

        public Builder componentPlatforms(ComponentVersionComponentPlatformArgs... componentPlatforms) {
            return componentPlatforms(List.of(componentPlatforms));
        }

        public Builder componentVersion(@Nullable Output<String> componentVersion) {
            $.componentVersion = componentVersion;
            return this;
        }

        public Builder componentVersion(String componentVersion) {
            return componentVersion(Output.of(componentVersion));
        }

        public Builder lambdaArn(@Nullable Output<String> lambdaArn) {
            $.lambdaArn = lambdaArn;
            return this;
        }

        public Builder lambdaArn(String lambdaArn) {
            return lambdaArn(Output.of(lambdaArn));
        }

        public ComponentVersionLambdaFunctionRecipeSourceArgs build() {
            return $;
        }
    }

}
