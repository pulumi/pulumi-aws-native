// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.sagemaker.ModelPackageArgs;
import com.pulumi.awsnative.sagemaker.enums.ModelPackageModelApprovalStatus;
import com.pulumi.awsnative.sagemaker.enums.ModelPackageStatus;
import com.pulumi.awsnative.sagemaker.outputs.ModelPackageAdditionalInferenceSpecificationDefinition;
import com.pulumi.awsnative.sagemaker.outputs.ModelPackageCreatedBy;
import com.pulumi.awsnative.sagemaker.outputs.ModelPackageCustomerMetadataProperties;
import com.pulumi.awsnative.sagemaker.outputs.ModelPackageDriftCheckBaselines;
import com.pulumi.awsnative.sagemaker.outputs.ModelPackageEnvironment;
import com.pulumi.awsnative.sagemaker.outputs.ModelPackageInferenceSpecification;
import com.pulumi.awsnative.sagemaker.outputs.ModelPackageLastModifiedBy;
import com.pulumi.awsnative.sagemaker.outputs.ModelPackageMetadataProperties;
import com.pulumi.awsnative.sagemaker.outputs.ModelPackageModelMetrics;
import com.pulumi.awsnative.sagemaker.outputs.ModelPackageSourceAlgorithmSpecification;
import com.pulumi.awsnative.sagemaker.outputs.ModelPackageStatusDetails;
import com.pulumi.awsnative.sagemaker.outputs.ModelPackageStatusItem;
import com.pulumi.awsnative.sagemaker.outputs.ModelPackageTag;
import com.pulumi.awsnative.sagemaker.outputs.ModelPackageValidationSpecification;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource Type definition for AWS::SageMaker::ModelPackage
 * 
 */
@ResourceType(type="aws-native:sagemaker:ModelPackage")
public class ModelPackage extends com.pulumi.resources.CustomResource {
    @Export(name="additionalInferenceSpecificationDefinition", type=ModelPackageAdditionalInferenceSpecificationDefinition.class, parameters={})
    private Output</* @Nullable */ ModelPackageAdditionalInferenceSpecificationDefinition> additionalInferenceSpecificationDefinition;

    public Output<Optional<ModelPackageAdditionalInferenceSpecificationDefinition>> additionalInferenceSpecificationDefinition() {
        return Codegen.optional(this.additionalInferenceSpecificationDefinition);
    }
    @Export(name="additionalInferenceSpecifications", type=List.class, parameters={ModelPackageAdditionalInferenceSpecificationDefinition.class})
    private Output</* @Nullable */ List<ModelPackageAdditionalInferenceSpecificationDefinition>> additionalInferenceSpecifications;

    public Output<Optional<List<ModelPackageAdditionalInferenceSpecificationDefinition>>> additionalInferenceSpecifications() {
        return Codegen.optional(this.additionalInferenceSpecifications);
    }
    @Export(name="additionalInferenceSpecificationsToAdd", type=List.class, parameters={ModelPackageAdditionalInferenceSpecificationDefinition.class})
    private Output</* @Nullable */ List<ModelPackageAdditionalInferenceSpecificationDefinition>> additionalInferenceSpecificationsToAdd;

    public Output<Optional<List<ModelPackageAdditionalInferenceSpecificationDefinition>>> additionalInferenceSpecificationsToAdd() {
        return Codegen.optional(this.additionalInferenceSpecificationsToAdd);
    }
    @Export(name="approvalDescription", type=String.class, parameters={})
    private Output</* @Nullable */ String> approvalDescription;

    public Output<Optional<String>> approvalDescription() {
        return Codegen.optional(this.approvalDescription);
    }
    @Export(name="certifyForMarketplace", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> certifyForMarketplace;

    public Output<Optional<Boolean>> certifyForMarketplace() {
        return Codegen.optional(this.certifyForMarketplace);
    }
    @Export(name="clientToken", type=String.class, parameters={})
    private Output</* @Nullable */ String> clientToken;

    public Output<Optional<String>> clientToken() {
        return Codegen.optional(this.clientToken);
    }
    @Export(name="createdBy", type=ModelPackageCreatedBy.class, parameters={})
    private Output</* @Nullable */ ModelPackageCreatedBy> createdBy;

    public Output<Optional<ModelPackageCreatedBy>> createdBy() {
        return Codegen.optional(this.createdBy);
    }
    @Export(name="creationTime", type=String.class, parameters={})
    private Output<String> creationTime;

    public Output<String> creationTime() {
        return this.creationTime;
    }
    @Export(name="customerMetadataProperties", type=ModelPackageCustomerMetadataProperties.class, parameters={})
    private Output</* @Nullable */ ModelPackageCustomerMetadataProperties> customerMetadataProperties;

    public Output<Optional<ModelPackageCustomerMetadataProperties>> customerMetadataProperties() {
        return Codegen.optional(this.customerMetadataProperties);
    }
    @Export(name="domain", type=String.class, parameters={})
    private Output</* @Nullable */ String> domain;

    public Output<Optional<String>> domain() {
        return Codegen.optional(this.domain);
    }
    @Export(name="driftCheckBaselines", type=ModelPackageDriftCheckBaselines.class, parameters={})
    private Output</* @Nullable */ ModelPackageDriftCheckBaselines> driftCheckBaselines;

    public Output<Optional<ModelPackageDriftCheckBaselines>> driftCheckBaselines() {
        return Codegen.optional(this.driftCheckBaselines);
    }
    @Export(name="environment", type=ModelPackageEnvironment.class, parameters={})
    private Output</* @Nullable */ ModelPackageEnvironment> environment;

    public Output<Optional<ModelPackageEnvironment>> environment() {
        return Codegen.optional(this.environment);
    }
    @Export(name="inferenceSpecification", type=ModelPackageInferenceSpecification.class, parameters={})
    private Output</* @Nullable */ ModelPackageInferenceSpecification> inferenceSpecification;

    public Output<Optional<ModelPackageInferenceSpecification>> inferenceSpecification() {
        return Codegen.optional(this.inferenceSpecification);
    }
    @Export(name="lastModifiedBy", type=ModelPackageLastModifiedBy.class, parameters={})
    private Output</* @Nullable */ ModelPackageLastModifiedBy> lastModifiedBy;

    public Output<Optional<ModelPackageLastModifiedBy>> lastModifiedBy() {
        return Codegen.optional(this.lastModifiedBy);
    }
    @Export(name="lastModifiedTime", type=String.class, parameters={})
    private Output</* @Nullable */ String> lastModifiedTime;

    public Output<Optional<String>> lastModifiedTime() {
        return Codegen.optional(this.lastModifiedTime);
    }
    @Export(name="metadataProperties", type=ModelPackageMetadataProperties.class, parameters={})
    private Output</* @Nullable */ ModelPackageMetadataProperties> metadataProperties;

    public Output<Optional<ModelPackageMetadataProperties>> metadataProperties() {
        return Codegen.optional(this.metadataProperties);
    }
    @Export(name="modelApprovalStatus", type=ModelPackageModelApprovalStatus.class, parameters={})
    private Output</* @Nullable */ ModelPackageModelApprovalStatus> modelApprovalStatus;

    public Output<Optional<ModelPackageModelApprovalStatus>> modelApprovalStatus() {
        return Codegen.optional(this.modelApprovalStatus);
    }
    @Export(name="modelMetrics", type=ModelPackageModelMetrics.class, parameters={})
    private Output</* @Nullable */ ModelPackageModelMetrics> modelMetrics;

    public Output<Optional<ModelPackageModelMetrics>> modelMetrics() {
        return Codegen.optional(this.modelMetrics);
    }
    @Export(name="modelPackageArn", type=String.class, parameters={})
    private Output<String> modelPackageArn;

    public Output<String> modelPackageArn() {
        return this.modelPackageArn;
    }
    @Export(name="modelPackageDescription", type=String.class, parameters={})
    private Output</* @Nullable */ String> modelPackageDescription;

    public Output<Optional<String>> modelPackageDescription() {
        return Codegen.optional(this.modelPackageDescription);
    }
    @Export(name="modelPackageGroupName", type=String.class, parameters={})
    private Output</* @Nullable */ String> modelPackageGroupName;

    public Output<Optional<String>> modelPackageGroupName() {
        return Codegen.optional(this.modelPackageGroupName);
    }
    @Export(name="modelPackageName", type=String.class, parameters={})
    private Output</* @Nullable */ String> modelPackageName;

    public Output<Optional<String>> modelPackageName() {
        return Codegen.optional(this.modelPackageName);
    }
    @Export(name="modelPackageStatus", type=ModelPackageStatus.class, parameters={})
    private Output<ModelPackageStatus> modelPackageStatus;

    public Output<ModelPackageStatus> modelPackageStatus() {
        return this.modelPackageStatus;
    }
    @Export(name="modelPackageStatusDetails", type=ModelPackageStatusDetails.class, parameters={})
    private Output</* @Nullable */ ModelPackageStatusDetails> modelPackageStatusDetails;

    public Output<Optional<ModelPackageStatusDetails>> modelPackageStatusDetails() {
        return Codegen.optional(this.modelPackageStatusDetails);
    }
    @Export(name="modelPackageStatusItem", type=ModelPackageStatusItem.class, parameters={})
    private Output</* @Nullable */ ModelPackageStatusItem> modelPackageStatusItem;

    public Output<Optional<ModelPackageStatusItem>> modelPackageStatusItem() {
        return Codegen.optional(this.modelPackageStatusItem);
    }
    @Export(name="modelPackageVersion", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> modelPackageVersion;

    public Output<Optional<Integer>> modelPackageVersion() {
        return Codegen.optional(this.modelPackageVersion);
    }
    @Export(name="samplePayloadUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> samplePayloadUrl;

    public Output<Optional<String>> samplePayloadUrl() {
        return Codegen.optional(this.samplePayloadUrl);
    }
    @Export(name="sourceAlgorithmSpecification", type=ModelPackageSourceAlgorithmSpecification.class, parameters={})
    private Output</* @Nullable */ ModelPackageSourceAlgorithmSpecification> sourceAlgorithmSpecification;

    public Output<Optional<ModelPackageSourceAlgorithmSpecification>> sourceAlgorithmSpecification() {
        return Codegen.optional(this.sourceAlgorithmSpecification);
    }
    @Export(name="tag", type=ModelPackageTag.class, parameters={})
    private Output</* @Nullable */ ModelPackageTag> tag;

    public Output<Optional<ModelPackageTag>> tag() {
        return Codegen.optional(this.tag);
    }
    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Export(name="tags", type=List.class, parameters={ModelPackageTag.class})
    private Output</* @Nullable */ List<ModelPackageTag>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public Output<Optional<List<ModelPackageTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="task", type=String.class, parameters={})
    private Output</* @Nullable */ String> task;

    public Output<Optional<String>> task() {
        return Codegen.optional(this.task);
    }
    @Export(name="validationSpecification", type=ModelPackageValidationSpecification.class, parameters={})
    private Output</* @Nullable */ ModelPackageValidationSpecification> validationSpecification;

    public Output<Optional<ModelPackageValidationSpecification>> validationSpecification() {
        return Codegen.optional(this.validationSpecification);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ModelPackage(String name) {
        this(name, ModelPackageArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ModelPackage(String name, @Nullable ModelPackageArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ModelPackage(String name, @Nullable ModelPackageArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:sagemaker:ModelPackage", name, args == null ? ModelPackageArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ModelPackage(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:sagemaker:ModelPackage", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ModelPackage get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ModelPackage(name, id, options);
    }
}
