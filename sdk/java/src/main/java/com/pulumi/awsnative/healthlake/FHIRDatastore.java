// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.healthlake;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.healthlake.FHIRDatastoreArgs;
import com.pulumi.awsnative.healthlake.enums.FHIRDatastoreDatastoreStatus;
import com.pulumi.awsnative.healthlake.enums.FHIRDatastoreDatastoreTypeVersion;
import com.pulumi.awsnative.healthlake.outputs.FHIRDatastoreCreatedAt;
import com.pulumi.awsnative.healthlake.outputs.FHIRDatastorePreloadDataConfig;
import com.pulumi.awsnative.healthlake.outputs.FHIRDatastoreSseConfiguration;
import com.pulumi.awsnative.healthlake.outputs.FHIRDatastoreTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * HealthLake FHIR Datastore
 * 
 */
@ResourceType(type="aws-native:healthlake:FHIRDatastore")
public class FHIRDatastore extends com.pulumi.resources.CustomResource {
    @Export(name="createdAt", type=FHIRDatastoreCreatedAt.class, parameters={})
    private Output<FHIRDatastoreCreatedAt> createdAt;

    public Output<FHIRDatastoreCreatedAt> createdAt() {
        return this.createdAt;
    }
    @Export(name="datastoreArn", type=String.class, parameters={})
    private Output<String> datastoreArn;

    public Output<String> datastoreArn() {
        return this.datastoreArn;
    }
    @Export(name="datastoreEndpoint", type=String.class, parameters={})
    private Output<String> datastoreEndpoint;

    public Output<String> datastoreEndpoint() {
        return this.datastoreEndpoint;
    }
    @Export(name="datastoreId", type=String.class, parameters={})
    private Output<String> datastoreId;

    public Output<String> datastoreId() {
        return this.datastoreId;
    }
    @Export(name="datastoreName", type=String.class, parameters={})
    private Output</* @Nullable */ String> datastoreName;

    public Output<Optional<String>> datastoreName() {
        return Codegen.optional(this.datastoreName);
    }
    @Export(name="datastoreStatus", type=FHIRDatastoreDatastoreStatus.class, parameters={})
    private Output<FHIRDatastoreDatastoreStatus> datastoreStatus;

    public Output<FHIRDatastoreDatastoreStatus> datastoreStatus() {
        return this.datastoreStatus;
    }
    @Export(name="datastoreTypeVersion", type=FHIRDatastoreDatastoreTypeVersion.class, parameters={})
    private Output<FHIRDatastoreDatastoreTypeVersion> datastoreTypeVersion;

    public Output<FHIRDatastoreDatastoreTypeVersion> datastoreTypeVersion() {
        return this.datastoreTypeVersion;
    }
    @Export(name="preloadDataConfig", type=FHIRDatastorePreloadDataConfig.class, parameters={})
    private Output</* @Nullable */ FHIRDatastorePreloadDataConfig> preloadDataConfig;

    public Output<Optional<FHIRDatastorePreloadDataConfig>> preloadDataConfig() {
        return Codegen.optional(this.preloadDataConfig);
    }
    @Export(name="sseConfiguration", type=FHIRDatastoreSseConfiguration.class, parameters={})
    private Output</* @Nullable */ FHIRDatastoreSseConfiguration> sseConfiguration;

    public Output<Optional<FHIRDatastoreSseConfiguration>> sseConfiguration() {
        return Codegen.optional(this.sseConfiguration);
    }
    @Export(name="tags", type=List.class, parameters={FHIRDatastoreTag.class})
    private Output</* @Nullable */ List<FHIRDatastoreTag>> tags;

    public Output<Optional<List<FHIRDatastoreTag>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FHIRDatastore(String name) {
        this(name, FHIRDatastoreArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FHIRDatastore(String name, FHIRDatastoreArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FHIRDatastore(String name, FHIRDatastoreArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:healthlake:FHIRDatastore", name, args == null ? FHIRDatastoreArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private FHIRDatastore(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:healthlake:FHIRDatastore", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FHIRDatastore get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FHIRDatastore(name, id, options);
    }
}
