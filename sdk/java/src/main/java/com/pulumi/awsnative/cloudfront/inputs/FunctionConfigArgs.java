// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudfront.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class FunctionConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final FunctionConfigArgs Empty = new FunctionConfigArgs();

    @Import(name="comment", required=true)
    private Output<String> comment;

    public Output<String> comment() {
        return this.comment;
    }

    @Import(name="runtime", required=true)
    private Output<String> runtime;

    public Output<String> runtime() {
        return this.runtime;
    }

    private FunctionConfigArgs() {}

    private FunctionConfigArgs(FunctionConfigArgs $) {
        this.comment = $.comment;
        this.runtime = $.runtime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FunctionConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FunctionConfigArgs $;

        public Builder() {
            $ = new FunctionConfigArgs();
        }

        public Builder(FunctionConfigArgs defaults) {
            $ = new FunctionConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder comment(Output<String> comment) {
            $.comment = comment;
            return this;
        }

        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        public Builder runtime(Output<String> runtime) {
            $.runtime = runtime;
            return this;
        }

        public Builder runtime(String runtime) {
            return runtime(Output.of(runtime));
        }

        public FunctionConfigArgs build() {
            $.comment = Objects.requireNonNull($.comment, "expected parameter 'comment' to be non-null");
            $.runtime = Objects.requireNonNull($.runtime, "expected parameter 'runtime' to be non-null");
            return $;
        }
    }

}
