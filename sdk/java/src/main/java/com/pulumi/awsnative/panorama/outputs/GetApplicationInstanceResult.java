// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.panorama.outputs;

import com.pulumi.awsnative.panorama.enums.ApplicationInstanceHealthStatus;
import com.pulumi.awsnative.panorama.enums.ApplicationInstanceStatus;
import com.pulumi.awsnative.panorama.enums.ApplicationInstanceStatusFilter;
import com.pulumi.awsnative.panorama.outputs.ApplicationInstanceTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetApplicationInstanceResult {
    private @Nullable String applicationInstanceId;
    private @Nullable String arn;
    private @Nullable Integer createdTime;
    private @Nullable String defaultRuntimeContextDeviceName;
    private @Nullable String deviceId;
    private @Nullable ApplicationInstanceHealthStatus healthStatus;
    private @Nullable Integer lastUpdatedTime;
    private @Nullable ApplicationInstanceStatus status;
    private @Nullable String statusDescription;
    private @Nullable ApplicationInstanceStatusFilter statusFilter;
    private @Nullable List<ApplicationInstanceTag> tags;

    private GetApplicationInstanceResult() {}
    public Optional<String> applicationInstanceId() {
        return Optional.ofNullable(this.applicationInstanceId);
    }
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public Optional<Integer> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }
    public Optional<String> defaultRuntimeContextDeviceName() {
        return Optional.ofNullable(this.defaultRuntimeContextDeviceName);
    }
    public Optional<String> deviceId() {
        return Optional.ofNullable(this.deviceId);
    }
    public Optional<ApplicationInstanceHealthStatus> healthStatus() {
        return Optional.ofNullable(this.healthStatus);
    }
    public Optional<Integer> lastUpdatedTime() {
        return Optional.ofNullable(this.lastUpdatedTime);
    }
    public Optional<ApplicationInstanceStatus> status() {
        return Optional.ofNullable(this.status);
    }
    public Optional<String> statusDescription() {
        return Optional.ofNullable(this.statusDescription);
    }
    public Optional<ApplicationInstanceStatusFilter> statusFilter() {
        return Optional.ofNullable(this.statusFilter);
    }
    public List<ApplicationInstanceTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String applicationInstanceId;
        private @Nullable String arn;
        private @Nullable Integer createdTime;
        private @Nullable String defaultRuntimeContextDeviceName;
        private @Nullable String deviceId;
        private @Nullable ApplicationInstanceHealthStatus healthStatus;
        private @Nullable Integer lastUpdatedTime;
        private @Nullable ApplicationInstanceStatus status;
        private @Nullable String statusDescription;
        private @Nullable ApplicationInstanceStatusFilter statusFilter;
        private @Nullable List<ApplicationInstanceTag> tags;
        public Builder() {}
        public Builder(GetApplicationInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationInstanceId = defaults.applicationInstanceId;
    	      this.arn = defaults.arn;
    	      this.createdTime = defaults.createdTime;
    	      this.defaultRuntimeContextDeviceName = defaults.defaultRuntimeContextDeviceName;
    	      this.deviceId = defaults.deviceId;
    	      this.healthStatus = defaults.healthStatus;
    	      this.lastUpdatedTime = defaults.lastUpdatedTime;
    	      this.status = defaults.status;
    	      this.statusDescription = defaults.statusDescription;
    	      this.statusFilter = defaults.statusFilter;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder applicationInstanceId(@Nullable String applicationInstanceId) {
            this.applicationInstanceId = applicationInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder createdTime(@Nullable Integer createdTime) {
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder defaultRuntimeContextDeviceName(@Nullable String defaultRuntimeContextDeviceName) {
            this.defaultRuntimeContextDeviceName = defaultRuntimeContextDeviceName;
            return this;
        }
        @CustomType.Setter
        public Builder deviceId(@Nullable String deviceId) {
            this.deviceId = deviceId;
            return this;
        }
        @CustomType.Setter
        public Builder healthStatus(@Nullable ApplicationInstanceHealthStatus healthStatus) {
            this.healthStatus = healthStatus;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedTime(@Nullable Integer lastUpdatedTime) {
            this.lastUpdatedTime = lastUpdatedTime;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable ApplicationInstanceStatus status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder statusDescription(@Nullable String statusDescription) {
            this.statusDescription = statusDescription;
            return this;
        }
        @CustomType.Setter
        public Builder statusFilter(@Nullable ApplicationInstanceStatusFilter statusFilter) {
            this.statusFilter = statusFilter;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<ApplicationInstanceTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(ApplicationInstanceTag... tags) {
            return tags(List.of(tags));
        }
        public GetApplicationInstanceResult build() {
            final var o = new GetApplicationInstanceResult();
            o.applicationInstanceId = applicationInstanceId;
            o.arn = arn;
            o.createdTime = createdTime;
            o.defaultRuntimeContextDeviceName = defaultRuntimeContextDeviceName;
            o.deviceId = deviceId;
            o.healthStatus = healthStatus;
            o.lastUpdatedTime = lastUpdatedTime;
            o.status = status;
            o.statusDescription = statusDescription;
            o.statusFilter = statusFilter;
            o.tags = tags;
            return o;
        }
    }
}
