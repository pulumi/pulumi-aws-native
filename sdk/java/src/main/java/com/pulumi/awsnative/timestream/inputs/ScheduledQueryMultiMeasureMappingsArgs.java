// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.timestream.inputs;

import com.pulumi.awsnative.timestream.inputs.ScheduledQueryMultiMeasureAttributeMappingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Only one of MixedMeasureMappings or MultiMeasureMappings is to be provided. MultiMeasureMappings can be used to ingest data as multi measures in the derived table.
 * 
 */
public final class ScheduledQueryMultiMeasureMappingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduledQueryMultiMeasureMappingsArgs Empty = new ScheduledQueryMultiMeasureMappingsArgs();

    @Import(name="multiMeasureAttributeMappings", required=true)
    private Output<List<ScheduledQueryMultiMeasureAttributeMappingArgs>> multiMeasureAttributeMappings;

    public Output<List<ScheduledQueryMultiMeasureAttributeMappingArgs>> multiMeasureAttributeMappings() {
        return this.multiMeasureAttributeMappings;
    }

    @Import(name="targetMultiMeasureName")
    private @Nullable Output<String> targetMultiMeasureName;

    public Optional<Output<String>> targetMultiMeasureName() {
        return Optional.ofNullable(this.targetMultiMeasureName);
    }

    private ScheduledQueryMultiMeasureMappingsArgs() {}

    private ScheduledQueryMultiMeasureMappingsArgs(ScheduledQueryMultiMeasureMappingsArgs $) {
        this.multiMeasureAttributeMappings = $.multiMeasureAttributeMappings;
        this.targetMultiMeasureName = $.targetMultiMeasureName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduledQueryMultiMeasureMappingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduledQueryMultiMeasureMappingsArgs $;

        public Builder() {
            $ = new ScheduledQueryMultiMeasureMappingsArgs();
        }

        public Builder(ScheduledQueryMultiMeasureMappingsArgs defaults) {
            $ = new ScheduledQueryMultiMeasureMappingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder multiMeasureAttributeMappings(Output<List<ScheduledQueryMultiMeasureAttributeMappingArgs>> multiMeasureAttributeMappings) {
            $.multiMeasureAttributeMappings = multiMeasureAttributeMappings;
            return this;
        }

        public Builder multiMeasureAttributeMappings(List<ScheduledQueryMultiMeasureAttributeMappingArgs> multiMeasureAttributeMappings) {
            return multiMeasureAttributeMappings(Output.of(multiMeasureAttributeMappings));
        }

        public Builder multiMeasureAttributeMappings(ScheduledQueryMultiMeasureAttributeMappingArgs... multiMeasureAttributeMappings) {
            return multiMeasureAttributeMappings(List.of(multiMeasureAttributeMappings));
        }

        public Builder targetMultiMeasureName(@Nullable Output<String> targetMultiMeasureName) {
            $.targetMultiMeasureName = targetMultiMeasureName;
            return this;
        }

        public Builder targetMultiMeasureName(String targetMultiMeasureName) {
            return targetMultiMeasureName(Output.of(targetMultiMeasureName));
        }

        public ScheduledQueryMultiMeasureMappingsArgs build() {
            $.multiMeasureAttributeMappings = Objects.requireNonNull($.multiMeasureAttributeMappings, "expected parameter 'multiMeasureAttributeMappings' to be non-null");
            return $;
        }
    }

}
