// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.eks;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.eks.NodegroupArgs;
import com.pulumi.awsnative.eks.outputs.NodegroupLaunchTemplateSpecification;
import com.pulumi.awsnative.eks.outputs.NodegroupRemoteAccess;
import com.pulumi.awsnative.eks.outputs.NodegroupScalingConfig;
import com.pulumi.awsnative.eks.outputs.NodegroupTaint;
import com.pulumi.awsnative.eks.outputs.NodegroupUpdateConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource schema for AWS::EKS::Nodegroup
 * 
 * ## Example Usage
 * 
 */
@ResourceType(type="aws-native:eks:Nodegroup")
public class Nodegroup extends com.pulumi.resources.CustomResource {
    /**
     * The AMI type for your node group.
     * 
     */
    @Export(name="amiType", type=String.class, parameters={})
    private Output</* @Nullable */ String> amiType;

    /**
     * @return The AMI type for your node group.
     * 
     */
    public Output<Optional<String>> amiType() {
        return Codegen.optional(this.amiType);
    }
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    /**
     * The capacity type of your managed node group.
     * 
     */
    @Export(name="capacityType", type=String.class, parameters={})
    private Output</* @Nullable */ String> capacityType;

    /**
     * @return The capacity type of your managed node group.
     * 
     */
    public Output<Optional<String>> capacityType() {
        return Codegen.optional(this.capacityType);
    }
    /**
     * Name of the cluster to create the node group in.
     * 
     */
    @Export(name="clusterName", type=String.class, parameters={})
    private Output<String> clusterName;

    /**
     * @return Name of the cluster to create the node group in.
     * 
     */
    public Output<String> clusterName() {
        return this.clusterName;
    }
    /**
     * The root device disk size (in GiB) for your node group instances.
     * 
     */
    @Export(name="diskSize", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> diskSize;

    /**
     * @return The root device disk size (in GiB) for your node group instances.
     * 
     */
    public Output<Optional<Integer>> diskSize() {
        return Codegen.optional(this.diskSize);
    }
    /**
     * Force the update if the existing node group&#39;s pods are unable to be drained due to a pod disruption budget issue.
     * 
     */
    @Export(name="forceUpdateEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> forceUpdateEnabled;

    /**
     * @return Force the update if the existing node group&#39;s pods are unable to be drained due to a pod disruption budget issue.
     * 
     */
    public Output<Optional<Boolean>> forceUpdateEnabled() {
        return Codegen.optional(this.forceUpdateEnabled);
    }
    /**
     * Specify the instance types for a node group.
     * 
     */
    @Export(name="instanceTypes", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> instanceTypes;

    /**
     * @return Specify the instance types for a node group.
     * 
     */
    public Output<Optional<List<String>>> instanceTypes() {
        return Codegen.optional(this.instanceTypes);
    }
    /**
     * The Kubernetes labels to be applied to the nodes in the node group when they are created.
     * 
     */
    @Export(name="labels", type=Object.class, parameters={})
    private Output</* @Nullable */ Object> labels;

    /**
     * @return The Kubernetes labels to be applied to the nodes in the node group when they are created.
     * 
     */
    public Output<Optional<Object>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * An object representing a node group&#39;s launch template specification.
     * 
     */
    @Export(name="launchTemplate", type=NodegroupLaunchTemplateSpecification.class, parameters={})
    private Output</* @Nullable */ NodegroupLaunchTemplateSpecification> launchTemplate;

    /**
     * @return An object representing a node group&#39;s launch template specification.
     * 
     */
    public Output<Optional<NodegroupLaunchTemplateSpecification>> launchTemplate() {
        return Codegen.optional(this.launchTemplate);
    }
    /**
     * The Amazon Resource Name (ARN) of the IAM role to associate with your node group.
     * 
     */
    @Export(name="nodeRole", type=String.class, parameters={})
    private Output<String> nodeRole;

    /**
     * @return The Amazon Resource Name (ARN) of the IAM role to associate with your node group.
     * 
     */
    public Output<String> nodeRole() {
        return this.nodeRole;
    }
    /**
     * The unique name to give your node group.
     * 
     */
    @Export(name="nodegroupName", type=String.class, parameters={})
    private Output</* @Nullable */ String> nodegroupName;

    /**
     * @return The unique name to give your node group.
     * 
     */
    public Output<Optional<String>> nodegroupName() {
        return Codegen.optional(this.nodegroupName);
    }
    /**
     * The AMI version of the Amazon EKS-optimized AMI to use with your node group.
     * 
     */
    @Export(name="releaseVersion", type=String.class, parameters={})
    private Output</* @Nullable */ String> releaseVersion;

    /**
     * @return The AMI version of the Amazon EKS-optimized AMI to use with your node group.
     * 
     */
    public Output<Optional<String>> releaseVersion() {
        return Codegen.optional(this.releaseVersion);
    }
    /**
     * The remote access (SSH) configuration to use with your node group.
     * 
     */
    @Export(name="remoteAccess", type=NodegroupRemoteAccess.class, parameters={})
    private Output</* @Nullable */ NodegroupRemoteAccess> remoteAccess;

    /**
     * @return The remote access (SSH) configuration to use with your node group.
     * 
     */
    public Output<Optional<NodegroupRemoteAccess>> remoteAccess() {
        return Codegen.optional(this.remoteAccess);
    }
    /**
     * The scaling configuration details for the Auto Scaling group that is created for your node group.
     * 
     */
    @Export(name="scalingConfig", type=NodegroupScalingConfig.class, parameters={})
    private Output</* @Nullable */ NodegroupScalingConfig> scalingConfig;

    /**
     * @return The scaling configuration details for the Auto Scaling group that is created for your node group.
     * 
     */
    public Output<Optional<NodegroupScalingConfig>> scalingConfig() {
        return Codegen.optional(this.scalingConfig);
    }
    /**
     * The subnets to use for the Auto Scaling group that is created for your node group.
     * 
     */
    @Export(name="subnets", type=List.class, parameters={String.class})
    private Output<List<String>> subnets;

    /**
     * @return The subnets to use for the Auto Scaling group that is created for your node group.
     * 
     */
    public Output<List<String>> subnets() {
        return this.subnets;
    }
    /**
     * The metadata, as key-value pairs, to apply to the node group to assist with categorization and organization. Follows same schema as Labels for consistency.
     * 
     */
    @Export(name="tags", type=Object.class, parameters={})
    private Output</* @Nullable */ Object> tags;

    /**
     * @return The metadata, as key-value pairs, to apply to the node group to assist with categorization and organization. Follows same schema as Labels for consistency.
     * 
     */
    public Output<Optional<Object>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The Kubernetes taints to be applied to the nodes in the node group when they are created.
     * 
     */
    @Export(name="taints", type=List.class, parameters={NodegroupTaint.class})
    private Output</* @Nullable */ List<NodegroupTaint>> taints;

    /**
     * @return The Kubernetes taints to be applied to the nodes in the node group when they are created.
     * 
     */
    public Output<Optional<List<NodegroupTaint>>> taints() {
        return Codegen.optional(this.taints);
    }
    /**
     * The node group update configuration.
     * 
     */
    @Export(name="updateConfig", type=NodegroupUpdateConfig.class, parameters={})
    private Output</* @Nullable */ NodegroupUpdateConfig> updateConfig;

    /**
     * @return The node group update configuration.
     * 
     */
    public Output<Optional<NodegroupUpdateConfig>> updateConfig() {
        return Codegen.optional(this.updateConfig);
    }
    /**
     * The Kubernetes version to use for your managed nodes.
     * 
     */
    @Export(name="version", type=String.class, parameters={})
    private Output</* @Nullable */ String> version;

    /**
     * @return The Kubernetes version to use for your managed nodes.
     * 
     */
    public Output<Optional<String>> version() {
        return Codegen.optional(this.version);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Nodegroup(String name) {
        this(name, NodegroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Nodegroup(String name, NodegroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Nodegroup(String name, NodegroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:eks:Nodegroup", name, args == null ? NodegroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Nodegroup(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:eks:Nodegroup", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Nodegroup get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Nodegroup(name, id, options);
    }
}
