// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudfront.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PublicKeyConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final PublicKeyConfigArgs Empty = new PublicKeyConfigArgs();

    @Import(name="callerReference", required=true)
    private Output<String> callerReference;

    public Output<String> callerReference() {
        return this.callerReference;
    }

    @Import(name="comment")
    private @Nullable Output<String> comment;

    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    @Import(name="encodedKey", required=true)
    private Output<String> encodedKey;

    public Output<String> encodedKey() {
        return this.encodedKey;
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    private PublicKeyConfigArgs() {}

    private PublicKeyConfigArgs(PublicKeyConfigArgs $) {
        this.callerReference = $.callerReference;
        this.comment = $.comment;
        this.encodedKey = $.encodedKey;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PublicKeyConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PublicKeyConfigArgs $;

        public Builder() {
            $ = new PublicKeyConfigArgs();
        }

        public Builder(PublicKeyConfigArgs defaults) {
            $ = new PublicKeyConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder callerReference(Output<String> callerReference) {
            $.callerReference = callerReference;
            return this;
        }

        public Builder callerReference(String callerReference) {
            return callerReference(Output.of(callerReference));
        }

        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        public Builder encodedKey(Output<String> encodedKey) {
            $.encodedKey = encodedKey;
            return this;
        }

        public Builder encodedKey(String encodedKey) {
            return encodedKey(Output.of(encodedKey));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public PublicKeyConfigArgs build() {
            $.callerReference = Objects.requireNonNull($.callerReference, "expected parameter 'callerReference' to be non-null");
            $.encodedKey = Objects.requireNonNull($.encodedKey, "expected parameter 'encodedKey' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
