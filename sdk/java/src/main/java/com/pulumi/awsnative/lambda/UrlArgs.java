// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lambda;

import com.pulumi.awsnative.lambda.enums.UrlAuthType;
import com.pulumi.awsnative.lambda.enums.UrlInvokeMode;
import com.pulumi.awsnative.lambda.inputs.UrlCorsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UrlArgs extends com.pulumi.resources.ResourceArgs {

    public static final UrlArgs Empty = new UrlArgs();

    /**
     * Can be either AWS_IAM if the requests are authorized via IAM, or NONE if no authorization is configured on the Function URL.
     * 
     */
    @Import(name="authType", required=true)
    private Output<UrlAuthType> authType;

    /**
     * @return Can be either AWS_IAM if the requests are authorized via IAM, or NONE if no authorization is configured on the Function URL.
     * 
     */
    public Output<UrlAuthType> authType() {
        return this.authType;
    }

    @Import(name="cors")
    private @Nullable Output<UrlCorsArgs> cors;

    public Optional<Output<UrlCorsArgs>> cors() {
        return Optional.ofNullable(this.cors);
    }

    /**
     * The invocation mode for the function’s URL. Set to BUFFERED if you want to buffer responses before returning them to the client. Set to RESPONSE_STREAM if you want to stream responses, allowing faster time to first byte and larger response payload sizes. If not set, defaults to BUFFERED.
     * 
     */
    @Import(name="invokeMode")
    private @Nullable Output<UrlInvokeMode> invokeMode;

    /**
     * @return The invocation mode for the function’s URL. Set to BUFFERED if you want to buffer responses before returning them to the client. Set to RESPONSE_STREAM if you want to stream responses, allowing faster time to first byte and larger response payload sizes. If not set, defaults to BUFFERED.
     * 
     */
    public Optional<Output<UrlInvokeMode>> invokeMode() {
        return Optional.ofNullable(this.invokeMode);
    }

    /**
     * The alias qualifier for the target function. If TargetFunctionArn is unqualified then Qualifier must be passed.
     * 
     */
    @Import(name="qualifier")
    private @Nullable Output<String> qualifier;

    /**
     * @return The alias qualifier for the target function. If TargetFunctionArn is unqualified then Qualifier must be passed.
     * 
     */
    public Optional<Output<String>> qualifier() {
        return Optional.ofNullable(this.qualifier);
    }

    /**
     * The Amazon Resource Name (ARN) of the function associated with the Function URL.
     * 
     */
    @Import(name="targetFunctionArn", required=true)
    private Output<String> targetFunctionArn;

    /**
     * @return The Amazon Resource Name (ARN) of the function associated with the Function URL.
     * 
     */
    public Output<String> targetFunctionArn() {
        return this.targetFunctionArn;
    }

    private UrlArgs() {}

    private UrlArgs(UrlArgs $) {
        this.authType = $.authType;
        this.cors = $.cors;
        this.invokeMode = $.invokeMode;
        this.qualifier = $.qualifier;
        this.targetFunctionArn = $.targetFunctionArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UrlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UrlArgs $;

        public Builder() {
            $ = new UrlArgs();
        }

        public Builder(UrlArgs defaults) {
            $ = new UrlArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authType Can be either AWS_IAM if the requests are authorized via IAM, or NONE if no authorization is configured on the Function URL.
         * 
         * @return builder
         * 
         */
        public Builder authType(Output<UrlAuthType> authType) {
            $.authType = authType;
            return this;
        }

        /**
         * @param authType Can be either AWS_IAM if the requests are authorized via IAM, or NONE if no authorization is configured on the Function URL.
         * 
         * @return builder
         * 
         */
        public Builder authType(UrlAuthType authType) {
            return authType(Output.of(authType));
        }

        public Builder cors(@Nullable Output<UrlCorsArgs> cors) {
            $.cors = cors;
            return this;
        }

        public Builder cors(UrlCorsArgs cors) {
            return cors(Output.of(cors));
        }

        /**
         * @param invokeMode The invocation mode for the function’s URL. Set to BUFFERED if you want to buffer responses before returning them to the client. Set to RESPONSE_STREAM if you want to stream responses, allowing faster time to first byte and larger response payload sizes. If not set, defaults to BUFFERED.
         * 
         * @return builder
         * 
         */
        public Builder invokeMode(@Nullable Output<UrlInvokeMode> invokeMode) {
            $.invokeMode = invokeMode;
            return this;
        }

        /**
         * @param invokeMode The invocation mode for the function’s URL. Set to BUFFERED if you want to buffer responses before returning them to the client. Set to RESPONSE_STREAM if you want to stream responses, allowing faster time to first byte and larger response payload sizes. If not set, defaults to BUFFERED.
         * 
         * @return builder
         * 
         */
        public Builder invokeMode(UrlInvokeMode invokeMode) {
            return invokeMode(Output.of(invokeMode));
        }

        /**
         * @param qualifier The alias qualifier for the target function. If TargetFunctionArn is unqualified then Qualifier must be passed.
         * 
         * @return builder
         * 
         */
        public Builder qualifier(@Nullable Output<String> qualifier) {
            $.qualifier = qualifier;
            return this;
        }

        /**
         * @param qualifier The alias qualifier for the target function. If TargetFunctionArn is unqualified then Qualifier must be passed.
         * 
         * @return builder
         * 
         */
        public Builder qualifier(String qualifier) {
            return qualifier(Output.of(qualifier));
        }

        /**
         * @param targetFunctionArn The Amazon Resource Name (ARN) of the function associated with the Function URL.
         * 
         * @return builder
         * 
         */
        public Builder targetFunctionArn(Output<String> targetFunctionArn) {
            $.targetFunctionArn = targetFunctionArn;
            return this;
        }

        /**
         * @param targetFunctionArn The Amazon Resource Name (ARN) of the function associated with the Function URL.
         * 
         * @return builder
         * 
         */
        public Builder targetFunctionArn(String targetFunctionArn) {
            return targetFunctionArn(Output.of(targetFunctionArn));
        }

        public UrlArgs build() {
            $.authType = Objects.requireNonNull($.authType, "expected parameter 'authType' to be non-null");
            $.targetFunctionArn = Objects.requireNonNull($.targetFunctionArn, "expected parameter 'targetFunctionArn' to be non-null");
            return $;
        }
    }

}
