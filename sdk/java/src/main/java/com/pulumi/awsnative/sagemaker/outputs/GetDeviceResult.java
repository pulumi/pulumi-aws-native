// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.outputs;

import com.pulumi.awsnative.sagemaker.outputs.Device;
import com.pulumi.awsnative.sagemaker.outputs.DeviceTag;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDeviceResult {
    /**
     * @return The Edge Device you want to register against a device fleet
     * 
     */
    private @Nullable Device device;
    /**
     * @return Associate tags with the resource
     * 
     */
    private @Nullable List<DeviceTag> tags;

    private GetDeviceResult() {}
    /**
     * @return The Edge Device you want to register against a device fleet
     * 
     */
    public Optional<Device> device() {
        return Optional.ofNullable(this.device);
    }
    /**
     * @return Associate tags with the resource
     * 
     */
    public List<DeviceTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeviceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Device device;
        private @Nullable List<DeviceTag> tags;
        public Builder() {}
        public Builder(GetDeviceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.device = defaults.device;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder device(@Nullable Device device) {
            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<DeviceTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(DeviceTag... tags) {
            return tags(List.of(tags));
        }
        public GetDeviceResult build() {
            final var o = new GetDeviceResult();
            o.device = device;
            o.tags = tags;
            return o;
        }
    }
}
