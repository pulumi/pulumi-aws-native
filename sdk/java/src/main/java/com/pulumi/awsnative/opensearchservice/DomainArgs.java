// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.opensearchservice;

import com.pulumi.awsnative.opensearchservice.inputs.DomainAdvancedSecurityOptionsInputArgs;
import com.pulumi.awsnative.opensearchservice.inputs.DomainClusterConfigArgs;
import com.pulumi.awsnative.opensearchservice.inputs.DomainCognitoOptionsArgs;
import com.pulumi.awsnative.opensearchservice.inputs.DomainEBSOptionsArgs;
import com.pulumi.awsnative.opensearchservice.inputs.DomainEncryptionAtRestOptionsArgs;
import com.pulumi.awsnative.opensearchservice.inputs.DomainEndpointOptionsArgs;
import com.pulumi.awsnative.opensearchservice.inputs.DomainNodeToNodeEncryptionOptionsArgs;
import com.pulumi.awsnative.opensearchservice.inputs.DomainSnapshotOptionsArgs;
import com.pulumi.awsnative.opensearchservice.inputs.DomainTagArgs;
import com.pulumi.awsnative.opensearchservice.inputs.DomainVPCOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainArgs Empty = new DomainArgs();

    @Import(name="accessPolicies")
    private @Nullable Output<Object> accessPolicies;

    public Optional<Output<Object>> accessPolicies() {
        return Optional.ofNullable(this.accessPolicies);
    }

    @Import(name="advancedOptions")
    private @Nullable Output<Object> advancedOptions;

    public Optional<Output<Object>> advancedOptions() {
        return Optional.ofNullable(this.advancedOptions);
    }

    @Import(name="advancedSecurityOptions")
    private @Nullable Output<DomainAdvancedSecurityOptionsInputArgs> advancedSecurityOptions;

    public Optional<Output<DomainAdvancedSecurityOptionsInputArgs>> advancedSecurityOptions() {
        return Optional.ofNullable(this.advancedSecurityOptions);
    }

    @Import(name="clusterConfig")
    private @Nullable Output<DomainClusterConfigArgs> clusterConfig;

    public Optional<Output<DomainClusterConfigArgs>> clusterConfig() {
        return Optional.ofNullable(this.clusterConfig);
    }

    @Import(name="cognitoOptions")
    private @Nullable Output<DomainCognitoOptionsArgs> cognitoOptions;

    public Optional<Output<DomainCognitoOptionsArgs>> cognitoOptions() {
        return Optional.ofNullable(this.cognitoOptions);
    }

    @Import(name="domainEndpointOptions")
    private @Nullable Output<DomainEndpointOptionsArgs> domainEndpointOptions;

    public Optional<Output<DomainEndpointOptionsArgs>> domainEndpointOptions() {
        return Optional.ofNullable(this.domainEndpointOptions);
    }

    @Import(name="domainName")
    private @Nullable Output<String> domainName;

    public Optional<Output<String>> domainName() {
        return Optional.ofNullable(this.domainName);
    }

    @Import(name="eBSOptions")
    private @Nullable Output<DomainEBSOptionsArgs> eBSOptions;

    public Optional<Output<DomainEBSOptionsArgs>> eBSOptions() {
        return Optional.ofNullable(this.eBSOptions);
    }

    @Import(name="encryptionAtRestOptions")
    private @Nullable Output<DomainEncryptionAtRestOptionsArgs> encryptionAtRestOptions;

    public Optional<Output<DomainEncryptionAtRestOptionsArgs>> encryptionAtRestOptions() {
        return Optional.ofNullable(this.encryptionAtRestOptions);
    }

    @Import(name="engineVersion")
    private @Nullable Output<String> engineVersion;

    public Optional<Output<String>> engineVersion() {
        return Optional.ofNullable(this.engineVersion);
    }

    @Import(name="logPublishingOptions")
    private @Nullable Output<Object> logPublishingOptions;

    public Optional<Output<Object>> logPublishingOptions() {
        return Optional.ofNullable(this.logPublishingOptions);
    }

    @Import(name="nodeToNodeEncryptionOptions")
    private @Nullable Output<DomainNodeToNodeEncryptionOptionsArgs> nodeToNodeEncryptionOptions;

    public Optional<Output<DomainNodeToNodeEncryptionOptionsArgs>> nodeToNodeEncryptionOptions() {
        return Optional.ofNullable(this.nodeToNodeEncryptionOptions);
    }

    @Import(name="snapshotOptions")
    private @Nullable Output<DomainSnapshotOptionsArgs> snapshotOptions;

    public Optional<Output<DomainSnapshotOptionsArgs>> snapshotOptions() {
        return Optional.ofNullable(this.snapshotOptions);
    }

    /**
     * An arbitrary set of tags (key-value pairs) for this Domain.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<DomainTagArgs>> tags;

    /**
     * @return An arbitrary set of tags (key-value pairs) for this Domain.
     * 
     */
    public Optional<Output<List<DomainTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="vPCOptions")
    private @Nullable Output<DomainVPCOptionsArgs> vPCOptions;

    public Optional<Output<DomainVPCOptionsArgs>> vPCOptions() {
        return Optional.ofNullable(this.vPCOptions);
    }

    private DomainArgs() {}

    private DomainArgs(DomainArgs $) {
        this.accessPolicies = $.accessPolicies;
        this.advancedOptions = $.advancedOptions;
        this.advancedSecurityOptions = $.advancedSecurityOptions;
        this.clusterConfig = $.clusterConfig;
        this.cognitoOptions = $.cognitoOptions;
        this.domainEndpointOptions = $.domainEndpointOptions;
        this.domainName = $.domainName;
        this.eBSOptions = $.eBSOptions;
        this.encryptionAtRestOptions = $.encryptionAtRestOptions;
        this.engineVersion = $.engineVersion;
        this.logPublishingOptions = $.logPublishingOptions;
        this.nodeToNodeEncryptionOptions = $.nodeToNodeEncryptionOptions;
        this.snapshotOptions = $.snapshotOptions;
        this.tags = $.tags;
        this.vPCOptions = $.vPCOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainArgs $;

        public Builder() {
            $ = new DomainArgs();
        }

        public Builder(DomainArgs defaults) {
            $ = new DomainArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessPolicies(@Nullable Output<Object> accessPolicies) {
            $.accessPolicies = accessPolicies;
            return this;
        }

        public Builder accessPolicies(Object accessPolicies) {
            return accessPolicies(Output.of(accessPolicies));
        }

        public Builder advancedOptions(@Nullable Output<Object> advancedOptions) {
            $.advancedOptions = advancedOptions;
            return this;
        }

        public Builder advancedOptions(Object advancedOptions) {
            return advancedOptions(Output.of(advancedOptions));
        }

        public Builder advancedSecurityOptions(@Nullable Output<DomainAdvancedSecurityOptionsInputArgs> advancedSecurityOptions) {
            $.advancedSecurityOptions = advancedSecurityOptions;
            return this;
        }

        public Builder advancedSecurityOptions(DomainAdvancedSecurityOptionsInputArgs advancedSecurityOptions) {
            return advancedSecurityOptions(Output.of(advancedSecurityOptions));
        }

        public Builder clusterConfig(@Nullable Output<DomainClusterConfigArgs> clusterConfig) {
            $.clusterConfig = clusterConfig;
            return this;
        }

        public Builder clusterConfig(DomainClusterConfigArgs clusterConfig) {
            return clusterConfig(Output.of(clusterConfig));
        }

        public Builder cognitoOptions(@Nullable Output<DomainCognitoOptionsArgs> cognitoOptions) {
            $.cognitoOptions = cognitoOptions;
            return this;
        }

        public Builder cognitoOptions(DomainCognitoOptionsArgs cognitoOptions) {
            return cognitoOptions(Output.of(cognitoOptions));
        }

        public Builder domainEndpointOptions(@Nullable Output<DomainEndpointOptionsArgs> domainEndpointOptions) {
            $.domainEndpointOptions = domainEndpointOptions;
            return this;
        }

        public Builder domainEndpointOptions(DomainEndpointOptionsArgs domainEndpointOptions) {
            return domainEndpointOptions(Output.of(domainEndpointOptions));
        }

        public Builder domainName(@Nullable Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        public Builder eBSOptions(@Nullable Output<DomainEBSOptionsArgs> eBSOptions) {
            $.eBSOptions = eBSOptions;
            return this;
        }

        public Builder eBSOptions(DomainEBSOptionsArgs eBSOptions) {
            return eBSOptions(Output.of(eBSOptions));
        }

        public Builder encryptionAtRestOptions(@Nullable Output<DomainEncryptionAtRestOptionsArgs> encryptionAtRestOptions) {
            $.encryptionAtRestOptions = encryptionAtRestOptions;
            return this;
        }

        public Builder encryptionAtRestOptions(DomainEncryptionAtRestOptionsArgs encryptionAtRestOptions) {
            return encryptionAtRestOptions(Output.of(encryptionAtRestOptions));
        }

        public Builder engineVersion(@Nullable Output<String> engineVersion) {
            $.engineVersion = engineVersion;
            return this;
        }

        public Builder engineVersion(String engineVersion) {
            return engineVersion(Output.of(engineVersion));
        }

        public Builder logPublishingOptions(@Nullable Output<Object> logPublishingOptions) {
            $.logPublishingOptions = logPublishingOptions;
            return this;
        }

        public Builder logPublishingOptions(Object logPublishingOptions) {
            return logPublishingOptions(Output.of(logPublishingOptions));
        }

        public Builder nodeToNodeEncryptionOptions(@Nullable Output<DomainNodeToNodeEncryptionOptionsArgs> nodeToNodeEncryptionOptions) {
            $.nodeToNodeEncryptionOptions = nodeToNodeEncryptionOptions;
            return this;
        }

        public Builder nodeToNodeEncryptionOptions(DomainNodeToNodeEncryptionOptionsArgs nodeToNodeEncryptionOptions) {
            return nodeToNodeEncryptionOptions(Output.of(nodeToNodeEncryptionOptions));
        }

        public Builder snapshotOptions(@Nullable Output<DomainSnapshotOptionsArgs> snapshotOptions) {
            $.snapshotOptions = snapshotOptions;
            return this;
        }

        public Builder snapshotOptions(DomainSnapshotOptionsArgs snapshotOptions) {
            return snapshotOptions(Output.of(snapshotOptions));
        }

        /**
         * @param tags An arbitrary set of tags (key-value pairs) for this Domain.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<DomainTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags An arbitrary set of tags (key-value pairs) for this Domain.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<DomainTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags An arbitrary set of tags (key-value pairs) for this Domain.
         * 
         * @return builder
         * 
         */
        public Builder tags(DomainTagArgs... tags) {
            return tags(List.of(tags));
        }

        public Builder vPCOptions(@Nullable Output<DomainVPCOptionsArgs> vPCOptions) {
            $.vPCOptions = vPCOptions;
            return this;
        }

        public Builder vPCOptions(DomainVPCOptionsArgs vPCOptions) {
            return vPCOptions(Output.of(vPCOptions));
        }

        public DomainArgs build() {
            return $;
        }
    }

}
