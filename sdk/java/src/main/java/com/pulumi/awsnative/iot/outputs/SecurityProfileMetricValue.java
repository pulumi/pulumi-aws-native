// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iot.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SecurityProfileMetricValue {
    /**
     * @return If the ComparisonOperator calls for a set of CIDRs, use this to specify that set to be compared with the metric.
     * 
     */
    private @Nullable List<String> cidrs;
    /**
     * @return If the ComparisonOperator calls for a numeric value, use this to specify that (integer) numeric value to be compared with the metric.
     * 
     */
    private @Nullable String count;
    /**
     * @return The numeral value of a metric.
     * 
     */
    private @Nullable Double number;
    /**
     * @return The numeral values of a metric.
     * 
     */
    private @Nullable List<Double> numbers;
    /**
     * @return If the ComparisonOperator calls for a set of ports, use this to specify that set to be compared with the metric.
     * 
     */
    private @Nullable List<Integer> ports;
    /**
     * @return The string values of a metric.
     * 
     */
    private @Nullable List<String> strings;

    private SecurityProfileMetricValue() {}
    /**
     * @return If the ComparisonOperator calls for a set of CIDRs, use this to specify that set to be compared with the metric.
     * 
     */
    public List<String> cidrs() {
        return this.cidrs == null ? List.of() : this.cidrs;
    }
    /**
     * @return If the ComparisonOperator calls for a numeric value, use this to specify that (integer) numeric value to be compared with the metric.
     * 
     */
    public Optional<String> count() {
        return Optional.ofNullable(this.count);
    }
    /**
     * @return The numeral value of a metric.
     * 
     */
    public Optional<Double> number() {
        return Optional.ofNullable(this.number);
    }
    /**
     * @return The numeral values of a metric.
     * 
     */
    public List<Double> numbers() {
        return this.numbers == null ? List.of() : this.numbers;
    }
    /**
     * @return If the ComparisonOperator calls for a set of ports, use this to specify that set to be compared with the metric.
     * 
     */
    public List<Integer> ports() {
        return this.ports == null ? List.of() : this.ports;
    }
    /**
     * @return The string values of a metric.
     * 
     */
    public List<String> strings() {
        return this.strings == null ? List.of() : this.strings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityProfileMetricValue defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> cidrs;
        private @Nullable String count;
        private @Nullable Double number;
        private @Nullable List<Double> numbers;
        private @Nullable List<Integer> ports;
        private @Nullable List<String> strings;
        public Builder() {}
        public Builder(SecurityProfileMetricValue defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidrs = defaults.cidrs;
    	      this.count = defaults.count;
    	      this.number = defaults.number;
    	      this.numbers = defaults.numbers;
    	      this.ports = defaults.ports;
    	      this.strings = defaults.strings;
        }

        @CustomType.Setter
        public Builder cidrs(@Nullable List<String> cidrs) {
            this.cidrs = cidrs;
            return this;
        }
        public Builder cidrs(String... cidrs) {
            return cidrs(List.of(cidrs));
        }
        @CustomType.Setter
        public Builder count(@Nullable String count) {
            this.count = count;
            return this;
        }
        @CustomType.Setter
        public Builder number(@Nullable Double number) {
            this.number = number;
            return this;
        }
        @CustomType.Setter
        public Builder numbers(@Nullable List<Double> numbers) {
            this.numbers = numbers;
            return this;
        }
        public Builder numbers(Double... numbers) {
            return numbers(List.of(numbers));
        }
        @CustomType.Setter
        public Builder ports(@Nullable List<Integer> ports) {
            this.ports = ports;
            return this;
        }
        public Builder ports(Integer... ports) {
            return ports(List.of(ports));
        }
        @CustomType.Setter
        public Builder strings(@Nullable List<String> strings) {
            this.strings = strings;
            return this;
        }
        public Builder strings(String... strings) {
            return strings(List.of(strings));
        }
        public SecurityProfileMetricValue build() {
            final var o = new SecurityProfileMetricValue();
            o.cidrs = cidrs;
            o.count = count;
            o.number = number;
            o.numbers = numbers;
            o.ports = ports;
            o.strings = strings;
            return o;
        }
    }
}
