// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.robomaker;

import com.pulumi.awsnative.robomaker.enums.RobotArchitecture;
import com.pulumi.awsnative.robomaker.inputs.RobotTagsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RobotArgs extends com.pulumi.resources.ResourceArgs {

    public static final RobotArgs Empty = new RobotArgs();

    /**
     * The target architecture of the robot.
     * 
     */
    @Import(name="architecture", required=true)
    private Output<RobotArchitecture> architecture;

    /**
     * @return The target architecture of the robot.
     * 
     */
    public Output<RobotArchitecture> architecture() {
        return this.architecture;
    }

    /**
     * The Amazon Resource Name (ARN) of the fleet.
     * 
     */
    @Import(name="fleet")
    private @Nullable Output<String> fleet;

    /**
     * @return The Amazon Resource Name (ARN) of the fleet.
     * 
     */
    public Optional<Output<String>> fleet() {
        return Optional.ofNullable(this.fleet);
    }

    /**
     * The Greengrass group id.
     * 
     */
    @Import(name="greengrassGroupId", required=true)
    private Output<String> greengrassGroupId;

    /**
     * @return The Greengrass group id.
     * 
     */
    public Output<String> greengrassGroupId() {
        return this.greengrassGroupId;
    }

    /**
     * The name for the robot.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name for the robot.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="tags")
    private @Nullable Output<RobotTagsArgs> tags;

    public Optional<Output<RobotTagsArgs>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private RobotArgs() {}

    private RobotArgs(RobotArgs $) {
        this.architecture = $.architecture;
        this.fleet = $.fleet;
        this.greengrassGroupId = $.greengrassGroupId;
        this.name = $.name;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RobotArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RobotArgs $;

        public Builder() {
            $ = new RobotArgs();
        }

        public Builder(RobotArgs defaults) {
            $ = new RobotArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param architecture The target architecture of the robot.
         * 
         * @return builder
         * 
         */
        public Builder architecture(Output<RobotArchitecture> architecture) {
            $.architecture = architecture;
            return this;
        }

        /**
         * @param architecture The target architecture of the robot.
         * 
         * @return builder
         * 
         */
        public Builder architecture(RobotArchitecture architecture) {
            return architecture(Output.of(architecture));
        }

        /**
         * @param fleet The Amazon Resource Name (ARN) of the fleet.
         * 
         * @return builder
         * 
         */
        public Builder fleet(@Nullable Output<String> fleet) {
            $.fleet = fleet;
            return this;
        }

        /**
         * @param fleet The Amazon Resource Name (ARN) of the fleet.
         * 
         * @return builder
         * 
         */
        public Builder fleet(String fleet) {
            return fleet(Output.of(fleet));
        }

        /**
         * @param greengrassGroupId The Greengrass group id.
         * 
         * @return builder
         * 
         */
        public Builder greengrassGroupId(Output<String> greengrassGroupId) {
            $.greengrassGroupId = greengrassGroupId;
            return this;
        }

        /**
         * @param greengrassGroupId The Greengrass group id.
         * 
         * @return builder
         * 
         */
        public Builder greengrassGroupId(String greengrassGroupId) {
            return greengrassGroupId(Output.of(greengrassGroupId));
        }

        /**
         * @param name The name for the robot.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name for the robot.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder tags(@Nullable Output<RobotTagsArgs> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(RobotTagsArgs tags) {
            return tags(Output.of(tags));
        }

        public RobotArgs build() {
            $.architecture = Objects.requireNonNull($.architecture, "expected parameter 'architecture' to be non-null");
            $.greengrassGroupId = Objects.requireNonNull($.greengrassGroupId, "expected parameter 'greengrassGroupId' to be non-null");
            return $;
        }
    }

}
