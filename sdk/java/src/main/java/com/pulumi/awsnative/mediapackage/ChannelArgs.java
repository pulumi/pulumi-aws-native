// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.mediapackage;

import com.pulumi.awsnative.mediapackage.inputs.ChannelLogConfigurationArgs;
import com.pulumi.awsnative.mediapackage.inputs.ChannelTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChannelArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChannelArgs Empty = new ChannelArgs();

    /**
     * A short text description of the Channel.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A short text description of the Channel.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The configuration parameters for egress access logging.
     * 
     */
    @Import(name="egressAccessLogs")
    private @Nullable Output<ChannelLogConfigurationArgs> egressAccessLogs;

    /**
     * @return The configuration parameters for egress access logging.
     * 
     */
    public Optional<Output<ChannelLogConfigurationArgs>> egressAccessLogs() {
        return Optional.ofNullable(this.egressAccessLogs);
    }

    /**
     * The configuration parameters for egress access logging.
     * 
     */
    @Import(name="ingressAccessLogs")
    private @Nullable Output<ChannelLogConfigurationArgs> ingressAccessLogs;

    /**
     * @return The configuration parameters for egress access logging.
     * 
     */
    public Optional<Output<ChannelLogConfigurationArgs>> ingressAccessLogs() {
        return Optional.ofNullable(this.ingressAccessLogs);
    }

    /**
     * A collection of tags associated with a resource
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<ChannelTagArgs>> tags;

    /**
     * @return A collection of tags associated with a resource
     * 
     */
    public Optional<Output<List<ChannelTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ChannelArgs() {}

    private ChannelArgs(ChannelArgs $) {
        this.description = $.description;
        this.egressAccessLogs = $.egressAccessLogs;
        this.ingressAccessLogs = $.ingressAccessLogs;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChannelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChannelArgs $;

        public Builder() {
            $ = new ChannelArgs();
        }

        public Builder(ChannelArgs defaults) {
            $ = new ChannelArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A short text description of the Channel.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A short text description of the Channel.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param egressAccessLogs The configuration parameters for egress access logging.
         * 
         * @return builder
         * 
         */
        public Builder egressAccessLogs(@Nullable Output<ChannelLogConfigurationArgs> egressAccessLogs) {
            $.egressAccessLogs = egressAccessLogs;
            return this;
        }

        /**
         * @param egressAccessLogs The configuration parameters for egress access logging.
         * 
         * @return builder
         * 
         */
        public Builder egressAccessLogs(ChannelLogConfigurationArgs egressAccessLogs) {
            return egressAccessLogs(Output.of(egressAccessLogs));
        }

        /**
         * @param ingressAccessLogs The configuration parameters for egress access logging.
         * 
         * @return builder
         * 
         */
        public Builder ingressAccessLogs(@Nullable Output<ChannelLogConfigurationArgs> ingressAccessLogs) {
            $.ingressAccessLogs = ingressAccessLogs;
            return this;
        }

        /**
         * @param ingressAccessLogs The configuration parameters for egress access logging.
         * 
         * @return builder
         * 
         */
        public Builder ingressAccessLogs(ChannelLogConfigurationArgs ingressAccessLogs) {
            return ingressAccessLogs(Output.of(ingressAccessLogs));
        }

        /**
         * @param tags A collection of tags associated with a resource
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<ChannelTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A collection of tags associated with a resource
         * 
         * @return builder
         * 
         */
        public Builder tags(List<ChannelTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A collection of tags associated with a resource
         * 
         * @return builder
         * 
         */
        public Builder tags(ChannelTagArgs... tags) {
            return tags(List.of(tags));
        }

        public ChannelArgs build() {
            return $;
        }
    }

}
