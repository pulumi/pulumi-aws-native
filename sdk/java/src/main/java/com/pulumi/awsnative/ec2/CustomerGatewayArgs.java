// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2;

import com.pulumi.awsnative.ec2.inputs.CustomerGatewayTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomerGatewayArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomerGatewayArgs Empty = new CustomerGatewayArgs();

    /**
     * For devices that support BGP, the customer gateway&#39;s BGP ASN.
     * 
     */
    @Import(name="bgpAsn", required=true)
    private Output<Integer> bgpAsn;

    /**
     * @return For devices that support BGP, the customer gateway&#39;s BGP ASN.
     * 
     */
    public Output<Integer> bgpAsn() {
        return this.bgpAsn;
    }

    /**
     * The internet-routable IP address for the customer gateway&#39;s outside interface. The address must be static.
     * 
     */
    @Import(name="ipAddress", required=true)
    private Output<String> ipAddress;

    /**
     * @return The internet-routable IP address for the customer gateway&#39;s outside interface. The address must be static.
     * 
     */
    public Output<String> ipAddress() {
        return this.ipAddress;
    }

    /**
     * One or more tags for the customer gateway.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<CustomerGatewayTagArgs>> tags;

    /**
     * @return One or more tags for the customer gateway.
     * 
     */
    public Optional<Output<List<CustomerGatewayTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The type of VPN connection that this customer gateway supports.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of VPN connection that this customer gateway supports.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private CustomerGatewayArgs() {}

    private CustomerGatewayArgs(CustomerGatewayArgs $) {
        this.bgpAsn = $.bgpAsn;
        this.ipAddress = $.ipAddress;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomerGatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomerGatewayArgs $;

        public Builder() {
            $ = new CustomerGatewayArgs();
        }

        public Builder(CustomerGatewayArgs defaults) {
            $ = new CustomerGatewayArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bgpAsn For devices that support BGP, the customer gateway&#39;s BGP ASN.
         * 
         * @return builder
         * 
         */
        public Builder bgpAsn(Output<Integer> bgpAsn) {
            $.bgpAsn = bgpAsn;
            return this;
        }

        /**
         * @param bgpAsn For devices that support BGP, the customer gateway&#39;s BGP ASN.
         * 
         * @return builder
         * 
         */
        public Builder bgpAsn(Integer bgpAsn) {
            return bgpAsn(Output.of(bgpAsn));
        }

        /**
         * @param ipAddress The internet-routable IP address for the customer gateway&#39;s outside interface. The address must be static.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress The internet-routable IP address for the customer gateway&#39;s outside interface. The address must be static.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param tags One or more tags for the customer gateway.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<CustomerGatewayTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags One or more tags for the customer gateway.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<CustomerGatewayTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags One or more tags for the customer gateway.
         * 
         * @return builder
         * 
         */
        public Builder tags(CustomerGatewayTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param type The type of VPN connection that this customer gateway supports.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of VPN connection that this customer gateway supports.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public CustomerGatewayArgs build() {
            $.bgpAsn = Objects.requireNonNull($.bgpAsn, "expected parameter 'bgpAsn' to be non-null");
            $.ipAddress = Objects.requireNonNull($.ipAddress, "expected parameter 'ipAddress' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
