// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2;

import com.pulumi.awsnative.ec2.inputs.OptionsPropertiesArgs;
import com.pulumi.awsnative.ec2.inputs.TransitGatewayMulticastDomainTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransitGatewayMulticastDomainArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransitGatewayMulticastDomainArgs Empty = new TransitGatewayMulticastDomainArgs();

    /**
     * The options for the transit gateway multicast domain.
     * 
     */
    @Import(name="options")
    private @Nullable Output<OptionsPropertiesArgs> options;

    /**
     * @return The options for the transit gateway multicast domain.
     * 
     */
    public Optional<Output<OptionsPropertiesArgs>> options() {
        return Optional.ofNullable(this.options);
    }

    /**
     * The tags for the transit gateway multicast domain.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<TransitGatewayMulticastDomainTagArgs>> tags;

    /**
     * @return The tags for the transit gateway multicast domain.
     * 
     */
    public Optional<Output<List<TransitGatewayMulticastDomainTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The ID of the transit gateway.
     * 
     */
    @Import(name="transitGatewayId", required=true)
    private Output<String> transitGatewayId;

    /**
     * @return The ID of the transit gateway.
     * 
     */
    public Output<String> transitGatewayId() {
        return this.transitGatewayId;
    }

    private TransitGatewayMulticastDomainArgs() {}

    private TransitGatewayMulticastDomainArgs(TransitGatewayMulticastDomainArgs $) {
        this.options = $.options;
        this.tags = $.tags;
        this.transitGatewayId = $.transitGatewayId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransitGatewayMulticastDomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransitGatewayMulticastDomainArgs $;

        public Builder() {
            $ = new TransitGatewayMulticastDomainArgs();
        }

        public Builder(TransitGatewayMulticastDomainArgs defaults) {
            $ = new TransitGatewayMulticastDomainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param options The options for the transit gateway multicast domain.
         * 
         * @return builder
         * 
         */
        public Builder options(@Nullable Output<OptionsPropertiesArgs> options) {
            $.options = options;
            return this;
        }

        /**
         * @param options The options for the transit gateway multicast domain.
         * 
         * @return builder
         * 
         */
        public Builder options(OptionsPropertiesArgs options) {
            return options(Output.of(options));
        }

        /**
         * @param tags The tags for the transit gateway multicast domain.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<TransitGatewayMulticastDomainTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags for the transit gateway multicast domain.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<TransitGatewayMulticastDomainTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The tags for the transit gateway multicast domain.
         * 
         * @return builder
         * 
         */
        public Builder tags(TransitGatewayMulticastDomainTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param transitGatewayId The ID of the transit gateway.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayId(Output<String> transitGatewayId) {
            $.transitGatewayId = transitGatewayId;
            return this;
        }

        /**
         * @param transitGatewayId The ID of the transit gateway.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayId(String transitGatewayId) {
            return transitGatewayId(Output.of(transitGatewayId));
        }

        public TransitGatewayMulticastDomainArgs build() {
            $.transitGatewayId = Objects.requireNonNull($.transitGatewayId, "expected parameter 'transitGatewayId' to be non-null");
            return $;
        }
    }

}
