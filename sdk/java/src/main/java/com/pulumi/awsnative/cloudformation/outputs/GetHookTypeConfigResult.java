// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudformation.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetHookTypeConfigResult {
    /**
     * @return The configuration data for the extension, in this account and region.
     * 
     */
    private @Nullable String configuration;
    /**
     * @return The Amazon Resource Name (ARN) for the configuration data, in this account and region.
     * 
     */
    private @Nullable String configurationArn;
    /**
     * @return The Amazon Resource Name (ARN) of the type without version number.
     * 
     */
    private @Nullable String typeArn;
    /**
     * @return The name of the type being registered.
     * 
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     * 
     */
    private @Nullable String typeName;

    private GetHookTypeConfigResult() {}
    /**
     * @return The configuration data for the extension, in this account and region.
     * 
     */
    public Optional<String> configuration() {
        return Optional.ofNullable(this.configuration);
    }
    /**
     * @return The Amazon Resource Name (ARN) for the configuration data, in this account and region.
     * 
     */
    public Optional<String> configurationArn() {
        return Optional.ofNullable(this.configurationArn);
    }
    /**
     * @return The Amazon Resource Name (ARN) of the type without version number.
     * 
     */
    public Optional<String> typeArn() {
        return Optional.ofNullable(this.typeArn);
    }
    /**
     * @return The name of the type being registered.
     * 
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     * 
     */
    public Optional<String> typeName() {
        return Optional.ofNullable(this.typeName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHookTypeConfigResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String configuration;
        private @Nullable String configurationArn;
        private @Nullable String typeArn;
        private @Nullable String typeName;
        public Builder() {}
        public Builder(GetHookTypeConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configuration = defaults.configuration;
    	      this.configurationArn = defaults.configurationArn;
    	      this.typeArn = defaults.typeArn;
    	      this.typeName = defaults.typeName;
        }

        @CustomType.Setter
        public Builder configuration(@Nullable String configuration) {
            this.configuration = configuration;
            return this;
        }
        @CustomType.Setter
        public Builder configurationArn(@Nullable String configurationArn) {
            this.configurationArn = configurationArn;
            return this;
        }
        @CustomType.Setter
        public Builder typeArn(@Nullable String typeArn) {
            this.typeArn = typeArn;
            return this;
        }
        @CustomType.Setter
        public Builder typeName(@Nullable String typeName) {
            this.typeName = typeName;
            return this;
        }
        public GetHookTypeConfigResult build() {
            final var o = new GetHookTypeConfigResult();
            o.configuration = configuration;
            o.configurationArn = configurationArn;
            o.typeArn = typeArn;
            o.typeName = typeName;
            return o;
        }
    }
}
