// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.outputs;

import com.pulumi.awsnative.sagemaker.enums.DataQualityJobDefinitionS3OutputS3UploadMode;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataQualityJobDefinitionS3Output {
    /**
     * @return The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
     * 
     */
    private String localPath;
    /**
     * @return Whether to upload the results of the monitoring job continuously or after the job completes.
     * 
     */
    private @Nullable DataQualityJobDefinitionS3OutputS3UploadMode s3UploadMode;
    /**
     * @return A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
     * 
     */
    private String s3Uri;

    private DataQualityJobDefinitionS3Output() {}
    /**
     * @return The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
     * 
     */
    public String localPath() {
        return this.localPath;
    }
    /**
     * @return Whether to upload the results of the monitoring job continuously or after the job completes.
     * 
     */
    public Optional<DataQualityJobDefinitionS3OutputS3UploadMode> s3UploadMode() {
        return Optional.ofNullable(this.s3UploadMode);
    }
    /**
     * @return A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
     * 
     */
    public String s3Uri() {
        return this.s3Uri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataQualityJobDefinitionS3Output defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String localPath;
        private @Nullable DataQualityJobDefinitionS3OutputS3UploadMode s3UploadMode;
        private String s3Uri;
        public Builder() {}
        public Builder(DataQualityJobDefinitionS3Output defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.localPath = defaults.localPath;
    	      this.s3UploadMode = defaults.s3UploadMode;
    	      this.s3Uri = defaults.s3Uri;
        }

        @CustomType.Setter
        public Builder localPath(String localPath) {
            this.localPath = Objects.requireNonNull(localPath);
            return this;
        }
        @CustomType.Setter
        public Builder s3UploadMode(@Nullable DataQualityJobDefinitionS3OutputS3UploadMode s3UploadMode) {
            this.s3UploadMode = s3UploadMode;
            return this;
        }
        @CustomType.Setter
        public Builder s3Uri(String s3Uri) {
            this.s3Uri = Objects.requireNonNull(s3Uri);
            return this;
        }
        public DataQualityJobDefinitionS3Output build() {
            final var o = new DataQualityJobDefinitionS3Output();
            o.localPath = localPath;
            o.s3UploadMode = s3UploadMode;
            o.s3Uri = s3Uri;
            return o;
        }
    }
}
