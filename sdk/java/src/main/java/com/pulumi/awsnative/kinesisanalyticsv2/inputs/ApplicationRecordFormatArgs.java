// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisanalyticsv2.inputs;

import com.pulumi.awsnative.kinesisanalyticsv2.enums.ApplicationRecordFormatRecordFormatType;
import com.pulumi.awsnative.kinesisanalyticsv2.inputs.ApplicationMappingParametersArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * For a SQL-based Kinesis Data Analytics application, describes the record format and relevant mapping information that should be applied to schematize the records on the stream.
 * 
 */
public final class ApplicationRecordFormatArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationRecordFormatArgs Empty = new ApplicationRecordFormatArgs();

    /**
     * When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
     * 
     */
    @Import(name="mappingParameters")
    private @Nullable Output<ApplicationMappingParametersArgs> mappingParameters;

    /**
     * @return When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
     * 
     */
    public Optional<Output<ApplicationMappingParametersArgs>> mappingParameters() {
        return Optional.ofNullable(this.mappingParameters);
    }

    /**
     * The type of record format.
     * 
     */
    @Import(name="recordFormatType", required=true)
    private Output<ApplicationRecordFormatRecordFormatType> recordFormatType;

    /**
     * @return The type of record format.
     * 
     */
    public Output<ApplicationRecordFormatRecordFormatType> recordFormatType() {
        return this.recordFormatType;
    }

    private ApplicationRecordFormatArgs() {}

    private ApplicationRecordFormatArgs(ApplicationRecordFormatArgs $) {
        this.mappingParameters = $.mappingParameters;
        this.recordFormatType = $.recordFormatType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationRecordFormatArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationRecordFormatArgs $;

        public Builder() {
            $ = new ApplicationRecordFormatArgs();
        }

        public Builder(ApplicationRecordFormatArgs defaults) {
            $ = new ApplicationRecordFormatArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mappingParameters When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
         * 
         * @return builder
         * 
         */
        public Builder mappingParameters(@Nullable Output<ApplicationMappingParametersArgs> mappingParameters) {
            $.mappingParameters = mappingParameters;
            return this;
        }

        /**
         * @param mappingParameters When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
         * 
         * @return builder
         * 
         */
        public Builder mappingParameters(ApplicationMappingParametersArgs mappingParameters) {
            return mappingParameters(Output.of(mappingParameters));
        }

        /**
         * @param recordFormatType The type of record format.
         * 
         * @return builder
         * 
         */
        public Builder recordFormatType(Output<ApplicationRecordFormatRecordFormatType> recordFormatType) {
            $.recordFormatType = recordFormatType;
            return this;
        }

        /**
         * @param recordFormatType The type of record format.
         * 
         * @return builder
         * 
         */
        public Builder recordFormatType(ApplicationRecordFormatRecordFormatType recordFormatType) {
            return recordFormatType(Output.of(recordFormatType));
        }

        public ApplicationRecordFormatArgs build() {
            $.recordFormatType = Objects.requireNonNull($.recordFormatType, "expected parameter 'recordFormatType' to be non-null");
            return $;
        }
    }

}
