// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.auditmanager.outputs;

import com.pulumi.awsnative.auditmanager.enums.AssessmentStatus;
import com.pulumi.awsnative.auditmanager.outputs.AssessmentDelegation;
import com.pulumi.awsnative.auditmanager.outputs.AssessmentReportsDestination;
import com.pulumi.awsnative.auditmanager.outputs.AssessmentRole;
import com.pulumi.awsnative.auditmanager.outputs.AssessmentScope;
import com.pulumi.awsnative.auditmanager.outputs.AssessmentTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAssessmentResult {
    private @Nullable String arn;
    private @Nullable String assessmentId;
    private @Nullable AssessmentReportsDestination assessmentReportsDestination;
    private @Nullable Double creationTime;
    /**
     * @return The list of delegations.
     * 
     */
    private @Nullable List<AssessmentDelegation> delegations;
    /**
     * @return The list of roles for the specified assessment.
     * 
     */
    private @Nullable List<AssessmentRole> roles;
    private @Nullable AssessmentScope scope;
    private @Nullable AssessmentStatus status;
    /**
     * @return The tags associated with the assessment.
     * 
     */
    private @Nullable List<AssessmentTag> tags;

    private GetAssessmentResult() {}
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public Optional<String> assessmentId() {
        return Optional.ofNullable(this.assessmentId);
    }
    public Optional<AssessmentReportsDestination> assessmentReportsDestination() {
        return Optional.ofNullable(this.assessmentReportsDestination);
    }
    public Optional<Double> creationTime() {
        return Optional.ofNullable(this.creationTime);
    }
    /**
     * @return The list of delegations.
     * 
     */
    public List<AssessmentDelegation> delegations() {
        return this.delegations == null ? List.of() : this.delegations;
    }
    /**
     * @return The list of roles for the specified assessment.
     * 
     */
    public List<AssessmentRole> roles() {
        return this.roles == null ? List.of() : this.roles;
    }
    public Optional<AssessmentScope> scope() {
        return Optional.ofNullable(this.scope);
    }
    public Optional<AssessmentStatus> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The tags associated with the assessment.
     * 
     */
    public List<AssessmentTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAssessmentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String assessmentId;
        private @Nullable AssessmentReportsDestination assessmentReportsDestination;
        private @Nullable Double creationTime;
        private @Nullable List<AssessmentDelegation> delegations;
        private @Nullable List<AssessmentRole> roles;
        private @Nullable AssessmentScope scope;
        private @Nullable AssessmentStatus status;
        private @Nullable List<AssessmentTag> tags;
        public Builder() {}
        public Builder(GetAssessmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.assessmentId = defaults.assessmentId;
    	      this.assessmentReportsDestination = defaults.assessmentReportsDestination;
    	      this.creationTime = defaults.creationTime;
    	      this.delegations = defaults.delegations;
    	      this.roles = defaults.roles;
    	      this.scope = defaults.scope;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder assessmentId(@Nullable String assessmentId) {
            this.assessmentId = assessmentId;
            return this;
        }
        @CustomType.Setter
        public Builder assessmentReportsDestination(@Nullable AssessmentReportsDestination assessmentReportsDestination) {
            this.assessmentReportsDestination = assessmentReportsDestination;
            return this;
        }
        @CustomType.Setter
        public Builder creationTime(@Nullable Double creationTime) {
            this.creationTime = creationTime;
            return this;
        }
        @CustomType.Setter
        public Builder delegations(@Nullable List<AssessmentDelegation> delegations) {
            this.delegations = delegations;
            return this;
        }
        public Builder delegations(AssessmentDelegation... delegations) {
            return delegations(List.of(delegations));
        }
        @CustomType.Setter
        public Builder roles(@Nullable List<AssessmentRole> roles) {
            this.roles = roles;
            return this;
        }
        public Builder roles(AssessmentRole... roles) {
            return roles(List.of(roles));
        }
        @CustomType.Setter
        public Builder scope(@Nullable AssessmentScope scope) {
            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable AssessmentStatus status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<AssessmentTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(AssessmentTag... tags) {
            return tags(List.of(tags));
        }
        public GetAssessmentResult build() {
            final var o = new GetAssessmentResult();
            o.arn = arn;
            o.assessmentId = assessmentId;
            o.assessmentReportsDestination = assessmentReportsDestination;
            o.creationTime = creationTime;
            o.delegations = delegations;
            o.roles = roles;
            o.scope = scope;
            o.status = status;
            o.tags = tags;
            return o;
        }
    }
}
