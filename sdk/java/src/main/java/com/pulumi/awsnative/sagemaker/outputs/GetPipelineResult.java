// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.outputs;

import com.pulumi.awsnative.sagemaker.outputs.ParallelismConfigurationProperties;
import com.pulumi.awsnative.sagemaker.outputs.PipelineTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPipelineResult {
    private @Nullable ParallelismConfigurationProperties parallelismConfiguration;
    private @Nullable Object pipelineDefinition;
    /**
     * @return The description of the Pipeline.
     * 
     */
    private @Nullable String pipelineDescription;
    /**
     * @return The display name of the Pipeline.
     * 
     */
    private @Nullable String pipelineDisplayName;
    /**
     * @return Role Arn
     * 
     */
    private @Nullable String roleArn;
    private @Nullable List<PipelineTag> tags;

    private GetPipelineResult() {}
    public Optional<ParallelismConfigurationProperties> parallelismConfiguration() {
        return Optional.ofNullable(this.parallelismConfiguration);
    }
    public Optional<Object> pipelineDefinition() {
        return Optional.ofNullable(this.pipelineDefinition);
    }
    /**
     * @return The description of the Pipeline.
     * 
     */
    public Optional<String> pipelineDescription() {
        return Optional.ofNullable(this.pipelineDescription);
    }
    /**
     * @return The display name of the Pipeline.
     * 
     */
    public Optional<String> pipelineDisplayName() {
        return Optional.ofNullable(this.pipelineDisplayName);
    }
    /**
     * @return Role Arn
     * 
     */
    public Optional<String> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }
    public List<PipelineTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPipelineResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ParallelismConfigurationProperties parallelismConfiguration;
        private @Nullable Object pipelineDefinition;
        private @Nullable String pipelineDescription;
        private @Nullable String pipelineDisplayName;
        private @Nullable String roleArn;
        private @Nullable List<PipelineTag> tags;
        public Builder() {}
        public Builder(GetPipelineResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.parallelismConfiguration = defaults.parallelismConfiguration;
    	      this.pipelineDefinition = defaults.pipelineDefinition;
    	      this.pipelineDescription = defaults.pipelineDescription;
    	      this.pipelineDisplayName = defaults.pipelineDisplayName;
    	      this.roleArn = defaults.roleArn;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder parallelismConfiguration(@Nullable ParallelismConfigurationProperties parallelismConfiguration) {
            this.parallelismConfiguration = parallelismConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder pipelineDefinition(@Nullable Object pipelineDefinition) {
            this.pipelineDefinition = pipelineDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder pipelineDescription(@Nullable String pipelineDescription) {
            this.pipelineDescription = pipelineDescription;
            return this;
        }
        @CustomType.Setter
        public Builder pipelineDisplayName(@Nullable String pipelineDisplayName) {
            this.pipelineDisplayName = pipelineDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(@Nullable String roleArn) {
            this.roleArn = roleArn;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<PipelineTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(PipelineTag... tags) {
            return tags(List.of(tags));
        }
        public GetPipelineResult build() {
            final var o = new GetPipelineResult();
            o.parallelismConfiguration = parallelismConfiguration;
            o.pipelineDefinition = pipelineDefinition;
            o.pipelineDescription = pipelineDescription;
            o.pipelineDisplayName = pipelineDisplayName;
            o.roleArn = roleArn;
            o.tags = tags;
            return o;
        }
    }
}
