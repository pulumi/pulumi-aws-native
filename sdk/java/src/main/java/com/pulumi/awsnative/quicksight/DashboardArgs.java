// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight;

import com.pulumi.awsnative.quicksight.inputs.DashboardParametersArgs;
import com.pulumi.awsnative.quicksight.inputs.DashboardPublishOptionsArgs;
import com.pulumi.awsnative.quicksight.inputs.DashboardResourcePermissionArgs;
import com.pulumi.awsnative.quicksight.inputs.DashboardSourceEntityArgs;
import com.pulumi.awsnative.quicksight.inputs.DashboardTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardArgs Empty = new DashboardArgs();

    @Import(name="awsAccountId", required=true)
    private Output<String> awsAccountId;

    public Output<String> awsAccountId() {
        return this.awsAccountId;
    }

    @Import(name="dashboardId", required=true)
    private Output<String> dashboardId;

    public Output<String> dashboardId() {
        return this.dashboardId;
    }

    @Import(name="dashboardPublishOptions")
    private @Nullable Output<DashboardPublishOptionsArgs> dashboardPublishOptions;

    public Optional<Output<DashboardPublishOptionsArgs>> dashboardPublishOptions() {
        return Optional.ofNullable(this.dashboardPublishOptions);
    }

    /**
     * &lt;p&gt;The display name of the dashboard.&lt;/p&gt;
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return &lt;p&gt;The display name of the dashboard.&lt;/p&gt;
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="parameters")
    private @Nullable Output<DashboardParametersArgs> parameters;

    public Optional<Output<DashboardParametersArgs>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * &lt;p&gt;A structure that contains the permissions of the dashboard. You can use this structure
     *             for granting permissions by providing a list of IAM action information for each
     *             principal ARN. &lt;/p&gt;
     * 
     *         &lt;p&gt;To specify no permissions, omit the permissions list.&lt;/p&gt;
     * 
     */
    @Import(name="permissions")
    private @Nullable Output<List<DashboardResourcePermissionArgs>> permissions;

    /**
     * @return &lt;p&gt;A structure that contains the permissions of the dashboard. You can use this structure
     *             for granting permissions by providing a list of IAM action information for each
     *             principal ARN. &lt;/p&gt;
     * 
     *         &lt;p&gt;To specify no permissions, omit the permissions list.&lt;/p&gt;
     * 
     */
    public Optional<Output<List<DashboardResourcePermissionArgs>>> permissions() {
        return Optional.ofNullable(this.permissions);
    }

    @Import(name="sourceEntity", required=true)
    private Output<DashboardSourceEntityArgs> sourceEntity;

    public Output<DashboardSourceEntityArgs> sourceEntity() {
        return this.sourceEntity;
    }

    /**
     * &lt;p&gt;Contains a map of the key-value pairs for the resource tag or tags assigned to the
     *             dashboard.&lt;/p&gt;
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<DashboardTagArgs>> tags;

    /**
     * @return &lt;p&gt;Contains a map of the key-value pairs for the resource tag or tags assigned to the
     *             dashboard.&lt;/p&gt;
     * 
     */
    public Optional<Output<List<DashboardTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * &lt;p&gt;The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If
     *             you add a value for this field, it overrides the value that is used in the source
     *             entity. The theme ARN must exist in the same AWS account where you create the
     *             dashboard.&lt;/p&gt;
     * 
     */
    @Import(name="themeArn")
    private @Nullable Output<String> themeArn;

    /**
     * @return &lt;p&gt;The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If
     *             you add a value for this field, it overrides the value that is used in the source
     *             entity. The theme ARN must exist in the same AWS account where you create the
     *             dashboard.&lt;/p&gt;
     * 
     */
    public Optional<Output<String>> themeArn() {
        return Optional.ofNullable(this.themeArn);
    }

    /**
     * &lt;p&gt;A description for the first version of the dashboard being created.&lt;/p&gt;
     * 
     */
    @Import(name="versionDescription")
    private @Nullable Output<String> versionDescription;

    /**
     * @return &lt;p&gt;A description for the first version of the dashboard being created.&lt;/p&gt;
     * 
     */
    public Optional<Output<String>> versionDescription() {
        return Optional.ofNullable(this.versionDescription);
    }

    private DashboardArgs() {}

    private DashboardArgs(DashboardArgs $) {
        this.awsAccountId = $.awsAccountId;
        this.dashboardId = $.dashboardId;
        this.dashboardPublishOptions = $.dashboardPublishOptions;
        this.name = $.name;
        this.parameters = $.parameters;
        this.permissions = $.permissions;
        this.sourceEntity = $.sourceEntity;
        this.tags = $.tags;
        this.themeArn = $.themeArn;
        this.versionDescription = $.versionDescription;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardArgs $;

        public Builder() {
            $ = new DashboardArgs();
        }

        public Builder(DashboardArgs defaults) {
            $ = new DashboardArgs(Objects.requireNonNull(defaults));
        }

        public Builder awsAccountId(Output<String> awsAccountId) {
            $.awsAccountId = awsAccountId;
            return this;
        }

        public Builder awsAccountId(String awsAccountId) {
            return awsAccountId(Output.of(awsAccountId));
        }

        public Builder dashboardId(Output<String> dashboardId) {
            $.dashboardId = dashboardId;
            return this;
        }

        public Builder dashboardId(String dashboardId) {
            return dashboardId(Output.of(dashboardId));
        }

        public Builder dashboardPublishOptions(@Nullable Output<DashboardPublishOptionsArgs> dashboardPublishOptions) {
            $.dashboardPublishOptions = dashboardPublishOptions;
            return this;
        }

        public Builder dashboardPublishOptions(DashboardPublishOptionsArgs dashboardPublishOptions) {
            return dashboardPublishOptions(Output.of(dashboardPublishOptions));
        }

        /**
         * @param name &lt;p&gt;The display name of the dashboard.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name &lt;p&gt;The display name of the dashboard.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder parameters(@Nullable Output<DashboardParametersArgs> parameters) {
            $.parameters = parameters;
            return this;
        }

        public Builder parameters(DashboardParametersArgs parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param permissions &lt;p&gt;A structure that contains the permissions of the dashboard. You can use this structure
         *             for granting permissions by providing a list of IAM action information for each
         *             principal ARN. &lt;/p&gt;
         * 
         *         &lt;p&gt;To specify no permissions, omit the permissions list.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder permissions(@Nullable Output<List<DashboardResourcePermissionArgs>> permissions) {
            $.permissions = permissions;
            return this;
        }

        /**
         * @param permissions &lt;p&gt;A structure that contains the permissions of the dashboard. You can use this structure
         *             for granting permissions by providing a list of IAM action information for each
         *             principal ARN. &lt;/p&gt;
         * 
         *         &lt;p&gt;To specify no permissions, omit the permissions list.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder permissions(List<DashboardResourcePermissionArgs> permissions) {
            return permissions(Output.of(permissions));
        }

        /**
         * @param permissions &lt;p&gt;A structure that contains the permissions of the dashboard. You can use this structure
         *             for granting permissions by providing a list of IAM action information for each
         *             principal ARN. &lt;/p&gt;
         * 
         *         &lt;p&gt;To specify no permissions, omit the permissions list.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder permissions(DashboardResourcePermissionArgs... permissions) {
            return permissions(List.of(permissions));
        }

        public Builder sourceEntity(Output<DashboardSourceEntityArgs> sourceEntity) {
            $.sourceEntity = sourceEntity;
            return this;
        }

        public Builder sourceEntity(DashboardSourceEntityArgs sourceEntity) {
            return sourceEntity(Output.of(sourceEntity));
        }

        /**
         * @param tags &lt;p&gt;Contains a map of the key-value pairs for the resource tag or tags assigned to the
         *             dashboard.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<DashboardTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags &lt;p&gt;Contains a map of the key-value pairs for the resource tag or tags assigned to the
         *             dashboard.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder tags(List<DashboardTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags &lt;p&gt;Contains a map of the key-value pairs for the resource tag or tags assigned to the
         *             dashboard.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder tags(DashboardTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param themeArn &lt;p&gt;The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If
         *             you add a value for this field, it overrides the value that is used in the source
         *             entity. The theme ARN must exist in the same AWS account where you create the
         *             dashboard.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder themeArn(@Nullable Output<String> themeArn) {
            $.themeArn = themeArn;
            return this;
        }

        /**
         * @param themeArn &lt;p&gt;The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If
         *             you add a value for this field, it overrides the value that is used in the source
         *             entity. The theme ARN must exist in the same AWS account where you create the
         *             dashboard.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder themeArn(String themeArn) {
            return themeArn(Output.of(themeArn));
        }

        /**
         * @param versionDescription &lt;p&gt;A description for the first version of the dashboard being created.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder versionDescription(@Nullable Output<String> versionDescription) {
            $.versionDescription = versionDescription;
            return this;
        }

        /**
         * @param versionDescription &lt;p&gt;A description for the first version of the dashboard being created.&lt;/p&gt;
         * 
         * @return builder
         * 
         */
        public Builder versionDescription(String versionDescription) {
            return versionDescription(Output.of(versionDescription));
        }

        public DashboardArgs build() {
            $.awsAccountId = Objects.requireNonNull($.awsAccountId, "expected parameter 'awsAccountId' to be non-null");
            $.dashboardId = Objects.requireNonNull($.dashboardId, "expected parameter 'dashboardId' to be non-null");
            $.sourceEntity = Objects.requireNonNull($.sourceEntity, "expected parameter 'sourceEntity' to be non-null");
            return $;
        }
    }

}
