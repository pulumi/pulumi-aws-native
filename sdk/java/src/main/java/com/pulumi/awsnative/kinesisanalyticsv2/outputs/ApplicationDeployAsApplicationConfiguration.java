// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisanalyticsv2.outputs;

import com.pulumi.awsnative.kinesisanalyticsv2.outputs.ApplicationS3ContentBaseLocation;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;

@CustomType
public final class ApplicationDeployAsApplicationConfiguration {
    /**
     * @return The description of an Amazon S3 object that contains the Amazon Data Analytics application, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data.
     * 
     */
    private ApplicationS3ContentBaseLocation s3ContentLocation;

    private ApplicationDeployAsApplicationConfiguration() {}
    /**
     * @return The description of an Amazon S3 object that contains the Amazon Data Analytics application, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data.
     * 
     */
    public ApplicationS3ContentBaseLocation s3ContentLocation() {
        return this.s3ContentLocation;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationDeployAsApplicationConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private ApplicationS3ContentBaseLocation s3ContentLocation;
        public Builder() {}
        public Builder(ApplicationDeployAsApplicationConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.s3ContentLocation = defaults.s3ContentLocation;
        }

        @CustomType.Setter
        public Builder s3ContentLocation(ApplicationS3ContentBaseLocation s3ContentLocation) {
            this.s3ContentLocation = Objects.requireNonNull(s3ContentLocation);
            return this;
        }
        public ApplicationDeployAsApplicationConfiguration build() {
            final var o = new ApplicationDeployAsApplicationConfiguration();
            o.s3ContentLocation = s3ContentLocation;
            return o;
        }
    }
}
