// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.apigateway;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.apigateway.StageArgs;
import com.pulumi.awsnative.apigateway.outputs.StageAccessLogSetting;
import com.pulumi.awsnative.apigateway.outputs.StageCanarySetting;
import com.pulumi.awsnative.apigateway.outputs.StageMethodSetting;
import com.pulumi.awsnative.apigateway.outputs.StageTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource Type definition for AWS::ApiGateway::Stage
 * 
 */
@ResourceType(type="aws-native:apigateway:Stage")
public class Stage extends com.pulumi.resources.CustomResource {
    /**
     * Specifies settings for logging access in this stage.
     * 
     */
    @Export(name="accessLogSetting", type=StageAccessLogSetting.class, parameters={})
    private Output</* @Nullable */ StageAccessLogSetting> accessLogSetting;

    /**
     * @return Specifies settings for logging access in this stage.
     * 
     */
    public Output<Optional<StageAccessLogSetting>> accessLogSetting() {
        return Codegen.optional(this.accessLogSetting);
    }
    /**
     * Indicates whether cache clustering is enabled for the stage.
     * 
     */
    @Export(name="cacheClusterEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> cacheClusterEnabled;

    /**
     * @return Indicates whether cache clustering is enabled for the stage.
     * 
     */
    public Output<Optional<Boolean>> cacheClusterEnabled() {
        return Codegen.optional(this.cacheClusterEnabled);
    }
    /**
     * The stage&#39;s cache cluster size.
     * 
     */
    @Export(name="cacheClusterSize", type=String.class, parameters={})
    private Output</* @Nullable */ String> cacheClusterSize;

    /**
     * @return The stage&#39;s cache cluster size.
     * 
     */
    public Output<Optional<String>> cacheClusterSize() {
        return Codegen.optional(this.cacheClusterSize);
    }
    /**
     * Specifies settings for the canary deployment in this stage.
     * 
     */
    @Export(name="canarySetting", type=StageCanarySetting.class, parameters={})
    private Output</* @Nullable */ StageCanarySetting> canarySetting;

    /**
     * @return Specifies settings for the canary deployment in this stage.
     * 
     */
    public Output<Optional<StageCanarySetting>> canarySetting() {
        return Codegen.optional(this.canarySetting);
    }
    /**
     * The ID of the client certificate that API Gateway uses to call your integration endpoints in the stage.
     * 
     */
    @Export(name="clientCertificateId", type=String.class, parameters={})
    private Output</* @Nullable */ String> clientCertificateId;

    /**
     * @return The ID of the client certificate that API Gateway uses to call your integration endpoints in the stage.
     * 
     */
    public Output<Optional<String>> clientCertificateId() {
        return Codegen.optional(this.clientCertificateId);
    }
    /**
     * The ID of the deployment that the stage is associated with. This parameter is required to create a stage.
     * 
     */
    @Export(name="deploymentId", type=String.class, parameters={})
    private Output</* @Nullable */ String> deploymentId;

    /**
     * @return The ID of the deployment that the stage is associated with. This parameter is required to create a stage.
     * 
     */
    public Output<Optional<String>> deploymentId() {
        return Codegen.optional(this.deploymentId);
    }
    /**
     * A description of the stage.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return A description of the stage.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The version ID of the API documentation snapshot.
     * 
     */
    @Export(name="documentationVersion", type=String.class, parameters={})
    private Output</* @Nullable */ String> documentationVersion;

    /**
     * @return The version ID of the API documentation snapshot.
     * 
     */
    public Output<Optional<String>> documentationVersion() {
        return Codegen.optional(this.documentationVersion);
    }
    /**
     * Settings for all methods in the stage.
     * 
     */
    @Export(name="methodSettings", type=List.class, parameters={StageMethodSetting.class})
    private Output</* @Nullable */ List<StageMethodSetting>> methodSettings;

    /**
     * @return Settings for all methods in the stage.
     * 
     */
    public Output<Optional<List<StageMethodSetting>>> methodSettings() {
        return Codegen.optional(this.methodSettings);
    }
    /**
     * The ID of the RestApi resource that you&#39;re deploying with this stage.
     * 
     */
    @Export(name="restApiId", type=String.class, parameters={})
    private Output<String> restApiId;

    /**
     * @return The ID of the RestApi resource that you&#39;re deploying with this stage.
     * 
     */
    public Output<String> restApiId() {
        return this.restApiId;
    }
    /**
     * The name of the stage, which API Gateway uses as the first path segment in the invoked Uniform Resource Identifier (URI).
     * 
     */
    @Export(name="stageName", type=String.class, parameters={})
    private Output</* @Nullable */ String> stageName;

    /**
     * @return The name of the stage, which API Gateway uses as the first path segment in the invoked Uniform Resource Identifier (URI).
     * 
     */
    public Output<Optional<String>> stageName() {
        return Codegen.optional(this.stageName);
    }
    /**
     * An array of arbitrary tags (key-value pairs) to associate with the stage.
     * 
     */
    @Export(name="tags", type=List.class, parameters={StageTag.class})
    private Output</* @Nullable */ List<StageTag>> tags;

    /**
     * @return An array of arbitrary tags (key-value pairs) to associate with the stage.
     * 
     */
    public Output<Optional<List<StageTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Specifies whether active X-Ray tracing is enabled for this stage.
     * 
     */
    @Export(name="tracingEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> tracingEnabled;

    /**
     * @return Specifies whether active X-Ray tracing is enabled for this stage.
     * 
     */
    public Output<Optional<Boolean>> tracingEnabled() {
        return Codegen.optional(this.tracingEnabled);
    }
    /**
     * A map (string-to-string map) that defines the stage variables, where the variable name is the key and the variable value is the value.
     * 
     */
    @Export(name="variables", type=Object.class, parameters={})
    private Output</* @Nullable */ Object> variables;

    /**
     * @return A map (string-to-string map) that defines the stage variables, where the variable name is the key and the variable value is the value.
     * 
     */
    public Output<Optional<Object>> variables() {
        return Codegen.optional(this.variables);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Stage(String name) {
        this(name, StageArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Stage(String name, StageArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Stage(String name, StageArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:apigateway:Stage", name, args == null ? StageArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Stage(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:apigateway:Stage", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Stage get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Stage(name, id, options);
    }
}
