// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.servicecatalogappregistry;

import com.pulumi.awsnative.servicecatalogappregistry.enums.ResourceAssociationResourceType;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class ResourceAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceAssociationArgs Empty = new ResourceAssociationArgs();

    /**
     * The name or the Id of the Application.
     * 
     */
    @Import(name="application", required=true)
    private Output<String> application;

    /**
     * @return The name or the Id of the Application.
     * 
     */
    public Output<String> application() {
        return this.application;
    }

    /**
     * The name or the Id of the Resource.
     * 
     */
    @Import(name="resource", required=true)
    private Output<String> resource;

    /**
     * @return The name or the Id of the Resource.
     * 
     */
    public Output<String> resource() {
        return this.resource;
    }

    /**
     * The type of the CFN Resource for now it&#39;s enum CFN_STACK.
     * 
     */
    @Import(name="resourceType", required=true)
    private Output<ResourceAssociationResourceType> resourceType;

    /**
     * @return The type of the CFN Resource for now it&#39;s enum CFN_STACK.
     * 
     */
    public Output<ResourceAssociationResourceType> resourceType() {
        return this.resourceType;
    }

    private ResourceAssociationArgs() {}

    private ResourceAssociationArgs(ResourceAssociationArgs $) {
        this.application = $.application;
        this.resource = $.resource;
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceAssociationArgs $;

        public Builder() {
            $ = new ResourceAssociationArgs();
        }

        public Builder(ResourceAssociationArgs defaults) {
            $ = new ResourceAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param application The name or the Id of the Application.
         * 
         * @return builder
         * 
         */
        public Builder application(Output<String> application) {
            $.application = application;
            return this;
        }

        /**
         * @param application The name or the Id of the Application.
         * 
         * @return builder
         * 
         */
        public Builder application(String application) {
            return application(Output.of(application));
        }

        /**
         * @param resource The name or the Id of the Resource.
         * 
         * @return builder
         * 
         */
        public Builder resource(Output<String> resource) {
            $.resource = resource;
            return this;
        }

        /**
         * @param resource The name or the Id of the Resource.
         * 
         * @return builder
         * 
         */
        public Builder resource(String resource) {
            return resource(Output.of(resource));
        }

        /**
         * @param resourceType The type of the CFN Resource for now it&#39;s enum CFN_STACK.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(Output<ResourceAssociationResourceType> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The type of the CFN Resource for now it&#39;s enum CFN_STACK.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(ResourceAssociationResourceType resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public ResourceAssociationArgs build() {
            $.application = Objects.requireNonNull($.application, "expected parameter 'application' to be non-null");
            $.resource = Objects.requireNonNull($.resource, "expected parameter 'resource' to be non-null");
            $.resourceType = Objects.requireNonNull($.resourceType, "expected parameter 'resourceType' to be non-null");
            return $;
        }
    }

}
