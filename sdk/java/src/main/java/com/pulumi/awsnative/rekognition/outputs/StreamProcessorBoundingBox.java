// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.rekognition.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.util.Objects;

@CustomType
public final class StreamProcessorBoundingBox {
    private Double height;
    private Double left;
    private Double top;
    private Double width;

    private StreamProcessorBoundingBox() {}
    public Double height() {
        return this.height;
    }
    public Double left() {
        return this.left;
    }
    public Double top() {
        return this.top;
    }
    public Double width() {
        return this.width;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamProcessorBoundingBox defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double height;
        private Double left;
        private Double top;
        private Double width;
        public Builder() {}
        public Builder(StreamProcessorBoundingBox defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.height = defaults.height;
    	      this.left = defaults.left;
    	      this.top = defaults.top;
    	      this.width = defaults.width;
        }

        @CustomType.Setter
        public Builder height(Double height) {
            this.height = Objects.requireNonNull(height);
            return this;
        }
        @CustomType.Setter
        public Builder left(Double left) {
            this.left = Objects.requireNonNull(left);
            return this;
        }
        @CustomType.Setter
        public Builder top(Double top) {
            this.top = Objects.requireNonNull(top);
            return this;
        }
        @CustomType.Setter
        public Builder width(Double width) {
            this.width = Objects.requireNonNull(width);
            return this;
        }
        public StreamProcessorBoundingBox build() {
            final var o = new StreamProcessorBoundingBox();
            o.height = height;
            o.left = left;
            o.top = top;
            o.width = width;
            return o;
        }
    }
}
