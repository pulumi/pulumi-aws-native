// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iam;

import com.pulumi.awsnative.iam.inputs.ServerCertificateTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServerCertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServerCertificateArgs Empty = new ServerCertificateArgs();

    @Import(name="certificateBody")
    private @Nullable Output<String> certificateBody;

    public Optional<Output<String>> certificateBody() {
        return Optional.ofNullable(this.certificateBody);
    }

    @Import(name="certificateChain")
    private @Nullable Output<String> certificateChain;

    public Optional<Output<String>> certificateChain() {
        return Optional.ofNullable(this.certificateChain);
    }

    @Import(name="path")
    private @Nullable Output<String> path;

    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    @Import(name="privateKey")
    private @Nullable Output<String> privateKey;

    public Optional<Output<String>> privateKey() {
        return Optional.ofNullable(this.privateKey);
    }

    @Import(name="serverCertificateName")
    private @Nullable Output<String> serverCertificateName;

    public Optional<Output<String>> serverCertificateName() {
        return Optional.ofNullable(this.serverCertificateName);
    }

    @Import(name="tags")
    private @Nullable Output<List<ServerCertificateTagArgs>> tags;

    public Optional<Output<List<ServerCertificateTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ServerCertificateArgs() {}

    private ServerCertificateArgs(ServerCertificateArgs $) {
        this.certificateBody = $.certificateBody;
        this.certificateChain = $.certificateChain;
        this.path = $.path;
        this.privateKey = $.privateKey;
        this.serverCertificateName = $.serverCertificateName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerCertificateArgs $;

        public Builder() {
            $ = new ServerCertificateArgs();
        }

        public Builder(ServerCertificateArgs defaults) {
            $ = new ServerCertificateArgs(Objects.requireNonNull(defaults));
        }

        public Builder certificateBody(@Nullable Output<String> certificateBody) {
            $.certificateBody = certificateBody;
            return this;
        }

        public Builder certificateBody(String certificateBody) {
            return certificateBody(Output.of(certificateBody));
        }

        public Builder certificateChain(@Nullable Output<String> certificateChain) {
            $.certificateChain = certificateChain;
            return this;
        }

        public Builder certificateChain(String certificateChain) {
            return certificateChain(Output.of(certificateChain));
        }

        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        public Builder path(String path) {
            return path(Output.of(path));
        }

        public Builder privateKey(@Nullable Output<String> privateKey) {
            $.privateKey = privateKey;
            return this;
        }

        public Builder privateKey(String privateKey) {
            return privateKey(Output.of(privateKey));
        }

        public Builder serverCertificateName(@Nullable Output<String> serverCertificateName) {
            $.serverCertificateName = serverCertificateName;
            return this;
        }

        public Builder serverCertificateName(String serverCertificateName) {
            return serverCertificateName(Output.of(serverCertificateName));
        }

        public Builder tags(@Nullable Output<List<ServerCertificateTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<ServerCertificateTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(ServerCertificateTagArgs... tags) {
            return tags(List.of(tags));
        }

        public ServerCertificateArgs build() {
            return $;
        }
    }

}
