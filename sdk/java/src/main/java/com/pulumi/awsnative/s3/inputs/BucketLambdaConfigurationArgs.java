// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.inputs.BucketNotificationFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes the AWS Lambda functions to invoke and the events for which to invoke them.
 * 
 */
public final class BucketLambdaConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketLambdaConfigurationArgs Empty = new BucketLambdaConfigurationArgs();

    /**
     * The Amazon S3 bucket event for which to invoke the AWS Lambda function.
     * 
     */
    @Import(name="event", required=true)
    private Output<String> event;

    /**
     * @return The Amazon S3 bucket event for which to invoke the AWS Lambda function.
     * 
     */
    public Output<String> event() {
        return this.event;
    }

    /**
     * The filtering rules that determine which objects invoke the AWS Lambda function.
     * 
     */
    @Import(name="filter")
    private @Nullable Output<BucketNotificationFilterArgs> filter;

    /**
     * @return The filtering rules that determine which objects invoke the AWS Lambda function.
     * 
     */
    public Optional<Output<BucketNotificationFilterArgs>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon S3 invokes when the specified event type occurs.
     * 
     */
    @Import(name="function", required=true)
    private Output<String> function;

    /**
     * @return The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon S3 invokes when the specified event type occurs.
     * 
     */
    public Output<String> function() {
        return this.function;
    }

    private BucketLambdaConfigurationArgs() {}

    private BucketLambdaConfigurationArgs(BucketLambdaConfigurationArgs $) {
        this.event = $.event;
        this.filter = $.filter;
        this.function = $.function;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketLambdaConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketLambdaConfigurationArgs $;

        public Builder() {
            $ = new BucketLambdaConfigurationArgs();
        }

        public Builder(BucketLambdaConfigurationArgs defaults) {
            $ = new BucketLambdaConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param event The Amazon S3 bucket event for which to invoke the AWS Lambda function.
         * 
         * @return builder
         * 
         */
        public Builder event(Output<String> event) {
            $.event = event;
            return this;
        }

        /**
         * @param event The Amazon S3 bucket event for which to invoke the AWS Lambda function.
         * 
         * @return builder
         * 
         */
        public Builder event(String event) {
            return event(Output.of(event));
        }

        /**
         * @param filter The filtering rules that determine which objects invoke the AWS Lambda function.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable Output<BucketNotificationFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter The filtering rules that determine which objects invoke the AWS Lambda function.
         * 
         * @return builder
         * 
         */
        public Builder filter(BucketNotificationFilterArgs filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param function The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon S3 invokes when the specified event type occurs.
         * 
         * @return builder
         * 
         */
        public Builder function(Output<String> function) {
            $.function = function;
            return this;
        }

        /**
         * @param function The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon S3 invokes when the specified event type occurs.
         * 
         * @return builder
         * 
         */
        public Builder function(String function) {
            return function(Output.of(function));
        }

        public BucketLambdaConfigurationArgs build() {
            $.event = Objects.requireNonNull($.event, "expected parameter 'event' to be non-null");
            $.function = Objects.requireNonNull($.function, "expected parameter 'function' to be non-null");
            return $;
        }
    }

}
