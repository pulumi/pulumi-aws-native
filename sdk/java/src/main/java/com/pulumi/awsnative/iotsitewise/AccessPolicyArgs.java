// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotsitewise;

import com.pulumi.awsnative.iotsitewise.inputs.AccessPolicyIdentityArgs;
import com.pulumi.awsnative.iotsitewise.inputs.AccessPolicyResourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class AccessPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessPolicyArgs Empty = new AccessPolicyArgs();

    /**
     * The identity for this access policy. Choose either a user or a group but not both.
     * 
     */
    @Import(name="accessPolicyIdentity", required=true)
    private Output<AccessPolicyIdentityArgs> accessPolicyIdentity;

    /**
     * @return The identity for this access policy. Choose either a user or a group but not both.
     * 
     */
    public Output<AccessPolicyIdentityArgs> accessPolicyIdentity() {
        return this.accessPolicyIdentity;
    }

    /**
     * The permission level for this access policy. Valid values are ADMINISTRATOR or VIEWER.
     * 
     */
    @Import(name="accessPolicyPermission", required=true)
    private Output<String> accessPolicyPermission;

    /**
     * @return The permission level for this access policy. Valid values are ADMINISTRATOR or VIEWER.
     * 
     */
    public Output<String> accessPolicyPermission() {
        return this.accessPolicyPermission;
    }

    /**
     * The AWS IoT SiteWise Monitor resource for this access policy. Choose either portal or project but not both.
     * 
     */
    @Import(name="accessPolicyResource", required=true)
    private Output<AccessPolicyResourceArgs> accessPolicyResource;

    /**
     * @return The AWS IoT SiteWise Monitor resource for this access policy. Choose either portal or project but not both.
     * 
     */
    public Output<AccessPolicyResourceArgs> accessPolicyResource() {
        return this.accessPolicyResource;
    }

    private AccessPolicyArgs() {}

    private AccessPolicyArgs(AccessPolicyArgs $) {
        this.accessPolicyIdentity = $.accessPolicyIdentity;
        this.accessPolicyPermission = $.accessPolicyPermission;
        this.accessPolicyResource = $.accessPolicyResource;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessPolicyArgs $;

        public Builder() {
            $ = new AccessPolicyArgs();
        }

        public Builder(AccessPolicyArgs defaults) {
            $ = new AccessPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessPolicyIdentity The identity for this access policy. Choose either a user or a group but not both.
         * 
         * @return builder
         * 
         */
        public Builder accessPolicyIdentity(Output<AccessPolicyIdentityArgs> accessPolicyIdentity) {
            $.accessPolicyIdentity = accessPolicyIdentity;
            return this;
        }

        /**
         * @param accessPolicyIdentity The identity for this access policy. Choose either a user or a group but not both.
         * 
         * @return builder
         * 
         */
        public Builder accessPolicyIdentity(AccessPolicyIdentityArgs accessPolicyIdentity) {
            return accessPolicyIdentity(Output.of(accessPolicyIdentity));
        }

        /**
         * @param accessPolicyPermission The permission level for this access policy. Valid values are ADMINISTRATOR or VIEWER.
         * 
         * @return builder
         * 
         */
        public Builder accessPolicyPermission(Output<String> accessPolicyPermission) {
            $.accessPolicyPermission = accessPolicyPermission;
            return this;
        }

        /**
         * @param accessPolicyPermission The permission level for this access policy. Valid values are ADMINISTRATOR or VIEWER.
         * 
         * @return builder
         * 
         */
        public Builder accessPolicyPermission(String accessPolicyPermission) {
            return accessPolicyPermission(Output.of(accessPolicyPermission));
        }

        /**
         * @param accessPolicyResource The AWS IoT SiteWise Monitor resource for this access policy. Choose either portal or project but not both.
         * 
         * @return builder
         * 
         */
        public Builder accessPolicyResource(Output<AccessPolicyResourceArgs> accessPolicyResource) {
            $.accessPolicyResource = accessPolicyResource;
            return this;
        }

        /**
         * @param accessPolicyResource The AWS IoT SiteWise Monitor resource for this access policy. Choose either portal or project but not both.
         * 
         * @return builder
         * 
         */
        public Builder accessPolicyResource(AccessPolicyResourceArgs accessPolicyResource) {
            return accessPolicyResource(Output.of(accessPolicyResource));
        }

        public AccessPolicyArgs build() {
            $.accessPolicyIdentity = Objects.requireNonNull($.accessPolicyIdentity, "expected parameter 'accessPolicyIdentity' to be non-null");
            $.accessPolicyPermission = Objects.requireNonNull($.accessPolicyPermission, "expected parameter 'accessPolicyPermission' to be non-null");
            $.accessPolicyResource = Objects.requireNonNull($.accessPolicyResource, "expected parameter 'accessPolicyResource' to be non-null");
            return $;
        }
    }

}
