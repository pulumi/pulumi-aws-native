// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.amplify.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BranchBasicAuthConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final BranchBasicAuthConfigArgs Empty = new BranchBasicAuthConfigArgs();

    @Import(name="enableBasicAuth")
    private @Nullable Output<Boolean> enableBasicAuth;

    public Optional<Output<Boolean>> enableBasicAuth() {
        return Optional.ofNullable(this.enableBasicAuth);
    }

    @Import(name="password", required=true)
    private Output<String> password;

    public Output<String> password() {
        return this.password;
    }

    @Import(name="username", required=true)
    private Output<String> username;

    public Output<String> username() {
        return this.username;
    }

    private BranchBasicAuthConfigArgs() {}

    private BranchBasicAuthConfigArgs(BranchBasicAuthConfigArgs $) {
        this.enableBasicAuth = $.enableBasicAuth;
        this.password = $.password;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BranchBasicAuthConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BranchBasicAuthConfigArgs $;

        public Builder() {
            $ = new BranchBasicAuthConfigArgs();
        }

        public Builder(BranchBasicAuthConfigArgs defaults) {
            $ = new BranchBasicAuthConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder enableBasicAuth(@Nullable Output<Boolean> enableBasicAuth) {
            $.enableBasicAuth = enableBasicAuth;
            return this;
        }

        public Builder enableBasicAuth(Boolean enableBasicAuth) {
            return enableBasicAuth(Output.of(enableBasicAuth));
        }

        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        public Builder username(String username) {
            return username(Output.of(username));
        }

        public BranchBasicAuthConfigArgs build() {
            $.password = Objects.requireNonNull($.password, "expected parameter 'password' to be non-null");
            $.username = Objects.requireNonNull($.username, "expected parameter 'username' to be non-null");
            return $;
        }
    }

}
