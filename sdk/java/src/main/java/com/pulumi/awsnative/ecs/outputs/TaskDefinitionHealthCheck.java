// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ecs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TaskDefinitionHealthCheck {
    /**
     * @return A string array representing the command that the container runs to determine if it is healthy.
     * 
     */
    private @Nullable List<String> command;
    /**
     * @return The time period in seconds between each health check execution. You may specify between 5 and 300 seconds. The default value is 30 seconds.
     * 
     */
    private @Nullable Integer interval;
    /**
     * @return The number of times to retry a failed health check before the container is considered unhealthy. You may specify between 1 and 10 retries. The default value is three retries.
     * 
     */
    private @Nullable Integer retries;
    /**
     * @return The optional grace period within which to provide containers time to bootstrap before failed health checks count towards the maximum number of retries. You may specify between 0 and 300 seconds. The startPeriod is disabled by default.
     * 
     */
    private @Nullable Integer startPeriod;
    /**
     * @return The time period in seconds to wait for a health check to succeed before it is considered a failure. You may specify between 2 and 60 seconds. The default value is 5 seconds.
     * 
     */
    private @Nullable Integer timeout;

    private TaskDefinitionHealthCheck() {}
    /**
     * @return A string array representing the command that the container runs to determine if it is healthy.
     * 
     */
    public List<String> command() {
        return this.command == null ? List.of() : this.command;
    }
    /**
     * @return The time period in seconds between each health check execution. You may specify between 5 and 300 seconds. The default value is 30 seconds.
     * 
     */
    public Optional<Integer> interval() {
        return Optional.ofNullable(this.interval);
    }
    /**
     * @return The number of times to retry a failed health check before the container is considered unhealthy. You may specify between 1 and 10 retries. The default value is three retries.
     * 
     */
    public Optional<Integer> retries() {
        return Optional.ofNullable(this.retries);
    }
    /**
     * @return The optional grace period within which to provide containers time to bootstrap before failed health checks count towards the maximum number of retries. You may specify between 0 and 300 seconds. The startPeriod is disabled by default.
     * 
     */
    public Optional<Integer> startPeriod() {
        return Optional.ofNullable(this.startPeriod);
    }
    /**
     * @return The time period in seconds to wait for a health check to succeed before it is considered a failure. You may specify between 2 and 60 seconds. The default value is 5 seconds.
     * 
     */
    public Optional<Integer> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskDefinitionHealthCheck defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> command;
        private @Nullable Integer interval;
        private @Nullable Integer retries;
        private @Nullable Integer startPeriod;
        private @Nullable Integer timeout;
        public Builder() {}
        public Builder(TaskDefinitionHealthCheck defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.command = defaults.command;
    	      this.interval = defaults.interval;
    	      this.retries = defaults.retries;
    	      this.startPeriod = defaults.startPeriod;
    	      this.timeout = defaults.timeout;
        }

        @CustomType.Setter
        public Builder command(@Nullable List<String> command) {
            this.command = command;
            return this;
        }
        public Builder command(String... command) {
            return command(List.of(command));
        }
        @CustomType.Setter
        public Builder interval(@Nullable Integer interval) {
            this.interval = interval;
            return this;
        }
        @CustomType.Setter
        public Builder retries(@Nullable Integer retries) {
            this.retries = retries;
            return this;
        }
        @CustomType.Setter
        public Builder startPeriod(@Nullable Integer startPeriod) {
            this.startPeriod = startPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder timeout(@Nullable Integer timeout) {
            this.timeout = timeout;
            return this;
        }
        public TaskDefinitionHealthCheck build() {
            final var o = new TaskDefinitionHealthCheck();
            o.command = command;
            o.interval = interval;
            o.retries = retries;
            o.startPeriod = startPeriod;
            o.timeout = timeout;
            return o;
        }
    }
}
