// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.greengrassv2.inputs;

import com.pulumi.awsnative.greengrassv2.inputs.ComponentVersionLambdaDeviceMountArgs;
import com.pulumi.awsnative.greengrassv2.inputs.ComponentVersionLambdaVolumeMountArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ComponentVersionLambdaContainerParamsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ComponentVersionLambdaContainerParamsArgs Empty = new ComponentVersionLambdaContainerParamsArgs();

    @Import(name="devices")
    private @Nullable Output<List<ComponentVersionLambdaDeviceMountArgs>> devices;

    public Optional<Output<List<ComponentVersionLambdaDeviceMountArgs>>> devices() {
        return Optional.ofNullable(this.devices);
    }

    @Import(name="memorySizeInKB")
    private @Nullable Output<Integer> memorySizeInKB;

    public Optional<Output<Integer>> memorySizeInKB() {
        return Optional.ofNullable(this.memorySizeInKB);
    }

    @Import(name="mountROSysfs")
    private @Nullable Output<Boolean> mountROSysfs;

    public Optional<Output<Boolean>> mountROSysfs() {
        return Optional.ofNullable(this.mountROSysfs);
    }

    @Import(name="volumes")
    private @Nullable Output<List<ComponentVersionLambdaVolumeMountArgs>> volumes;

    public Optional<Output<List<ComponentVersionLambdaVolumeMountArgs>>> volumes() {
        return Optional.ofNullable(this.volumes);
    }

    private ComponentVersionLambdaContainerParamsArgs() {}

    private ComponentVersionLambdaContainerParamsArgs(ComponentVersionLambdaContainerParamsArgs $) {
        this.devices = $.devices;
        this.memorySizeInKB = $.memorySizeInKB;
        this.mountROSysfs = $.mountROSysfs;
        this.volumes = $.volumes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ComponentVersionLambdaContainerParamsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComponentVersionLambdaContainerParamsArgs $;

        public Builder() {
            $ = new ComponentVersionLambdaContainerParamsArgs();
        }

        public Builder(ComponentVersionLambdaContainerParamsArgs defaults) {
            $ = new ComponentVersionLambdaContainerParamsArgs(Objects.requireNonNull(defaults));
        }

        public Builder devices(@Nullable Output<List<ComponentVersionLambdaDeviceMountArgs>> devices) {
            $.devices = devices;
            return this;
        }

        public Builder devices(List<ComponentVersionLambdaDeviceMountArgs> devices) {
            return devices(Output.of(devices));
        }

        public Builder devices(ComponentVersionLambdaDeviceMountArgs... devices) {
            return devices(List.of(devices));
        }

        public Builder memorySizeInKB(@Nullable Output<Integer> memorySizeInKB) {
            $.memorySizeInKB = memorySizeInKB;
            return this;
        }

        public Builder memorySizeInKB(Integer memorySizeInKB) {
            return memorySizeInKB(Output.of(memorySizeInKB));
        }

        public Builder mountROSysfs(@Nullable Output<Boolean> mountROSysfs) {
            $.mountROSysfs = mountROSysfs;
            return this;
        }

        public Builder mountROSysfs(Boolean mountROSysfs) {
            return mountROSysfs(Output.of(mountROSysfs));
        }

        public Builder volumes(@Nullable Output<List<ComponentVersionLambdaVolumeMountArgs>> volumes) {
            $.volumes = volumes;
            return this;
        }

        public Builder volumes(List<ComponentVersionLambdaVolumeMountArgs> volumes) {
            return volumes(Output.of(volumes));
        }

        public Builder volumes(ComponentVersionLambdaVolumeMountArgs... volumes) {
            return volumes(List.of(volumes));
        }

        public ComponentVersionLambdaContainerParamsArgs build() {
            return $;
        }
    }

}
