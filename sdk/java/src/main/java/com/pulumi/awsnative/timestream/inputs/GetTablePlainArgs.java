// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.timestream.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetTablePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTablePlainArgs Empty = new GetTablePlainArgs();

    /**
     * The name for the database which the table to be created belongs to.
     * 
     */
    @Import(name="databaseName", required=true)
    private String databaseName;

    /**
     * @return The name for the database which the table to be created belongs to.
     * 
     */
    public String databaseName() {
        return this.databaseName;
    }

    /**
     * The name for the table. If you don&#39;t specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the table name.
     * 
     */
    @Import(name="tableName", required=true)
    private String tableName;

    /**
     * @return The name for the table. If you don&#39;t specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the table name.
     * 
     */
    public String tableName() {
        return this.tableName;
    }

    private GetTablePlainArgs() {}

    private GetTablePlainArgs(GetTablePlainArgs $) {
        this.databaseName = $.databaseName;
        this.tableName = $.tableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTablePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTablePlainArgs $;

        public Builder() {
            $ = new GetTablePlainArgs();
        }

        public Builder(GetTablePlainArgs defaults) {
            $ = new GetTablePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param databaseName The name for the database which the table to be created belongs to.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(String databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        /**
         * @param tableName The name for the table. If you don&#39;t specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the table name.
         * 
         * @return builder
         * 
         */
        public Builder tableName(String tableName) {
            $.tableName = tableName;
            return this;
        }

        public GetTablePlainArgs build() {
            $.databaseName = Objects.requireNonNull($.databaseName, "expected parameter 'databaseName' to be non-null");
            $.tableName = Objects.requireNonNull($.tableName, "expected parameter 'tableName' to be non-null");
            return $;
        }
    }

}
