// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.outputs;

import com.pulumi.awsnative.s3.enums.BucketTieringAccessTier;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class BucketTiering {
    /**
     * @return S3 Intelligent-Tiering access tier. See Storage class for automatically optimizing frequently and infrequently accessed objects for a list of access tiers in the S3 Intelligent-Tiering storage class.
     * 
     */
    private BucketTieringAccessTier accessTier;
    /**
     * @return The number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier. The minimum number of days specified for Archive Access tier must be at least 90 days and Deep Archive Access tier must be at least 180 days. The maximum can be up to 2 years (730 days).
     * 
     */
    private Integer days;

    private BucketTiering() {}
    /**
     * @return S3 Intelligent-Tiering access tier. See Storage class for automatically optimizing frequently and infrequently accessed objects for a list of access tiers in the S3 Intelligent-Tiering storage class.
     * 
     */
    public BucketTieringAccessTier accessTier() {
        return this.accessTier;
    }
    /**
     * @return The number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier. The minimum number of days specified for Archive Access tier must be at least 90 days and Deep Archive Access tier must be at least 180 days. The maximum can be up to 2 years (730 days).
     * 
     */
    public Integer days() {
        return this.days;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketTiering defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private BucketTieringAccessTier accessTier;
        private Integer days;
        public Builder() {}
        public Builder(BucketTiering defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessTier = defaults.accessTier;
    	      this.days = defaults.days;
        }

        @CustomType.Setter
        public Builder accessTier(BucketTieringAccessTier accessTier) {
            this.accessTier = Objects.requireNonNull(accessTier);
            return this;
        }
        @CustomType.Setter
        public Builder days(Integer days) {
            this.days = Objects.requireNonNull(days);
            return this;
        }
        public BucketTiering build() {
            final var o = new BucketTiering();
            o.accessTier = accessTier;
            o.days = days;
            return o;
        }
    }
}
