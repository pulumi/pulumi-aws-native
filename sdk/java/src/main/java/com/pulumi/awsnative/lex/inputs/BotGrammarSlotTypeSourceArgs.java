// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes the Amazon S3 bucket name and location for the grammar that is the source for the slot type.
 * 
 */
public final class BotGrammarSlotTypeSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final BotGrammarSlotTypeSourceArgs Empty = new BotGrammarSlotTypeSourceArgs();

    /**
     * The Amazon KMS key required to decrypt the contents of the grammar, if any.
     * 
     */
    @Import(name="kmsKeyArn")
    private @Nullable Output<String> kmsKeyArn;

    /**
     * @return The Amazon KMS key required to decrypt the contents of the grammar, if any.
     * 
     */
    public Optional<Output<String>> kmsKeyArn() {
        return Optional.ofNullable(this.kmsKeyArn);
    }

    /**
     * The name of the S3 bucket that contains the grammar source.
     * 
     */
    @Import(name="s3BucketName", required=true)
    private Output<String> s3BucketName;

    /**
     * @return The name of the S3 bucket that contains the grammar source.
     * 
     */
    public Output<String> s3BucketName() {
        return this.s3BucketName;
    }

    /**
     * The path to the grammar in the S3 bucket.
     * 
     */
    @Import(name="s3ObjectKey", required=true)
    private Output<String> s3ObjectKey;

    /**
     * @return The path to the grammar in the S3 bucket.
     * 
     */
    public Output<String> s3ObjectKey() {
        return this.s3ObjectKey;
    }

    private BotGrammarSlotTypeSourceArgs() {}

    private BotGrammarSlotTypeSourceArgs(BotGrammarSlotTypeSourceArgs $) {
        this.kmsKeyArn = $.kmsKeyArn;
        this.s3BucketName = $.s3BucketName;
        this.s3ObjectKey = $.s3ObjectKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BotGrammarSlotTypeSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BotGrammarSlotTypeSourceArgs $;

        public Builder() {
            $ = new BotGrammarSlotTypeSourceArgs();
        }

        public Builder(BotGrammarSlotTypeSourceArgs defaults) {
            $ = new BotGrammarSlotTypeSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kmsKeyArn The Amazon KMS key required to decrypt the contents of the grammar, if any.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyArn(@Nullable Output<String> kmsKeyArn) {
            $.kmsKeyArn = kmsKeyArn;
            return this;
        }

        /**
         * @param kmsKeyArn The Amazon KMS key required to decrypt the contents of the grammar, if any.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyArn(String kmsKeyArn) {
            return kmsKeyArn(Output.of(kmsKeyArn));
        }

        /**
         * @param s3BucketName The name of the S3 bucket that contains the grammar source.
         * 
         * @return builder
         * 
         */
        public Builder s3BucketName(Output<String> s3BucketName) {
            $.s3BucketName = s3BucketName;
            return this;
        }

        /**
         * @param s3BucketName The name of the S3 bucket that contains the grammar source.
         * 
         * @return builder
         * 
         */
        public Builder s3BucketName(String s3BucketName) {
            return s3BucketName(Output.of(s3BucketName));
        }

        /**
         * @param s3ObjectKey The path to the grammar in the S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder s3ObjectKey(Output<String> s3ObjectKey) {
            $.s3ObjectKey = s3ObjectKey;
            return this;
        }

        /**
         * @param s3ObjectKey The path to the grammar in the S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder s3ObjectKey(String s3ObjectKey) {
            return s3ObjectKey(Output.of(s3ObjectKey));
        }

        public BotGrammarSlotTypeSourceArgs build() {
            $.s3BucketName = Objects.requireNonNull($.s3BucketName, "expected parameter 's3BucketName' to be non-null");
            $.s3ObjectKey = Objects.requireNonNull($.s3ObjectKey, "expected parameter 's3ObjectKey' to be non-null");
            return $;
        }
    }

}
