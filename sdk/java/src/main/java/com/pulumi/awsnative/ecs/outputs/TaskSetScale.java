// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ecs.outputs;

import com.pulumi.awsnative.ecs.enums.TaskSetScaleUnit;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TaskSetScale {
    /**
     * @return The unit of measure for the scale value.
     * 
     */
    private @Nullable TaskSetScaleUnit unit;
    /**
     * @return The value, specified as a percent total of a service&#39;s desiredCount, to scale the task set. Accepted values are numbers between 0 and 100.
     * 
     */
    private @Nullable Double value;

    private TaskSetScale() {}
    /**
     * @return The unit of measure for the scale value.
     * 
     */
    public Optional<TaskSetScaleUnit> unit() {
        return Optional.ofNullable(this.unit);
    }
    /**
     * @return The value, specified as a percent total of a service&#39;s desiredCount, to scale the task set. Accepted values are numbers between 0 and 100.
     * 
     */
    public Optional<Double> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskSetScale defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable TaskSetScaleUnit unit;
        private @Nullable Double value;
        public Builder() {}
        public Builder(TaskSetScale defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.unit = defaults.unit;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder unit(@Nullable TaskSetScaleUnit unit) {
            this.unit = unit;
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable Double value) {
            this.value = value;
            return this;
        }
        public TaskSetScale build() {
            final var o = new TaskSetScale();
            o.unit = unit;
            o.value = value;
            return o;
        }
    }
}
