// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lightsail;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.lightsail.InstanceArgs;
import com.pulumi.awsnative.lightsail.outputs.InstanceAddOn;
import com.pulumi.awsnative.lightsail.outputs.InstanceHardware;
import com.pulumi.awsnative.lightsail.outputs.InstanceLocation;
import com.pulumi.awsnative.lightsail.outputs.InstanceNetworking;
import com.pulumi.awsnative.lightsail.outputs.InstanceState;
import com.pulumi.awsnative.lightsail.outputs.InstanceTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource Type definition for AWS::Lightsail::Instance
 * 
 */
@ResourceType(type="aws-native:lightsail:Instance")
public class Instance extends com.pulumi.resources.CustomResource {
    /**
     * An array of objects representing the add-ons to enable for the new instance.
     * 
     */
    @Export(name="addOns", type=List.class, parameters={InstanceAddOn.class})
    private Output</* @Nullable */ List<InstanceAddOn>> addOns;

    /**
     * @return An array of objects representing the add-ons to enable for the new instance.
     * 
     */
    public Output<Optional<List<InstanceAddOn>>> addOns() {
        return Codegen.optional(this.addOns);
    }
    /**
     * The Availability Zone in which to create your instance. Use the following format: us-east-2a (case sensitive). Be sure to add the include Availability Zones parameter to your request.
     * 
     */
    @Export(name="availabilityZone", type=String.class, parameters={})
    private Output</* @Nullable */ String> availabilityZone;

    /**
     * @return The Availability Zone in which to create your instance. Use the following format: us-east-2a (case sensitive). Be sure to add the include Availability Zones parameter to your request.
     * 
     */
    public Output<Optional<String>> availabilityZone() {
        return Codegen.optional(this.availabilityZone);
    }
    /**
     * The ID for a virtual private server image (e.g., app_wordpress_4_4 or app_lamp_7_0 ). Use the get blueprints operation to return a list of available images (or blueprints ).
     * 
     */
    @Export(name="blueprintId", type=String.class, parameters={})
    private Output<String> blueprintId;

    /**
     * @return The ID for a virtual private server image (e.g., app_wordpress_4_4 or app_lamp_7_0 ). Use the get blueprints operation to return a list of available images (or blueprints ).
     * 
     */
    public Output<String> blueprintId() {
        return this.blueprintId;
    }
    /**
     * The bundle of specification information for your virtual private server (or instance ), including the pricing plan (e.g., micro_1_0 ).
     * 
     */
    @Export(name="bundleId", type=String.class, parameters={})
    private Output<String> bundleId;

    /**
     * @return The bundle of specification information for your virtual private server (or instance ), including the pricing plan (e.g., micro_1_0 ).
     * 
     */
    public Output<String> bundleId() {
        return this.bundleId;
    }
    @Export(name="hardware", type=InstanceHardware.class, parameters={})
    private Output</* @Nullable */ InstanceHardware> hardware;

    public Output<Optional<InstanceHardware>> hardware() {
        return Codegen.optional(this.hardware);
    }
    @Export(name="instanceArn", type=String.class, parameters={})
    private Output<String> instanceArn;

    public Output<String> instanceArn() {
        return this.instanceArn;
    }
    /**
     * The names to use for your new Lightsail instance.
     * 
     */
    @Export(name="instanceName", type=String.class, parameters={})
    private Output<String> instanceName;

    /**
     * @return The names to use for your new Lightsail instance.
     * 
     */
    public Output<String> instanceName() {
        return this.instanceName;
    }
    /**
     * Is the IP Address of the Instance is the static IP
     * 
     */
    @Export(name="isStaticIp", type=Boolean.class, parameters={})
    private Output<Boolean> isStaticIp;

    /**
     * @return Is the IP Address of the Instance is the static IP
     * 
     */
    public Output<Boolean> isStaticIp() {
        return this.isStaticIp;
    }
    /**
     * The name of your key pair.
     * 
     */
    @Export(name="keyPairName", type=String.class, parameters={})
    private Output</* @Nullable */ String> keyPairName;

    /**
     * @return The name of your key pair.
     * 
     */
    public Output<Optional<String>> keyPairName() {
        return Codegen.optional(this.keyPairName);
    }
    @Export(name="location", type=InstanceLocation.class, parameters={})
    private Output</* @Nullable */ InstanceLocation> location;

    public Output<Optional<InstanceLocation>> location() {
        return Codegen.optional(this.location);
    }
    @Export(name="networking", type=InstanceNetworking.class, parameters={})
    private Output</* @Nullable */ InstanceNetworking> networking;

    public Output<Optional<InstanceNetworking>> networking() {
        return Codegen.optional(this.networking);
    }
    /**
     * Private IP Address of the Instance
     * 
     */
    @Export(name="privateIpAddress", type=String.class, parameters={})
    private Output<String> privateIpAddress;

    /**
     * @return Private IP Address of the Instance
     * 
     */
    public Output<String> privateIpAddress() {
        return this.privateIpAddress;
    }
    /**
     * Public IP Address of the Instance
     * 
     */
    @Export(name="publicIpAddress", type=String.class, parameters={})
    private Output<String> publicIpAddress;

    /**
     * @return Public IP Address of the Instance
     * 
     */
    public Output<String> publicIpAddress() {
        return this.publicIpAddress;
    }
    /**
     * Resource type of Lightsail instance.
     * 
     */
    @Export(name="resourceType", type=String.class, parameters={})
    private Output<String> resourceType;

    /**
     * @return Resource type of Lightsail instance.
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }
    /**
     * SSH Key Name of the  Lightsail instance.
     * 
     */
    @Export(name="sshKeyName", type=String.class, parameters={})
    private Output<String> sshKeyName;

    /**
     * @return SSH Key Name of the  Lightsail instance.
     * 
     */
    public Output<String> sshKeyName() {
        return this.sshKeyName;
    }
    @Export(name="state", type=InstanceState.class, parameters={})
    private Output</* @Nullable */ InstanceState> state;

    public Output<Optional<InstanceState>> state() {
        return Codegen.optional(this.state);
    }
    /**
     * Support code to help identify any issues
     * 
     */
    @Export(name="supportCode", type=String.class, parameters={})
    private Output<String> supportCode;

    /**
     * @return Support code to help identify any issues
     * 
     */
    public Output<String> supportCode() {
        return this.supportCode;
    }
    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Export(name="tags", type=List.class, parameters={InstanceTag.class})
    private Output</* @Nullable */ List<InstanceTag>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public Output<Optional<List<InstanceTag>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * A launch script you can create that configures a server with additional user data. For example, you might want to run apt-get -y update.
     * 
     */
    @Export(name="userData", type=String.class, parameters={})
    private Output</* @Nullable */ String> userData;

    /**
     * @return A launch script you can create that configures a server with additional user data. For example, you might want to run apt-get -y update.
     * 
     */
    public Output<Optional<String>> userData() {
        return Codegen.optional(this.userData);
    }
    /**
     * Username of the  Lightsail instance.
     * 
     */
    @Export(name="userName", type=String.class, parameters={})
    private Output<String> userName;

    /**
     * @return Username of the  Lightsail instance.
     * 
     */
    public Output<String> userName() {
        return this.userName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Instance(String name) {
        this(name, InstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Instance(String name, InstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Instance(String name, InstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:lightsail:Instance", name, args == null ? InstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Instance(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:lightsail:Instance", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Instance get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, options);
    }
}
