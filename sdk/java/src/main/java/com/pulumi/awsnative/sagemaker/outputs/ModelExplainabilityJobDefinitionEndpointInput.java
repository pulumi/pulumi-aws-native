// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.outputs;

import com.pulumi.awsnative.sagemaker.enums.ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionType;
import com.pulumi.awsnative.sagemaker.enums.ModelExplainabilityJobDefinitionEndpointInputS3InputMode;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ModelExplainabilityJobDefinitionEndpointInput {
    private String endpointName;
    /**
     * @return JSONpath to locate features in JSONlines dataset
     * 
     */
    private @Nullable String featuresAttribute;
    /**
     * @return Index or JSONpath to locate predicted label(s)
     * 
     */
    private @Nullable String inferenceAttribute;
    /**
     * @return Path to the filesystem where the endpoint data is available to the container.
     * 
     */
    private String localPath;
    /**
     * @return Index or JSONpath to locate probabilities
     * 
     */
    private @Nullable String probabilityAttribute;
    /**
     * @return Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
     * 
     */
    private @Nullable ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionType s3DataDistributionType;
    /**
     * @return Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
     * 
     */
    private @Nullable ModelExplainabilityJobDefinitionEndpointInputS3InputMode s3InputMode;

    private ModelExplainabilityJobDefinitionEndpointInput() {}
    public String endpointName() {
        return this.endpointName;
    }
    /**
     * @return JSONpath to locate features in JSONlines dataset
     * 
     */
    public Optional<String> featuresAttribute() {
        return Optional.ofNullable(this.featuresAttribute);
    }
    /**
     * @return Index or JSONpath to locate predicted label(s)
     * 
     */
    public Optional<String> inferenceAttribute() {
        return Optional.ofNullable(this.inferenceAttribute);
    }
    /**
     * @return Path to the filesystem where the endpoint data is available to the container.
     * 
     */
    public String localPath() {
        return this.localPath;
    }
    /**
     * @return Index or JSONpath to locate probabilities
     * 
     */
    public Optional<String> probabilityAttribute() {
        return Optional.ofNullable(this.probabilityAttribute);
    }
    /**
     * @return Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
     * 
     */
    public Optional<ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionType> s3DataDistributionType() {
        return Optional.ofNullable(this.s3DataDistributionType);
    }
    /**
     * @return Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
     * 
     */
    public Optional<ModelExplainabilityJobDefinitionEndpointInputS3InputMode> s3InputMode() {
        return Optional.ofNullable(this.s3InputMode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelExplainabilityJobDefinitionEndpointInput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String endpointName;
        private @Nullable String featuresAttribute;
        private @Nullable String inferenceAttribute;
        private String localPath;
        private @Nullable String probabilityAttribute;
        private @Nullable ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionType s3DataDistributionType;
        private @Nullable ModelExplainabilityJobDefinitionEndpointInputS3InputMode s3InputMode;
        public Builder() {}
        public Builder(ModelExplainabilityJobDefinitionEndpointInput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpointName = defaults.endpointName;
    	      this.featuresAttribute = defaults.featuresAttribute;
    	      this.inferenceAttribute = defaults.inferenceAttribute;
    	      this.localPath = defaults.localPath;
    	      this.probabilityAttribute = defaults.probabilityAttribute;
    	      this.s3DataDistributionType = defaults.s3DataDistributionType;
    	      this.s3InputMode = defaults.s3InputMode;
        }

        @CustomType.Setter
        public Builder endpointName(String endpointName) {
            this.endpointName = Objects.requireNonNull(endpointName);
            return this;
        }
        @CustomType.Setter
        public Builder featuresAttribute(@Nullable String featuresAttribute) {
            this.featuresAttribute = featuresAttribute;
            return this;
        }
        @CustomType.Setter
        public Builder inferenceAttribute(@Nullable String inferenceAttribute) {
            this.inferenceAttribute = inferenceAttribute;
            return this;
        }
        @CustomType.Setter
        public Builder localPath(String localPath) {
            this.localPath = Objects.requireNonNull(localPath);
            return this;
        }
        @CustomType.Setter
        public Builder probabilityAttribute(@Nullable String probabilityAttribute) {
            this.probabilityAttribute = probabilityAttribute;
            return this;
        }
        @CustomType.Setter
        public Builder s3DataDistributionType(@Nullable ModelExplainabilityJobDefinitionEndpointInputS3DataDistributionType s3DataDistributionType) {
            this.s3DataDistributionType = s3DataDistributionType;
            return this;
        }
        @CustomType.Setter
        public Builder s3InputMode(@Nullable ModelExplainabilityJobDefinitionEndpointInputS3InputMode s3InputMode) {
            this.s3InputMode = s3InputMode;
            return this;
        }
        public ModelExplainabilityJobDefinitionEndpointInput build() {
            final var o = new ModelExplainabilityJobDefinitionEndpointInput();
            o.endpointName = endpointName;
            o.featuresAttribute = featuresAttribute;
            o.inferenceAttribute = inferenceAttribute;
            o.localPath = localPath;
            o.probabilityAttribute = probabilityAttribute;
            o.s3DataDistributionType = s3DataDistributionType;
            o.s3InputMode = s3InputMode;
            return o;
        }
    }
}
