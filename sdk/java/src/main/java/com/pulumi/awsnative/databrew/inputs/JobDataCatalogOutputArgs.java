// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.databrew.inputs;

import com.pulumi.awsnative.databrew.inputs.JobDatabaseTableOutputOptionsArgs;
import com.pulumi.awsnative.databrew.inputs.JobS3TableOutputOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobDataCatalogOutputArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobDataCatalogOutputArgs Empty = new JobDataCatalogOutputArgs();

    @Import(name="catalogId")
    private @Nullable Output<String> catalogId;

    public Optional<Output<String>> catalogId() {
        return Optional.ofNullable(this.catalogId);
    }

    @Import(name="databaseName", required=true)
    private Output<String> databaseName;

    public Output<String> databaseName() {
        return this.databaseName;
    }

    @Import(name="databaseOptions")
    private @Nullable Output<JobDatabaseTableOutputOptionsArgs> databaseOptions;

    public Optional<Output<JobDatabaseTableOutputOptionsArgs>> databaseOptions() {
        return Optional.ofNullable(this.databaseOptions);
    }

    @Import(name="overwrite")
    private @Nullable Output<Boolean> overwrite;

    public Optional<Output<Boolean>> overwrite() {
        return Optional.ofNullable(this.overwrite);
    }

    @Import(name="s3Options")
    private @Nullable Output<JobS3TableOutputOptionsArgs> s3Options;

    public Optional<Output<JobS3TableOutputOptionsArgs>> s3Options() {
        return Optional.ofNullable(this.s3Options);
    }

    @Import(name="tableName", required=true)
    private Output<String> tableName;

    public Output<String> tableName() {
        return this.tableName;
    }

    private JobDataCatalogOutputArgs() {}

    private JobDataCatalogOutputArgs(JobDataCatalogOutputArgs $) {
        this.catalogId = $.catalogId;
        this.databaseName = $.databaseName;
        this.databaseOptions = $.databaseOptions;
        this.overwrite = $.overwrite;
        this.s3Options = $.s3Options;
        this.tableName = $.tableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobDataCatalogOutputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobDataCatalogOutputArgs $;

        public Builder() {
            $ = new JobDataCatalogOutputArgs();
        }

        public Builder(JobDataCatalogOutputArgs defaults) {
            $ = new JobDataCatalogOutputArgs(Objects.requireNonNull(defaults));
        }

        public Builder catalogId(@Nullable Output<String> catalogId) {
            $.catalogId = catalogId;
            return this;
        }

        public Builder catalogId(String catalogId) {
            return catalogId(Output.of(catalogId));
        }

        public Builder databaseName(Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        public Builder databaseOptions(@Nullable Output<JobDatabaseTableOutputOptionsArgs> databaseOptions) {
            $.databaseOptions = databaseOptions;
            return this;
        }

        public Builder databaseOptions(JobDatabaseTableOutputOptionsArgs databaseOptions) {
            return databaseOptions(Output.of(databaseOptions));
        }

        public Builder overwrite(@Nullable Output<Boolean> overwrite) {
            $.overwrite = overwrite;
            return this;
        }

        public Builder overwrite(Boolean overwrite) {
            return overwrite(Output.of(overwrite));
        }

        public Builder s3Options(@Nullable Output<JobS3TableOutputOptionsArgs> s3Options) {
            $.s3Options = s3Options;
            return this;
        }

        public Builder s3Options(JobS3TableOutputOptionsArgs s3Options) {
            return s3Options(Output.of(s3Options));
        }

        public Builder tableName(Output<String> tableName) {
            $.tableName = tableName;
            return this;
        }

        public Builder tableName(String tableName) {
            return tableName(Output.of(tableName));
        }

        public JobDataCatalogOutputArgs build() {
            $.databaseName = Objects.requireNonNull($.databaseName, "expected parameter 'databaseName' to be non-null");
            $.tableName = Objects.requireNonNull($.tableName, "expected parameter 'tableName' to be non-null");
            return $;
        }
    }

}
