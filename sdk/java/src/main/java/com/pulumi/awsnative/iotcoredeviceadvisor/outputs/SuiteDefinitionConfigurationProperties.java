// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotcoredeviceadvisor.outputs;

import com.pulumi.awsnative.iotcoredeviceadvisor.outputs.SuiteDefinitionDeviceUnderTest;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SuiteDefinitionConfigurationProperties {
    private String devicePermissionRoleArn;
    private @Nullable List<SuiteDefinitionDeviceUnderTest> devices;
    private @Nullable Boolean intendedForQualification;
    private String rootGroup;
    private @Nullable String suiteDefinitionName;

    private SuiteDefinitionConfigurationProperties() {}
    public String devicePermissionRoleArn() {
        return this.devicePermissionRoleArn;
    }
    public List<SuiteDefinitionDeviceUnderTest> devices() {
        return this.devices == null ? List.of() : this.devices;
    }
    public Optional<Boolean> intendedForQualification() {
        return Optional.ofNullable(this.intendedForQualification);
    }
    public String rootGroup() {
        return this.rootGroup;
    }
    public Optional<String> suiteDefinitionName() {
        return Optional.ofNullable(this.suiteDefinitionName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SuiteDefinitionConfigurationProperties defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String devicePermissionRoleArn;
        private @Nullable List<SuiteDefinitionDeviceUnderTest> devices;
        private @Nullable Boolean intendedForQualification;
        private String rootGroup;
        private @Nullable String suiteDefinitionName;
        public Builder() {}
        public Builder(SuiteDefinitionConfigurationProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.devicePermissionRoleArn = defaults.devicePermissionRoleArn;
    	      this.devices = defaults.devices;
    	      this.intendedForQualification = defaults.intendedForQualification;
    	      this.rootGroup = defaults.rootGroup;
    	      this.suiteDefinitionName = defaults.suiteDefinitionName;
        }

        @CustomType.Setter
        public Builder devicePermissionRoleArn(String devicePermissionRoleArn) {
            this.devicePermissionRoleArn = Objects.requireNonNull(devicePermissionRoleArn);
            return this;
        }
        @CustomType.Setter
        public Builder devices(@Nullable List<SuiteDefinitionDeviceUnderTest> devices) {
            this.devices = devices;
            return this;
        }
        public Builder devices(SuiteDefinitionDeviceUnderTest... devices) {
            return devices(List.of(devices));
        }
        @CustomType.Setter
        public Builder intendedForQualification(@Nullable Boolean intendedForQualification) {
            this.intendedForQualification = intendedForQualification;
            return this;
        }
        @CustomType.Setter
        public Builder rootGroup(String rootGroup) {
            this.rootGroup = Objects.requireNonNull(rootGroup);
            return this;
        }
        @CustomType.Setter
        public Builder suiteDefinitionName(@Nullable String suiteDefinitionName) {
            this.suiteDefinitionName = suiteDefinitionName;
            return this;
        }
        public SuiteDefinitionConfigurationProperties build() {
            final var o = new SuiteDefinitionConfigurationProperties();
            o.devicePermissionRoleArn = devicePermissionRoleArn;
            o.devices = devices;
            o.intendedForQualification = intendedForQualification;
            o.rootGroup = rootGroup;
            o.suiteDefinitionName = suiteDefinitionName;
            return o;
        }
    }
}
