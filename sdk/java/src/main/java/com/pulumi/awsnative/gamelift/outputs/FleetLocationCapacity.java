// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.gamelift.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class FleetLocationCapacity {
    /**
     * @return The number of EC2 instances you want to maintain in the specified fleet location. This value must fall between the minimum and maximum size limits.
     * 
     */
    private Integer desiredEC2Instances;
    /**
     * @return The maximum value that is allowed for the fleet&#39;s instance count for a location. When creating a new fleet, GameLift automatically sets this value to &#34;1&#34;. Once the fleet is active, you can change this value.
     * 
     */
    private Integer maxSize;
    /**
     * @return The minimum value allowed for the fleet&#39;s instance count for a location. When creating a new fleet, GameLift automatically sets this value to &#34;0&#34;. After the fleet is active, you can change this value.
     * 
     */
    private Integer minSize;

    private FleetLocationCapacity() {}
    /**
     * @return The number of EC2 instances you want to maintain in the specified fleet location. This value must fall between the minimum and maximum size limits.
     * 
     */
    public Integer desiredEC2Instances() {
        return this.desiredEC2Instances;
    }
    /**
     * @return The maximum value that is allowed for the fleet&#39;s instance count for a location. When creating a new fleet, GameLift automatically sets this value to &#34;1&#34;. Once the fleet is active, you can change this value.
     * 
     */
    public Integer maxSize() {
        return this.maxSize;
    }
    /**
     * @return The minimum value allowed for the fleet&#39;s instance count for a location. When creating a new fleet, GameLift automatically sets this value to &#34;0&#34;. After the fleet is active, you can change this value.
     * 
     */
    public Integer minSize() {
        return this.minSize;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FleetLocationCapacity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer desiredEC2Instances;
        private Integer maxSize;
        private Integer minSize;
        public Builder() {}
        public Builder(FleetLocationCapacity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.desiredEC2Instances = defaults.desiredEC2Instances;
    	      this.maxSize = defaults.maxSize;
    	      this.minSize = defaults.minSize;
        }

        @CustomType.Setter
        public Builder desiredEC2Instances(Integer desiredEC2Instances) {
            this.desiredEC2Instances = Objects.requireNonNull(desiredEC2Instances);
            return this;
        }
        @CustomType.Setter
        public Builder maxSize(Integer maxSize) {
            this.maxSize = Objects.requireNonNull(maxSize);
            return this;
        }
        @CustomType.Setter
        public Builder minSize(Integer minSize) {
            this.minSize = Objects.requireNonNull(minSize);
            return this;
        }
        public FleetLocationCapacity build() {
            final var o = new FleetLocationCapacity();
            o.desiredEC2Instances = desiredEC2Instances;
            o.maxSize = maxSize;
            o.minSize = minSize;
            return o;
        }
    }
}
