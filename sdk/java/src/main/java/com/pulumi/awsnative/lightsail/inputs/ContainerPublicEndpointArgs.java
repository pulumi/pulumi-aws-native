// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lightsail.inputs;

import com.pulumi.awsnative.lightsail.inputs.ContainerHealthCheckConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Describes the settings of a public endpoint for an Amazon Lightsail container service.
 * 
 */
public final class ContainerPublicEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerPublicEndpointArgs Empty = new ContainerPublicEndpointArgs();

    /**
     * The name of the container for the endpoint.
     * 
     */
    @Import(name="containerName")
    private @Nullable Output<String> containerName;

    /**
     * @return The name of the container for the endpoint.
     * 
     */
    public Optional<Output<String>> containerName() {
        return Optional.ofNullable(this.containerName);
    }

    /**
     * The port of the container to which traffic is forwarded to.
     * 
     */
    @Import(name="containerPort")
    private @Nullable Output<Integer> containerPort;

    /**
     * @return The port of the container to which traffic is forwarded to.
     * 
     */
    public Optional<Output<Integer>> containerPort() {
        return Optional.ofNullable(this.containerPort);
    }

    /**
     * An object that describes the health check configuration of the container.
     * 
     */
    @Import(name="healthCheckConfig")
    private @Nullable Output<ContainerHealthCheckConfigArgs> healthCheckConfig;

    /**
     * @return An object that describes the health check configuration of the container.
     * 
     */
    public Optional<Output<ContainerHealthCheckConfigArgs>> healthCheckConfig() {
        return Optional.ofNullable(this.healthCheckConfig);
    }

    private ContainerPublicEndpointArgs() {}

    private ContainerPublicEndpointArgs(ContainerPublicEndpointArgs $) {
        this.containerName = $.containerName;
        this.containerPort = $.containerPort;
        this.healthCheckConfig = $.healthCheckConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerPublicEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerPublicEndpointArgs $;

        public Builder() {
            $ = new ContainerPublicEndpointArgs();
        }

        public Builder(ContainerPublicEndpointArgs defaults) {
            $ = new ContainerPublicEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerName The name of the container for the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder containerName(@Nullable Output<String> containerName) {
            $.containerName = containerName;
            return this;
        }

        /**
         * @param containerName The name of the container for the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder containerName(String containerName) {
            return containerName(Output.of(containerName));
        }

        /**
         * @param containerPort The port of the container to which traffic is forwarded to.
         * 
         * @return builder
         * 
         */
        public Builder containerPort(@Nullable Output<Integer> containerPort) {
            $.containerPort = containerPort;
            return this;
        }

        /**
         * @param containerPort The port of the container to which traffic is forwarded to.
         * 
         * @return builder
         * 
         */
        public Builder containerPort(Integer containerPort) {
            return containerPort(Output.of(containerPort));
        }

        /**
         * @param healthCheckConfig An object that describes the health check configuration of the container.
         * 
         * @return builder
         * 
         */
        public Builder healthCheckConfig(@Nullable Output<ContainerHealthCheckConfigArgs> healthCheckConfig) {
            $.healthCheckConfig = healthCheckConfig;
            return this;
        }

        /**
         * @param healthCheckConfig An object that describes the health check configuration of the container.
         * 
         * @return builder
         * 
         */
        public Builder healthCheckConfig(ContainerHealthCheckConfigArgs healthCheckConfig) {
            return healthCheckConfig(Output.of(healthCheckConfig));
        }

        public ContainerPublicEndpointArgs build() {
            return $;
        }
    }

}
