// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.inputs;

import com.pulumi.awsnative.sagemaker.enums.ModelPackageStatusItemStatus;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents the overall status of a model package.
 * 
 */
public final class ModelPackageStatusItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModelPackageStatusItemArgs Empty = new ModelPackageStatusItemArgs();

    /**
     * If the overall status is Failed, the reason for the failure.
     * 
     */
    @Import(name="failureReason")
    private @Nullable Output<String> failureReason;

    /**
     * @return If the overall status is Failed, the reason for the failure.
     * 
     */
    public Optional<Output<String>> failureReason() {
        return Optional.ofNullable(this.failureReason);
    }

    /**
     * The name of the model package for which the overall status is being reported.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the model package for which the overall status is being reported.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The current status.
     * 
     */
    @Import(name="status", required=true)
    private Output<ModelPackageStatusItemStatus> status;

    /**
     * @return The current status.
     * 
     */
    public Output<ModelPackageStatusItemStatus> status() {
        return this.status;
    }

    private ModelPackageStatusItemArgs() {}

    private ModelPackageStatusItemArgs(ModelPackageStatusItemArgs $) {
        this.failureReason = $.failureReason;
        this.name = $.name;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelPackageStatusItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelPackageStatusItemArgs $;

        public Builder() {
            $ = new ModelPackageStatusItemArgs();
        }

        public Builder(ModelPackageStatusItemArgs defaults) {
            $ = new ModelPackageStatusItemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param failureReason If the overall status is Failed, the reason for the failure.
         * 
         * @return builder
         * 
         */
        public Builder failureReason(@Nullable Output<String> failureReason) {
            $.failureReason = failureReason;
            return this;
        }

        /**
         * @param failureReason If the overall status is Failed, the reason for the failure.
         * 
         * @return builder
         * 
         */
        public Builder failureReason(String failureReason) {
            return failureReason(Output.of(failureReason));
        }

        /**
         * @param name The name of the model package for which the overall status is being reported.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the model package for which the overall status is being reported.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param status The current status.
         * 
         * @return builder
         * 
         */
        public Builder status(Output<ModelPackageStatusItemStatus> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The current status.
         * 
         * @return builder
         * 
         */
        public Builder status(ModelPackageStatusItemStatus status) {
            return status(Output.of(status));
        }

        public ModelPackageStatusItemArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
