// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisanalyticsv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * For a SQL-based Kinesis Data Analytics application, provides additional mapping information when the record format uses delimiters, such as CSV. For example, the following sample records use CSV format, where the records use the &#39;\n&#39; as the row delimiter and a comma (&#34;,&#34;) as the column delimiter:
 * `&#34;name1&#34;, &#34;address1&#34;`
 * `&#34;name2&#34;, &#34;address2&#34;`
 * 
 */
public final class ApplicationCSVMappingParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationCSVMappingParametersArgs Empty = new ApplicationCSVMappingParametersArgs();

    /**
     * The column delimiter. For example, in a CSV format, a comma (&#34;,&#34;) is the typical column delimiter.
     * 
     */
    @Import(name="recordColumnDelimiter", required=true)
    private Output<String> recordColumnDelimiter;

    /**
     * @return The column delimiter. For example, in a CSV format, a comma (&#34;,&#34;) is the typical column delimiter.
     * 
     */
    public Output<String> recordColumnDelimiter() {
        return this.recordColumnDelimiter;
    }

    /**
     * The row delimiter. For example, in a CSV format, &#39;\n&#39; is the typical row delimiter.
     * 
     */
    @Import(name="recordRowDelimiter", required=true)
    private Output<String> recordRowDelimiter;

    /**
     * @return The row delimiter. For example, in a CSV format, &#39;\n&#39; is the typical row delimiter.
     * 
     */
    public Output<String> recordRowDelimiter() {
        return this.recordRowDelimiter;
    }

    private ApplicationCSVMappingParametersArgs() {}

    private ApplicationCSVMappingParametersArgs(ApplicationCSVMappingParametersArgs $) {
        this.recordColumnDelimiter = $.recordColumnDelimiter;
        this.recordRowDelimiter = $.recordRowDelimiter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationCSVMappingParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationCSVMappingParametersArgs $;

        public Builder() {
            $ = new ApplicationCSVMappingParametersArgs();
        }

        public Builder(ApplicationCSVMappingParametersArgs defaults) {
            $ = new ApplicationCSVMappingParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param recordColumnDelimiter The column delimiter. For example, in a CSV format, a comma (&#34;,&#34;) is the typical column delimiter.
         * 
         * @return builder
         * 
         */
        public Builder recordColumnDelimiter(Output<String> recordColumnDelimiter) {
            $.recordColumnDelimiter = recordColumnDelimiter;
            return this;
        }

        /**
         * @param recordColumnDelimiter The column delimiter. For example, in a CSV format, a comma (&#34;,&#34;) is the typical column delimiter.
         * 
         * @return builder
         * 
         */
        public Builder recordColumnDelimiter(String recordColumnDelimiter) {
            return recordColumnDelimiter(Output.of(recordColumnDelimiter));
        }

        /**
         * @param recordRowDelimiter The row delimiter. For example, in a CSV format, &#39;\n&#39; is the typical row delimiter.
         * 
         * @return builder
         * 
         */
        public Builder recordRowDelimiter(Output<String> recordRowDelimiter) {
            $.recordRowDelimiter = recordRowDelimiter;
            return this;
        }

        /**
         * @param recordRowDelimiter The row delimiter. For example, in a CSV format, &#39;\n&#39; is the typical row delimiter.
         * 
         * @return builder
         * 
         */
        public Builder recordRowDelimiter(String recordRowDelimiter) {
            return recordRowDelimiter(Output.of(recordRowDelimiter));
        }

        public ApplicationCSVMappingParametersArgs build() {
            $.recordColumnDelimiter = Objects.requireNonNull($.recordColumnDelimiter, "expected parameter 'recordColumnDelimiter' to be non-null");
            $.recordRowDelimiter = Objects.requireNonNull($.recordRowDelimiter, "expected parameter 'recordRowDelimiter' to be non-null");
            return $;
        }
    }

}
