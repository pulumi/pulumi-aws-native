// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2;

import com.pulumi.awsnative.ec2.inputs.RouteTableTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteTableArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouteTableArgs Empty = new RouteTableArgs();

    /**
     * Any tags assigned to the route table.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<RouteTableTagArgs>> tags;

    /**
     * @return Any tags assigned to the route table.
     * 
     */
    public Optional<Output<List<RouteTableTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The ID of the VPC.
     * 
     */
    @Import(name="vpcId", required=true)
    private Output<String> vpcId;

    /**
     * @return The ID of the VPC.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }

    private RouteTableArgs() {}

    private RouteTableArgs(RouteTableArgs $) {
        this.tags = $.tags;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteTableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteTableArgs $;

        public Builder() {
            $ = new RouteTableArgs();
        }

        public Builder(RouteTableArgs defaults) {
            $ = new RouteTableArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param tags Any tags assigned to the route table.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<RouteTableTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Any tags assigned to the route table.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<RouteTableTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Any tags assigned to the route table.
         * 
         * @return builder
         * 
         */
        public Builder tags(RouteTableTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param vpcId The ID of the VPC.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The ID of the VPC.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public RouteTableArgs build() {
            $.vpcId = Objects.requireNonNull($.vpcId, "expected parameter 'vpcId' to be non-null");
            return $;
        }
    }

}
