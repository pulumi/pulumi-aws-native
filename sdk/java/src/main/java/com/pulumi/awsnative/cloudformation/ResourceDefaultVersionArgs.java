// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudformation;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourceDefaultVersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceDefaultVersionArgs Empty = new ResourceDefaultVersionArgs();

    /**
     * The name of the type being registered.
     * 
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     * 
     */
    @Import(name="typeName")
    private @Nullable Output<String> typeName;

    /**
     * @return The name of the type being registered.
     * 
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     * 
     */
    public Optional<Output<String>> typeName() {
        return Optional.ofNullable(this.typeName);
    }

    /**
     * The Amazon Resource Name (ARN) of the type version.
     * 
     */
    @Import(name="typeVersionArn")
    private @Nullable Output<String> typeVersionArn;

    /**
     * @return The Amazon Resource Name (ARN) of the type version.
     * 
     */
    public Optional<Output<String>> typeVersionArn() {
        return Optional.ofNullable(this.typeVersionArn);
    }

    /**
     * The ID of an existing version of the resource to set as the default.
     * 
     */
    @Import(name="versionId")
    private @Nullable Output<String> versionId;

    /**
     * @return The ID of an existing version of the resource to set as the default.
     * 
     */
    public Optional<Output<String>> versionId() {
        return Optional.ofNullable(this.versionId);
    }

    private ResourceDefaultVersionArgs() {}

    private ResourceDefaultVersionArgs(ResourceDefaultVersionArgs $) {
        this.typeName = $.typeName;
        this.typeVersionArn = $.typeVersionArn;
        this.versionId = $.versionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceDefaultVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceDefaultVersionArgs $;

        public Builder() {
            $ = new ResourceDefaultVersionArgs();
        }

        public Builder(ResourceDefaultVersionArgs defaults) {
            $ = new ResourceDefaultVersionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param typeName The name of the type being registered.
         * 
         * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
         * 
         * @return builder
         * 
         */
        public Builder typeName(@Nullable Output<String> typeName) {
            $.typeName = typeName;
            return this;
        }

        /**
         * @param typeName The name of the type being registered.
         * 
         * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
         * 
         * @return builder
         * 
         */
        public Builder typeName(String typeName) {
            return typeName(Output.of(typeName));
        }

        /**
         * @param typeVersionArn The Amazon Resource Name (ARN) of the type version.
         * 
         * @return builder
         * 
         */
        public Builder typeVersionArn(@Nullable Output<String> typeVersionArn) {
            $.typeVersionArn = typeVersionArn;
            return this;
        }

        /**
         * @param typeVersionArn The Amazon Resource Name (ARN) of the type version.
         * 
         * @return builder
         * 
         */
        public Builder typeVersionArn(String typeVersionArn) {
            return typeVersionArn(Output.of(typeVersionArn));
        }

        /**
         * @param versionId The ID of an existing version of the resource to set as the default.
         * 
         * @return builder
         * 
         */
        public Builder versionId(@Nullable Output<String> versionId) {
            $.versionId = versionId;
            return this;
        }

        /**
         * @param versionId The ID of an existing version of the resource to set as the default.
         * 
         * @return builder
         * 
         */
        public Builder versionId(String versionId) {
            return versionId(Output.of(versionId));
        }

        public ResourceDefaultVersionArgs build() {
            return $;
        }
    }

}
