// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3outposts.outputs;

import com.pulumi.awsnative.s3outposts.enums.BucketRuleStatus;
import com.pulumi.awsnative.s3outposts.outputs.BucketAbortIncompleteMultipartUpload;
import com.pulumi.awsnative.s3outposts.outputs.BucketRuleFilterProperties;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketRule {
    /**
     * @return Specifies a lifecycle rule that stops incomplete multipart uploads to an Amazon S3Outposts bucket.
     * 
     */
    private @Nullable BucketAbortIncompleteMultipartUpload abortIncompleteMultipartUpload;
    /**
     * @return Indicates when objects are deleted from Amazon S3Outposts. The date value must be in ISO 8601 format. The time is always midnight UTC.
     * 
     */
    private @Nullable String expirationDate;
    /**
     * @return Indicates the number of days after creation when objects are deleted from Amazon S3Outposts.
     * 
     */
    private @Nullable Integer expirationInDays;
    /**
     * @return The container for the filter of the lifecycle rule.
     * 
     */
    private @Nullable BucketRuleFilterProperties filter;
    /**
     * @return Unique identifier for the lifecycle rule. The value can&#39;t be longer than 255 characters.
     * 
     */
    private @Nullable String id;
    private @Nullable BucketRuleStatus status;

    private BucketRule() {}
    /**
     * @return Specifies a lifecycle rule that stops incomplete multipart uploads to an Amazon S3Outposts bucket.
     * 
     */
    public Optional<BucketAbortIncompleteMultipartUpload> abortIncompleteMultipartUpload() {
        return Optional.ofNullable(this.abortIncompleteMultipartUpload);
    }
    /**
     * @return Indicates when objects are deleted from Amazon S3Outposts. The date value must be in ISO 8601 format. The time is always midnight UTC.
     * 
     */
    public Optional<String> expirationDate() {
        return Optional.ofNullable(this.expirationDate);
    }
    /**
     * @return Indicates the number of days after creation when objects are deleted from Amazon S3Outposts.
     * 
     */
    public Optional<Integer> expirationInDays() {
        return Optional.ofNullable(this.expirationInDays);
    }
    /**
     * @return The container for the filter of the lifecycle rule.
     * 
     */
    public Optional<BucketRuleFilterProperties> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return Unique identifier for the lifecycle rule. The value can&#39;t be longer than 255 characters.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<BucketRuleStatus> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable BucketAbortIncompleteMultipartUpload abortIncompleteMultipartUpload;
        private @Nullable String expirationDate;
        private @Nullable Integer expirationInDays;
        private @Nullable BucketRuleFilterProperties filter;
        private @Nullable String id;
        private @Nullable BucketRuleStatus status;
        public Builder() {}
        public Builder(BucketRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.abortIncompleteMultipartUpload = defaults.abortIncompleteMultipartUpload;
    	      this.expirationDate = defaults.expirationDate;
    	      this.expirationInDays = defaults.expirationInDays;
    	      this.filter = defaults.filter;
    	      this.id = defaults.id;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder abortIncompleteMultipartUpload(@Nullable BucketAbortIncompleteMultipartUpload abortIncompleteMultipartUpload) {
            this.abortIncompleteMultipartUpload = abortIncompleteMultipartUpload;
            return this;
        }
        @CustomType.Setter
        public Builder expirationDate(@Nullable String expirationDate) {
            this.expirationDate = expirationDate;
            return this;
        }
        @CustomType.Setter
        public Builder expirationInDays(@Nullable Integer expirationInDays) {
            this.expirationInDays = expirationInDays;
            return this;
        }
        @CustomType.Setter
        public Builder filter(@Nullable BucketRuleFilterProperties filter) {
            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable BucketRuleStatus status) {
            this.status = status;
            return this;
        }
        public BucketRule build() {
            final var o = new BucketRule();
            o.abortIncompleteMultipartUpload = abortIncompleteMultipartUpload;
            o.expirationDate = expirationDate;
            o.expirationInDays = expirationInDays;
            o.filter = filter;
            o.id = id;
            o.status = status;
            return o;
        }
    }
}
