// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kendra.outputs;

import com.pulumi.awsnative.kendra.enums.DataSourceDatabaseEngineType;
import com.pulumi.awsnative.kendra.outputs.DataSourceAclConfiguration;
import com.pulumi.awsnative.kendra.outputs.DataSourceColumnConfiguration;
import com.pulumi.awsnative.kendra.outputs.DataSourceConnectionConfiguration;
import com.pulumi.awsnative.kendra.outputs.DataSourceSqlConfiguration;
import com.pulumi.awsnative.kendra.outputs.DataSourceVpcConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataSourceDatabaseConfiguration {
    private @Nullable DataSourceAclConfiguration aclConfiguration;
    private DataSourceColumnConfiguration columnConfiguration;
    private DataSourceConnectionConfiguration connectionConfiguration;
    private DataSourceDatabaseEngineType databaseEngineType;
    private @Nullable DataSourceSqlConfiguration sqlConfiguration;
    private @Nullable DataSourceVpcConfiguration vpcConfiguration;

    private DataSourceDatabaseConfiguration() {}
    public Optional<DataSourceAclConfiguration> aclConfiguration() {
        return Optional.ofNullable(this.aclConfiguration);
    }
    public DataSourceColumnConfiguration columnConfiguration() {
        return this.columnConfiguration;
    }
    public DataSourceConnectionConfiguration connectionConfiguration() {
        return this.connectionConfiguration;
    }
    public DataSourceDatabaseEngineType databaseEngineType() {
        return this.databaseEngineType;
    }
    public Optional<DataSourceSqlConfiguration> sqlConfiguration() {
        return Optional.ofNullable(this.sqlConfiguration);
    }
    public Optional<DataSourceVpcConfiguration> vpcConfiguration() {
        return Optional.ofNullable(this.vpcConfiguration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceDatabaseConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DataSourceAclConfiguration aclConfiguration;
        private DataSourceColumnConfiguration columnConfiguration;
        private DataSourceConnectionConfiguration connectionConfiguration;
        private DataSourceDatabaseEngineType databaseEngineType;
        private @Nullable DataSourceSqlConfiguration sqlConfiguration;
        private @Nullable DataSourceVpcConfiguration vpcConfiguration;
        public Builder() {}
        public Builder(DataSourceDatabaseConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aclConfiguration = defaults.aclConfiguration;
    	      this.columnConfiguration = defaults.columnConfiguration;
    	      this.connectionConfiguration = defaults.connectionConfiguration;
    	      this.databaseEngineType = defaults.databaseEngineType;
    	      this.sqlConfiguration = defaults.sqlConfiguration;
    	      this.vpcConfiguration = defaults.vpcConfiguration;
        }

        @CustomType.Setter
        public Builder aclConfiguration(@Nullable DataSourceAclConfiguration aclConfiguration) {
            this.aclConfiguration = aclConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder columnConfiguration(DataSourceColumnConfiguration columnConfiguration) {
            this.columnConfiguration = Objects.requireNonNull(columnConfiguration);
            return this;
        }
        @CustomType.Setter
        public Builder connectionConfiguration(DataSourceConnectionConfiguration connectionConfiguration) {
            this.connectionConfiguration = Objects.requireNonNull(connectionConfiguration);
            return this;
        }
        @CustomType.Setter
        public Builder databaseEngineType(DataSourceDatabaseEngineType databaseEngineType) {
            this.databaseEngineType = Objects.requireNonNull(databaseEngineType);
            return this;
        }
        @CustomType.Setter
        public Builder sqlConfiguration(@Nullable DataSourceSqlConfiguration sqlConfiguration) {
            this.sqlConfiguration = sqlConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder vpcConfiguration(@Nullable DataSourceVpcConfiguration vpcConfiguration) {
            this.vpcConfiguration = vpcConfiguration;
            return this;
        }
        public DataSourceDatabaseConfiguration build() {
            final var o = new DataSourceDatabaseConfiguration();
            o.aclConfiguration = aclConfiguration;
            o.columnConfiguration = columnConfiguration;
            o.connectionConfiguration = connectionConfiguration;
            o.databaseEngineType = databaseEngineType;
            o.sqlConfiguration = sqlConfiguration;
            o.vpcConfiguration = vpcConfiguration;
            return o;
        }
    }
}
