// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.appstream.outputs;

import com.pulumi.awsnative.appstream.outputs.ApplicationS3Location;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetApplicationResult {
    private @Nullable String appBlockArn;
    private @Nullable String arn;
    private @Nullable List<String> attributesToDelete;
    private @Nullable String createdTime;
    private @Nullable String description;
    private @Nullable String displayName;
    private @Nullable ApplicationS3Location iconS3Location;
    private @Nullable String launchParameters;
    private @Nullable String launchPath;
    private @Nullable String workingDirectory;

    private GetApplicationResult() {}
    public Optional<String> appBlockArn() {
        return Optional.ofNullable(this.appBlockArn);
    }
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public List<String> attributesToDelete() {
        return this.attributesToDelete == null ? List.of() : this.attributesToDelete;
    }
    public Optional<String> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public Optional<ApplicationS3Location> iconS3Location() {
        return Optional.ofNullable(this.iconS3Location);
    }
    public Optional<String> launchParameters() {
        return Optional.ofNullable(this.launchParameters);
    }
    public Optional<String> launchPath() {
        return Optional.ofNullable(this.launchPath);
    }
    public Optional<String> workingDirectory() {
        return Optional.ofNullable(this.workingDirectory);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String appBlockArn;
        private @Nullable String arn;
        private @Nullable List<String> attributesToDelete;
        private @Nullable String createdTime;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable ApplicationS3Location iconS3Location;
        private @Nullable String launchParameters;
        private @Nullable String launchPath;
        private @Nullable String workingDirectory;
        public Builder() {}
        public Builder(GetApplicationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appBlockArn = defaults.appBlockArn;
    	      this.arn = defaults.arn;
    	      this.attributesToDelete = defaults.attributesToDelete;
    	      this.createdTime = defaults.createdTime;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.iconS3Location = defaults.iconS3Location;
    	      this.launchParameters = defaults.launchParameters;
    	      this.launchPath = defaults.launchPath;
    	      this.workingDirectory = defaults.workingDirectory;
        }

        @CustomType.Setter
        public Builder appBlockArn(@Nullable String appBlockArn) {
            this.appBlockArn = appBlockArn;
            return this;
        }
        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder attributesToDelete(@Nullable List<String> attributesToDelete) {
            this.attributesToDelete = attributesToDelete;
            return this;
        }
        public Builder attributesToDelete(String... attributesToDelete) {
            return attributesToDelete(List.of(attributesToDelete));
        }
        @CustomType.Setter
        public Builder createdTime(@Nullable String createdTime) {
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder iconS3Location(@Nullable ApplicationS3Location iconS3Location) {
            this.iconS3Location = iconS3Location;
            return this;
        }
        @CustomType.Setter
        public Builder launchParameters(@Nullable String launchParameters) {
            this.launchParameters = launchParameters;
            return this;
        }
        @CustomType.Setter
        public Builder launchPath(@Nullable String launchPath) {
            this.launchPath = launchPath;
            return this;
        }
        @CustomType.Setter
        public Builder workingDirectory(@Nullable String workingDirectory) {
            this.workingDirectory = workingDirectory;
            return this;
        }
        public GetApplicationResult build() {
            final var o = new GetApplicationResult();
            o.appBlockArn = appBlockArn;
            o.arn = arn;
            o.attributesToDelete = attributesToDelete;
            o.createdTime = createdTime;
            o.description = description;
            o.displayName = displayName;
            o.iconS3Location = iconS3Location;
            o.launchParameters = launchParameters;
            o.launchPath = launchPath;
            o.workingDirectory = workingDirectory;
            return o;
        }
    }
}
