// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lex;

import com.pulumi.awsnative.lex.inputs.BotAliasConversationLogSettingsArgs;
import com.pulumi.awsnative.lex.inputs.BotAliasLocaleSettingsItemArgs;
import com.pulumi.awsnative.lex.inputs.BotAliasTagArgs;
import com.pulumi.awsnative.lex.inputs.SentimentAnalysisSettingsPropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BotAliasArgs extends com.pulumi.resources.ResourceArgs {

    public static final BotAliasArgs Empty = new BotAliasArgs();

    @Import(name="botAliasLocaleSettings")
    private @Nullable Output<List<BotAliasLocaleSettingsItemArgs>> botAliasLocaleSettings;

    public Optional<Output<List<BotAliasLocaleSettingsItemArgs>>> botAliasLocaleSettings() {
        return Optional.ofNullable(this.botAliasLocaleSettings);
    }

    @Import(name="botAliasName")
    private @Nullable Output<String> botAliasName;

    public Optional<Output<String>> botAliasName() {
        return Optional.ofNullable(this.botAliasName);
    }

    /**
     * A list of tags to add to the bot alias.
     * 
     */
    @Import(name="botAliasTags")
    private @Nullable Output<List<BotAliasTagArgs>> botAliasTags;

    /**
     * @return A list of tags to add to the bot alias.
     * 
     */
    public Optional<Output<List<BotAliasTagArgs>>> botAliasTags() {
        return Optional.ofNullable(this.botAliasTags);
    }

    @Import(name="botId", required=true)
    private Output<String> botId;

    public Output<String> botId() {
        return this.botId;
    }

    @Import(name="botVersion")
    private @Nullable Output<String> botVersion;

    public Optional<Output<String>> botVersion() {
        return Optional.ofNullable(this.botVersion);
    }

    @Import(name="conversationLogSettings")
    private @Nullable Output<BotAliasConversationLogSettingsArgs> conversationLogSettings;

    public Optional<Output<BotAliasConversationLogSettingsArgs>> conversationLogSettings() {
        return Optional.ofNullable(this.conversationLogSettings);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.
     * 
     */
    @Import(name="sentimentAnalysisSettings")
    private @Nullable Output<SentimentAnalysisSettingsPropertiesArgs> sentimentAnalysisSettings;

    /**
     * @return Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.
     * 
     */
    public Optional<Output<SentimentAnalysisSettingsPropertiesArgs>> sentimentAnalysisSettings() {
        return Optional.ofNullable(this.sentimentAnalysisSettings);
    }

    private BotAliasArgs() {}

    private BotAliasArgs(BotAliasArgs $) {
        this.botAliasLocaleSettings = $.botAliasLocaleSettings;
        this.botAliasName = $.botAliasName;
        this.botAliasTags = $.botAliasTags;
        this.botId = $.botId;
        this.botVersion = $.botVersion;
        this.conversationLogSettings = $.conversationLogSettings;
        this.description = $.description;
        this.sentimentAnalysisSettings = $.sentimentAnalysisSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BotAliasArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BotAliasArgs $;

        public Builder() {
            $ = new BotAliasArgs();
        }

        public Builder(BotAliasArgs defaults) {
            $ = new BotAliasArgs(Objects.requireNonNull(defaults));
        }

        public Builder botAliasLocaleSettings(@Nullable Output<List<BotAliasLocaleSettingsItemArgs>> botAliasLocaleSettings) {
            $.botAliasLocaleSettings = botAliasLocaleSettings;
            return this;
        }

        public Builder botAliasLocaleSettings(List<BotAliasLocaleSettingsItemArgs> botAliasLocaleSettings) {
            return botAliasLocaleSettings(Output.of(botAliasLocaleSettings));
        }

        public Builder botAliasLocaleSettings(BotAliasLocaleSettingsItemArgs... botAliasLocaleSettings) {
            return botAliasLocaleSettings(List.of(botAliasLocaleSettings));
        }

        public Builder botAliasName(@Nullable Output<String> botAliasName) {
            $.botAliasName = botAliasName;
            return this;
        }

        public Builder botAliasName(String botAliasName) {
            return botAliasName(Output.of(botAliasName));
        }

        /**
         * @param botAliasTags A list of tags to add to the bot alias.
         * 
         * @return builder
         * 
         */
        public Builder botAliasTags(@Nullable Output<List<BotAliasTagArgs>> botAliasTags) {
            $.botAliasTags = botAliasTags;
            return this;
        }

        /**
         * @param botAliasTags A list of tags to add to the bot alias.
         * 
         * @return builder
         * 
         */
        public Builder botAliasTags(List<BotAliasTagArgs> botAliasTags) {
            return botAliasTags(Output.of(botAliasTags));
        }

        /**
         * @param botAliasTags A list of tags to add to the bot alias.
         * 
         * @return builder
         * 
         */
        public Builder botAliasTags(BotAliasTagArgs... botAliasTags) {
            return botAliasTags(List.of(botAliasTags));
        }

        public Builder botId(Output<String> botId) {
            $.botId = botId;
            return this;
        }

        public Builder botId(String botId) {
            return botId(Output.of(botId));
        }

        public Builder botVersion(@Nullable Output<String> botVersion) {
            $.botVersion = botVersion;
            return this;
        }

        public Builder botVersion(String botVersion) {
            return botVersion(Output.of(botVersion));
        }

        public Builder conversationLogSettings(@Nullable Output<BotAliasConversationLogSettingsArgs> conversationLogSettings) {
            $.conversationLogSettings = conversationLogSettings;
            return this;
        }

        public Builder conversationLogSettings(BotAliasConversationLogSettingsArgs conversationLogSettings) {
            return conversationLogSettings(Output.of(conversationLogSettings));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param sentimentAnalysisSettings Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.
         * 
         * @return builder
         * 
         */
        public Builder sentimentAnalysisSettings(@Nullable Output<SentimentAnalysisSettingsPropertiesArgs> sentimentAnalysisSettings) {
            $.sentimentAnalysisSettings = sentimentAnalysisSettings;
            return this;
        }

        /**
         * @param sentimentAnalysisSettings Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.
         * 
         * @return builder
         * 
         */
        public Builder sentimentAnalysisSettings(SentimentAnalysisSettingsPropertiesArgs sentimentAnalysisSettings) {
            return sentimentAnalysisSettings(Output.of(sentimentAnalysisSettings));
        }

        public BotAliasArgs build() {
            $.botId = Objects.requireNonNull($.botId, "expected parameter 'botId' to be non-null");
            return $;
        }
    }

}
