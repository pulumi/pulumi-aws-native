// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.apigateway.outputs;

import com.pulumi.awsnative.apigateway.outputs.UsagePlanApiStage;
import com.pulumi.awsnative.apigateway.outputs.UsagePlanQuotaSettings;
import com.pulumi.awsnative.apigateway.outputs.UsagePlanTag;
import com.pulumi.awsnative.apigateway.outputs.UsagePlanThrottleSettings;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetUsagePlanResult {
    /**
     * @return The API stages to associate with this usage plan.
     * 
     */
    private @Nullable List<UsagePlanApiStage> apiStages;
    /**
     * @return A description of the usage plan.
     * 
     */
    private @Nullable String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Configures the number of requests that users can make within a given interval.
     * 
     */
    private @Nullable UsagePlanQuotaSettings quota;
    /**
     * @return An array of arbitrary tags (key-value pairs) to associate with the usage plan.
     * 
     */
    private @Nullable List<UsagePlanTag> tags;
    /**
     * @return Configures the overall request rate (average requests per second) and burst capacity.
     * 
     */
    private @Nullable UsagePlanThrottleSettings throttle;
    /**
     * @return A name for the usage plan.
     * 
     */
    private @Nullable String usagePlanName;

    private GetUsagePlanResult() {}
    /**
     * @return The API stages to associate with this usage plan.
     * 
     */
    public List<UsagePlanApiStage> apiStages() {
        return this.apiStages == null ? List.of() : this.apiStages;
    }
    /**
     * @return A description of the usage plan.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Configures the number of requests that users can make within a given interval.
     * 
     */
    public Optional<UsagePlanQuotaSettings> quota() {
        return Optional.ofNullable(this.quota);
    }
    /**
     * @return An array of arbitrary tags (key-value pairs) to associate with the usage plan.
     * 
     */
    public List<UsagePlanTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return Configures the overall request rate (average requests per second) and burst capacity.
     * 
     */
    public Optional<UsagePlanThrottleSettings> throttle() {
        return Optional.ofNullable(this.throttle);
    }
    /**
     * @return A name for the usage plan.
     * 
     */
    public Optional<String> usagePlanName() {
        return Optional.ofNullable(this.usagePlanName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUsagePlanResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<UsagePlanApiStage> apiStages;
        private @Nullable String description;
        private @Nullable String id;
        private @Nullable UsagePlanQuotaSettings quota;
        private @Nullable List<UsagePlanTag> tags;
        private @Nullable UsagePlanThrottleSettings throttle;
        private @Nullable String usagePlanName;
        public Builder() {}
        public Builder(GetUsagePlanResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiStages = defaults.apiStages;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.quota = defaults.quota;
    	      this.tags = defaults.tags;
    	      this.throttle = defaults.throttle;
    	      this.usagePlanName = defaults.usagePlanName;
        }

        @CustomType.Setter
        public Builder apiStages(@Nullable List<UsagePlanApiStage> apiStages) {
            this.apiStages = apiStages;
            return this;
        }
        public Builder apiStages(UsagePlanApiStage... apiStages) {
            return apiStages(List.of(apiStages));
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder quota(@Nullable UsagePlanQuotaSettings quota) {
            this.quota = quota;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<UsagePlanTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(UsagePlanTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder throttle(@Nullable UsagePlanThrottleSettings throttle) {
            this.throttle = throttle;
            return this;
        }
        @CustomType.Setter
        public Builder usagePlanName(@Nullable String usagePlanName) {
            this.usagePlanName = usagePlanName;
            return this;
        }
        public GetUsagePlanResult build() {
            final var o = new GetUsagePlanResult();
            o.apiStages = apiStages;
            o.description = description;
            o.id = id;
            o.quota = quota;
            o.tags = tags;
            o.throttle = throttle;
            o.usagePlanName = usagePlanName;
            return o;
        }
    }
}
