// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.amplify.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BranchBasicAuthConfig {
    private @Nullable Boolean enableBasicAuth;
    private String password;
    private String username;

    private BranchBasicAuthConfig() {}
    public Optional<Boolean> enableBasicAuth() {
        return Optional.ofNullable(this.enableBasicAuth);
    }
    public String password() {
        return this.password;
    }
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BranchBasicAuthConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enableBasicAuth;
        private String password;
        private String username;
        public Builder() {}
        public Builder(BranchBasicAuthConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableBasicAuth = defaults.enableBasicAuth;
    	      this.password = defaults.password;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder enableBasicAuth(@Nullable Boolean enableBasicAuth) {
            this.enableBasicAuth = enableBasicAuth;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }
        public BranchBasicAuthConfig build() {
            final var o = new BranchBasicAuthConfig();
            o.enableBasicAuth = enableBasicAuth;
            o.password = password;
            o.username = username;
            return o;
        }
    }
}
