// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.apigateway.outputs;

import com.pulumi.awsnative.apigateway.outputs.DomainNameEndpointConfiguration;
import com.pulumi.awsnative.apigateway.outputs.DomainNameMutualTlsAuthentication;
import com.pulumi.awsnative.apigateway.outputs.DomainNameTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainNameResult {
    private @Nullable String certificateArn;
    private @Nullable String distributionDomainName;
    private @Nullable String distributionHostedZoneId;
    private @Nullable DomainNameEndpointConfiguration endpointConfiguration;
    private @Nullable DomainNameMutualTlsAuthentication mutualTlsAuthentication;
    private @Nullable String ownershipVerificationCertificateArn;
    private @Nullable String regionalCertificateArn;
    private @Nullable String regionalDomainName;
    private @Nullable String regionalHostedZoneId;
    private @Nullable String securityPolicy;
    private @Nullable List<DomainNameTag> tags;

    private GetDomainNameResult() {}
    public Optional<String> certificateArn() {
        return Optional.ofNullable(this.certificateArn);
    }
    public Optional<String> distributionDomainName() {
        return Optional.ofNullable(this.distributionDomainName);
    }
    public Optional<String> distributionHostedZoneId() {
        return Optional.ofNullable(this.distributionHostedZoneId);
    }
    public Optional<DomainNameEndpointConfiguration> endpointConfiguration() {
        return Optional.ofNullable(this.endpointConfiguration);
    }
    public Optional<DomainNameMutualTlsAuthentication> mutualTlsAuthentication() {
        return Optional.ofNullable(this.mutualTlsAuthentication);
    }
    public Optional<String> ownershipVerificationCertificateArn() {
        return Optional.ofNullable(this.ownershipVerificationCertificateArn);
    }
    public Optional<String> regionalCertificateArn() {
        return Optional.ofNullable(this.regionalCertificateArn);
    }
    public Optional<String> regionalDomainName() {
        return Optional.ofNullable(this.regionalDomainName);
    }
    public Optional<String> regionalHostedZoneId() {
        return Optional.ofNullable(this.regionalHostedZoneId);
    }
    public Optional<String> securityPolicy() {
        return Optional.ofNullable(this.securityPolicy);
    }
    public List<DomainNameTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainNameResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String certificateArn;
        private @Nullable String distributionDomainName;
        private @Nullable String distributionHostedZoneId;
        private @Nullable DomainNameEndpointConfiguration endpointConfiguration;
        private @Nullable DomainNameMutualTlsAuthentication mutualTlsAuthentication;
        private @Nullable String ownershipVerificationCertificateArn;
        private @Nullable String regionalCertificateArn;
        private @Nullable String regionalDomainName;
        private @Nullable String regionalHostedZoneId;
        private @Nullable String securityPolicy;
        private @Nullable List<DomainNameTag> tags;
        public Builder() {}
        public Builder(GetDomainNameResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateArn = defaults.certificateArn;
    	      this.distributionDomainName = defaults.distributionDomainName;
    	      this.distributionHostedZoneId = defaults.distributionHostedZoneId;
    	      this.endpointConfiguration = defaults.endpointConfiguration;
    	      this.mutualTlsAuthentication = defaults.mutualTlsAuthentication;
    	      this.ownershipVerificationCertificateArn = defaults.ownershipVerificationCertificateArn;
    	      this.regionalCertificateArn = defaults.regionalCertificateArn;
    	      this.regionalDomainName = defaults.regionalDomainName;
    	      this.regionalHostedZoneId = defaults.regionalHostedZoneId;
    	      this.securityPolicy = defaults.securityPolicy;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder certificateArn(@Nullable String certificateArn) {
            this.certificateArn = certificateArn;
            return this;
        }
        @CustomType.Setter
        public Builder distributionDomainName(@Nullable String distributionDomainName) {
            this.distributionDomainName = distributionDomainName;
            return this;
        }
        @CustomType.Setter
        public Builder distributionHostedZoneId(@Nullable String distributionHostedZoneId) {
            this.distributionHostedZoneId = distributionHostedZoneId;
            return this;
        }
        @CustomType.Setter
        public Builder endpointConfiguration(@Nullable DomainNameEndpointConfiguration endpointConfiguration) {
            this.endpointConfiguration = endpointConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder mutualTlsAuthentication(@Nullable DomainNameMutualTlsAuthentication mutualTlsAuthentication) {
            this.mutualTlsAuthentication = mutualTlsAuthentication;
            return this;
        }
        @CustomType.Setter
        public Builder ownershipVerificationCertificateArn(@Nullable String ownershipVerificationCertificateArn) {
            this.ownershipVerificationCertificateArn = ownershipVerificationCertificateArn;
            return this;
        }
        @CustomType.Setter
        public Builder regionalCertificateArn(@Nullable String regionalCertificateArn) {
            this.regionalCertificateArn = regionalCertificateArn;
            return this;
        }
        @CustomType.Setter
        public Builder regionalDomainName(@Nullable String regionalDomainName) {
            this.regionalDomainName = regionalDomainName;
            return this;
        }
        @CustomType.Setter
        public Builder regionalHostedZoneId(@Nullable String regionalHostedZoneId) {
            this.regionalHostedZoneId = regionalHostedZoneId;
            return this;
        }
        @CustomType.Setter
        public Builder securityPolicy(@Nullable String securityPolicy) {
            this.securityPolicy = securityPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<DomainNameTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(DomainNameTag... tags) {
            return tags(List.of(tags));
        }
        public GetDomainNameResult build() {
            final var o = new GetDomainNameResult();
            o.certificateArn = certificateArn;
            o.distributionDomainName = distributionDomainName;
            o.distributionHostedZoneId = distributionHostedZoneId;
            o.endpointConfiguration = endpointConfiguration;
            o.mutualTlsAuthentication = mutualTlsAuthentication;
            o.ownershipVerificationCertificateArn = ownershipVerificationCertificateArn;
            o.regionalCertificateArn = regionalCertificateArn;
            o.regionalDomainName = regionalDomainName;
            o.regionalHostedZoneId = regionalHostedZoneId;
            o.securityPolicy = securityPolicy;
            o.tags = tags;
            return o;
        }
    }
}
