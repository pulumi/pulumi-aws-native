// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketLoggingConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketLoggingConfigurationArgs Empty = new BucketLoggingConfigurationArgs();

    /**
     * The name of an Amazon S3 bucket where Amazon S3 store server access log files. You can store log files in any bucket that you own. By default, logs are stored in the bucket where the LoggingConfiguration property is defined.
     * 
     */
    @Import(name="destinationBucketName")
    private @Nullable Output<String> destinationBucketName;

    /**
     * @return The name of an Amazon S3 bucket where Amazon S3 store server access log files. You can store log files in any bucket that you own. By default, logs are stored in the bucket where the LoggingConfiguration property is defined.
     * 
     */
    public Optional<Output<String>> destinationBucketName() {
        return Optional.ofNullable(this.destinationBucketName);
    }

    @Import(name="logFilePrefix")
    private @Nullable Output<String> logFilePrefix;

    public Optional<Output<String>> logFilePrefix() {
        return Optional.ofNullable(this.logFilePrefix);
    }

    private BucketLoggingConfigurationArgs() {}

    private BucketLoggingConfigurationArgs(BucketLoggingConfigurationArgs $) {
        this.destinationBucketName = $.destinationBucketName;
        this.logFilePrefix = $.logFilePrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketLoggingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketLoggingConfigurationArgs $;

        public Builder() {
            $ = new BucketLoggingConfigurationArgs();
        }

        public Builder(BucketLoggingConfigurationArgs defaults) {
            $ = new BucketLoggingConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinationBucketName The name of an Amazon S3 bucket where Amazon S3 store server access log files. You can store log files in any bucket that you own. By default, logs are stored in the bucket where the LoggingConfiguration property is defined.
         * 
         * @return builder
         * 
         */
        public Builder destinationBucketName(@Nullable Output<String> destinationBucketName) {
            $.destinationBucketName = destinationBucketName;
            return this;
        }

        /**
         * @param destinationBucketName The name of an Amazon S3 bucket where Amazon S3 store server access log files. You can store log files in any bucket that you own. By default, logs are stored in the bucket where the LoggingConfiguration property is defined.
         * 
         * @return builder
         * 
         */
        public Builder destinationBucketName(String destinationBucketName) {
            return destinationBucketName(Output.of(destinationBucketName));
        }

        public Builder logFilePrefix(@Nullable Output<String> logFilePrefix) {
            $.logFilePrefix = logFilePrefix;
            return this;
        }

        public Builder logFilePrefix(String logFilePrefix) {
            return logFilePrefix(Output.of(logFilePrefix));
        }

        public BucketLoggingConfigurationArgs build() {
            return $;
        }
    }

}
