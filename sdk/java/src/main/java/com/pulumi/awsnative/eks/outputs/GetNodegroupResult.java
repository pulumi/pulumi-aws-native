// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.eks.outputs;

import com.pulumi.awsnative.eks.outputs.NodegroupLaunchTemplateSpecification;
import com.pulumi.awsnative.eks.outputs.NodegroupScalingConfig;
import com.pulumi.awsnative.eks.outputs.NodegroupTaint;
import com.pulumi.awsnative.eks.outputs.NodegroupUpdateConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNodegroupResult {
    private @Nullable String arn;
    private @Nullable String id;
    /**
     * @return The Kubernetes labels to be applied to the nodes in the node group when they are created.
     * 
     */
    private @Nullable Object labels;
    /**
     * @return An object representing a node group&#39;s launch template specification.
     * 
     */
    private @Nullable NodegroupLaunchTemplateSpecification launchTemplate;
    /**
     * @return The AMI version of the Amazon EKS-optimized AMI to use with your node group.
     * 
     */
    private @Nullable String releaseVersion;
    /**
     * @return The scaling configuration details for the Auto Scaling group that is created for your node group.
     * 
     */
    private @Nullable NodegroupScalingConfig scalingConfig;
    /**
     * @return The metadata, as key-value pairs, to apply to the node group to assist with categorization and organization. Follows same schema as Labels for consistency.
     * 
     */
    private @Nullable Object tags;
    /**
     * @return The Kubernetes taints to be applied to the nodes in the node group when they are created.
     * 
     */
    private @Nullable List<NodegroupTaint> taints;
    /**
     * @return The node group update configuration.
     * 
     */
    private @Nullable NodegroupUpdateConfig updateConfig;
    /**
     * @return The Kubernetes version to use for your managed nodes.
     * 
     */
    private @Nullable String version;

    private GetNodegroupResult() {}
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The Kubernetes labels to be applied to the nodes in the node group when they are created.
     * 
     */
    public Optional<Object> labels() {
        return Optional.ofNullable(this.labels);
    }
    /**
     * @return An object representing a node group&#39;s launch template specification.
     * 
     */
    public Optional<NodegroupLaunchTemplateSpecification> launchTemplate() {
        return Optional.ofNullable(this.launchTemplate);
    }
    /**
     * @return The AMI version of the Amazon EKS-optimized AMI to use with your node group.
     * 
     */
    public Optional<String> releaseVersion() {
        return Optional.ofNullable(this.releaseVersion);
    }
    /**
     * @return The scaling configuration details for the Auto Scaling group that is created for your node group.
     * 
     */
    public Optional<NodegroupScalingConfig> scalingConfig() {
        return Optional.ofNullable(this.scalingConfig);
    }
    /**
     * @return The metadata, as key-value pairs, to apply to the node group to assist with categorization and organization. Follows same schema as Labels for consistency.
     * 
     */
    public Optional<Object> tags() {
        return Optional.ofNullable(this.tags);
    }
    /**
     * @return The Kubernetes taints to be applied to the nodes in the node group when they are created.
     * 
     */
    public List<NodegroupTaint> taints() {
        return this.taints == null ? List.of() : this.taints;
    }
    /**
     * @return The node group update configuration.
     * 
     */
    public Optional<NodegroupUpdateConfig> updateConfig() {
        return Optional.ofNullable(this.updateConfig);
    }
    /**
     * @return The Kubernetes version to use for your managed nodes.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNodegroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String id;
        private @Nullable Object labels;
        private @Nullable NodegroupLaunchTemplateSpecification launchTemplate;
        private @Nullable String releaseVersion;
        private @Nullable NodegroupScalingConfig scalingConfig;
        private @Nullable Object tags;
        private @Nullable List<NodegroupTaint> taints;
        private @Nullable NodegroupUpdateConfig updateConfig;
        private @Nullable String version;
        public Builder() {}
        public Builder(GetNodegroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.launchTemplate = defaults.launchTemplate;
    	      this.releaseVersion = defaults.releaseVersion;
    	      this.scalingConfig = defaults.scalingConfig;
    	      this.tags = defaults.tags;
    	      this.taints = defaults.taints;
    	      this.updateConfig = defaults.updateConfig;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable Object labels) {
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder launchTemplate(@Nullable NodegroupLaunchTemplateSpecification launchTemplate) {
            this.launchTemplate = launchTemplate;
            return this;
        }
        @CustomType.Setter
        public Builder releaseVersion(@Nullable String releaseVersion) {
            this.releaseVersion = releaseVersion;
            return this;
        }
        @CustomType.Setter
        public Builder scalingConfig(@Nullable NodegroupScalingConfig scalingConfig) {
            this.scalingConfig = scalingConfig;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Object tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder taints(@Nullable List<NodegroupTaint> taints) {
            this.taints = taints;
            return this;
        }
        public Builder taints(NodegroupTaint... taints) {
            return taints(List.of(taints));
        }
        @CustomType.Setter
        public Builder updateConfig(@Nullable NodegroupUpdateConfig updateConfig) {
            this.updateConfig = updateConfig;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetNodegroupResult build() {
            final var o = new GetNodegroupResult();
            o.arn = arn;
            o.id = id;
            o.labels = labels;
            o.launchTemplate = launchTemplate;
            o.releaseVersion = releaseVersion;
            o.scalingConfig = scalingConfig;
            o.tags = tags;
            o.taints = taints;
            o.updateConfig = updateConfig;
            o.version = version;
            return o;
        }
    }
}
