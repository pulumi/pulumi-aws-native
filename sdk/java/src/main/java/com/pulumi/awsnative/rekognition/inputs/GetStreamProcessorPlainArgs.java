// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.rekognition.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetStreamProcessorPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetStreamProcessorPlainArgs Empty = new GetStreamProcessorPlainArgs();

    /**
     * Name of the stream processor. It&#39;s an identifier you assign to the stream processor. You can use it to manage the stream processor.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Name of the stream processor. It&#39;s an identifier you assign to the stream processor. You can use it to manage the stream processor.
     * 
     */
    public String name() {
        return this.name;
    }

    private GetStreamProcessorPlainArgs() {}

    private GetStreamProcessorPlainArgs(GetStreamProcessorPlainArgs $) {
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStreamProcessorPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStreamProcessorPlainArgs $;

        public Builder() {
            $ = new GetStreamProcessorPlainArgs();
        }

        public Builder(GetStreamProcessorPlainArgs defaults) {
            $ = new GetStreamProcessorPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the stream processor. It&#39;s an identifier you assign to the stream processor. You can use it to manage the stream processor.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public GetStreamProcessorPlainArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
