// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.aps;

import com.pulumi.awsnative.aps.inputs.RuleGroupsNamespaceTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RuleGroupsNamespaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final RuleGroupsNamespaceArgs Empty = new RuleGroupsNamespaceArgs();

    /**
     * The RuleGroupsNamespace data.
     * 
     */
    @Import(name="data", required=true)
    private Output<String> data;

    /**
     * @return The RuleGroupsNamespace data.
     * 
     */
    public Output<String> data() {
        return this.data;
    }

    /**
     * The RuleGroupsNamespace name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The RuleGroupsNamespace name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<RuleGroupsNamespaceTagArgs>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public Optional<Output<List<RuleGroupsNamespaceTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Required to identify a specific APS Workspace associated with this RuleGroupsNamespace.
     * 
     */
    @Import(name="workspace", required=true)
    private Output<String> workspace;

    /**
     * @return Required to identify a specific APS Workspace associated with this RuleGroupsNamespace.
     * 
     */
    public Output<String> workspace() {
        return this.workspace;
    }

    private RuleGroupsNamespaceArgs() {}

    private RuleGroupsNamespaceArgs(RuleGroupsNamespaceArgs $) {
        this.data = $.data;
        this.name = $.name;
        this.tags = $.tags;
        this.workspace = $.workspace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuleGroupsNamespaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuleGroupsNamespaceArgs $;

        public Builder() {
            $ = new RuleGroupsNamespaceArgs();
        }

        public Builder(RuleGroupsNamespaceArgs defaults) {
            $ = new RuleGroupsNamespaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param data The RuleGroupsNamespace data.
         * 
         * @return builder
         * 
         */
        public Builder data(Output<String> data) {
            $.data = data;
            return this;
        }

        /**
         * @param data The RuleGroupsNamespace data.
         * 
         * @return builder
         * 
         */
        public Builder data(String data) {
            return data(Output.of(data));
        }

        /**
         * @param name The RuleGroupsNamespace name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The RuleGroupsNamespace name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<RuleGroupsNamespaceTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<RuleGroupsNamespaceTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags An array of key-value pairs to apply to this resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(RuleGroupsNamespaceTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param workspace Required to identify a specific APS Workspace associated with this RuleGroupsNamespace.
         * 
         * @return builder
         * 
         */
        public Builder workspace(Output<String> workspace) {
            $.workspace = workspace;
            return this;
        }

        /**
         * @param workspace Required to identify a specific APS Workspace associated with this RuleGroupsNamespace.
         * 
         * @return builder
         * 
         */
        public Builder workspace(String workspace) {
            return workspace(Output.of(workspace));
        }

        public RuleGroupsNamespaceArgs build() {
            $.data = Objects.requireNonNull($.data, "expected parameter 'data' to be non-null");
            $.workspace = Objects.requireNonNull($.workspace, "expected parameter 'workspace' to be non-null");
            return $;
        }
    }

}
