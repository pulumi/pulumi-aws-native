// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.outputs;

import com.pulumi.awsnative.sagemaker.outputs.ModelPackageContainerDefinition;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ModelPackageInferenceSpecification {
    /**
     * @return The Amazon ECR registry path of the Docker image that contains the inference code.
     * 
     */
    private List<ModelPackageContainerDefinition> containers;
    /**
     * @return The supported MIME types for the input data.
     * 
     */
    private List<String> supportedContentTypes;
    /**
     * @return A list of the instance types that are used to generate inferences in real-time
     * 
     */
    private @Nullable List<String> supportedRealtimeInferenceInstanceTypes;
    /**
     * @return The supported MIME types for the output data.
     * 
     */
    private List<String> supportedResponseMIMETypes;
    /**
     * @return A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.
     * 
     */
    private @Nullable List<String> supportedTransformInstanceTypes;

    private ModelPackageInferenceSpecification() {}
    /**
     * @return The Amazon ECR registry path of the Docker image that contains the inference code.
     * 
     */
    public List<ModelPackageContainerDefinition> containers() {
        return this.containers;
    }
    /**
     * @return The supported MIME types for the input data.
     * 
     */
    public List<String> supportedContentTypes() {
        return this.supportedContentTypes;
    }
    /**
     * @return A list of the instance types that are used to generate inferences in real-time
     * 
     */
    public List<String> supportedRealtimeInferenceInstanceTypes() {
        return this.supportedRealtimeInferenceInstanceTypes == null ? List.of() : this.supportedRealtimeInferenceInstanceTypes;
    }
    /**
     * @return The supported MIME types for the output data.
     * 
     */
    public List<String> supportedResponseMIMETypes() {
        return this.supportedResponseMIMETypes;
    }
    /**
     * @return A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.
     * 
     */
    public List<String> supportedTransformInstanceTypes() {
        return this.supportedTransformInstanceTypes == null ? List.of() : this.supportedTransformInstanceTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelPackageInferenceSpecification defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<ModelPackageContainerDefinition> containers;
        private List<String> supportedContentTypes;
        private @Nullable List<String> supportedRealtimeInferenceInstanceTypes;
        private List<String> supportedResponseMIMETypes;
        private @Nullable List<String> supportedTransformInstanceTypes;
        public Builder() {}
        public Builder(ModelPackageInferenceSpecification defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containers = defaults.containers;
    	      this.supportedContentTypes = defaults.supportedContentTypes;
    	      this.supportedRealtimeInferenceInstanceTypes = defaults.supportedRealtimeInferenceInstanceTypes;
    	      this.supportedResponseMIMETypes = defaults.supportedResponseMIMETypes;
    	      this.supportedTransformInstanceTypes = defaults.supportedTransformInstanceTypes;
        }

        @CustomType.Setter
        public Builder containers(List<ModelPackageContainerDefinition> containers) {
            this.containers = Objects.requireNonNull(containers);
            return this;
        }
        public Builder containers(ModelPackageContainerDefinition... containers) {
            return containers(List.of(containers));
        }
        @CustomType.Setter
        public Builder supportedContentTypes(List<String> supportedContentTypes) {
            this.supportedContentTypes = Objects.requireNonNull(supportedContentTypes);
            return this;
        }
        public Builder supportedContentTypes(String... supportedContentTypes) {
            return supportedContentTypes(List.of(supportedContentTypes));
        }
        @CustomType.Setter
        public Builder supportedRealtimeInferenceInstanceTypes(@Nullable List<String> supportedRealtimeInferenceInstanceTypes) {
            this.supportedRealtimeInferenceInstanceTypes = supportedRealtimeInferenceInstanceTypes;
            return this;
        }
        public Builder supportedRealtimeInferenceInstanceTypes(String... supportedRealtimeInferenceInstanceTypes) {
            return supportedRealtimeInferenceInstanceTypes(List.of(supportedRealtimeInferenceInstanceTypes));
        }
        @CustomType.Setter
        public Builder supportedResponseMIMETypes(List<String> supportedResponseMIMETypes) {
            this.supportedResponseMIMETypes = Objects.requireNonNull(supportedResponseMIMETypes);
            return this;
        }
        public Builder supportedResponseMIMETypes(String... supportedResponseMIMETypes) {
            return supportedResponseMIMETypes(List.of(supportedResponseMIMETypes));
        }
        @CustomType.Setter
        public Builder supportedTransformInstanceTypes(@Nullable List<String> supportedTransformInstanceTypes) {
            this.supportedTransformInstanceTypes = supportedTransformInstanceTypes;
            return this;
        }
        public Builder supportedTransformInstanceTypes(String... supportedTransformInstanceTypes) {
            return supportedTransformInstanceTypes(List.of(supportedTransformInstanceTypes));
        }
        public ModelPackageInferenceSpecification build() {
            final var o = new ModelPackageInferenceSpecification();
            o.containers = containers;
            o.supportedContentTypes = supportedContentTypes;
            o.supportedRealtimeInferenceInstanceTypes = supportedRealtimeInferenceInstanceTypes;
            o.supportedResponseMIMETypes = supportedResponseMIMETypes;
            o.supportedTransformInstanceTypes = supportedTransformInstanceTypes;
            return o;
        }
    }
}
