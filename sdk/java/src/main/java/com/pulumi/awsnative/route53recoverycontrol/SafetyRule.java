// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.route53recoverycontrol;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.route53recoverycontrol.SafetyRuleArgs;
import com.pulumi.awsnative.route53recoverycontrol.enums.SafetyRuleStatus;
import com.pulumi.awsnative.route53recoverycontrol.outputs.SafetyRuleAssertionRule;
import com.pulumi.awsnative.route53recoverycontrol.outputs.SafetyRuleGatingRule;
import com.pulumi.awsnative.route53recoverycontrol.outputs.SafetyRuleRuleConfig;
import com.pulumi.awsnative.route53recoverycontrol.outputs.SafetyRuleTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource schema for AWS Route53 Recovery Control basic constructs and validation rules.
 * 
 */
@ResourceType(type="aws-native:route53recoverycontrol:SafetyRule")
public class SafetyRule extends com.pulumi.resources.CustomResource {
    @Export(name="assertionRule", type=SafetyRuleAssertionRule.class, parameters={})
    private Output</* @Nullable */ SafetyRuleAssertionRule> assertionRule;

    public Output<Optional<SafetyRuleAssertionRule>> assertionRule() {
        return Codegen.optional(this.assertionRule);
    }
    /**
     * The Amazon Resource Name (ARN) of the control panel.
     * 
     */
    @Export(name="controlPanelArn", type=String.class, parameters={})
    private Output</* @Nullable */ String> controlPanelArn;

    /**
     * @return The Amazon Resource Name (ARN) of the control panel.
     * 
     */
    public Output<Optional<String>> controlPanelArn() {
        return Codegen.optional(this.controlPanelArn);
    }
    @Export(name="gatingRule", type=SafetyRuleGatingRule.class, parameters={})
    private Output</* @Nullable */ SafetyRuleGatingRule> gatingRule;

    public Output<Optional<SafetyRuleGatingRule>> gatingRule() {
        return Codegen.optional(this.gatingRule);
    }
    @Export(name="name", type=String.class, parameters={})
    private Output</* @Nullable */ String> name;

    public Output<Optional<String>> name() {
        return Codegen.optional(this.name);
    }
    @Export(name="ruleConfig", type=SafetyRuleRuleConfig.class, parameters={})
    private Output</* @Nullable */ SafetyRuleRuleConfig> ruleConfig;

    public Output<Optional<SafetyRuleRuleConfig>> ruleConfig() {
        return Codegen.optional(this.ruleConfig);
    }
    /**
     * The Amazon Resource Name (ARN) of the safety rule.
     * 
     */
    @Export(name="safetyRuleArn", type=String.class, parameters={})
    private Output<String> safetyRuleArn;

    /**
     * @return The Amazon Resource Name (ARN) of the safety rule.
     * 
     */
    public Output<String> safetyRuleArn() {
        return this.safetyRuleArn;
    }
    /**
     * The deployment status of the routing control. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.
     * 
     */
    @Export(name="status", type=SafetyRuleStatus.class, parameters={})
    private Output<SafetyRuleStatus> status;

    /**
     * @return The deployment status of the routing control. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.
     * 
     */
    public Output<SafetyRuleStatus> status() {
        return this.status;
    }
    /**
     * A collection of tags associated with a resource
     * 
     */
    @Export(name="tags", type=List.class, parameters={SafetyRuleTag.class})
    private Output</* @Nullable */ List<SafetyRuleTag>> tags;

    /**
     * @return A collection of tags associated with a resource
     * 
     */
    public Output<Optional<List<SafetyRuleTag>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SafetyRule(String name) {
        this(name, SafetyRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SafetyRule(String name, @Nullable SafetyRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SafetyRule(String name, @Nullable SafetyRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:route53recoverycontrol:SafetyRule", name, args == null ? SafetyRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SafetyRule(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:route53recoverycontrol:SafetyRule", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SafetyRule get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SafetyRule(name, id, options);
    }
}
