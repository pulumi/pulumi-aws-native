// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.rekognition;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.rekognition.StreamProcessorArgs;
import com.pulumi.awsnative.rekognition.outputs.StreamProcessorBoundingBox;
import com.pulumi.awsnative.rekognition.outputs.StreamProcessorConnectedHomeSettings;
import com.pulumi.awsnative.rekognition.outputs.StreamProcessorDataSharingPreference;
import com.pulumi.awsnative.rekognition.outputs.StreamProcessorFaceSearchSettings;
import com.pulumi.awsnative.rekognition.outputs.StreamProcessorKinesisDataStream;
import com.pulumi.awsnative.rekognition.outputs.StreamProcessorKinesisVideoStream;
import com.pulumi.awsnative.rekognition.outputs.StreamProcessorNotificationChannel;
import com.pulumi.awsnative.rekognition.outputs.StreamProcessorPoint;
import com.pulumi.awsnative.rekognition.outputs.StreamProcessorS3Destination;
import com.pulumi.awsnative.rekognition.outputs.StreamProcessorTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The AWS::Rekognition::StreamProcessor type is used to create an Amazon Rekognition StreamProcessor that you can use to analyze streaming videos.
 * 
 */
@ResourceType(type="aws-native:rekognition:StreamProcessor")
public class StreamProcessor extends com.pulumi.resources.CustomResource {
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    public Output<String> arn() {
        return this.arn;
    }
    /**
     * The BoundingBoxRegionsOfInterest specifies an array of bounding boxes of interest in the video frames to analyze, as part of connected home feature. If an object is partially in a region of interest, Rekognition will tag it as detected if the overlap of the object with the region-of-interest is greater than 20%.
     * 
     */
    @Export(name="boundingBoxRegionsOfInterest", type=List.class, parameters={StreamProcessorBoundingBox.class})
    private Output</* @Nullable */ List<StreamProcessorBoundingBox>> boundingBoxRegionsOfInterest;

    /**
     * @return The BoundingBoxRegionsOfInterest specifies an array of bounding boxes of interest in the video frames to analyze, as part of connected home feature. If an object is partially in a region of interest, Rekognition will tag it as detected if the overlap of the object with the region-of-interest is greater than 20%.
     * 
     */
    public Output<Optional<List<StreamProcessorBoundingBox>>> boundingBoxRegionsOfInterest() {
        return Codegen.optional(this.boundingBoxRegionsOfInterest);
    }
    @Export(name="connectedHomeSettings", type=StreamProcessorConnectedHomeSettings.class, parameters={})
    private Output</* @Nullable */ StreamProcessorConnectedHomeSettings> connectedHomeSettings;

    public Output<Optional<StreamProcessorConnectedHomeSettings>> connectedHomeSettings() {
        return Codegen.optional(this.connectedHomeSettings);
    }
    @Export(name="dataSharingPreference", type=StreamProcessorDataSharingPreference.class, parameters={})
    private Output</* @Nullable */ StreamProcessorDataSharingPreference> dataSharingPreference;

    public Output<Optional<StreamProcessorDataSharingPreference>> dataSharingPreference() {
        return Codegen.optional(this.dataSharingPreference);
    }
    @Export(name="faceSearchSettings", type=StreamProcessorFaceSearchSettings.class, parameters={})
    private Output</* @Nullable */ StreamProcessorFaceSearchSettings> faceSearchSettings;

    public Output<Optional<StreamProcessorFaceSearchSettings>> faceSearchSettings() {
        return Codegen.optional(this.faceSearchSettings);
    }
    @Export(name="kinesisDataStream", type=StreamProcessorKinesisDataStream.class, parameters={})
    private Output</* @Nullable */ StreamProcessorKinesisDataStream> kinesisDataStream;

    public Output<Optional<StreamProcessorKinesisDataStream>> kinesisDataStream() {
        return Codegen.optional(this.kinesisDataStream);
    }
    @Export(name="kinesisVideoStream", type=StreamProcessorKinesisVideoStream.class, parameters={})
    private Output<StreamProcessorKinesisVideoStream> kinesisVideoStream;

    public Output<StreamProcessorKinesisVideoStream> kinesisVideoStream() {
        return this.kinesisVideoStream;
    }
    /**
     * The KMS key that is used by Rekognition to encrypt any intermediate customer metadata and store in the customer&#39;s S3 bucket.
     * 
     */
    @Export(name="kmsKeyId", type=String.class, parameters={})
    private Output</* @Nullable */ String> kmsKeyId;

    /**
     * @return The KMS key that is used by Rekognition to encrypt any intermediate customer metadata and store in the customer&#39;s S3 bucket.
     * 
     */
    public Output<Optional<String>> kmsKeyId() {
        return Codegen.optional(this.kmsKeyId);
    }
    /**
     * Name of the stream processor. It&#39;s an identifier you assign to the stream processor. You can use it to manage the stream processor.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output</* @Nullable */ String> name;

    /**
     * @return Name of the stream processor. It&#39;s an identifier you assign to the stream processor. You can use it to manage the stream processor.
     * 
     */
    public Output<Optional<String>> name() {
        return Codegen.optional(this.name);
    }
    @Export(name="notificationChannel", type=StreamProcessorNotificationChannel.class, parameters={})
    private Output</* @Nullable */ StreamProcessorNotificationChannel> notificationChannel;

    public Output<Optional<StreamProcessorNotificationChannel>> notificationChannel() {
        return Codegen.optional(this.notificationChannel);
    }
    /**
     * The PolygonRegionsOfInterest specifies a set of polygon areas of interest in the video frames to analyze, as part of connected home feature. Each polygon is in turn, an ordered list of Point
     * 
     */
    @Export(name="polygonRegionsOfInterest", type=List.class, parameters={List.class})
    private Output</* @Nullable */ List<List<StreamProcessorPoint>>> polygonRegionsOfInterest;

    /**
     * @return The PolygonRegionsOfInterest specifies a set of polygon areas of interest in the video frames to analyze, as part of connected home feature. Each polygon is in turn, an ordered list of Point
     * 
     */
    public Output<Optional<List<List<StreamProcessorPoint>>>> polygonRegionsOfInterest() {
        return Codegen.optional(this.polygonRegionsOfInterest);
    }
    /**
     * ARN of the IAM role that allows access to the stream processor, and provides Rekognition read permissions for KVS stream and write permissions to S3 bucket and SNS topic.
     * 
     */
    @Export(name="roleArn", type=String.class, parameters={})
    private Output<String> roleArn;

    /**
     * @return ARN of the IAM role that allows access to the stream processor, and provides Rekognition read permissions for KVS stream and write permissions to S3 bucket and SNS topic.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }
    @Export(name="s3Destination", type=StreamProcessorS3Destination.class, parameters={})
    private Output</* @Nullable */ StreamProcessorS3Destination> s3Destination;

    public Output<Optional<StreamProcessorS3Destination>> s3Destination() {
        return Codegen.optional(this.s3Destination);
    }
    /**
     * Current status of the stream processor.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return Current status of the stream processor.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Detailed status message about the stream processor.
     * 
     */
    @Export(name="statusMessage", type=String.class, parameters={})
    private Output<String> statusMessage;

    /**
     * @return Detailed status message about the stream processor.
     * 
     */
    public Output<String> statusMessage() {
        return this.statusMessage;
    }
    /**
     * An array of key-value pairs to apply to this resource.
     * 
     */
    @Export(name="tags", type=List.class, parameters={StreamProcessorTag.class})
    private Output</* @Nullable */ List<StreamProcessorTag>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public Output<Optional<List<StreamProcessorTag>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StreamProcessor(String name) {
        this(name, StreamProcessorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StreamProcessor(String name, StreamProcessorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StreamProcessor(String name, StreamProcessorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:rekognition:StreamProcessor", name, args == null ? StreamProcessorArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private StreamProcessor(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:rekognition:StreamProcessor", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StreamProcessor get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StreamProcessor(name, id, options);
    }
}
