// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.emrserverless.inputs;

import com.pulumi.awsnative.emrserverless.inputs.ApplicationWorkerConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class ApplicationInitialCapacityConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationInitialCapacityConfigArgs Empty = new ApplicationInitialCapacityConfigArgs();

    @Import(name="workerConfiguration", required=true)
    private Output<ApplicationWorkerConfigurationArgs> workerConfiguration;

    public Output<ApplicationWorkerConfigurationArgs> workerConfiguration() {
        return this.workerConfiguration;
    }

    /**
     * Initial count of workers to be initialized when an Application is started. This count will be continued to be maintained until the Application is stopped
     * 
     */
    @Import(name="workerCount", required=true)
    private Output<Integer> workerCount;

    /**
     * @return Initial count of workers to be initialized when an Application is started. This count will be continued to be maintained until the Application is stopped
     * 
     */
    public Output<Integer> workerCount() {
        return this.workerCount;
    }

    private ApplicationInitialCapacityConfigArgs() {}

    private ApplicationInitialCapacityConfigArgs(ApplicationInitialCapacityConfigArgs $) {
        this.workerConfiguration = $.workerConfiguration;
        this.workerCount = $.workerCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationInitialCapacityConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationInitialCapacityConfigArgs $;

        public Builder() {
            $ = new ApplicationInitialCapacityConfigArgs();
        }

        public Builder(ApplicationInitialCapacityConfigArgs defaults) {
            $ = new ApplicationInitialCapacityConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder workerConfiguration(Output<ApplicationWorkerConfigurationArgs> workerConfiguration) {
            $.workerConfiguration = workerConfiguration;
            return this;
        }

        public Builder workerConfiguration(ApplicationWorkerConfigurationArgs workerConfiguration) {
            return workerConfiguration(Output.of(workerConfiguration));
        }

        /**
         * @param workerCount Initial count of workers to be initialized when an Application is started. This count will be continued to be maintained until the Application is stopped
         * 
         * @return builder
         * 
         */
        public Builder workerCount(Output<Integer> workerCount) {
            $.workerCount = workerCount;
            return this;
        }

        /**
         * @param workerCount Initial count of workers to be initialized when an Application is started. This count will be continued to be maintained until the Application is stopped
         * 
         * @return builder
         * 
         */
        public Builder workerCount(Integer workerCount) {
            return workerCount(Output.of(workerCount));
        }

        public ApplicationInitialCapacityConfigArgs build() {
            $.workerConfiguration = Objects.requireNonNull($.workerConfiguration, "expected parameter 'workerConfiguration' to be non-null");
            $.workerCount = Objects.requireNonNull($.workerCount, "expected parameter 'workerCount' to be non-null");
            return $;
        }
    }

}
