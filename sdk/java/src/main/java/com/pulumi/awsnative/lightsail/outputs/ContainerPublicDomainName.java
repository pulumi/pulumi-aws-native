// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lightsail.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ContainerPublicDomainName {
    private @Nullable String certificateName;
    /**
     * @return An object that describes the configuration for the containers of the deployment.
     * 
     */
    private @Nullable List<String> domainNames;

    private ContainerPublicDomainName() {}
    public Optional<String> certificateName() {
        return Optional.ofNullable(this.certificateName);
    }
    /**
     * @return An object that describes the configuration for the containers of the deployment.
     * 
     */
    public List<String> domainNames() {
        return this.domainNames == null ? List.of() : this.domainNames;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerPublicDomainName defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String certificateName;
        private @Nullable List<String> domainNames;
        public Builder() {}
        public Builder(ContainerPublicDomainName defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateName = defaults.certificateName;
    	      this.domainNames = defaults.domainNames;
        }

        @CustomType.Setter
        public Builder certificateName(@Nullable String certificateName) {
            this.certificateName = certificateName;
            return this;
        }
        @CustomType.Setter
        public Builder domainNames(@Nullable List<String> domainNames) {
            this.domainNames = domainNames;
            return this;
        }
        public Builder domainNames(String... domainNames) {
            return domainNames(List.of(domainNames));
        }
        public ContainerPublicDomainName build() {
            final var o = new ContainerPublicDomainName();
            o.certificateName = certificateName;
            o.domainNames = domainNames;
            return o;
        }
    }
}
