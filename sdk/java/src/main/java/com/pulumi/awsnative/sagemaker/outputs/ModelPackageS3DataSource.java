// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.sagemaker.outputs;

import com.pulumi.awsnative.sagemaker.enums.ModelPackageS3DataSourceS3DataType;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ModelPackageS3DataSource {
    /**
     * @return The S3 Data Source Type
     * 
     */
    private ModelPackageS3DataSourceS3DataType s3DataType;
    /**
     * @return Depending on the value specified for the S3DataType, identifies either a key name prefix or a manifest.
     * 
     */
    private String s3Uri;

    private ModelPackageS3DataSource() {}
    /**
     * @return The S3 Data Source Type
     * 
     */
    public ModelPackageS3DataSourceS3DataType s3DataType() {
        return this.s3DataType;
    }
    /**
     * @return Depending on the value specified for the S3DataType, identifies either a key name prefix or a manifest.
     * 
     */
    public String s3Uri() {
        return this.s3Uri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelPackageS3DataSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private ModelPackageS3DataSourceS3DataType s3DataType;
        private String s3Uri;
        public Builder() {}
        public Builder(ModelPackageS3DataSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.s3DataType = defaults.s3DataType;
    	      this.s3Uri = defaults.s3Uri;
        }

        @CustomType.Setter
        public Builder s3DataType(ModelPackageS3DataSourceS3DataType s3DataType) {
            this.s3DataType = Objects.requireNonNull(s3DataType);
            return this;
        }
        @CustomType.Setter
        public Builder s3Uri(String s3Uri) {
            this.s3Uri = Objects.requireNonNull(s3Uri);
            return this;
        }
        public ModelPackageS3DataSource build() {
            final var o = new ModelPackageS3DataSource();
            o.s3DataType = s3DataType;
            o.s3Uri = s3Uri;
            return o;
        }
    }
}
