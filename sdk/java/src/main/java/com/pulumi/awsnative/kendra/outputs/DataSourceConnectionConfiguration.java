// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kendra.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DataSourceConnectionConfiguration {
    private String databaseHost;
    private String databaseName;
    private Integer databasePort;
    private String secretArn;
    private String tableName;

    private DataSourceConnectionConfiguration() {}
    public String databaseHost() {
        return this.databaseHost;
    }
    public String databaseName() {
        return this.databaseName;
    }
    public Integer databasePort() {
        return this.databasePort;
    }
    public String secretArn() {
        return this.secretArn;
    }
    public String tableName() {
        return this.tableName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourceConnectionConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String databaseHost;
        private String databaseName;
        private Integer databasePort;
        private String secretArn;
        private String tableName;
        public Builder() {}
        public Builder(DataSourceConnectionConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseHost = defaults.databaseHost;
    	      this.databaseName = defaults.databaseName;
    	      this.databasePort = defaults.databasePort;
    	      this.secretArn = defaults.secretArn;
    	      this.tableName = defaults.tableName;
        }

        @CustomType.Setter
        public Builder databaseHost(String databaseHost) {
            this.databaseHost = Objects.requireNonNull(databaseHost);
            return this;
        }
        @CustomType.Setter
        public Builder databaseName(String databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }
        @CustomType.Setter
        public Builder databasePort(Integer databasePort) {
            this.databasePort = Objects.requireNonNull(databasePort);
            return this;
        }
        @CustomType.Setter
        public Builder secretArn(String secretArn) {
            this.secretArn = Objects.requireNonNull(secretArn);
            return this;
        }
        @CustomType.Setter
        public Builder tableName(String tableName) {
            this.tableName = Objects.requireNonNull(tableName);
            return this;
        }
        public DataSourceConnectionConfiguration build() {
            final var o = new DataSourceConnectionConfiguration();
            o.databaseHost = databaseHost;
            o.databaseName = databaseName;
            o.databasePort = databasePort;
            o.secretArn = secretArn;
            o.tableName = tableName;
            return o;
        }
    }
}
