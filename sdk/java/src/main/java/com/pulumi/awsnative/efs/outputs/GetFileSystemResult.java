// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.efs.outputs;

import com.pulumi.awsnative.efs.outputs.FileSystemBackupPolicy;
import com.pulumi.awsnative.efs.outputs.FileSystemElasticFileSystemTag;
import com.pulumi.awsnative.efs.outputs.FileSystemLifecyclePolicy;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFileSystemResult {
    private @Nullable String arn;
    private @Nullable FileSystemBackupPolicy backupPolicy;
    private @Nullable String fileSystemId;
    private @Nullable Object fileSystemPolicy;
    private @Nullable List<FileSystemElasticFileSystemTag> fileSystemTags;
    private @Nullable List<FileSystemLifecyclePolicy> lifecyclePolicies;
    private @Nullable Double provisionedThroughputInMibps;
    private @Nullable String throughputMode;

    private GetFileSystemResult() {}
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public Optional<FileSystemBackupPolicy> backupPolicy() {
        return Optional.ofNullable(this.backupPolicy);
    }
    public Optional<String> fileSystemId() {
        return Optional.ofNullable(this.fileSystemId);
    }
    public Optional<Object> fileSystemPolicy() {
        return Optional.ofNullable(this.fileSystemPolicy);
    }
    public List<FileSystemElasticFileSystemTag> fileSystemTags() {
        return this.fileSystemTags == null ? List.of() : this.fileSystemTags;
    }
    public List<FileSystemLifecyclePolicy> lifecyclePolicies() {
        return this.lifecyclePolicies == null ? List.of() : this.lifecyclePolicies;
    }
    public Optional<Double> provisionedThroughputInMibps() {
        return Optional.ofNullable(this.provisionedThroughputInMibps);
    }
    public Optional<String> throughputMode() {
        return Optional.ofNullable(this.throughputMode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFileSystemResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable FileSystemBackupPolicy backupPolicy;
        private @Nullable String fileSystemId;
        private @Nullable Object fileSystemPolicy;
        private @Nullable List<FileSystemElasticFileSystemTag> fileSystemTags;
        private @Nullable List<FileSystemLifecyclePolicy> lifecyclePolicies;
        private @Nullable Double provisionedThroughputInMibps;
        private @Nullable String throughputMode;
        public Builder() {}
        public Builder(GetFileSystemResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.backupPolicy = defaults.backupPolicy;
    	      this.fileSystemId = defaults.fileSystemId;
    	      this.fileSystemPolicy = defaults.fileSystemPolicy;
    	      this.fileSystemTags = defaults.fileSystemTags;
    	      this.lifecyclePolicies = defaults.lifecyclePolicies;
    	      this.provisionedThroughputInMibps = defaults.provisionedThroughputInMibps;
    	      this.throughputMode = defaults.throughputMode;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder backupPolicy(@Nullable FileSystemBackupPolicy backupPolicy) {
            this.backupPolicy = backupPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemId(@Nullable String fileSystemId) {
            this.fileSystemId = fileSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemPolicy(@Nullable Object fileSystemPolicy) {
            this.fileSystemPolicy = fileSystemPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemTags(@Nullable List<FileSystemElasticFileSystemTag> fileSystemTags) {
            this.fileSystemTags = fileSystemTags;
            return this;
        }
        public Builder fileSystemTags(FileSystemElasticFileSystemTag... fileSystemTags) {
            return fileSystemTags(List.of(fileSystemTags));
        }
        @CustomType.Setter
        public Builder lifecyclePolicies(@Nullable List<FileSystemLifecyclePolicy> lifecyclePolicies) {
            this.lifecyclePolicies = lifecyclePolicies;
            return this;
        }
        public Builder lifecyclePolicies(FileSystemLifecyclePolicy... lifecyclePolicies) {
            return lifecyclePolicies(List.of(lifecyclePolicies));
        }
        @CustomType.Setter
        public Builder provisionedThroughputInMibps(@Nullable Double provisionedThroughputInMibps) {
            this.provisionedThroughputInMibps = provisionedThroughputInMibps;
            return this;
        }
        @CustomType.Setter
        public Builder throughputMode(@Nullable String throughputMode) {
            this.throughputMode = throughputMode;
            return this;
        }
        public GetFileSystemResult build() {
            final var o = new GetFileSystemResult();
            o.arn = arn;
            o.backupPolicy = backupPolicy;
            o.fileSystemId = fileSystemId;
            o.fileSystemPolicy = fileSystemPolicy;
            o.fileSystemTags = fileSystemTags;
            o.lifecyclePolicies = lifecyclePolicies;
            o.provisionedThroughputInMibps = provisionedThroughputInMibps;
            o.throughputMode = throughputMode;
            return o;
        }
    }
}
