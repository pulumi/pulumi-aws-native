// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


public final class DataSourceOracleParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceOracleParametersArgs Empty = new DataSourceOracleParametersArgs();

    @Import(name="database", required=true)
    private Output<String> database;

    public Output<String> database() {
        return this.database;
    }

    @Import(name="host", required=true)
    private Output<String> host;

    public Output<String> host() {
        return this.host;
    }

    @Import(name="port", required=true)
    private Output<Double> port;

    public Output<Double> port() {
        return this.port;
    }

    private DataSourceOracleParametersArgs() {}

    private DataSourceOracleParametersArgs(DataSourceOracleParametersArgs $) {
        this.database = $.database;
        this.host = $.host;
        this.port = $.port;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceOracleParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceOracleParametersArgs $;

        public Builder() {
            $ = new DataSourceOracleParametersArgs();
        }

        public Builder(DataSourceOracleParametersArgs defaults) {
            $ = new DataSourceOracleParametersArgs(Objects.requireNonNull(defaults));
        }

        public Builder database(Output<String> database) {
            $.database = database;
            return this;
        }

        public Builder database(String database) {
            return database(Output.of(database));
        }

        public Builder host(Output<String> host) {
            $.host = host;
            return this;
        }

        public Builder host(String host) {
            return host(Output.of(host));
        }

        public Builder port(Output<Double> port) {
            $.port = port;
            return this;
        }

        public Builder port(Double port) {
            return port(Output.of(port));
        }

        public DataSourceOracleParametersArgs build() {
            $.database = Objects.requireNonNull($.database, "expected parameter 'database' to be non-null");
            $.host = Objects.requireNonNull($.host, "expected parameter 'host' to be non-null");
            $.port = Objects.requireNonNull($.port, "expected parameter 'port' to be non-null");
            return $;
        }
    }

}
