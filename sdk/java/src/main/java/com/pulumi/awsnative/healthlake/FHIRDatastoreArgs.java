// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.healthlake;

import com.pulumi.awsnative.healthlake.enums.FHIRDatastoreDatastoreTypeVersion;
import com.pulumi.awsnative.healthlake.inputs.FHIRDatastorePreloadDataConfigArgs;
import com.pulumi.awsnative.healthlake.inputs.FHIRDatastoreSseConfigurationArgs;
import com.pulumi.awsnative.healthlake.inputs.FHIRDatastoreTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FHIRDatastoreArgs extends com.pulumi.resources.ResourceArgs {

    public static final FHIRDatastoreArgs Empty = new FHIRDatastoreArgs();

    @Import(name="datastoreName")
    private @Nullable Output<String> datastoreName;

    public Optional<Output<String>> datastoreName() {
        return Optional.ofNullable(this.datastoreName);
    }

    @Import(name="datastoreTypeVersion", required=true)
    private Output<FHIRDatastoreDatastoreTypeVersion> datastoreTypeVersion;

    public Output<FHIRDatastoreDatastoreTypeVersion> datastoreTypeVersion() {
        return this.datastoreTypeVersion;
    }

    @Import(name="preloadDataConfig")
    private @Nullable Output<FHIRDatastorePreloadDataConfigArgs> preloadDataConfig;

    public Optional<Output<FHIRDatastorePreloadDataConfigArgs>> preloadDataConfig() {
        return Optional.ofNullable(this.preloadDataConfig);
    }

    @Import(name="sseConfiguration")
    private @Nullable Output<FHIRDatastoreSseConfigurationArgs> sseConfiguration;

    public Optional<Output<FHIRDatastoreSseConfigurationArgs>> sseConfiguration() {
        return Optional.ofNullable(this.sseConfiguration);
    }

    @Import(name="tags")
    private @Nullable Output<List<FHIRDatastoreTagArgs>> tags;

    public Optional<Output<List<FHIRDatastoreTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private FHIRDatastoreArgs() {}

    private FHIRDatastoreArgs(FHIRDatastoreArgs $) {
        this.datastoreName = $.datastoreName;
        this.datastoreTypeVersion = $.datastoreTypeVersion;
        this.preloadDataConfig = $.preloadDataConfig;
        this.sseConfiguration = $.sseConfiguration;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FHIRDatastoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FHIRDatastoreArgs $;

        public Builder() {
            $ = new FHIRDatastoreArgs();
        }

        public Builder(FHIRDatastoreArgs defaults) {
            $ = new FHIRDatastoreArgs(Objects.requireNonNull(defaults));
        }

        public Builder datastoreName(@Nullable Output<String> datastoreName) {
            $.datastoreName = datastoreName;
            return this;
        }

        public Builder datastoreName(String datastoreName) {
            return datastoreName(Output.of(datastoreName));
        }

        public Builder datastoreTypeVersion(Output<FHIRDatastoreDatastoreTypeVersion> datastoreTypeVersion) {
            $.datastoreTypeVersion = datastoreTypeVersion;
            return this;
        }

        public Builder datastoreTypeVersion(FHIRDatastoreDatastoreTypeVersion datastoreTypeVersion) {
            return datastoreTypeVersion(Output.of(datastoreTypeVersion));
        }

        public Builder preloadDataConfig(@Nullable Output<FHIRDatastorePreloadDataConfigArgs> preloadDataConfig) {
            $.preloadDataConfig = preloadDataConfig;
            return this;
        }

        public Builder preloadDataConfig(FHIRDatastorePreloadDataConfigArgs preloadDataConfig) {
            return preloadDataConfig(Output.of(preloadDataConfig));
        }

        public Builder sseConfiguration(@Nullable Output<FHIRDatastoreSseConfigurationArgs> sseConfiguration) {
            $.sseConfiguration = sseConfiguration;
            return this;
        }

        public Builder sseConfiguration(FHIRDatastoreSseConfigurationArgs sseConfiguration) {
            return sseConfiguration(Output.of(sseConfiguration));
        }

        public Builder tags(@Nullable Output<List<FHIRDatastoreTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<FHIRDatastoreTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(FHIRDatastoreTagArgs... tags) {
            return tags(List.of(tags));
        }

        public FHIRDatastoreArgs build() {
            $.datastoreTypeVersion = Objects.requireNonNull($.datastoreTypeVersion, "expected parameter 'datastoreTypeVersion' to be non-null");
            return $;
        }
    }

}
