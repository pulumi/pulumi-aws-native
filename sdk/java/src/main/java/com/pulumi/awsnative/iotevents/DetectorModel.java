// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotevents;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.iotevents.DetectorModelArgs;
import com.pulumi.awsnative.iotevents.enums.DetectorModelEvaluationMethod;
import com.pulumi.awsnative.iotevents.outputs.DetectorModelDefinition;
import com.pulumi.awsnative.iotevents.outputs.DetectorModelTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The AWS::IoTEvents::DetectorModel resource creates a detector model. You create a *detector model* (a model of your equipment or process) using *states*. For each state, you define conditional (Boolean) logic that evaluates the incoming inputs to detect significant events. When an event is detected, it can change the state or trigger custom-built or predefined actions using other AWS services. You can define additional events that trigger actions when entering or exiting a state and, optionally, when a condition is met. For more information, see [How to Use AWS IoT Events](https://docs.aws.amazon.com/iotevents/latest/developerguide/how-to-use-iotevents.html) in the *AWS IoT Events Developer Guide*.
 * 
 */
@ResourceType(type="aws-native:iotevents:DetectorModel")
public class DetectorModel extends com.pulumi.resources.CustomResource {
    @Export(name="detectorModelDefinition", type=DetectorModelDefinition.class, parameters={})
    private Output<DetectorModelDefinition> detectorModelDefinition;

    public Output<DetectorModelDefinition> detectorModelDefinition() {
        return this.detectorModelDefinition;
    }
    /**
     * A brief description of the detector model.
     * 
     */
    @Export(name="detectorModelDescription", type=String.class, parameters={})
    private Output</* @Nullable */ String> detectorModelDescription;

    /**
     * @return A brief description of the detector model.
     * 
     */
    public Output<Optional<String>> detectorModelDescription() {
        return Codegen.optional(this.detectorModelDescription);
    }
    /**
     * The name of the detector model.
     * 
     */
    @Export(name="detectorModelName", type=String.class, parameters={})
    private Output</* @Nullable */ String> detectorModelName;

    /**
     * @return The name of the detector model.
     * 
     */
    public Output<Optional<String>> detectorModelName() {
        return Codegen.optional(this.detectorModelName);
    }
    /**
     * Information about the order in which events are evaluated and how actions are executed.
     * 
     */
    @Export(name="evaluationMethod", type=DetectorModelEvaluationMethod.class, parameters={})
    private Output</* @Nullable */ DetectorModelEvaluationMethod> evaluationMethod;

    /**
     * @return Information about the order in which events are evaluated and how actions are executed.
     * 
     */
    public Output<Optional<DetectorModelEvaluationMethod>> evaluationMethod() {
        return Codegen.optional(this.evaluationMethod);
    }
    /**
     * The value used to identify a detector instance. When a device or system sends input, a new detector instance with a unique key value is created. AWS IoT Events can continue to route input to its corresponding detector instance based on this identifying information.
     * 
     * This parameter uses a JSON-path expression to select the attribute-value pair in the message payload that is used for identification. To route the message to the correct detector instance, the device must send a message payload that contains the same attribute-value.
     * 
     */
    @Export(name="key", type=String.class, parameters={})
    private Output</* @Nullable */ String> key;

    /**
     * @return The value used to identify a detector instance. When a device or system sends input, a new detector instance with a unique key value is created. AWS IoT Events can continue to route input to its corresponding detector instance based on this identifying information.
     * 
     * This parameter uses a JSON-path expression to select the attribute-value pair in the message payload that is used for identification. To route the message to the correct detector instance, the device must send a message payload that contains the same attribute-value.
     * 
     */
    public Output<Optional<String>> key() {
        return Codegen.optional(this.key);
    }
    /**
     * The ARN of the role that grants permission to AWS IoT Events to perform its operations.
     * 
     */
    @Export(name="roleArn", type=String.class, parameters={})
    private Output<String> roleArn;

    /**
     * @return The ARN of the role that grants permission to AWS IoT Events to perform its operations.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }
    /**
     * An array of key-value pairs to apply to this resource.
     * 
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
     * 
     */
    @Export(name="tags", type=List.class, parameters={DetectorModelTag.class})
    private Output</* @Nullable */ List<DetectorModelTag>> tags;

    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
     * 
     */
    public Output<Optional<List<DetectorModelTag>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DetectorModel(String name) {
        this(name, DetectorModelArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DetectorModel(String name, DetectorModelArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DetectorModel(String name, DetectorModelArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:iotevents:DetectorModel", name, args == null ? DetectorModelArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DetectorModel(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:iotevents:DetectorModel", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DetectorModel get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DetectorModel(name, id, options);
    }
}
