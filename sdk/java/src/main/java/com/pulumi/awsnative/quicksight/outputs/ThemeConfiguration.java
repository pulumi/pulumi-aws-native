// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight.outputs;

import com.pulumi.awsnative.quicksight.outputs.ThemeDataColorPalette;
import com.pulumi.awsnative.quicksight.outputs.ThemeSheetStyle;
import com.pulumi.awsnative.quicksight.outputs.ThemeTypography;
import com.pulumi.awsnative.quicksight.outputs.ThemeUIColorPalette;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ThemeConfiguration {
    private @Nullable ThemeDataColorPalette dataColorPalette;
    private @Nullable ThemeSheetStyle sheet;
    private @Nullable ThemeTypography typography;
    private @Nullable ThemeUIColorPalette uIColorPalette;

    private ThemeConfiguration() {}
    public Optional<ThemeDataColorPalette> dataColorPalette() {
        return Optional.ofNullable(this.dataColorPalette);
    }
    public Optional<ThemeSheetStyle> sheet() {
        return Optional.ofNullable(this.sheet);
    }
    public Optional<ThemeTypography> typography() {
        return Optional.ofNullable(this.typography);
    }
    public Optional<ThemeUIColorPalette> uIColorPalette() {
        return Optional.ofNullable(this.uIColorPalette);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThemeConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ThemeDataColorPalette dataColorPalette;
        private @Nullable ThemeSheetStyle sheet;
        private @Nullable ThemeTypography typography;
        private @Nullable ThemeUIColorPalette uIColorPalette;
        public Builder() {}
        public Builder(ThemeConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataColorPalette = defaults.dataColorPalette;
    	      this.sheet = defaults.sheet;
    	      this.typography = defaults.typography;
    	      this.uIColorPalette = defaults.uIColorPalette;
        }

        @CustomType.Setter
        public Builder dataColorPalette(@Nullable ThemeDataColorPalette dataColorPalette) {
            this.dataColorPalette = dataColorPalette;
            return this;
        }
        @CustomType.Setter
        public Builder sheet(@Nullable ThemeSheetStyle sheet) {
            this.sheet = sheet;
            return this;
        }
        @CustomType.Setter
        public Builder typography(@Nullable ThemeTypography typography) {
            this.typography = typography;
            return this;
        }
        @CustomType.Setter
        public Builder uIColorPalette(@Nullable ThemeUIColorPalette uIColorPalette) {
            this.uIColorPalette = uIColorPalette;
            return this;
        }
        public ThemeConfiguration build() {
            final var o = new ThemeConfiguration();
            o.dataColorPalette = dataColorPalette;
            o.sheet = sheet;
            o.typography = typography;
            o.uIColorPalette = uIColorPalette;
            return o;
        }
    }
}
