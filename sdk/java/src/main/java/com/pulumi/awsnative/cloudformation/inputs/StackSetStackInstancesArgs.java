// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudformation.inputs;

import com.pulumi.awsnative.cloudformation.inputs.StackSetDeploymentTargetsArgs;
import com.pulumi.awsnative.cloudformation.inputs.StackSetParameterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Stack instances in some specific accounts and Regions.
 * 
 */
public final class StackSetStackInstancesArgs extends com.pulumi.resources.ResourceArgs {

    public static final StackSetStackInstancesArgs Empty = new StackSetStackInstancesArgs();

    @Import(name="deploymentTargets", required=true)
    private Output<StackSetDeploymentTargetsArgs> deploymentTargets;

    public Output<StackSetDeploymentTargetsArgs> deploymentTargets() {
        return this.deploymentTargets;
    }

    /**
     * A list of stack set parameters whose values you want to override in the selected stack instances.
     * 
     */
    @Import(name="parameterOverrides")
    private @Nullable Output<List<StackSetParameterArgs>> parameterOverrides;

    /**
     * @return A list of stack set parameters whose values you want to override in the selected stack instances.
     * 
     */
    public Optional<Output<List<StackSetParameterArgs>>> parameterOverrides() {
        return Optional.ofNullable(this.parameterOverrides);
    }

    /**
     * The names of one or more Regions where you want to create stack instances using the specified AWS account(s).
     * 
     */
    @Import(name="regions", required=true)
    private Output<List<String>> regions;

    /**
     * @return The names of one or more Regions where you want to create stack instances using the specified AWS account(s).
     * 
     */
    public Output<List<String>> regions() {
        return this.regions;
    }

    private StackSetStackInstancesArgs() {}

    private StackSetStackInstancesArgs(StackSetStackInstancesArgs $) {
        this.deploymentTargets = $.deploymentTargets;
        this.parameterOverrides = $.parameterOverrides;
        this.regions = $.regions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StackSetStackInstancesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StackSetStackInstancesArgs $;

        public Builder() {
            $ = new StackSetStackInstancesArgs();
        }

        public Builder(StackSetStackInstancesArgs defaults) {
            $ = new StackSetStackInstancesArgs(Objects.requireNonNull(defaults));
        }

        public Builder deploymentTargets(Output<StackSetDeploymentTargetsArgs> deploymentTargets) {
            $.deploymentTargets = deploymentTargets;
            return this;
        }

        public Builder deploymentTargets(StackSetDeploymentTargetsArgs deploymentTargets) {
            return deploymentTargets(Output.of(deploymentTargets));
        }

        /**
         * @param parameterOverrides A list of stack set parameters whose values you want to override in the selected stack instances.
         * 
         * @return builder
         * 
         */
        public Builder parameterOverrides(@Nullable Output<List<StackSetParameterArgs>> parameterOverrides) {
            $.parameterOverrides = parameterOverrides;
            return this;
        }

        /**
         * @param parameterOverrides A list of stack set parameters whose values you want to override in the selected stack instances.
         * 
         * @return builder
         * 
         */
        public Builder parameterOverrides(List<StackSetParameterArgs> parameterOverrides) {
            return parameterOverrides(Output.of(parameterOverrides));
        }

        /**
         * @param parameterOverrides A list of stack set parameters whose values you want to override in the selected stack instances.
         * 
         * @return builder
         * 
         */
        public Builder parameterOverrides(StackSetParameterArgs... parameterOverrides) {
            return parameterOverrides(List.of(parameterOverrides));
        }

        /**
         * @param regions The names of one or more Regions where you want to create stack instances using the specified AWS account(s).
         * 
         * @return builder
         * 
         */
        public Builder regions(Output<List<String>> regions) {
            $.regions = regions;
            return this;
        }

        /**
         * @param regions The names of one or more Regions where you want to create stack instances using the specified AWS account(s).
         * 
         * @return builder
         * 
         */
        public Builder regions(List<String> regions) {
            return regions(Output.of(regions));
        }

        /**
         * @param regions The names of one or more Regions where you want to create stack instances using the specified AWS account(s).
         * 
         * @return builder
         * 
         */
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }

        public StackSetStackInstancesArgs build() {
            $.deploymentTargets = Objects.requireNonNull($.deploymentTargets, "expected parameter 'deploymentTargets' to be non-null");
            $.regions = Objects.requireNonNull($.regions, "expected parameter 'regions' to be non-null");
            return $;
        }
    }

}
