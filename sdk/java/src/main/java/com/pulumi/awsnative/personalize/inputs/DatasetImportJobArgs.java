// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.personalize.inputs;

import com.pulumi.awsnative.personalize.inputs.DatasetImportJobDataSourcePropertiesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Initial DatasetImportJob for the created dataset
 * 
 */
public final class DatasetImportJobArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatasetImportJobArgs Empty = new DatasetImportJobArgs();

    /**
     * The Amazon S3 bucket that contains the training data to import.
     * 
     */
    @Import(name="dataSource")
    private @Nullable Output<DatasetImportJobDataSourcePropertiesArgs> dataSource;

    /**
     * @return The Amazon S3 bucket that contains the training data to import.
     * 
     */
    public Optional<Output<DatasetImportJobDataSourcePropertiesArgs>> dataSource() {
        return Optional.ofNullable(this.dataSource);
    }

    /**
     * The ARN of the dataset that receives the imported data
     * 
     */
    @Import(name="datasetArn")
    private @Nullable Output<String> datasetArn;

    /**
     * @return The ARN of the dataset that receives the imported data
     * 
     */
    public Optional<Output<String>> datasetArn() {
        return Optional.ofNullable(this.datasetArn);
    }

    /**
     * The ARN of the dataset import job
     * 
     */
    @Import(name="datasetImportJobArn")
    private @Nullable Output<String> datasetImportJobArn;

    /**
     * @return The ARN of the dataset import job
     * 
     */
    public Optional<Output<String>> datasetImportJobArn() {
        return Optional.ofNullable(this.datasetImportJobArn);
    }

    /**
     * The name for the dataset import job.
     * 
     */
    @Import(name="jobName")
    private @Nullable Output<String> jobName;

    /**
     * @return The name for the dataset import job.
     * 
     */
    public Optional<Output<String>> jobName() {
        return Optional.ofNullable(this.jobName);
    }

    /**
     * The ARN of the IAM role that has permissions to read from the Amazon S3 data source.
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    /**
     * @return The ARN of the IAM role that has permissions to read from the Amazon S3 data source.
     * 
     */
    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    private DatasetImportJobArgs() {}

    private DatasetImportJobArgs(DatasetImportJobArgs $) {
        this.dataSource = $.dataSource;
        this.datasetArn = $.datasetArn;
        this.datasetImportJobArn = $.datasetImportJobArn;
        this.jobName = $.jobName;
        this.roleArn = $.roleArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetImportJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetImportJobArgs $;

        public Builder() {
            $ = new DatasetImportJobArgs();
        }

        public Builder(DatasetImportJobArgs defaults) {
            $ = new DatasetImportJobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataSource The Amazon S3 bucket that contains the training data to import.
         * 
         * @return builder
         * 
         */
        public Builder dataSource(@Nullable Output<DatasetImportJobDataSourcePropertiesArgs> dataSource) {
            $.dataSource = dataSource;
            return this;
        }

        /**
         * @param dataSource The Amazon S3 bucket that contains the training data to import.
         * 
         * @return builder
         * 
         */
        public Builder dataSource(DatasetImportJobDataSourcePropertiesArgs dataSource) {
            return dataSource(Output.of(dataSource));
        }

        /**
         * @param datasetArn The ARN of the dataset that receives the imported data
         * 
         * @return builder
         * 
         */
        public Builder datasetArn(@Nullable Output<String> datasetArn) {
            $.datasetArn = datasetArn;
            return this;
        }

        /**
         * @param datasetArn The ARN of the dataset that receives the imported data
         * 
         * @return builder
         * 
         */
        public Builder datasetArn(String datasetArn) {
            return datasetArn(Output.of(datasetArn));
        }

        /**
         * @param datasetImportJobArn The ARN of the dataset import job
         * 
         * @return builder
         * 
         */
        public Builder datasetImportJobArn(@Nullable Output<String> datasetImportJobArn) {
            $.datasetImportJobArn = datasetImportJobArn;
            return this;
        }

        /**
         * @param datasetImportJobArn The ARN of the dataset import job
         * 
         * @return builder
         * 
         */
        public Builder datasetImportJobArn(String datasetImportJobArn) {
            return datasetImportJobArn(Output.of(datasetImportJobArn));
        }

        /**
         * @param jobName The name for the dataset import job.
         * 
         * @return builder
         * 
         */
        public Builder jobName(@Nullable Output<String> jobName) {
            $.jobName = jobName;
            return this;
        }

        /**
         * @param jobName The name for the dataset import job.
         * 
         * @return builder
         * 
         */
        public Builder jobName(String jobName) {
            return jobName(Output.of(jobName));
        }

        /**
         * @param roleArn The ARN of the IAM role that has permissions to read from the Amazon S3 data source.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn The ARN of the IAM role that has permissions to read from the Amazon S3 data source.
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public DatasetImportJobArgs build() {
            return $;
        }
    }

}
