// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2.outputs;

import com.pulumi.awsnative.ec2.outputs.NetworkInsightsAnalysisAnalysisAclRule;
import com.pulumi.awsnative.ec2.outputs.NetworkInsightsAnalysisAnalysisComponent;
import com.pulumi.awsnative.ec2.outputs.NetworkInsightsAnalysisAnalysisLoadBalancerListener;
import com.pulumi.awsnative.ec2.outputs.NetworkInsightsAnalysisAnalysisLoadBalancerTarget;
import com.pulumi.awsnative.ec2.outputs.NetworkInsightsAnalysisAnalysisRouteTableRoute;
import com.pulumi.awsnative.ec2.outputs.NetworkInsightsAnalysisAnalysisSecurityGroupRule;
import com.pulumi.awsnative.ec2.outputs.NetworkInsightsAnalysisPortRange;
import com.pulumi.awsnative.ec2.outputs.NetworkInsightsAnalysisTransitGatewayRouteTableRoute;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NetworkInsightsAnalysisExplanation {
    private @Nullable NetworkInsightsAnalysisAnalysisComponent acl;
    private @Nullable NetworkInsightsAnalysisAnalysisAclRule aclRule;
    private @Nullable String address;
    private @Nullable List<String> addresses;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent attachedTo;
    private @Nullable List<String> availabilityZones;
    private @Nullable List<String> cidrs;
    private @Nullable NetworkInsightsAnalysisAnalysisLoadBalancerListener classicLoadBalancerListener;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent component;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent customerGateway;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent destination;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent destinationVpc;
    private @Nullable String direction;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent elasticLoadBalancerListener;
    private @Nullable String explanationCode;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent ingressRouteTable;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent internetGateway;
    private @Nullable String loadBalancerArn;
    private @Nullable Integer loadBalancerListenerPort;
    private @Nullable NetworkInsightsAnalysisAnalysisLoadBalancerTarget loadBalancerTarget;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent loadBalancerTargetGroup;
    private @Nullable List<NetworkInsightsAnalysisAnalysisComponent> loadBalancerTargetGroups;
    private @Nullable Integer loadBalancerTargetPort;
    private @Nullable String missingComponent;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent natGateway;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent networkInterface;
    private @Nullable String packetField;
    private @Nullable Integer port;
    private @Nullable List<NetworkInsightsAnalysisPortRange> portRanges;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent prefixList;
    private @Nullable List<String> protocols;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent routeTable;
    private @Nullable NetworkInsightsAnalysisAnalysisRouteTableRoute routeTableRoute;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent securityGroup;
    private @Nullable NetworkInsightsAnalysisAnalysisSecurityGroupRule securityGroupRule;
    private @Nullable List<NetworkInsightsAnalysisAnalysisComponent> securityGroups;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent sourceVpc;
    private @Nullable String state;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent subnet;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent subnetRouteTable;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent transitGateway;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent transitGatewayAttachment;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent transitGatewayRouteTable;
    private @Nullable NetworkInsightsAnalysisTransitGatewayRouteTableRoute transitGatewayRouteTableRoute;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent vpc;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent vpcEndpoint;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent vpcPeeringConnection;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent vpnConnection;
    private @Nullable NetworkInsightsAnalysisAnalysisComponent vpnGateway;

    private NetworkInsightsAnalysisExplanation() {}
    public Optional<NetworkInsightsAnalysisAnalysisComponent> acl() {
        return Optional.ofNullable(this.acl);
    }
    public Optional<NetworkInsightsAnalysisAnalysisAclRule> aclRule() {
        return Optional.ofNullable(this.aclRule);
    }
    public Optional<String> address() {
        return Optional.ofNullable(this.address);
    }
    public List<String> addresses() {
        return this.addresses == null ? List.of() : this.addresses;
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> attachedTo() {
        return Optional.ofNullable(this.attachedTo);
    }
    public List<String> availabilityZones() {
        return this.availabilityZones == null ? List.of() : this.availabilityZones;
    }
    public List<String> cidrs() {
        return this.cidrs == null ? List.of() : this.cidrs;
    }
    public Optional<NetworkInsightsAnalysisAnalysisLoadBalancerListener> classicLoadBalancerListener() {
        return Optional.ofNullable(this.classicLoadBalancerListener);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> component() {
        return Optional.ofNullable(this.component);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> customerGateway() {
        return Optional.ofNullable(this.customerGateway);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> destination() {
        return Optional.ofNullable(this.destination);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> destinationVpc() {
        return Optional.ofNullable(this.destinationVpc);
    }
    public Optional<String> direction() {
        return Optional.ofNullable(this.direction);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> elasticLoadBalancerListener() {
        return Optional.ofNullable(this.elasticLoadBalancerListener);
    }
    public Optional<String> explanationCode() {
        return Optional.ofNullable(this.explanationCode);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> ingressRouteTable() {
        return Optional.ofNullable(this.ingressRouteTable);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> internetGateway() {
        return Optional.ofNullable(this.internetGateway);
    }
    public Optional<String> loadBalancerArn() {
        return Optional.ofNullable(this.loadBalancerArn);
    }
    public Optional<Integer> loadBalancerListenerPort() {
        return Optional.ofNullable(this.loadBalancerListenerPort);
    }
    public Optional<NetworkInsightsAnalysisAnalysisLoadBalancerTarget> loadBalancerTarget() {
        return Optional.ofNullable(this.loadBalancerTarget);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> loadBalancerTargetGroup() {
        return Optional.ofNullable(this.loadBalancerTargetGroup);
    }
    public List<NetworkInsightsAnalysisAnalysisComponent> loadBalancerTargetGroups() {
        return this.loadBalancerTargetGroups == null ? List.of() : this.loadBalancerTargetGroups;
    }
    public Optional<Integer> loadBalancerTargetPort() {
        return Optional.ofNullable(this.loadBalancerTargetPort);
    }
    public Optional<String> missingComponent() {
        return Optional.ofNullable(this.missingComponent);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> natGateway() {
        return Optional.ofNullable(this.natGateway);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> networkInterface() {
        return Optional.ofNullable(this.networkInterface);
    }
    public Optional<String> packetField() {
        return Optional.ofNullable(this.packetField);
    }
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    public List<NetworkInsightsAnalysisPortRange> portRanges() {
        return this.portRanges == null ? List.of() : this.portRanges;
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> prefixList() {
        return Optional.ofNullable(this.prefixList);
    }
    public List<String> protocols() {
        return this.protocols == null ? List.of() : this.protocols;
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> routeTable() {
        return Optional.ofNullable(this.routeTable);
    }
    public Optional<NetworkInsightsAnalysisAnalysisRouteTableRoute> routeTableRoute() {
        return Optional.ofNullable(this.routeTableRoute);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> securityGroup() {
        return Optional.ofNullable(this.securityGroup);
    }
    public Optional<NetworkInsightsAnalysisAnalysisSecurityGroupRule> securityGroupRule() {
        return Optional.ofNullable(this.securityGroupRule);
    }
    public List<NetworkInsightsAnalysisAnalysisComponent> securityGroups() {
        return this.securityGroups == null ? List.of() : this.securityGroups;
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> sourceVpc() {
        return Optional.ofNullable(this.sourceVpc);
    }
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> subnet() {
        return Optional.ofNullable(this.subnet);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> subnetRouteTable() {
        return Optional.ofNullable(this.subnetRouteTable);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> transitGateway() {
        return Optional.ofNullable(this.transitGateway);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> transitGatewayAttachment() {
        return Optional.ofNullable(this.transitGatewayAttachment);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> transitGatewayRouteTable() {
        return Optional.ofNullable(this.transitGatewayRouteTable);
    }
    public Optional<NetworkInsightsAnalysisTransitGatewayRouteTableRoute> transitGatewayRouteTableRoute() {
        return Optional.ofNullable(this.transitGatewayRouteTableRoute);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> vpc() {
        return Optional.ofNullable(this.vpc);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> vpcEndpoint() {
        return Optional.ofNullable(this.vpcEndpoint);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> vpcPeeringConnection() {
        return Optional.ofNullable(this.vpcPeeringConnection);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> vpnConnection() {
        return Optional.ofNullable(this.vpnConnection);
    }
    public Optional<NetworkInsightsAnalysisAnalysisComponent> vpnGateway() {
        return Optional.ofNullable(this.vpnGateway);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkInsightsAnalysisExplanation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable NetworkInsightsAnalysisAnalysisComponent acl;
        private @Nullable NetworkInsightsAnalysisAnalysisAclRule aclRule;
        private @Nullable String address;
        private @Nullable List<String> addresses;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent attachedTo;
        private @Nullable List<String> availabilityZones;
        private @Nullable List<String> cidrs;
        private @Nullable NetworkInsightsAnalysisAnalysisLoadBalancerListener classicLoadBalancerListener;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent component;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent customerGateway;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent destination;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent destinationVpc;
        private @Nullable String direction;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent elasticLoadBalancerListener;
        private @Nullable String explanationCode;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent ingressRouteTable;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent internetGateway;
        private @Nullable String loadBalancerArn;
        private @Nullable Integer loadBalancerListenerPort;
        private @Nullable NetworkInsightsAnalysisAnalysisLoadBalancerTarget loadBalancerTarget;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent loadBalancerTargetGroup;
        private @Nullable List<NetworkInsightsAnalysisAnalysisComponent> loadBalancerTargetGroups;
        private @Nullable Integer loadBalancerTargetPort;
        private @Nullable String missingComponent;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent natGateway;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent networkInterface;
        private @Nullable String packetField;
        private @Nullable Integer port;
        private @Nullable List<NetworkInsightsAnalysisPortRange> portRanges;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent prefixList;
        private @Nullable List<String> protocols;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent routeTable;
        private @Nullable NetworkInsightsAnalysisAnalysisRouteTableRoute routeTableRoute;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent securityGroup;
        private @Nullable NetworkInsightsAnalysisAnalysisSecurityGroupRule securityGroupRule;
        private @Nullable List<NetworkInsightsAnalysisAnalysisComponent> securityGroups;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent sourceVpc;
        private @Nullable String state;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent subnet;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent subnetRouteTable;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent transitGateway;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent transitGatewayAttachment;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent transitGatewayRouteTable;
        private @Nullable NetworkInsightsAnalysisTransitGatewayRouteTableRoute transitGatewayRouteTableRoute;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent vpc;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent vpcEndpoint;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent vpcPeeringConnection;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent vpnConnection;
        private @Nullable NetworkInsightsAnalysisAnalysisComponent vpnGateway;
        public Builder() {}
        public Builder(NetworkInsightsAnalysisExplanation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acl = defaults.acl;
    	      this.aclRule = defaults.aclRule;
    	      this.address = defaults.address;
    	      this.addresses = defaults.addresses;
    	      this.attachedTo = defaults.attachedTo;
    	      this.availabilityZones = defaults.availabilityZones;
    	      this.cidrs = defaults.cidrs;
    	      this.classicLoadBalancerListener = defaults.classicLoadBalancerListener;
    	      this.component = defaults.component;
    	      this.customerGateway = defaults.customerGateway;
    	      this.destination = defaults.destination;
    	      this.destinationVpc = defaults.destinationVpc;
    	      this.direction = defaults.direction;
    	      this.elasticLoadBalancerListener = defaults.elasticLoadBalancerListener;
    	      this.explanationCode = defaults.explanationCode;
    	      this.ingressRouteTable = defaults.ingressRouteTable;
    	      this.internetGateway = defaults.internetGateway;
    	      this.loadBalancerArn = defaults.loadBalancerArn;
    	      this.loadBalancerListenerPort = defaults.loadBalancerListenerPort;
    	      this.loadBalancerTarget = defaults.loadBalancerTarget;
    	      this.loadBalancerTargetGroup = defaults.loadBalancerTargetGroup;
    	      this.loadBalancerTargetGroups = defaults.loadBalancerTargetGroups;
    	      this.loadBalancerTargetPort = defaults.loadBalancerTargetPort;
    	      this.missingComponent = defaults.missingComponent;
    	      this.natGateway = defaults.natGateway;
    	      this.networkInterface = defaults.networkInterface;
    	      this.packetField = defaults.packetField;
    	      this.port = defaults.port;
    	      this.portRanges = defaults.portRanges;
    	      this.prefixList = defaults.prefixList;
    	      this.protocols = defaults.protocols;
    	      this.routeTable = defaults.routeTable;
    	      this.routeTableRoute = defaults.routeTableRoute;
    	      this.securityGroup = defaults.securityGroup;
    	      this.securityGroupRule = defaults.securityGroupRule;
    	      this.securityGroups = defaults.securityGroups;
    	      this.sourceVpc = defaults.sourceVpc;
    	      this.state = defaults.state;
    	      this.subnet = defaults.subnet;
    	      this.subnetRouteTable = defaults.subnetRouteTable;
    	      this.transitGateway = defaults.transitGateway;
    	      this.transitGatewayAttachment = defaults.transitGatewayAttachment;
    	      this.transitGatewayRouteTable = defaults.transitGatewayRouteTable;
    	      this.transitGatewayRouteTableRoute = defaults.transitGatewayRouteTableRoute;
    	      this.vpc = defaults.vpc;
    	      this.vpcEndpoint = defaults.vpcEndpoint;
    	      this.vpcPeeringConnection = defaults.vpcPeeringConnection;
    	      this.vpnConnection = defaults.vpnConnection;
    	      this.vpnGateway = defaults.vpnGateway;
        }

        @CustomType.Setter
        public Builder acl(@Nullable NetworkInsightsAnalysisAnalysisComponent acl) {
            this.acl = acl;
            return this;
        }
        @CustomType.Setter
        public Builder aclRule(@Nullable NetworkInsightsAnalysisAnalysisAclRule aclRule) {
            this.aclRule = aclRule;
            return this;
        }
        @CustomType.Setter
        public Builder address(@Nullable String address) {
            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder addresses(@Nullable List<String> addresses) {
            this.addresses = addresses;
            return this;
        }
        public Builder addresses(String... addresses) {
            return addresses(List.of(addresses));
        }
        @CustomType.Setter
        public Builder attachedTo(@Nullable NetworkInsightsAnalysisAnalysisComponent attachedTo) {
            this.attachedTo = attachedTo;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityZones(@Nullable List<String> availabilityZones) {
            this.availabilityZones = availabilityZones;
            return this;
        }
        public Builder availabilityZones(String... availabilityZones) {
            return availabilityZones(List.of(availabilityZones));
        }
        @CustomType.Setter
        public Builder cidrs(@Nullable List<String> cidrs) {
            this.cidrs = cidrs;
            return this;
        }
        public Builder cidrs(String... cidrs) {
            return cidrs(List.of(cidrs));
        }
        @CustomType.Setter
        public Builder classicLoadBalancerListener(@Nullable NetworkInsightsAnalysisAnalysisLoadBalancerListener classicLoadBalancerListener) {
            this.classicLoadBalancerListener = classicLoadBalancerListener;
            return this;
        }
        @CustomType.Setter
        public Builder component(@Nullable NetworkInsightsAnalysisAnalysisComponent component) {
            this.component = component;
            return this;
        }
        @CustomType.Setter
        public Builder customerGateway(@Nullable NetworkInsightsAnalysisAnalysisComponent customerGateway) {
            this.customerGateway = customerGateway;
            return this;
        }
        @CustomType.Setter
        public Builder destination(@Nullable NetworkInsightsAnalysisAnalysisComponent destination) {
            this.destination = destination;
            return this;
        }
        @CustomType.Setter
        public Builder destinationVpc(@Nullable NetworkInsightsAnalysisAnalysisComponent destinationVpc) {
            this.destinationVpc = destinationVpc;
            return this;
        }
        @CustomType.Setter
        public Builder direction(@Nullable String direction) {
            this.direction = direction;
            return this;
        }
        @CustomType.Setter
        public Builder elasticLoadBalancerListener(@Nullable NetworkInsightsAnalysisAnalysisComponent elasticLoadBalancerListener) {
            this.elasticLoadBalancerListener = elasticLoadBalancerListener;
            return this;
        }
        @CustomType.Setter
        public Builder explanationCode(@Nullable String explanationCode) {
            this.explanationCode = explanationCode;
            return this;
        }
        @CustomType.Setter
        public Builder ingressRouteTable(@Nullable NetworkInsightsAnalysisAnalysisComponent ingressRouteTable) {
            this.ingressRouteTable = ingressRouteTable;
            return this;
        }
        @CustomType.Setter
        public Builder internetGateway(@Nullable NetworkInsightsAnalysisAnalysisComponent internetGateway) {
            this.internetGateway = internetGateway;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerArn(@Nullable String loadBalancerArn) {
            this.loadBalancerArn = loadBalancerArn;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerListenerPort(@Nullable Integer loadBalancerListenerPort) {
            this.loadBalancerListenerPort = loadBalancerListenerPort;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerTarget(@Nullable NetworkInsightsAnalysisAnalysisLoadBalancerTarget loadBalancerTarget) {
            this.loadBalancerTarget = loadBalancerTarget;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerTargetGroup(@Nullable NetworkInsightsAnalysisAnalysisComponent loadBalancerTargetGroup) {
            this.loadBalancerTargetGroup = loadBalancerTargetGroup;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerTargetGroups(@Nullable List<NetworkInsightsAnalysisAnalysisComponent> loadBalancerTargetGroups) {
            this.loadBalancerTargetGroups = loadBalancerTargetGroups;
            return this;
        }
        public Builder loadBalancerTargetGroups(NetworkInsightsAnalysisAnalysisComponent... loadBalancerTargetGroups) {
            return loadBalancerTargetGroups(List.of(loadBalancerTargetGroups));
        }
        @CustomType.Setter
        public Builder loadBalancerTargetPort(@Nullable Integer loadBalancerTargetPort) {
            this.loadBalancerTargetPort = loadBalancerTargetPort;
            return this;
        }
        @CustomType.Setter
        public Builder missingComponent(@Nullable String missingComponent) {
            this.missingComponent = missingComponent;
            return this;
        }
        @CustomType.Setter
        public Builder natGateway(@Nullable NetworkInsightsAnalysisAnalysisComponent natGateway) {
            this.natGateway = natGateway;
            return this;
        }
        @CustomType.Setter
        public Builder networkInterface(@Nullable NetworkInsightsAnalysisAnalysisComponent networkInterface) {
            this.networkInterface = networkInterface;
            return this;
        }
        @CustomType.Setter
        public Builder packetField(@Nullable String packetField) {
            this.packetField = packetField;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder portRanges(@Nullable List<NetworkInsightsAnalysisPortRange> portRanges) {
            this.portRanges = portRanges;
            return this;
        }
        public Builder portRanges(NetworkInsightsAnalysisPortRange... portRanges) {
            return portRanges(List.of(portRanges));
        }
        @CustomType.Setter
        public Builder prefixList(@Nullable NetworkInsightsAnalysisAnalysisComponent prefixList) {
            this.prefixList = prefixList;
            return this;
        }
        @CustomType.Setter
        public Builder protocols(@Nullable List<String> protocols) {
            this.protocols = protocols;
            return this;
        }
        public Builder protocols(String... protocols) {
            return protocols(List.of(protocols));
        }
        @CustomType.Setter
        public Builder routeTable(@Nullable NetworkInsightsAnalysisAnalysisComponent routeTable) {
            this.routeTable = routeTable;
            return this;
        }
        @CustomType.Setter
        public Builder routeTableRoute(@Nullable NetworkInsightsAnalysisAnalysisRouteTableRoute routeTableRoute) {
            this.routeTableRoute = routeTableRoute;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroup(@Nullable NetworkInsightsAnalysisAnalysisComponent securityGroup) {
            this.securityGroup = securityGroup;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupRule(@Nullable NetworkInsightsAnalysisAnalysisSecurityGroupRule securityGroupRule) {
            this.securityGroupRule = securityGroupRule;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroups(@Nullable List<NetworkInsightsAnalysisAnalysisComponent> securityGroups) {
            this.securityGroups = securityGroups;
            return this;
        }
        public Builder securityGroups(NetworkInsightsAnalysisAnalysisComponent... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }
        @CustomType.Setter
        public Builder sourceVpc(@Nullable NetworkInsightsAnalysisAnalysisComponent sourceVpc) {
            this.sourceVpc = sourceVpc;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subnet(@Nullable NetworkInsightsAnalysisAnalysisComponent subnet) {
            this.subnet = subnet;
            return this;
        }
        @CustomType.Setter
        public Builder subnetRouteTable(@Nullable NetworkInsightsAnalysisAnalysisComponent subnetRouteTable) {
            this.subnetRouteTable = subnetRouteTable;
            return this;
        }
        @CustomType.Setter
        public Builder transitGateway(@Nullable NetworkInsightsAnalysisAnalysisComponent transitGateway) {
            this.transitGateway = transitGateway;
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayAttachment(@Nullable NetworkInsightsAnalysisAnalysisComponent transitGatewayAttachment) {
            this.transitGatewayAttachment = transitGatewayAttachment;
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayRouteTable(@Nullable NetworkInsightsAnalysisAnalysisComponent transitGatewayRouteTable) {
            this.transitGatewayRouteTable = transitGatewayRouteTable;
            return this;
        }
        @CustomType.Setter
        public Builder transitGatewayRouteTableRoute(@Nullable NetworkInsightsAnalysisTransitGatewayRouteTableRoute transitGatewayRouteTableRoute) {
            this.transitGatewayRouteTableRoute = transitGatewayRouteTableRoute;
            return this;
        }
        @CustomType.Setter
        public Builder vpc(@Nullable NetworkInsightsAnalysisAnalysisComponent vpc) {
            this.vpc = vpc;
            return this;
        }
        @CustomType.Setter
        public Builder vpcEndpoint(@Nullable NetworkInsightsAnalysisAnalysisComponent vpcEndpoint) {
            this.vpcEndpoint = vpcEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder vpcPeeringConnection(@Nullable NetworkInsightsAnalysisAnalysisComponent vpcPeeringConnection) {
            this.vpcPeeringConnection = vpcPeeringConnection;
            return this;
        }
        @CustomType.Setter
        public Builder vpnConnection(@Nullable NetworkInsightsAnalysisAnalysisComponent vpnConnection) {
            this.vpnConnection = vpnConnection;
            return this;
        }
        @CustomType.Setter
        public Builder vpnGateway(@Nullable NetworkInsightsAnalysisAnalysisComponent vpnGateway) {
            this.vpnGateway = vpnGateway;
            return this;
        }
        public NetworkInsightsAnalysisExplanation build() {
            final var o = new NetworkInsightsAnalysisExplanation();
            o.acl = acl;
            o.aclRule = aclRule;
            o.address = address;
            o.addresses = addresses;
            o.attachedTo = attachedTo;
            o.availabilityZones = availabilityZones;
            o.cidrs = cidrs;
            o.classicLoadBalancerListener = classicLoadBalancerListener;
            o.component = component;
            o.customerGateway = customerGateway;
            o.destination = destination;
            o.destinationVpc = destinationVpc;
            o.direction = direction;
            o.elasticLoadBalancerListener = elasticLoadBalancerListener;
            o.explanationCode = explanationCode;
            o.ingressRouteTable = ingressRouteTable;
            o.internetGateway = internetGateway;
            o.loadBalancerArn = loadBalancerArn;
            o.loadBalancerListenerPort = loadBalancerListenerPort;
            o.loadBalancerTarget = loadBalancerTarget;
            o.loadBalancerTargetGroup = loadBalancerTargetGroup;
            o.loadBalancerTargetGroups = loadBalancerTargetGroups;
            o.loadBalancerTargetPort = loadBalancerTargetPort;
            o.missingComponent = missingComponent;
            o.natGateway = natGateway;
            o.networkInterface = networkInterface;
            o.packetField = packetField;
            o.port = port;
            o.portRanges = portRanges;
            o.prefixList = prefixList;
            o.protocols = protocols;
            o.routeTable = routeTable;
            o.routeTableRoute = routeTableRoute;
            o.securityGroup = securityGroup;
            o.securityGroupRule = securityGroupRule;
            o.securityGroups = securityGroups;
            o.sourceVpc = sourceVpc;
            o.state = state;
            o.subnet = subnet;
            o.subnetRouteTable = subnetRouteTable;
            o.transitGateway = transitGateway;
            o.transitGatewayAttachment = transitGatewayAttachment;
            o.transitGatewayRouteTable = transitGatewayRouteTable;
            o.transitGatewayRouteTableRoute = transitGatewayRouteTableRoute;
            o.vpc = vpc;
            o.vpcEndpoint = vpcEndpoint;
            o.vpcPeeringConnection = vpcPeeringConnection;
            o.vpnConnection = vpnConnection;
            o.vpnGateway = vpnGateway;
            return o;
        }
    }
}
