// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.route53recoverycontrol.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class SafetyRuleAssertionRule {
    /**
     * @return The routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed. For example, you might include three routing controls, one for each of three AWS Regions.
     * 
     */
    private List<String> assertedControls;
    /**
     * @return An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent &#34;flapping&#34; of state. The wait period is 5000 ms by default, but you can choose a custom value.
     * 
     */
    private Integer waitPeriodMs;

    private SafetyRuleAssertionRule() {}
    /**
     * @return The routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed. For example, you might include three routing controls, one for each of three AWS Regions.
     * 
     */
    public List<String> assertedControls() {
        return this.assertedControls;
    }
    /**
     * @return An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent &#34;flapping&#34; of state. The wait period is 5000 ms by default, but you can choose a custom value.
     * 
     */
    public Integer waitPeriodMs() {
        return this.waitPeriodMs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SafetyRuleAssertionRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> assertedControls;
        private Integer waitPeriodMs;
        public Builder() {}
        public Builder(SafetyRuleAssertionRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assertedControls = defaults.assertedControls;
    	      this.waitPeriodMs = defaults.waitPeriodMs;
        }

        @CustomType.Setter
        public Builder assertedControls(List<String> assertedControls) {
            this.assertedControls = Objects.requireNonNull(assertedControls);
            return this;
        }
        public Builder assertedControls(String... assertedControls) {
            return assertedControls(List.of(assertedControls));
        }
        @CustomType.Setter
        public Builder waitPeriodMs(Integer waitPeriodMs) {
            this.waitPeriodMs = Objects.requireNonNull(waitPeriodMs);
            return this;
        }
        public SafetyRuleAssertionRule build() {
            final var o = new SafetyRuleAssertionRule();
            o.assertedControls = assertedControls;
            o.waitPeriodMs = waitPeriodMs;
            return o;
        }
    }
}
