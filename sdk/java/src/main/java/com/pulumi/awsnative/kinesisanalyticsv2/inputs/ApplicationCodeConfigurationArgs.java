// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.kinesisanalyticsv2.inputs;

import com.pulumi.awsnative.kinesisanalyticsv2.enums.ApplicationCodeConfigurationCodeContentType;
import com.pulumi.awsnative.kinesisanalyticsv2.inputs.ApplicationCodeContentArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


/**
 * Describes code configuration for an application.
 * 
 */
public final class ApplicationCodeConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationCodeConfigurationArgs Empty = new ApplicationCodeConfigurationArgs();

    /**
     * The location and type of the application code.
     * 
     */
    @Import(name="codeContent", required=true)
    private Output<ApplicationCodeContentArgs> codeContent;

    /**
     * @return The location and type of the application code.
     * 
     */
    public Output<ApplicationCodeContentArgs> codeContent() {
        return this.codeContent;
    }

    /**
     * Specifies whether the code content is in text or zip format.
     * 
     */
    @Import(name="codeContentType", required=true)
    private Output<ApplicationCodeConfigurationCodeContentType> codeContentType;

    /**
     * @return Specifies whether the code content is in text or zip format.
     * 
     */
    public Output<ApplicationCodeConfigurationCodeContentType> codeContentType() {
        return this.codeContentType;
    }

    private ApplicationCodeConfigurationArgs() {}

    private ApplicationCodeConfigurationArgs(ApplicationCodeConfigurationArgs $) {
        this.codeContent = $.codeContent;
        this.codeContentType = $.codeContentType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationCodeConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationCodeConfigurationArgs $;

        public Builder() {
            $ = new ApplicationCodeConfigurationArgs();
        }

        public Builder(ApplicationCodeConfigurationArgs defaults) {
            $ = new ApplicationCodeConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param codeContent The location and type of the application code.
         * 
         * @return builder
         * 
         */
        public Builder codeContent(Output<ApplicationCodeContentArgs> codeContent) {
            $.codeContent = codeContent;
            return this;
        }

        /**
         * @param codeContent The location and type of the application code.
         * 
         * @return builder
         * 
         */
        public Builder codeContent(ApplicationCodeContentArgs codeContent) {
            return codeContent(Output.of(codeContent));
        }

        /**
         * @param codeContentType Specifies whether the code content is in text or zip format.
         * 
         * @return builder
         * 
         */
        public Builder codeContentType(Output<ApplicationCodeConfigurationCodeContentType> codeContentType) {
            $.codeContentType = codeContentType;
            return this;
        }

        /**
         * @param codeContentType Specifies whether the code content is in text or zip format.
         * 
         * @return builder
         * 
         */
        public Builder codeContentType(ApplicationCodeConfigurationCodeContentType codeContentType) {
            return codeContentType(Output.of(codeContentType));
        }

        public ApplicationCodeConfigurationArgs build() {
            $.codeContent = Objects.requireNonNull($.codeContent, "expected parameter 'codeContent' to be non-null");
            $.codeContentType = Objects.requireNonNull($.codeContentType, "expected parameter 'codeContentType' to be non-null");
            return $;
        }
    }

}
