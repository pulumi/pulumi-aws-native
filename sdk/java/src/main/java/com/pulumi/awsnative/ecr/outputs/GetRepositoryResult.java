// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ecr.outputs;

import com.pulumi.awsnative.ecr.enums.RepositoryImageTagMutability;
import com.pulumi.awsnative.ecr.outputs.RepositoryImageScanningConfiguration;
import com.pulumi.awsnative.ecr.outputs.RepositoryLifecyclePolicy;
import com.pulumi.awsnative.ecr.outputs.RepositoryTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRepositoryResult {
    private @Nullable String arn;
    private @Nullable RepositoryImageScanningConfiguration imageScanningConfiguration;
    /**
     * @return The image tag mutability setting for the repository.
     * 
     */
    private @Nullable RepositoryImageTagMutability imageTagMutability;
    private @Nullable RepositoryLifecyclePolicy lifecyclePolicy;
    /**
     * @return The JSON repository policy text to apply to the repository. For more information, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/RepositoryPolicyExamples.html in the Amazon Elastic Container Registry User Guide.
     * 
     */
    private @Nullable Object repositoryPolicyText;
    private @Nullable String repositoryUri;
    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    private @Nullable List<RepositoryTag> tags;

    private GetRepositoryResult() {}
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    public Optional<RepositoryImageScanningConfiguration> imageScanningConfiguration() {
        return Optional.ofNullable(this.imageScanningConfiguration);
    }
    /**
     * @return The image tag mutability setting for the repository.
     * 
     */
    public Optional<RepositoryImageTagMutability> imageTagMutability() {
        return Optional.ofNullable(this.imageTagMutability);
    }
    public Optional<RepositoryLifecyclePolicy> lifecyclePolicy() {
        return Optional.ofNullable(this.lifecyclePolicy);
    }
    /**
     * @return The JSON repository policy text to apply to the repository. For more information, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/RepositoryPolicyExamples.html in the Amazon Elastic Container Registry User Guide.
     * 
     */
    public Optional<Object> repositoryPolicyText() {
        return Optional.ofNullable(this.repositoryPolicyText);
    }
    public Optional<String> repositoryUri() {
        return Optional.ofNullable(this.repositoryUri);
    }
    /**
     * @return An array of key-value pairs to apply to this resource.
     * 
     */
    public List<RepositoryTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable RepositoryImageScanningConfiguration imageScanningConfiguration;
        private @Nullable RepositoryImageTagMutability imageTagMutability;
        private @Nullable RepositoryLifecyclePolicy lifecyclePolicy;
        private @Nullable Object repositoryPolicyText;
        private @Nullable String repositoryUri;
        private @Nullable List<RepositoryTag> tags;
        public Builder() {}
        public Builder(GetRepositoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.imageScanningConfiguration = defaults.imageScanningConfiguration;
    	      this.imageTagMutability = defaults.imageTagMutability;
    	      this.lifecyclePolicy = defaults.lifecyclePolicy;
    	      this.repositoryPolicyText = defaults.repositoryPolicyText;
    	      this.repositoryUri = defaults.repositoryUri;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder imageScanningConfiguration(@Nullable RepositoryImageScanningConfiguration imageScanningConfiguration) {
            this.imageScanningConfiguration = imageScanningConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder imageTagMutability(@Nullable RepositoryImageTagMutability imageTagMutability) {
            this.imageTagMutability = imageTagMutability;
            return this;
        }
        @CustomType.Setter
        public Builder lifecyclePolicy(@Nullable RepositoryLifecyclePolicy lifecyclePolicy) {
            this.lifecyclePolicy = lifecyclePolicy;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryPolicyText(@Nullable Object repositoryPolicyText) {
            this.repositoryPolicyText = repositoryPolicyText;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryUri(@Nullable String repositoryUri) {
            this.repositoryUri = repositoryUri;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<RepositoryTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(RepositoryTag... tags) {
            return tags(List.of(tags));
        }
        public GetRepositoryResult build() {
            final var o = new GetRepositoryResult();
            o.arn = arn;
            o.imageScanningConfiguration = imageScanningConfiguration;
            o.imageTagMutability = imageTagMutability;
            o.lifecyclePolicy = lifecyclePolicy;
            o.repositoryPolicyText = repositoryPolicyText;
            o.repositoryUri = repositoryUri;
            o.tags = tags;
            return o;
        }
    }
}
