// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.frauddetector.outputs;

import com.pulumi.awsnative.frauddetector.enums.EventTypeEventVariableDataSource;
import com.pulumi.awsnative.frauddetector.enums.EventTypeEventVariableDataType;
import com.pulumi.awsnative.frauddetector.enums.EventTypeEventVariableVariableType;
import com.pulumi.awsnative.frauddetector.outputs.EventTypeTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EventTypeEventVariable {
    private @Nullable String arn;
    /**
     * @return The time when the event type was created.
     * 
     */
    private @Nullable String createdTime;
    private @Nullable EventTypeEventVariableDataSource dataSource;
    private @Nullable EventTypeEventVariableDataType dataType;
    private @Nullable String defaultValue;
    /**
     * @return The description.
     * 
     */
    private @Nullable String description;
    private @Nullable Boolean inline;
    /**
     * @return The time when the event type was last updated.
     * 
     */
    private @Nullable String lastUpdatedTime;
    private @Nullable String name;
    /**
     * @return Tags associated with this event type.
     * 
     */
    private @Nullable List<EventTypeTag> tags;
    private @Nullable EventTypeEventVariableVariableType variableType;

    private EventTypeEventVariable() {}
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return The time when the event type was created.
     * 
     */
    public Optional<String> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }
    public Optional<EventTypeEventVariableDataSource> dataSource() {
        return Optional.ofNullable(this.dataSource);
    }
    public Optional<EventTypeEventVariableDataType> dataType() {
        return Optional.ofNullable(this.dataType);
    }
    public Optional<String> defaultValue() {
        return Optional.ofNullable(this.defaultValue);
    }
    /**
     * @return The description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<Boolean> inline() {
        return Optional.ofNullable(this.inline);
    }
    /**
     * @return The time when the event type was last updated.
     * 
     */
    public Optional<String> lastUpdatedTime() {
        return Optional.ofNullable(this.lastUpdatedTime);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Tags associated with this event type.
     * 
     */
    public List<EventTypeTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    public Optional<EventTypeEventVariableVariableType> variableType() {
        return Optional.ofNullable(this.variableType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventTypeEventVariable defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable String createdTime;
        private @Nullable EventTypeEventVariableDataSource dataSource;
        private @Nullable EventTypeEventVariableDataType dataType;
        private @Nullable String defaultValue;
        private @Nullable String description;
        private @Nullable Boolean inline;
        private @Nullable String lastUpdatedTime;
        private @Nullable String name;
        private @Nullable List<EventTypeTag> tags;
        private @Nullable EventTypeEventVariableVariableType variableType;
        public Builder() {}
        public Builder(EventTypeEventVariable defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.createdTime = defaults.createdTime;
    	      this.dataSource = defaults.dataSource;
    	      this.dataType = defaults.dataType;
    	      this.defaultValue = defaults.defaultValue;
    	      this.description = defaults.description;
    	      this.inline = defaults.inline;
    	      this.lastUpdatedTime = defaults.lastUpdatedTime;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
    	      this.variableType = defaults.variableType;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder createdTime(@Nullable String createdTime) {
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder dataSource(@Nullable EventTypeEventVariableDataSource dataSource) {
            this.dataSource = dataSource;
            return this;
        }
        @CustomType.Setter
        public Builder dataType(@Nullable EventTypeEventVariableDataType dataType) {
            this.dataType = dataType;
            return this;
        }
        @CustomType.Setter
        public Builder defaultValue(@Nullable String defaultValue) {
            this.defaultValue = defaultValue;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder inline(@Nullable Boolean inline) {
            this.inline = inline;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedTime(@Nullable String lastUpdatedTime) {
            this.lastUpdatedTime = lastUpdatedTime;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<EventTypeTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(EventTypeTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder variableType(@Nullable EventTypeEventVariableVariableType variableType) {
            this.variableType = variableType;
            return this;
        }
        public EventTypeEventVariable build() {
            final var o = new EventTypeEventVariable();
            o.arn = arn;
            o.createdTime = createdTime;
            o.dataSource = dataSource;
            o.dataType = dataType;
            o.defaultValue = defaultValue;
            o.description = description;
            o.inline = inline;
            o.lastUpdatedTime = lastUpdatedTime;
            o.name = name;
            o.tags = tags;
            o.variableType = variableType;
            return o;
        }
    }
}
