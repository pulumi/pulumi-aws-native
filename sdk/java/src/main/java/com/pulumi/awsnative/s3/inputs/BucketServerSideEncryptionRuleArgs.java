// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.inputs;

import com.pulumi.awsnative.s3.inputs.BucketServerSideEncryptionByDefaultArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Specifies the default server-side encryption configuration.
 * 
 */
public final class BucketServerSideEncryptionRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketServerSideEncryptionRuleArgs Empty = new BucketServerSideEncryptionRuleArgs();

    /**
     * Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the BucketKeyEnabled element to true causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled.
     * 
     */
    @Import(name="bucketKeyEnabled")
    private @Nullable Output<Boolean> bucketKeyEnabled;

    /**
     * @return Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the BucketKeyEnabled element to true causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled.
     * 
     */
    public Optional<Output<Boolean>> bucketKeyEnabled() {
        return Optional.ofNullable(this.bucketKeyEnabled);
    }

    @Import(name="serverSideEncryptionByDefault")
    private @Nullable Output<BucketServerSideEncryptionByDefaultArgs> serverSideEncryptionByDefault;

    public Optional<Output<BucketServerSideEncryptionByDefaultArgs>> serverSideEncryptionByDefault() {
        return Optional.ofNullable(this.serverSideEncryptionByDefault);
    }

    private BucketServerSideEncryptionRuleArgs() {}

    private BucketServerSideEncryptionRuleArgs(BucketServerSideEncryptionRuleArgs $) {
        this.bucketKeyEnabled = $.bucketKeyEnabled;
        this.serverSideEncryptionByDefault = $.serverSideEncryptionByDefault;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketServerSideEncryptionRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketServerSideEncryptionRuleArgs $;

        public Builder() {
            $ = new BucketServerSideEncryptionRuleArgs();
        }

        public Builder(BucketServerSideEncryptionRuleArgs defaults) {
            $ = new BucketServerSideEncryptionRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketKeyEnabled Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the BucketKeyEnabled element to true causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled.
         * 
         * @return builder
         * 
         */
        public Builder bucketKeyEnabled(@Nullable Output<Boolean> bucketKeyEnabled) {
            $.bucketKeyEnabled = bucketKeyEnabled;
            return this;
        }

        /**
         * @param bucketKeyEnabled Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the BucketKeyEnabled element to true causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled.
         * 
         * @return builder
         * 
         */
        public Builder bucketKeyEnabled(Boolean bucketKeyEnabled) {
            return bucketKeyEnabled(Output.of(bucketKeyEnabled));
        }

        public Builder serverSideEncryptionByDefault(@Nullable Output<BucketServerSideEncryptionByDefaultArgs> serverSideEncryptionByDefault) {
            $.serverSideEncryptionByDefault = serverSideEncryptionByDefault;
            return this;
        }

        public Builder serverSideEncryptionByDefault(BucketServerSideEncryptionByDefaultArgs serverSideEncryptionByDefault) {
            return serverSideEncryptionByDefault(Output.of(serverSideEncryptionByDefault));
        }

        public BucketServerSideEncryptionRuleArgs build() {
            return $;
        }
    }

}
