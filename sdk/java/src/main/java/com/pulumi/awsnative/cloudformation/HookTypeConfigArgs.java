// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudformation;

import com.pulumi.awsnative.cloudformation.enums.HookTypeConfigConfigurationAlias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HookTypeConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final HookTypeConfigArgs Empty = new HookTypeConfigArgs();

    /**
     * The configuration data for the extension, in this account and region.
     * 
     */
    @Import(name="configuration")
    private @Nullable Output<String> configuration;

    /**
     * @return The configuration data for the extension, in this account and region.
     * 
     */
    public Optional<Output<String>> configuration() {
        return Optional.ofNullable(this.configuration);
    }

    /**
     * An alias by which to refer to this extension configuration data.
     * 
     */
    @Import(name="configurationAlias")
    private @Nullable Output<HookTypeConfigConfigurationAlias> configurationAlias;

    /**
     * @return An alias by which to refer to this extension configuration data.
     * 
     */
    public Optional<Output<HookTypeConfigConfigurationAlias>> configurationAlias() {
        return Optional.ofNullable(this.configurationAlias);
    }

    /**
     * The Amazon Resource Name (ARN) of the type without version number.
     * 
     */
    @Import(name="typeArn")
    private @Nullable Output<String> typeArn;

    /**
     * @return The Amazon Resource Name (ARN) of the type without version number.
     * 
     */
    public Optional<Output<String>> typeArn() {
        return Optional.ofNullable(this.typeArn);
    }

    /**
     * The name of the type being registered.
     * 
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     * 
     */
    @Import(name="typeName")
    private @Nullable Output<String> typeName;

    /**
     * @return The name of the type being registered.
     * 
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     * 
     */
    public Optional<Output<String>> typeName() {
        return Optional.ofNullable(this.typeName);
    }

    private HookTypeConfigArgs() {}

    private HookTypeConfigArgs(HookTypeConfigArgs $) {
        this.configuration = $.configuration;
        this.configurationAlias = $.configurationAlias;
        this.typeArn = $.typeArn;
        this.typeName = $.typeName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HookTypeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HookTypeConfigArgs $;

        public Builder() {
            $ = new HookTypeConfigArgs();
        }

        public Builder(HookTypeConfigArgs defaults) {
            $ = new HookTypeConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configuration The configuration data for the extension, in this account and region.
         * 
         * @return builder
         * 
         */
        public Builder configuration(@Nullable Output<String> configuration) {
            $.configuration = configuration;
            return this;
        }

        /**
         * @param configuration The configuration data for the extension, in this account and region.
         * 
         * @return builder
         * 
         */
        public Builder configuration(String configuration) {
            return configuration(Output.of(configuration));
        }

        /**
         * @param configurationAlias An alias by which to refer to this extension configuration data.
         * 
         * @return builder
         * 
         */
        public Builder configurationAlias(@Nullable Output<HookTypeConfigConfigurationAlias> configurationAlias) {
            $.configurationAlias = configurationAlias;
            return this;
        }

        /**
         * @param configurationAlias An alias by which to refer to this extension configuration data.
         * 
         * @return builder
         * 
         */
        public Builder configurationAlias(HookTypeConfigConfigurationAlias configurationAlias) {
            return configurationAlias(Output.of(configurationAlias));
        }

        /**
         * @param typeArn The Amazon Resource Name (ARN) of the type without version number.
         * 
         * @return builder
         * 
         */
        public Builder typeArn(@Nullable Output<String> typeArn) {
            $.typeArn = typeArn;
            return this;
        }

        /**
         * @param typeArn The Amazon Resource Name (ARN) of the type without version number.
         * 
         * @return builder
         * 
         */
        public Builder typeArn(String typeArn) {
            return typeArn(Output.of(typeArn));
        }

        /**
         * @param typeName The name of the type being registered.
         * 
         * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
         * 
         * @return builder
         * 
         */
        public Builder typeName(@Nullable Output<String> typeName) {
            $.typeName = typeName;
            return this;
        }

        /**
         * @param typeName The name of the type being registered.
         * 
         * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
         * 
         * @return builder
         * 
         */
        public Builder typeName(String typeName) {
            return typeName(Output.of(typeName));
        }

        public HookTypeConfigArgs build() {
            return $;
        }
    }

}
