// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iotevents.inputs;

import com.pulumi.awsnative.iotevents.inputs.AlarmModelAssetPropertyTimestampArgs;
import com.pulumi.awsnative.iotevents.inputs.AlarmModelAssetPropertyVariantArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A structure that contains value information. For more information, see [AssetPropertyValue](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_AssetPropertyValue.html) in the *AWS IoT SiteWise API Reference*.
 * 
 */
public final class AlarmModelAssetPropertyValueArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlarmModelAssetPropertyValueArgs Empty = new AlarmModelAssetPropertyValueArgs();

    /**
     * The quality of the asset property value. The value must be `GOOD`, `BAD`, or `UNCERTAIN`. You can also specify an expression.
     * 
     */
    @Import(name="quality")
    private @Nullable Output<String> quality;

    /**
     * @return The quality of the asset property value. The value must be `GOOD`, `BAD`, or `UNCERTAIN`. You can also specify an expression.
     * 
     */
    public Optional<Output<String>> quality() {
        return Optional.ofNullable(this.quality);
    }

    @Import(name="timestamp")
    private @Nullable Output<AlarmModelAssetPropertyTimestampArgs> timestamp;

    public Optional<Output<AlarmModelAssetPropertyTimestampArgs>> timestamp() {
        return Optional.ofNullable(this.timestamp);
    }

    @Import(name="value", required=true)
    private Output<AlarmModelAssetPropertyVariantArgs> value;

    public Output<AlarmModelAssetPropertyVariantArgs> value() {
        return this.value;
    }

    private AlarmModelAssetPropertyValueArgs() {}

    private AlarmModelAssetPropertyValueArgs(AlarmModelAssetPropertyValueArgs $) {
        this.quality = $.quality;
        this.timestamp = $.timestamp;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlarmModelAssetPropertyValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlarmModelAssetPropertyValueArgs $;

        public Builder() {
            $ = new AlarmModelAssetPropertyValueArgs();
        }

        public Builder(AlarmModelAssetPropertyValueArgs defaults) {
            $ = new AlarmModelAssetPropertyValueArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param quality The quality of the asset property value. The value must be `GOOD`, `BAD`, or `UNCERTAIN`. You can also specify an expression.
         * 
         * @return builder
         * 
         */
        public Builder quality(@Nullable Output<String> quality) {
            $.quality = quality;
            return this;
        }

        /**
         * @param quality The quality of the asset property value. The value must be `GOOD`, `BAD`, or `UNCERTAIN`. You can also specify an expression.
         * 
         * @return builder
         * 
         */
        public Builder quality(String quality) {
            return quality(Output.of(quality));
        }

        public Builder timestamp(@Nullable Output<AlarmModelAssetPropertyTimestampArgs> timestamp) {
            $.timestamp = timestamp;
            return this;
        }

        public Builder timestamp(AlarmModelAssetPropertyTimestampArgs timestamp) {
            return timestamp(Output.of(timestamp));
        }

        public Builder value(Output<AlarmModelAssetPropertyVariantArgs> value) {
            $.value = value;
            return this;
        }

        public Builder value(AlarmModelAssetPropertyVariantArgs value) {
            return value(Output.of(value));
        }

        public AlarmModelAssetPropertyValueArgs build() {
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
