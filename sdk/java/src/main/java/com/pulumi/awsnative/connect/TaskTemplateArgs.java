// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.connect;

import com.pulumi.awsnative.connect.enums.TaskTemplateStatus;
import com.pulumi.awsnative.connect.inputs.ConstraintsPropertiesArgs;
import com.pulumi.awsnative.connect.inputs.TaskTemplateDefaultFieldValueArgs;
import com.pulumi.awsnative.connect.inputs.TaskTemplateFieldArgs;
import com.pulumi.awsnative.connect.inputs.TaskTemplateTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TaskTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final TaskTemplateArgs Empty = new TaskTemplateArgs();

    @Import(name="clientToken")
    private @Nullable Output<String> clientToken;

    public Optional<Output<String>> clientToken() {
        return Optional.ofNullable(this.clientToken);
    }

    /**
     * The constraints for the task template
     * 
     */
    @Import(name="constraints")
    private @Nullable Output<ConstraintsPropertiesArgs> constraints;

    /**
     * @return The constraints for the task template
     * 
     */
    public Optional<Output<ConstraintsPropertiesArgs>> constraints() {
        return Optional.ofNullable(this.constraints);
    }

    /**
     * The identifier of the contact flow.
     * 
     */
    @Import(name="contactFlowArn")
    private @Nullable Output<String> contactFlowArn;

    /**
     * @return The identifier of the contact flow.
     * 
     */
    public Optional<Output<String>> contactFlowArn() {
        return Optional.ofNullable(this.contactFlowArn);
    }

    @Import(name="defaults")
    private @Nullable Output<List<TaskTemplateDefaultFieldValueArgs>> defaults;

    public Optional<Output<List<TaskTemplateDefaultFieldValueArgs>>> defaults() {
        return Optional.ofNullable(this.defaults);
    }

    /**
     * The description of the task template.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the task template.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The list of task template&#39;s fields
     * 
     */
    @Import(name="fields")
    private @Nullable Output<List<TaskTemplateFieldArgs>> fields;

    /**
     * @return The list of task template&#39;s fields
     * 
     */
    public Optional<Output<List<TaskTemplateFieldArgs>>> fields() {
        return Optional.ofNullable(this.fields);
    }

    /**
     * The identifier (arn) of the instance.
     * 
     */
    @Import(name="instanceArn", required=true)
    private Output<String> instanceArn;

    /**
     * @return The identifier (arn) of the instance.
     * 
     */
    public Output<String> instanceArn() {
        return this.instanceArn;
    }

    /**
     * The name of the task template.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the task template.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="status")
    private @Nullable Output<TaskTemplateStatus> status;

    public Optional<Output<TaskTemplateStatus>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * One or more tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<TaskTemplateTagArgs>> tags;

    /**
     * @return One or more tags.
     * 
     */
    public Optional<Output<List<TaskTemplateTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private TaskTemplateArgs() {}

    private TaskTemplateArgs(TaskTemplateArgs $) {
        this.clientToken = $.clientToken;
        this.constraints = $.constraints;
        this.contactFlowArn = $.contactFlowArn;
        this.defaults = $.defaults;
        this.description = $.description;
        this.fields = $.fields;
        this.instanceArn = $.instanceArn;
        this.name = $.name;
        this.status = $.status;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TaskTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TaskTemplateArgs $;

        public Builder() {
            $ = new TaskTemplateArgs();
        }

        public Builder(TaskTemplateArgs defaults) {
            $ = new TaskTemplateArgs(Objects.requireNonNull(defaults));
        }

        public Builder clientToken(@Nullable Output<String> clientToken) {
            $.clientToken = clientToken;
            return this;
        }

        public Builder clientToken(String clientToken) {
            return clientToken(Output.of(clientToken));
        }

        /**
         * @param constraints The constraints for the task template
         * 
         * @return builder
         * 
         */
        public Builder constraints(@Nullable Output<ConstraintsPropertiesArgs> constraints) {
            $.constraints = constraints;
            return this;
        }

        /**
         * @param constraints The constraints for the task template
         * 
         * @return builder
         * 
         */
        public Builder constraints(ConstraintsPropertiesArgs constraints) {
            return constraints(Output.of(constraints));
        }

        /**
         * @param contactFlowArn The identifier of the contact flow.
         * 
         * @return builder
         * 
         */
        public Builder contactFlowArn(@Nullable Output<String> contactFlowArn) {
            $.contactFlowArn = contactFlowArn;
            return this;
        }

        /**
         * @param contactFlowArn The identifier of the contact flow.
         * 
         * @return builder
         * 
         */
        public Builder contactFlowArn(String contactFlowArn) {
            return contactFlowArn(Output.of(contactFlowArn));
        }

        public Builder defaults(@Nullable Output<List<TaskTemplateDefaultFieldValueArgs>> defaults) {
            $.defaults = defaults;
            return this;
        }

        public Builder defaults(List<TaskTemplateDefaultFieldValueArgs> defaults) {
            return defaults(Output.of(defaults));
        }

        public Builder defaults(TaskTemplateDefaultFieldValueArgs... defaults) {
            return defaults(List.of(defaults));
        }

        /**
         * @param description The description of the task template.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the task template.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param fields The list of task template&#39;s fields
         * 
         * @return builder
         * 
         */
        public Builder fields(@Nullable Output<List<TaskTemplateFieldArgs>> fields) {
            $.fields = fields;
            return this;
        }

        /**
         * @param fields The list of task template&#39;s fields
         * 
         * @return builder
         * 
         */
        public Builder fields(List<TaskTemplateFieldArgs> fields) {
            return fields(Output.of(fields));
        }

        /**
         * @param fields The list of task template&#39;s fields
         * 
         * @return builder
         * 
         */
        public Builder fields(TaskTemplateFieldArgs... fields) {
            return fields(List.of(fields));
        }

        /**
         * @param instanceArn The identifier (arn) of the instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceArn(Output<String> instanceArn) {
            $.instanceArn = instanceArn;
            return this;
        }

        /**
         * @param instanceArn The identifier (arn) of the instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceArn(String instanceArn) {
            return instanceArn(Output.of(instanceArn));
        }

        /**
         * @param name The name of the task template.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the task template.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder status(@Nullable Output<TaskTemplateStatus> status) {
            $.status = status;
            return this;
        }

        public Builder status(TaskTemplateStatus status) {
            return status(Output.of(status));
        }

        /**
         * @param tags One or more tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<TaskTemplateTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags One or more tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<TaskTemplateTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags One or more tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(TaskTemplateTagArgs... tags) {
            return tags(List.of(tags));
        }

        public TaskTemplateArgs build() {
            $.instanceArn = Objects.requireNonNull($.instanceArn, "expected parameter 'instanceArn' to be non-null");
            return $;
        }
    }

}
