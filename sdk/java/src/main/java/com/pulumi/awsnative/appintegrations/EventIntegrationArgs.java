// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.appintegrations;

import com.pulumi.awsnative.appintegrations.inputs.EventIntegrationEventFilterArgs;
import com.pulumi.awsnative.appintegrations.inputs.EventIntegrationTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventIntegrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventIntegrationArgs Empty = new EventIntegrationArgs();

    /**
     * The event integration description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The event integration description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The Amazon Eventbridge bus for the event integration.
     * 
     */
    @Import(name="eventBridgeBus", required=true)
    private Output<String> eventBridgeBus;

    /**
     * @return The Amazon Eventbridge bus for the event integration.
     * 
     */
    public Output<String> eventBridgeBus() {
        return this.eventBridgeBus;
    }

    /**
     * The EventFilter (source) associated with the event integration.
     * 
     */
    @Import(name="eventFilter", required=true)
    private Output<EventIntegrationEventFilterArgs> eventFilter;

    /**
     * @return The EventFilter (source) associated with the event integration.
     * 
     */
    public Output<EventIntegrationEventFilterArgs> eventFilter() {
        return this.eventFilter;
    }

    /**
     * The name of the event integration.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the event integration.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The tags (keys and values) associated with the event integration.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<EventIntegrationTagArgs>> tags;

    /**
     * @return The tags (keys and values) associated with the event integration.
     * 
     */
    public Optional<Output<List<EventIntegrationTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private EventIntegrationArgs() {}

    private EventIntegrationArgs(EventIntegrationArgs $) {
        this.description = $.description;
        this.eventBridgeBus = $.eventBridgeBus;
        this.eventFilter = $.eventFilter;
        this.name = $.name;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventIntegrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventIntegrationArgs $;

        public Builder() {
            $ = new EventIntegrationArgs();
        }

        public Builder(EventIntegrationArgs defaults) {
            $ = new EventIntegrationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The event integration description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The event integration description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param eventBridgeBus The Amazon Eventbridge bus for the event integration.
         * 
         * @return builder
         * 
         */
        public Builder eventBridgeBus(Output<String> eventBridgeBus) {
            $.eventBridgeBus = eventBridgeBus;
            return this;
        }

        /**
         * @param eventBridgeBus The Amazon Eventbridge bus for the event integration.
         * 
         * @return builder
         * 
         */
        public Builder eventBridgeBus(String eventBridgeBus) {
            return eventBridgeBus(Output.of(eventBridgeBus));
        }

        /**
         * @param eventFilter The EventFilter (source) associated with the event integration.
         * 
         * @return builder
         * 
         */
        public Builder eventFilter(Output<EventIntegrationEventFilterArgs> eventFilter) {
            $.eventFilter = eventFilter;
            return this;
        }

        /**
         * @param eventFilter The EventFilter (source) associated with the event integration.
         * 
         * @return builder
         * 
         */
        public Builder eventFilter(EventIntegrationEventFilterArgs eventFilter) {
            return eventFilter(Output.of(eventFilter));
        }

        /**
         * @param name The name of the event integration.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the event integration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags The tags (keys and values) associated with the event integration.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<EventIntegrationTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags (keys and values) associated with the event integration.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<EventIntegrationTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The tags (keys and values) associated with the event integration.
         * 
         * @return builder
         * 
         */
        public Builder tags(EventIntegrationTagArgs... tags) {
            return tags(List.of(tags));
        }

        public EventIntegrationArgs build() {
            $.eventBridgeBus = Objects.requireNonNull($.eventBridgeBus, "expected parameter 'eventBridgeBus' to be non-null");
            $.eventFilter = Objects.requireNonNull($.eventFilter, "expected parameter 'eventFilter' to be non-null");
            return $;
        }
    }

}
