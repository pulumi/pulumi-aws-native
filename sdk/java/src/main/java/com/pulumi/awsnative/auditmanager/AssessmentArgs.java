// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.auditmanager;

import com.pulumi.awsnative.auditmanager.enums.AssessmentStatus;
import com.pulumi.awsnative.auditmanager.inputs.AssessmentAWSAccountArgs;
import com.pulumi.awsnative.auditmanager.inputs.AssessmentReportsDestinationArgs;
import com.pulumi.awsnative.auditmanager.inputs.AssessmentRoleArgs;
import com.pulumi.awsnative.auditmanager.inputs.AssessmentScopeArgs;
import com.pulumi.awsnative.auditmanager.inputs.AssessmentTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AssessmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssessmentArgs Empty = new AssessmentArgs();

    @Import(name="assessmentReportsDestination")
    private @Nullable Output<AssessmentReportsDestinationArgs> assessmentReportsDestination;

    public Optional<Output<AssessmentReportsDestinationArgs>> assessmentReportsDestination() {
        return Optional.ofNullable(this.assessmentReportsDestination);
    }

    @Import(name="awsAccount")
    private @Nullable Output<AssessmentAWSAccountArgs> awsAccount;

    public Optional<Output<AssessmentAWSAccountArgs>> awsAccount() {
        return Optional.ofNullable(this.awsAccount);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="frameworkId")
    private @Nullable Output<String> frameworkId;

    public Optional<Output<String>> frameworkId() {
        return Optional.ofNullable(this.frameworkId);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The list of roles for the specified assessment.
     * 
     */
    @Import(name="roles")
    private @Nullable Output<List<AssessmentRoleArgs>> roles;

    /**
     * @return The list of roles for the specified assessment.
     * 
     */
    public Optional<Output<List<AssessmentRoleArgs>>> roles() {
        return Optional.ofNullable(this.roles);
    }

    @Import(name="scope")
    private @Nullable Output<AssessmentScopeArgs> scope;

    public Optional<Output<AssessmentScopeArgs>> scope() {
        return Optional.ofNullable(this.scope);
    }

    @Import(name="status")
    private @Nullable Output<AssessmentStatus> status;

    public Optional<Output<AssessmentStatus>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The tags associated with the assessment.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<AssessmentTagArgs>> tags;

    /**
     * @return The tags associated with the assessment.
     * 
     */
    public Optional<Output<List<AssessmentTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private AssessmentArgs() {}

    private AssessmentArgs(AssessmentArgs $) {
        this.assessmentReportsDestination = $.assessmentReportsDestination;
        this.awsAccount = $.awsAccount;
        this.description = $.description;
        this.frameworkId = $.frameworkId;
        this.name = $.name;
        this.roles = $.roles;
        this.scope = $.scope;
        this.status = $.status;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssessmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssessmentArgs $;

        public Builder() {
            $ = new AssessmentArgs();
        }

        public Builder(AssessmentArgs defaults) {
            $ = new AssessmentArgs(Objects.requireNonNull(defaults));
        }

        public Builder assessmentReportsDestination(@Nullable Output<AssessmentReportsDestinationArgs> assessmentReportsDestination) {
            $.assessmentReportsDestination = assessmentReportsDestination;
            return this;
        }

        public Builder assessmentReportsDestination(AssessmentReportsDestinationArgs assessmentReportsDestination) {
            return assessmentReportsDestination(Output.of(assessmentReportsDestination));
        }

        public Builder awsAccount(@Nullable Output<AssessmentAWSAccountArgs> awsAccount) {
            $.awsAccount = awsAccount;
            return this;
        }

        public Builder awsAccount(AssessmentAWSAccountArgs awsAccount) {
            return awsAccount(Output.of(awsAccount));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder frameworkId(@Nullable Output<String> frameworkId) {
            $.frameworkId = frameworkId;
            return this;
        }

        public Builder frameworkId(String frameworkId) {
            return frameworkId(Output.of(frameworkId));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param roles The list of roles for the specified assessment.
         * 
         * @return builder
         * 
         */
        public Builder roles(@Nullable Output<List<AssessmentRoleArgs>> roles) {
            $.roles = roles;
            return this;
        }

        /**
         * @param roles The list of roles for the specified assessment.
         * 
         * @return builder
         * 
         */
        public Builder roles(List<AssessmentRoleArgs> roles) {
            return roles(Output.of(roles));
        }

        /**
         * @param roles The list of roles for the specified assessment.
         * 
         * @return builder
         * 
         */
        public Builder roles(AssessmentRoleArgs... roles) {
            return roles(List.of(roles));
        }

        public Builder scope(@Nullable Output<AssessmentScopeArgs> scope) {
            $.scope = scope;
            return this;
        }

        public Builder scope(AssessmentScopeArgs scope) {
            return scope(Output.of(scope));
        }

        public Builder status(@Nullable Output<AssessmentStatus> status) {
            $.status = status;
            return this;
        }

        public Builder status(AssessmentStatus status) {
            return status(Output.of(status));
        }

        /**
         * @param tags The tags associated with the assessment.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<AssessmentTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags associated with the assessment.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<AssessmentTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The tags associated with the assessment.
         * 
         * @return builder
         * 
         */
        public Builder tags(AssessmentTagArgs... tags) {
            return tags(List.of(tags));
        }

        public AssessmentArgs build() {
            return $;
        }
    }

}
