// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.lambda.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FunctionImageConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final FunctionImageConfigArgs Empty = new FunctionImageConfigArgs();

    /**
     * Command.
     * 
     */
    @Import(name="command")
    private @Nullable Output<List<String>> command;

    /**
     * @return Command.
     * 
     */
    public Optional<Output<List<String>>> command() {
        return Optional.ofNullable(this.command);
    }

    /**
     * EntryPoint.
     * 
     */
    @Import(name="entryPoint")
    private @Nullable Output<List<String>> entryPoint;

    /**
     * @return EntryPoint.
     * 
     */
    public Optional<Output<List<String>>> entryPoint() {
        return Optional.ofNullable(this.entryPoint);
    }

    /**
     * WorkingDirectory.
     * 
     */
    @Import(name="workingDirectory")
    private @Nullable Output<String> workingDirectory;

    /**
     * @return WorkingDirectory.
     * 
     */
    public Optional<Output<String>> workingDirectory() {
        return Optional.ofNullable(this.workingDirectory);
    }

    private FunctionImageConfigArgs() {}

    private FunctionImageConfigArgs(FunctionImageConfigArgs $) {
        this.command = $.command;
        this.entryPoint = $.entryPoint;
        this.workingDirectory = $.workingDirectory;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FunctionImageConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FunctionImageConfigArgs $;

        public Builder() {
            $ = new FunctionImageConfigArgs();
        }

        public Builder(FunctionImageConfigArgs defaults) {
            $ = new FunctionImageConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param command Command.
         * 
         * @return builder
         * 
         */
        public Builder command(@Nullable Output<List<String>> command) {
            $.command = command;
            return this;
        }

        /**
         * @param command Command.
         * 
         * @return builder
         * 
         */
        public Builder command(List<String> command) {
            return command(Output.of(command));
        }

        /**
         * @param command Command.
         * 
         * @return builder
         * 
         */
        public Builder command(String... command) {
            return command(List.of(command));
        }

        /**
         * @param entryPoint EntryPoint.
         * 
         * @return builder
         * 
         */
        public Builder entryPoint(@Nullable Output<List<String>> entryPoint) {
            $.entryPoint = entryPoint;
            return this;
        }

        /**
         * @param entryPoint EntryPoint.
         * 
         * @return builder
         * 
         */
        public Builder entryPoint(List<String> entryPoint) {
            return entryPoint(Output.of(entryPoint));
        }

        /**
         * @param entryPoint EntryPoint.
         * 
         * @return builder
         * 
         */
        public Builder entryPoint(String... entryPoint) {
            return entryPoint(List.of(entryPoint));
        }

        /**
         * @param workingDirectory WorkingDirectory.
         * 
         * @return builder
         * 
         */
        public Builder workingDirectory(@Nullable Output<String> workingDirectory) {
            $.workingDirectory = workingDirectory;
            return this;
        }

        /**
         * @param workingDirectory WorkingDirectory.
         * 
         * @return builder
         * 
         */
        public Builder workingDirectory(String workingDirectory) {
            return workingDirectory(Output.of(workingDirectory));
        }

        public FunctionImageConfigArgs build() {
            return $;
        }
    }

}
