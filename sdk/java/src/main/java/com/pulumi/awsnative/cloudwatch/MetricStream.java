// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudwatch;

import com.pulumi.awsnative.Utilities;
import com.pulumi.awsnative.cloudwatch.MetricStreamArgs;
import com.pulumi.awsnative.cloudwatch.outputs.MetricStreamFilter;
import com.pulumi.awsnative.cloudwatch.outputs.MetricStreamStatisticsConfiguration;
import com.pulumi.awsnative.cloudwatch.outputs.MetricStreamTag;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource Type definition for Metric Stream
 * 
 * ## Example Usage
 * 
 */
@ResourceType(type="aws-native:cloudwatch:MetricStream")
public class MetricStream extends com.pulumi.resources.CustomResource {
    /**
     * Amazon Resource Name of the metric stream.
     * 
     */
    @Export(name="arn", type=String.class, parameters={})
    private Output<String> arn;

    /**
     * @return Amazon Resource Name of the metric stream.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }
    /**
     * The date of creation of the metric stream.
     * 
     */
    @Export(name="creationDate", type=String.class, parameters={})
    private Output<String> creationDate;

    /**
     * @return The date of creation of the metric stream.
     * 
     */
    public Output<String> creationDate() {
        return this.creationDate;
    }
    /**
     * Define which metrics will be not streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
     * 
     */
    @Export(name="excludeFilters", type=List.class, parameters={MetricStreamFilter.class})
    private Output</* @Nullable */ List<MetricStreamFilter>> excludeFilters;

    /**
     * @return Define which metrics will be not streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
     * 
     */
    public Output<Optional<List<MetricStreamFilter>>> excludeFilters() {
        return Codegen.optional(this.excludeFilters);
    }
    /**
     * The ARN of the Kinesis Firehose where to stream the data.
     * 
     */
    @Export(name="firehoseArn", type=String.class, parameters={})
    private Output<String> firehoseArn;

    /**
     * @return The ARN of the Kinesis Firehose where to stream the data.
     * 
     */
    public Output<String> firehoseArn() {
        return this.firehoseArn;
    }
    /**
     * Define which metrics will be streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
     * 
     */
    @Export(name="includeFilters", type=List.class, parameters={MetricStreamFilter.class})
    private Output</* @Nullable */ List<MetricStreamFilter>> includeFilters;

    /**
     * @return Define which metrics will be streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
     * 
     */
    public Output<Optional<List<MetricStreamFilter>>> includeFilters() {
        return Codegen.optional(this.includeFilters);
    }
    /**
     * The date of the last update of the metric stream.
     * 
     */
    @Export(name="lastUpdateDate", type=String.class, parameters={})
    private Output<String> lastUpdateDate;

    /**
     * @return The date of the last update of the metric stream.
     * 
     */
    public Output<String> lastUpdateDate() {
        return this.lastUpdateDate;
    }
    /**
     * Name of the metric stream.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output</* @Nullable */ String> name;

    /**
     * @return Name of the metric stream.
     * 
     */
    public Output<Optional<String>> name() {
        return Codegen.optional(this.name);
    }
    /**
     * The output format of the data streamed to the Kinesis Firehose.
     * 
     */
    @Export(name="outputFormat", type=String.class, parameters={})
    private Output<String> outputFormat;

    /**
     * @return The output format of the data streamed to the Kinesis Firehose.
     * 
     */
    public Output<String> outputFormat() {
        return this.outputFormat;
    }
    /**
     * The ARN of the role that provides access to the Kinesis Firehose.
     * 
     */
    @Export(name="roleArn", type=String.class, parameters={})
    private Output<String> roleArn;

    /**
     * @return The ARN of the role that provides access to the Kinesis Firehose.
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }
    /**
     * Displays the state of the Metric Stream.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return Displays the state of the Metric Stream.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * By default, a metric stream always sends the MAX, MIN, SUM, and SAMPLECOUNT statistics for each metric that is streamed. You can use this parameter to have the metric stream also send additional statistics in the stream. This array can have up to 100 members.
     * 
     */
    @Export(name="statisticsConfigurations", type=List.class, parameters={MetricStreamStatisticsConfiguration.class})
    private Output</* @Nullable */ List<MetricStreamStatisticsConfiguration>> statisticsConfigurations;

    /**
     * @return By default, a metric stream always sends the MAX, MIN, SUM, and SAMPLECOUNT statistics for each metric that is streamed. You can use this parameter to have the metric stream also send additional statistics in the stream. This array can have up to 100 members.
     * 
     */
    public Output<Optional<List<MetricStreamStatisticsConfiguration>>> statisticsConfigurations() {
        return Codegen.optional(this.statisticsConfigurations);
    }
    /**
     * A set of tags to assign to the delivery stream.
     * 
     */
    @Export(name="tags", type=List.class, parameters={MetricStreamTag.class})
    private Output</* @Nullable */ List<MetricStreamTag>> tags;

    /**
     * @return A set of tags to assign to the delivery stream.
     * 
     */
    public Output<Optional<List<MetricStreamTag>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MetricStream(String name) {
        this(name, MetricStreamArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MetricStream(String name, MetricStreamArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MetricStream(String name, MetricStreamArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:cloudwatch:MetricStream", name, args == null ? MetricStreamArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private MetricStream(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aws-native:cloudwatch:MetricStream", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MetricStream get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MetricStream(name, id, options);
    }
}
