// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ec2;

import com.pulumi.awsnative.ec2.inputs.VPNGatewayTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VPNGatewayArgs extends com.pulumi.resources.ResourceArgs {

    public static final VPNGatewayArgs Empty = new VPNGatewayArgs();

    /**
     * The private Autonomous System Number (ASN) for the Amazon side of a BGP session.
     * 
     */
    @Import(name="amazonSideAsn")
    private @Nullable Output<Integer> amazonSideAsn;

    /**
     * @return The private Autonomous System Number (ASN) for the Amazon side of a BGP session.
     * 
     */
    public Optional<Output<Integer>> amazonSideAsn() {
        return Optional.ofNullable(this.amazonSideAsn);
    }

    /**
     * Any tags assigned to the virtual private gateway.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<VPNGatewayTagArgs>> tags;

    /**
     * @return Any tags assigned to the virtual private gateway.
     * 
     */
    public Optional<Output<List<VPNGatewayTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The type of VPN connection the virtual private gateway supports.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of VPN connection the virtual private gateway supports.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private VPNGatewayArgs() {}

    private VPNGatewayArgs(VPNGatewayArgs $) {
        this.amazonSideAsn = $.amazonSideAsn;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VPNGatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VPNGatewayArgs $;

        public Builder() {
            $ = new VPNGatewayArgs();
        }

        public Builder(VPNGatewayArgs defaults) {
            $ = new VPNGatewayArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param amazonSideAsn The private Autonomous System Number (ASN) for the Amazon side of a BGP session.
         * 
         * @return builder
         * 
         */
        public Builder amazonSideAsn(@Nullable Output<Integer> amazonSideAsn) {
            $.amazonSideAsn = amazonSideAsn;
            return this;
        }

        /**
         * @param amazonSideAsn The private Autonomous System Number (ASN) for the Amazon side of a BGP session.
         * 
         * @return builder
         * 
         */
        public Builder amazonSideAsn(Integer amazonSideAsn) {
            return amazonSideAsn(Output.of(amazonSideAsn));
        }

        /**
         * @param tags Any tags assigned to the virtual private gateway.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<VPNGatewayTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Any tags assigned to the virtual private gateway.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<VPNGatewayTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Any tags assigned to the virtual private gateway.
         * 
         * @return builder
         * 
         */
        public Builder tags(VPNGatewayTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param type The type of VPN connection the virtual private gateway supports.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of VPN connection the virtual private gateway supports.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public VPNGatewayArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
