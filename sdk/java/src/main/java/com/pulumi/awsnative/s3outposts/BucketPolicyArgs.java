// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3outposts;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;


public final class BucketPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketPolicyArgs Empty = new BucketPolicyArgs();

    /**
     * The Amazon Resource Name (ARN) of the specified bucket.
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return The Amazon Resource Name (ARN) of the specified bucket.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * A policy document containing permissions to add to the specified bucket.
     * 
     */
    @Import(name="policyDocument", required=true)
    private Output<Object> policyDocument;

    /**
     * @return A policy document containing permissions to add to the specified bucket.
     * 
     */
    public Output<Object> policyDocument() {
        return this.policyDocument;
    }

    private BucketPolicyArgs() {}

    private BucketPolicyArgs(BucketPolicyArgs $) {
        this.bucket = $.bucket;
        this.policyDocument = $.policyDocument;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketPolicyArgs $;

        public Builder() {
            $ = new BucketPolicyArgs();
        }

        public Builder(BucketPolicyArgs defaults) {
            $ = new BucketPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket The Amazon Resource Name (ARN) of the specified bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket The Amazon Resource Name (ARN) of the specified bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param policyDocument A policy document containing permissions to add to the specified bucket.
         * 
         * @return builder
         * 
         */
        public Builder policyDocument(Output<Object> policyDocument) {
            $.policyDocument = policyDocument;
            return this;
        }

        /**
         * @param policyDocument A policy document containing permissions to add to the specified bucket.
         * 
         * @return builder
         * 
         */
        public Builder policyDocument(Object policyDocument) {
            return policyDocument(Output.of(policyDocument));
        }

        public BucketPolicyArgs build() {
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            $.policyDocument = Objects.requireNonNull($.policyDocument, "expected parameter 'policyDocument' to be non-null");
            return $;
        }
    }

}
