// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.wisdom;

import com.pulumi.awsnative.wisdom.enums.AssistantAssociationAssociationType;
import com.pulumi.awsnative.wisdom.inputs.AssistantAssociationAssociationDataArgs;
import com.pulumi.awsnative.wisdom.inputs.AssistantAssociationTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AssistantAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssistantAssociationArgs Empty = new AssistantAssociationArgs();

    @Import(name="assistantId", required=true)
    private Output<String> assistantId;

    public Output<String> assistantId() {
        return this.assistantId;
    }

    @Import(name="association", required=true)
    private Output<AssistantAssociationAssociationDataArgs> association;

    public Output<AssistantAssociationAssociationDataArgs> association() {
        return this.association;
    }

    @Import(name="associationType", required=true)
    private Output<AssistantAssociationAssociationType> associationType;

    public Output<AssistantAssociationAssociationType> associationType() {
        return this.associationType;
    }

    @Import(name="tags")
    private @Nullable Output<List<AssistantAssociationTagArgs>> tags;

    public Optional<Output<List<AssistantAssociationTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private AssistantAssociationArgs() {}

    private AssistantAssociationArgs(AssistantAssociationArgs $) {
        this.assistantId = $.assistantId;
        this.association = $.association;
        this.associationType = $.associationType;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssistantAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssistantAssociationArgs $;

        public Builder() {
            $ = new AssistantAssociationArgs();
        }

        public Builder(AssistantAssociationArgs defaults) {
            $ = new AssistantAssociationArgs(Objects.requireNonNull(defaults));
        }

        public Builder assistantId(Output<String> assistantId) {
            $.assistantId = assistantId;
            return this;
        }

        public Builder assistantId(String assistantId) {
            return assistantId(Output.of(assistantId));
        }

        public Builder association(Output<AssistantAssociationAssociationDataArgs> association) {
            $.association = association;
            return this;
        }

        public Builder association(AssistantAssociationAssociationDataArgs association) {
            return association(Output.of(association));
        }

        public Builder associationType(Output<AssistantAssociationAssociationType> associationType) {
            $.associationType = associationType;
            return this;
        }

        public Builder associationType(AssistantAssociationAssociationType associationType) {
            return associationType(Output.of(associationType));
        }

        public Builder tags(@Nullable Output<List<AssistantAssociationTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<AssistantAssociationTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(AssistantAssociationTagArgs... tags) {
            return tags(List.of(tags));
        }

        public AssistantAssociationArgs build() {
            $.assistantId = Objects.requireNonNull($.assistantId, "expected parameter 'assistantId' to be non-null");
            $.association = Objects.requireNonNull($.association, "expected parameter 'association' to be non-null");
            $.associationType = Objects.requireNonNull($.associationType, "expected parameter 'associationType' to be non-null");
            return $;
        }
    }

}
