// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.ses;

import com.pulumi.awsnative.ses.inputs.ConfigurationSetEventDestinationEventDestinationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class ConfigurationSetEventDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationSetEventDestinationArgs Empty = new ConfigurationSetEventDestinationArgs();

    /**
     * The name of the configuration set that contains the event destination.
     * 
     */
    @Import(name="configurationSetName", required=true)
    private Output<String> configurationSetName;

    /**
     * @return The name of the configuration set that contains the event destination.
     * 
     */
    public Output<String> configurationSetName() {
        return this.configurationSetName;
    }

    /**
     * The event destination object.
     * 
     */
    @Import(name="eventDestination", required=true)
    private Output<ConfigurationSetEventDestinationEventDestinationArgs> eventDestination;

    /**
     * @return The event destination object.
     * 
     */
    public Output<ConfigurationSetEventDestinationEventDestinationArgs> eventDestination() {
        return this.eventDestination;
    }

    private ConfigurationSetEventDestinationArgs() {}

    private ConfigurationSetEventDestinationArgs(ConfigurationSetEventDestinationArgs $) {
        this.configurationSetName = $.configurationSetName;
        this.eventDestination = $.eventDestination;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationSetEventDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationSetEventDestinationArgs $;

        public Builder() {
            $ = new ConfigurationSetEventDestinationArgs();
        }

        public Builder(ConfigurationSetEventDestinationArgs defaults) {
            $ = new ConfigurationSetEventDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configurationSetName The name of the configuration set that contains the event destination.
         * 
         * @return builder
         * 
         */
        public Builder configurationSetName(Output<String> configurationSetName) {
            $.configurationSetName = configurationSetName;
            return this;
        }

        /**
         * @param configurationSetName The name of the configuration set that contains the event destination.
         * 
         * @return builder
         * 
         */
        public Builder configurationSetName(String configurationSetName) {
            return configurationSetName(Output.of(configurationSetName));
        }

        /**
         * @param eventDestination The event destination object.
         * 
         * @return builder
         * 
         */
        public Builder eventDestination(Output<ConfigurationSetEventDestinationEventDestinationArgs> eventDestination) {
            $.eventDestination = eventDestination;
            return this;
        }

        /**
         * @param eventDestination The event destination object.
         * 
         * @return builder
         * 
         */
        public Builder eventDestination(ConfigurationSetEventDestinationEventDestinationArgs eventDestination) {
            return eventDestination(Output.of(eventDestination));
        }

        public ConfigurationSetEventDestinationArgs build() {
            $.configurationSetName = Objects.requireNonNull($.configurationSetName, "expected parameter 'configurationSetName' to be non-null");
            $.eventDestination = Objects.requireNonNull($.eventDestination, "expected parameter 'eventDestination' to be non-null");
            return $;
        }
    }

}
