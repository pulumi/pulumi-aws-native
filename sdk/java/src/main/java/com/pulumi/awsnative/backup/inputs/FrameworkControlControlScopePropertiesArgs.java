// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.backup.inputs;

import com.pulumi.awsnative.backup.inputs.FrameworkTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The scope of a control. The control scope defines what the control will evaluate. Three examples of control scopes are: a specific backup plan, all backup plans with a specific tag, or all backup plans.
 * 
 */
public final class FrameworkControlControlScopePropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final FrameworkControlControlScopePropertiesArgs Empty = new FrameworkControlControlScopePropertiesArgs();

    /**
     * The ID of the only AWS resource that you want your control scope to contain.
     * 
     */
    @Import(name="complianceResourceIds")
    private @Nullable Output<List<String>> complianceResourceIds;

    /**
     * @return The ID of the only AWS resource that you want your control scope to contain.
     * 
     */
    public Optional<Output<List<String>>> complianceResourceIds() {
        return Optional.ofNullable(this.complianceResourceIds);
    }

    /**
     * Describes whether the control scope includes one or more types of resources, such as `EFS` or `RDS`.
     * 
     */
    @Import(name="complianceResourceTypes")
    private @Nullable Output<List<String>> complianceResourceTypes;

    /**
     * @return Describes whether the control scope includes one or more types of resources, such as `EFS` or `RDS`.
     * 
     */
    public Optional<Output<List<String>>> complianceResourceTypes() {
        return Optional.ofNullable(this.complianceResourceTypes);
    }

    /**
     * Describes whether the control scope includes resources with one or more tags. Each tag is a key-value pair.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<FrameworkTagArgs>> tags;

    /**
     * @return Describes whether the control scope includes resources with one or more tags. Each tag is a key-value pair.
     * 
     */
    public Optional<Output<List<FrameworkTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private FrameworkControlControlScopePropertiesArgs() {}

    private FrameworkControlControlScopePropertiesArgs(FrameworkControlControlScopePropertiesArgs $) {
        this.complianceResourceIds = $.complianceResourceIds;
        this.complianceResourceTypes = $.complianceResourceTypes;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FrameworkControlControlScopePropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FrameworkControlControlScopePropertiesArgs $;

        public Builder() {
            $ = new FrameworkControlControlScopePropertiesArgs();
        }

        public Builder(FrameworkControlControlScopePropertiesArgs defaults) {
            $ = new FrameworkControlControlScopePropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param complianceResourceIds The ID of the only AWS resource that you want your control scope to contain.
         * 
         * @return builder
         * 
         */
        public Builder complianceResourceIds(@Nullable Output<List<String>> complianceResourceIds) {
            $.complianceResourceIds = complianceResourceIds;
            return this;
        }

        /**
         * @param complianceResourceIds The ID of the only AWS resource that you want your control scope to contain.
         * 
         * @return builder
         * 
         */
        public Builder complianceResourceIds(List<String> complianceResourceIds) {
            return complianceResourceIds(Output.of(complianceResourceIds));
        }

        /**
         * @param complianceResourceIds The ID of the only AWS resource that you want your control scope to contain.
         * 
         * @return builder
         * 
         */
        public Builder complianceResourceIds(String... complianceResourceIds) {
            return complianceResourceIds(List.of(complianceResourceIds));
        }

        /**
         * @param complianceResourceTypes Describes whether the control scope includes one or more types of resources, such as `EFS` or `RDS`.
         * 
         * @return builder
         * 
         */
        public Builder complianceResourceTypes(@Nullable Output<List<String>> complianceResourceTypes) {
            $.complianceResourceTypes = complianceResourceTypes;
            return this;
        }

        /**
         * @param complianceResourceTypes Describes whether the control scope includes one or more types of resources, such as `EFS` or `RDS`.
         * 
         * @return builder
         * 
         */
        public Builder complianceResourceTypes(List<String> complianceResourceTypes) {
            return complianceResourceTypes(Output.of(complianceResourceTypes));
        }

        /**
         * @param complianceResourceTypes Describes whether the control scope includes one or more types of resources, such as `EFS` or `RDS`.
         * 
         * @return builder
         * 
         */
        public Builder complianceResourceTypes(String... complianceResourceTypes) {
            return complianceResourceTypes(List.of(complianceResourceTypes));
        }

        /**
         * @param tags Describes whether the control scope includes resources with one or more tags. Each tag is a key-value pair.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<FrameworkTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Describes whether the control scope includes resources with one or more tags. Each tag is a key-value pair.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<FrameworkTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Describes whether the control scope includes resources with one or more tags. Each tag is a key-value pair.
         * 
         * @return builder
         * 
         */
        public Builder tags(FrameworkTagArgs... tags) {
            return tags(List.of(tags));
        }

        public FrameworkControlControlScopePropertiesArgs build() {
            return $;
        }
    }

}
