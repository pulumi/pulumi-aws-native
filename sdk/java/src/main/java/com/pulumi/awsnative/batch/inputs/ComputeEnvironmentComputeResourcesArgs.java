// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.batch.inputs;

import com.pulumi.awsnative.batch.inputs.ComputeEnvironmentEc2ConfigurationObjectArgs;
import com.pulumi.awsnative.batch.inputs.ComputeEnvironmentLaunchTemplateSpecificationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ComputeEnvironmentComputeResourcesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ComputeEnvironmentComputeResourcesArgs Empty = new ComputeEnvironmentComputeResourcesArgs();

    @Import(name="allocationStrategy")
    private @Nullable Output<String> allocationStrategy;

    public Optional<Output<String>> allocationStrategy() {
        return Optional.ofNullable(this.allocationStrategy);
    }

    @Import(name="bidPercentage")
    private @Nullable Output<Integer> bidPercentage;

    public Optional<Output<Integer>> bidPercentage() {
        return Optional.ofNullable(this.bidPercentage);
    }

    @Import(name="desiredvCpus")
    private @Nullable Output<Integer> desiredvCpus;

    public Optional<Output<Integer>> desiredvCpus() {
        return Optional.ofNullable(this.desiredvCpus);
    }

    @Import(name="ec2Configuration")
    private @Nullable Output<List<ComputeEnvironmentEc2ConfigurationObjectArgs>> ec2Configuration;

    public Optional<Output<List<ComputeEnvironmentEc2ConfigurationObjectArgs>>> ec2Configuration() {
        return Optional.ofNullable(this.ec2Configuration);
    }

    @Import(name="ec2KeyPair")
    private @Nullable Output<String> ec2KeyPair;

    public Optional<Output<String>> ec2KeyPair() {
        return Optional.ofNullable(this.ec2KeyPair);
    }

    @Import(name="imageId")
    private @Nullable Output<String> imageId;

    public Optional<Output<String>> imageId() {
        return Optional.ofNullable(this.imageId);
    }

    @Import(name="instanceRole")
    private @Nullable Output<String> instanceRole;

    public Optional<Output<String>> instanceRole() {
        return Optional.ofNullable(this.instanceRole);
    }

    @Import(name="instanceTypes")
    private @Nullable Output<List<String>> instanceTypes;

    public Optional<Output<List<String>>> instanceTypes() {
        return Optional.ofNullable(this.instanceTypes);
    }

    @Import(name="launchTemplate")
    private @Nullable Output<ComputeEnvironmentLaunchTemplateSpecificationArgs> launchTemplate;

    public Optional<Output<ComputeEnvironmentLaunchTemplateSpecificationArgs>> launchTemplate() {
        return Optional.ofNullable(this.launchTemplate);
    }

    @Import(name="maxvCpus", required=true)
    private Output<Integer> maxvCpus;

    public Output<Integer> maxvCpus() {
        return this.maxvCpus;
    }

    @Import(name="minvCpus")
    private @Nullable Output<Integer> minvCpus;

    public Optional<Output<Integer>> minvCpus() {
        return Optional.ofNullable(this.minvCpus);
    }

    @Import(name="placementGroup")
    private @Nullable Output<String> placementGroup;

    public Optional<Output<String>> placementGroup() {
        return Optional.ofNullable(this.placementGroup);
    }

    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    @Import(name="spotIamFleetRole")
    private @Nullable Output<String> spotIamFleetRole;

    public Optional<Output<String>> spotIamFleetRole() {
        return Optional.ofNullable(this.spotIamFleetRole);
    }

    @Import(name="subnets", required=true)
    private Output<List<String>> subnets;

    public Output<List<String>> subnets() {
        return this.subnets;
    }

    /**
     * A key-value pair to associate with a resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Object> tags;

    /**
     * @return A key-value pair to associate with a resource.
     * 
     */
    public Optional<Output<Object>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="updateToLatestImageVersion")
    private @Nullable Output<Boolean> updateToLatestImageVersion;

    public Optional<Output<Boolean>> updateToLatestImageVersion() {
        return Optional.ofNullable(this.updateToLatestImageVersion);
    }

    private ComputeEnvironmentComputeResourcesArgs() {}

    private ComputeEnvironmentComputeResourcesArgs(ComputeEnvironmentComputeResourcesArgs $) {
        this.allocationStrategy = $.allocationStrategy;
        this.bidPercentage = $.bidPercentage;
        this.desiredvCpus = $.desiredvCpus;
        this.ec2Configuration = $.ec2Configuration;
        this.ec2KeyPair = $.ec2KeyPair;
        this.imageId = $.imageId;
        this.instanceRole = $.instanceRole;
        this.instanceTypes = $.instanceTypes;
        this.launchTemplate = $.launchTemplate;
        this.maxvCpus = $.maxvCpus;
        this.minvCpus = $.minvCpus;
        this.placementGroup = $.placementGroup;
        this.securityGroupIds = $.securityGroupIds;
        this.spotIamFleetRole = $.spotIamFleetRole;
        this.subnets = $.subnets;
        this.tags = $.tags;
        this.type = $.type;
        this.updateToLatestImageVersion = $.updateToLatestImageVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ComputeEnvironmentComputeResourcesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComputeEnvironmentComputeResourcesArgs $;

        public Builder() {
            $ = new ComputeEnvironmentComputeResourcesArgs();
        }

        public Builder(ComputeEnvironmentComputeResourcesArgs defaults) {
            $ = new ComputeEnvironmentComputeResourcesArgs(Objects.requireNonNull(defaults));
        }

        public Builder allocationStrategy(@Nullable Output<String> allocationStrategy) {
            $.allocationStrategy = allocationStrategy;
            return this;
        }

        public Builder allocationStrategy(String allocationStrategy) {
            return allocationStrategy(Output.of(allocationStrategy));
        }

        public Builder bidPercentage(@Nullable Output<Integer> bidPercentage) {
            $.bidPercentage = bidPercentage;
            return this;
        }

        public Builder bidPercentage(Integer bidPercentage) {
            return bidPercentage(Output.of(bidPercentage));
        }

        public Builder desiredvCpus(@Nullable Output<Integer> desiredvCpus) {
            $.desiredvCpus = desiredvCpus;
            return this;
        }

        public Builder desiredvCpus(Integer desiredvCpus) {
            return desiredvCpus(Output.of(desiredvCpus));
        }

        public Builder ec2Configuration(@Nullable Output<List<ComputeEnvironmentEc2ConfigurationObjectArgs>> ec2Configuration) {
            $.ec2Configuration = ec2Configuration;
            return this;
        }

        public Builder ec2Configuration(List<ComputeEnvironmentEc2ConfigurationObjectArgs> ec2Configuration) {
            return ec2Configuration(Output.of(ec2Configuration));
        }

        public Builder ec2Configuration(ComputeEnvironmentEc2ConfigurationObjectArgs... ec2Configuration) {
            return ec2Configuration(List.of(ec2Configuration));
        }

        public Builder ec2KeyPair(@Nullable Output<String> ec2KeyPair) {
            $.ec2KeyPair = ec2KeyPair;
            return this;
        }

        public Builder ec2KeyPair(String ec2KeyPair) {
            return ec2KeyPair(Output.of(ec2KeyPair));
        }

        public Builder imageId(@Nullable Output<String> imageId) {
            $.imageId = imageId;
            return this;
        }

        public Builder imageId(String imageId) {
            return imageId(Output.of(imageId));
        }

        public Builder instanceRole(@Nullable Output<String> instanceRole) {
            $.instanceRole = instanceRole;
            return this;
        }

        public Builder instanceRole(String instanceRole) {
            return instanceRole(Output.of(instanceRole));
        }

        public Builder instanceTypes(@Nullable Output<List<String>> instanceTypes) {
            $.instanceTypes = instanceTypes;
            return this;
        }

        public Builder instanceTypes(List<String> instanceTypes) {
            return instanceTypes(Output.of(instanceTypes));
        }

        public Builder instanceTypes(String... instanceTypes) {
            return instanceTypes(List.of(instanceTypes));
        }

        public Builder launchTemplate(@Nullable Output<ComputeEnvironmentLaunchTemplateSpecificationArgs> launchTemplate) {
            $.launchTemplate = launchTemplate;
            return this;
        }

        public Builder launchTemplate(ComputeEnvironmentLaunchTemplateSpecificationArgs launchTemplate) {
            return launchTemplate(Output.of(launchTemplate));
        }

        public Builder maxvCpus(Output<Integer> maxvCpus) {
            $.maxvCpus = maxvCpus;
            return this;
        }

        public Builder maxvCpus(Integer maxvCpus) {
            return maxvCpus(Output.of(maxvCpus));
        }

        public Builder minvCpus(@Nullable Output<Integer> minvCpus) {
            $.minvCpus = minvCpus;
            return this;
        }

        public Builder minvCpus(Integer minvCpus) {
            return minvCpus(Output.of(minvCpus));
        }

        public Builder placementGroup(@Nullable Output<String> placementGroup) {
            $.placementGroup = placementGroup;
            return this;
        }

        public Builder placementGroup(String placementGroup) {
            return placementGroup(Output.of(placementGroup));
        }

        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        public Builder spotIamFleetRole(@Nullable Output<String> spotIamFleetRole) {
            $.spotIamFleetRole = spotIamFleetRole;
            return this;
        }

        public Builder spotIamFleetRole(String spotIamFleetRole) {
            return spotIamFleetRole(Output.of(spotIamFleetRole));
        }

        public Builder subnets(Output<List<String>> subnets) {
            $.subnets = subnets;
            return this;
        }

        public Builder subnets(List<String> subnets) {
            return subnets(Output.of(subnets));
        }

        public Builder subnets(String... subnets) {
            return subnets(List.of(subnets));
        }

        /**
         * @param tags A key-value pair to associate with a resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Object> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A key-value pair to associate with a resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Object tags) {
            return tags(Output.of(tags));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder updateToLatestImageVersion(@Nullable Output<Boolean> updateToLatestImageVersion) {
            $.updateToLatestImageVersion = updateToLatestImageVersion;
            return this;
        }

        public Builder updateToLatestImageVersion(Boolean updateToLatestImageVersion) {
            return updateToLatestImageVersion(Output.of(updateToLatestImageVersion));
        }

        public ComputeEnvironmentComputeResourcesArgs build() {
            $.maxvCpus = Objects.requireNonNull($.maxvCpus, "expected parameter 'maxvCpus' to be non-null");
            $.subnets = Objects.requireNonNull($.subnets, "expected parameter 'subnets' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
