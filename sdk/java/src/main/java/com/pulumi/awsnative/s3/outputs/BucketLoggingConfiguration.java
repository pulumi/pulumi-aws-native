// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketLoggingConfiguration {
    /**
     * @return The name of an Amazon S3 bucket where Amazon S3 store server access log files. You can store log files in any bucket that you own. By default, logs are stored in the bucket where the LoggingConfiguration property is defined.
     * 
     */
    private @Nullable String destinationBucketName;
    private @Nullable String logFilePrefix;

    private BucketLoggingConfiguration() {}
    /**
     * @return The name of an Amazon S3 bucket where Amazon S3 store server access log files. You can store log files in any bucket that you own. By default, logs are stored in the bucket where the LoggingConfiguration property is defined.
     * 
     */
    public Optional<String> destinationBucketName() {
        return Optional.ofNullable(this.destinationBucketName);
    }
    public Optional<String> logFilePrefix() {
        return Optional.ofNullable(this.logFilePrefix);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketLoggingConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String destinationBucketName;
        private @Nullable String logFilePrefix;
        public Builder() {}
        public Builder(BucketLoggingConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinationBucketName = defaults.destinationBucketName;
    	      this.logFilePrefix = defaults.logFilePrefix;
        }

        @CustomType.Setter
        public Builder destinationBucketName(@Nullable String destinationBucketName) {
            this.destinationBucketName = destinationBucketName;
            return this;
        }
        @CustomType.Setter
        public Builder logFilePrefix(@Nullable String logFilePrefix) {
            this.logFilePrefix = logFilePrefix;
            return this;
        }
        public BucketLoggingConfiguration build() {
            final var o = new BucketLoggingConfiguration();
            o.destinationBucketName = destinationBucketName;
            o.logFilePrefix = logFilePrefix;
            return o;
        }
    }
}
