// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iot.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


/**
 * Specifies the amount of time each device has to finish its execution of the job.
 * 
 */
public final class TimeoutConfigPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final TimeoutConfigPropertiesArgs Empty = new TimeoutConfigPropertiesArgs();

    @Import(name="inProgressTimeoutInMinutes", required=true)
    private Output<Integer> inProgressTimeoutInMinutes;

    public Output<Integer> inProgressTimeoutInMinutes() {
        return this.inProgressTimeoutInMinutes;
    }

    private TimeoutConfigPropertiesArgs() {}

    private TimeoutConfigPropertiesArgs(TimeoutConfigPropertiesArgs $) {
        this.inProgressTimeoutInMinutes = $.inProgressTimeoutInMinutes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TimeoutConfigPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TimeoutConfigPropertiesArgs $;

        public Builder() {
            $ = new TimeoutConfigPropertiesArgs();
        }

        public Builder(TimeoutConfigPropertiesArgs defaults) {
            $ = new TimeoutConfigPropertiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder inProgressTimeoutInMinutes(Output<Integer> inProgressTimeoutInMinutes) {
            $.inProgressTimeoutInMinutes = inProgressTimeoutInMinutes;
            return this;
        }

        public Builder inProgressTimeoutInMinutes(Integer inProgressTimeoutInMinutes) {
            return inProgressTimeoutInMinutes(Output.of(inProgressTimeoutInMinutes));
        }

        public TimeoutConfigPropertiesArgs build() {
            $.inProgressTimeoutInMinutes = Objects.requireNonNull($.inProgressTimeoutInMinutes, "expected parameter 'inProgressTimeoutInMinutes' to be non-null");
            return $;
        }
    }

}
