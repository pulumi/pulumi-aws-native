// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.imagebuilder.inputs;

import com.pulumi.awsnative.imagebuilder.inputs.DistributionConfigurationLaunchPermissionConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The specific AMI settings (for example, launch permissions, AMI tags).
 * 
 */
public final class DistributionConfigurationAmiDistributionConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DistributionConfigurationAmiDistributionConfigurationArgs Empty = new DistributionConfigurationAmiDistributionConfigurationArgs();

    /**
     * The tags to apply to AMIs distributed to this Region.
     * 
     */
    @Import(name="amiTags")
    private @Nullable Output<Object> amiTags;

    /**
     * @return The tags to apply to AMIs distributed to this Region.
     * 
     */
    public Optional<Output<Object>> amiTags() {
        return Optional.ofNullable(this.amiTags);
    }

    /**
     * The description of the AMI distribution configuration.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the AMI distribution configuration.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The KMS key identifier used to encrypt the distributed image.
     * 
     */
    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    /**
     * @return The KMS key identifier used to encrypt the distributed image.
     * 
     */
    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    @Import(name="launchPermissionConfiguration")
    private @Nullable Output<DistributionConfigurationLaunchPermissionConfigurationArgs> launchPermissionConfiguration;

    public Optional<Output<DistributionConfigurationLaunchPermissionConfigurationArgs>> launchPermissionConfiguration() {
        return Optional.ofNullable(this.launchPermissionConfiguration);
    }

    /**
     * The name of the AMI distribution configuration.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the AMI distribution configuration.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of accounts to which you want to distribute an image.
     * 
     */
    @Import(name="targetAccountIds")
    private @Nullable Output<List<String>> targetAccountIds;

    /**
     * @return The ID of accounts to which you want to distribute an image.
     * 
     */
    public Optional<Output<List<String>>> targetAccountIds() {
        return Optional.ofNullable(this.targetAccountIds);
    }

    private DistributionConfigurationAmiDistributionConfigurationArgs() {}

    private DistributionConfigurationAmiDistributionConfigurationArgs(DistributionConfigurationAmiDistributionConfigurationArgs $) {
        this.amiTags = $.amiTags;
        this.description = $.description;
        this.kmsKeyId = $.kmsKeyId;
        this.launchPermissionConfiguration = $.launchPermissionConfiguration;
        this.name = $.name;
        this.targetAccountIds = $.targetAccountIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DistributionConfigurationAmiDistributionConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DistributionConfigurationAmiDistributionConfigurationArgs $;

        public Builder() {
            $ = new DistributionConfigurationAmiDistributionConfigurationArgs();
        }

        public Builder(DistributionConfigurationAmiDistributionConfigurationArgs defaults) {
            $ = new DistributionConfigurationAmiDistributionConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param amiTags The tags to apply to AMIs distributed to this Region.
         * 
         * @return builder
         * 
         */
        public Builder amiTags(@Nullable Output<Object> amiTags) {
            $.amiTags = amiTags;
            return this;
        }

        /**
         * @param amiTags The tags to apply to AMIs distributed to this Region.
         * 
         * @return builder
         * 
         */
        public Builder amiTags(Object amiTags) {
            return amiTags(Output.of(amiTags));
        }

        /**
         * @param description The description of the AMI distribution configuration.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the AMI distribution configuration.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param kmsKeyId The KMS key identifier used to encrypt the distributed image.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId The KMS key identifier used to encrypt the distributed image.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        public Builder launchPermissionConfiguration(@Nullable Output<DistributionConfigurationLaunchPermissionConfigurationArgs> launchPermissionConfiguration) {
            $.launchPermissionConfiguration = launchPermissionConfiguration;
            return this;
        }

        public Builder launchPermissionConfiguration(DistributionConfigurationLaunchPermissionConfigurationArgs launchPermissionConfiguration) {
            return launchPermissionConfiguration(Output.of(launchPermissionConfiguration));
        }

        /**
         * @param name The name of the AMI distribution configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the AMI distribution configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param targetAccountIds The ID of accounts to which you want to distribute an image.
         * 
         * @return builder
         * 
         */
        public Builder targetAccountIds(@Nullable Output<List<String>> targetAccountIds) {
            $.targetAccountIds = targetAccountIds;
            return this;
        }

        /**
         * @param targetAccountIds The ID of accounts to which you want to distribute an image.
         * 
         * @return builder
         * 
         */
        public Builder targetAccountIds(List<String> targetAccountIds) {
            return targetAccountIds(Output.of(targetAccountIds));
        }

        /**
         * @param targetAccountIds The ID of accounts to which you want to distribute an image.
         * 
         * @return builder
         * 
         */
        public Builder targetAccountIds(String... targetAccountIds) {
            return targetAccountIds(List.of(targetAccountIds));
        }

        public DistributionConfigurationAmiDistributionConfigurationArgs build() {
            return $;
        }
    }

}
