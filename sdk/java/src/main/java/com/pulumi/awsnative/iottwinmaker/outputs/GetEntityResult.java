// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.iottwinmaker.outputs;

import com.pulumi.awsnative.iottwinmaker.outputs.EntityStatus;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEntityResult {
    /**
     * @return The ARN of the entity.
     * 
     */
    private @Nullable String arn;
    /**
     * @return A map that sets information about a component type.
     * 
     */
    private @Nullable Object components;
    /**
     * @return The date and time when the entity was created.
     * 
     */
    private @Nullable String creationDateTime;
    /**
     * @return The description of the entity.
     * 
     */
    private @Nullable String description;
    /**
     * @return The name of the entity.
     * 
     */
    private @Nullable String entityName;
    /**
     * @return A Boolean value that specifies whether the entity has child entities or not.
     * 
     */
    private @Nullable Boolean hasChildEntities;
    /**
     * @return The ID of the parent entity.
     * 
     */
    private @Nullable String parentEntityId;
    /**
     * @return The current status of the entity.
     * 
     */
    private @Nullable EntityStatus status;
    /**
     * @return A key-value pair to associate with a resource.
     * 
     */
    private @Nullable Object tags;
    /**
     * @return The last date and time when the entity was updated.
     * 
     */
    private @Nullable String updateDateTime;

    private GetEntityResult() {}
    /**
     * @return The ARN of the entity.
     * 
     */
    public Optional<String> arn() {
        return Optional.ofNullable(this.arn);
    }
    /**
     * @return A map that sets information about a component type.
     * 
     */
    public Optional<Object> components() {
        return Optional.ofNullable(this.components);
    }
    /**
     * @return The date and time when the entity was created.
     * 
     */
    public Optional<String> creationDateTime() {
        return Optional.ofNullable(this.creationDateTime);
    }
    /**
     * @return The description of the entity.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The name of the entity.
     * 
     */
    public Optional<String> entityName() {
        return Optional.ofNullable(this.entityName);
    }
    /**
     * @return A Boolean value that specifies whether the entity has child entities or not.
     * 
     */
    public Optional<Boolean> hasChildEntities() {
        return Optional.ofNullable(this.hasChildEntities);
    }
    /**
     * @return The ID of the parent entity.
     * 
     */
    public Optional<String> parentEntityId() {
        return Optional.ofNullable(this.parentEntityId);
    }
    /**
     * @return The current status of the entity.
     * 
     */
    public Optional<EntityStatus> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return A key-value pair to associate with a resource.
     * 
     */
    public Optional<Object> tags() {
        return Optional.ofNullable(this.tags);
    }
    /**
     * @return The last date and time when the entity was updated.
     * 
     */
    public Optional<String> updateDateTime() {
        return Optional.ofNullable(this.updateDateTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEntityResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arn;
        private @Nullable Object components;
        private @Nullable String creationDateTime;
        private @Nullable String description;
        private @Nullable String entityName;
        private @Nullable Boolean hasChildEntities;
        private @Nullable String parentEntityId;
        private @Nullable EntityStatus status;
        private @Nullable Object tags;
        private @Nullable String updateDateTime;
        public Builder() {}
        public Builder(GetEntityResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arn = defaults.arn;
    	      this.components = defaults.components;
    	      this.creationDateTime = defaults.creationDateTime;
    	      this.description = defaults.description;
    	      this.entityName = defaults.entityName;
    	      this.hasChildEntities = defaults.hasChildEntities;
    	      this.parentEntityId = defaults.parentEntityId;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.updateDateTime = defaults.updateDateTime;
        }

        @CustomType.Setter
        public Builder arn(@Nullable String arn) {
            this.arn = arn;
            return this;
        }
        @CustomType.Setter
        public Builder components(@Nullable Object components) {
            this.components = components;
            return this;
        }
        @CustomType.Setter
        public Builder creationDateTime(@Nullable String creationDateTime) {
            this.creationDateTime = creationDateTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder entityName(@Nullable String entityName) {
            this.entityName = entityName;
            return this;
        }
        @CustomType.Setter
        public Builder hasChildEntities(@Nullable Boolean hasChildEntities) {
            this.hasChildEntities = hasChildEntities;
            return this;
        }
        @CustomType.Setter
        public Builder parentEntityId(@Nullable String parentEntityId) {
            this.parentEntityId = parentEntityId;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable EntityStatus status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Object tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder updateDateTime(@Nullable String updateDateTime) {
            this.updateDateTime = updateDateTime;
            return this;
        }
        public GetEntityResult build() {
            final var o = new GetEntityResult();
            o.arn = arn;
            o.components = components;
            o.creationDateTime = creationDateTime;
            o.description = description;
            o.entityName = entityName;
            o.hasChildEntities = hasChildEntities;
            o.parentEntityId = parentEntityId;
            o.status = status;
            o.tags = tags;
            o.updateDateTime = updateDateTime;
            return o;
        }
    }
}
