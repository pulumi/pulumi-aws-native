// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.s3.outputs;

import com.pulumi.awsnative.s3.enums.BucketReplicationRuleStatus;
import com.pulumi.awsnative.s3.outputs.BucketDeleteMarkerReplication;
import com.pulumi.awsnative.s3.outputs.BucketReplicationDestination;
import com.pulumi.awsnative.s3.outputs.BucketReplicationRuleFilter;
import com.pulumi.awsnative.s3.outputs.BucketSourceSelectionCriteria;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketReplicationRule {
    private @Nullable BucketDeleteMarkerReplication deleteMarkerReplication;
    private BucketReplicationDestination destination;
    private @Nullable BucketReplicationRuleFilter filter;
    /**
     * @return A unique identifier for the rule.
     * 
     */
    private @Nullable String id;
    /**
     * @return An object key name prefix that identifies the object or objects to which the rule applies.
     * 
     */
    private @Nullable String prefix;
    private @Nullable Integer priority;
    private @Nullable BucketSourceSelectionCriteria sourceSelectionCriteria;
    /**
     * @return Specifies whether the rule is enabled.
     * 
     */
    private BucketReplicationRuleStatus status;

    private BucketReplicationRule() {}
    public Optional<BucketDeleteMarkerReplication> deleteMarkerReplication() {
        return Optional.ofNullable(this.deleteMarkerReplication);
    }
    public BucketReplicationDestination destination() {
        return this.destination;
    }
    public Optional<BucketReplicationRuleFilter> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return A unique identifier for the rule.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return An object key name prefix that identifies the object or objects to which the rule applies.
     * 
     */
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }
    public Optional<Integer> priority() {
        return Optional.ofNullable(this.priority);
    }
    public Optional<BucketSourceSelectionCriteria> sourceSelectionCriteria() {
        return Optional.ofNullable(this.sourceSelectionCriteria);
    }
    /**
     * @return Specifies whether the rule is enabled.
     * 
     */
    public BucketReplicationRuleStatus status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketReplicationRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable BucketDeleteMarkerReplication deleteMarkerReplication;
        private BucketReplicationDestination destination;
        private @Nullable BucketReplicationRuleFilter filter;
        private @Nullable String id;
        private @Nullable String prefix;
        private @Nullable Integer priority;
        private @Nullable BucketSourceSelectionCriteria sourceSelectionCriteria;
        private BucketReplicationRuleStatus status;
        public Builder() {}
        public Builder(BucketReplicationRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteMarkerReplication = defaults.deleteMarkerReplication;
    	      this.destination = defaults.destination;
    	      this.filter = defaults.filter;
    	      this.id = defaults.id;
    	      this.prefix = defaults.prefix;
    	      this.priority = defaults.priority;
    	      this.sourceSelectionCriteria = defaults.sourceSelectionCriteria;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder deleteMarkerReplication(@Nullable BucketDeleteMarkerReplication deleteMarkerReplication) {
            this.deleteMarkerReplication = deleteMarkerReplication;
            return this;
        }
        @CustomType.Setter
        public Builder destination(BucketReplicationDestination destination) {
            this.destination = Objects.requireNonNull(destination);
            return this;
        }
        @CustomType.Setter
        public Builder filter(@Nullable BucketReplicationRuleFilter filter) {
            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder prefix(@Nullable String prefix) {
            this.prefix = prefix;
            return this;
        }
        @CustomType.Setter
        public Builder priority(@Nullable Integer priority) {
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder sourceSelectionCriteria(@Nullable BucketSourceSelectionCriteria sourceSelectionCriteria) {
            this.sourceSelectionCriteria = sourceSelectionCriteria;
            return this;
        }
        @CustomType.Setter
        public Builder status(BucketReplicationRuleStatus status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public BucketReplicationRule build() {
            final var o = new BucketReplicationRule();
            o.deleteMarkerReplication = deleteMarkerReplication;
            o.destination = destination;
            o.filter = filter;
            o.id = id;
            o.prefix = prefix;
            o.priority = priority;
            o.sourceSelectionCriteria = sourceSelectionCriteria;
            o.status = status;
            return o;
        }
    }
}
