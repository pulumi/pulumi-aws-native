// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.quicksight.inputs;

import com.pulumi.awsnative.quicksight.inputs.DataSourceManifestFileLocationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;


/**
 * &lt;p&gt;S3 parameters.&lt;/p&gt;
 * 
 */
public final class DataSourceS3ParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSourceS3ParametersArgs Empty = new DataSourceS3ParametersArgs();

    @Import(name="manifestFileLocation", required=true)
    private Output<DataSourceManifestFileLocationArgs> manifestFileLocation;

    public Output<DataSourceManifestFileLocationArgs> manifestFileLocation() {
        return this.manifestFileLocation;
    }

    private DataSourceS3ParametersArgs() {}

    private DataSourceS3ParametersArgs(DataSourceS3ParametersArgs $) {
        this.manifestFileLocation = $.manifestFileLocation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSourceS3ParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSourceS3ParametersArgs $;

        public Builder() {
            $ = new DataSourceS3ParametersArgs();
        }

        public Builder(DataSourceS3ParametersArgs defaults) {
            $ = new DataSourceS3ParametersArgs(Objects.requireNonNull(defaults));
        }

        public Builder manifestFileLocation(Output<DataSourceManifestFileLocationArgs> manifestFileLocation) {
            $.manifestFileLocation = manifestFileLocation;
            return this;
        }

        public Builder manifestFileLocation(DataSourceManifestFileLocationArgs manifestFileLocation) {
            return manifestFileLocation(Output.of(manifestFileLocation));
        }

        public DataSourceS3ParametersArgs build() {
            $.manifestFileLocation = Objects.requireNonNull($.manifestFileLocation, "expected parameter 'manifestFileLocation' to be non-null");
            return $;
        }
    }

}
