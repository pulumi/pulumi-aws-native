// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.awsnative.cloudfront.inputs;

import com.pulumi.awsnative.cloudfront.inputs.DistributionCacheBehaviorArgs;
import com.pulumi.awsnative.cloudfront.inputs.DistributionCustomErrorResponseArgs;
import com.pulumi.awsnative.cloudfront.inputs.DistributionDefaultCacheBehaviorArgs;
import com.pulumi.awsnative.cloudfront.inputs.DistributionLegacyCustomOriginArgs;
import com.pulumi.awsnative.cloudfront.inputs.DistributionLegacyS3OriginArgs;
import com.pulumi.awsnative.cloudfront.inputs.DistributionLoggingArgs;
import com.pulumi.awsnative.cloudfront.inputs.DistributionOriginArgs;
import com.pulumi.awsnative.cloudfront.inputs.DistributionOriginGroupsArgs;
import com.pulumi.awsnative.cloudfront.inputs.DistributionRestrictionsArgs;
import com.pulumi.awsnative.cloudfront.inputs.DistributionViewerCertificateArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DistributionConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DistributionConfigArgs Empty = new DistributionConfigArgs();

    @Import(name="aliases")
    private @Nullable Output<List<String>> aliases;

    public Optional<Output<List<String>>> aliases() {
        return Optional.ofNullable(this.aliases);
    }

    @Import(name="cNAMEs")
    private @Nullable Output<List<String>> cNAMEs;

    public Optional<Output<List<String>>> cNAMEs() {
        return Optional.ofNullable(this.cNAMEs);
    }

    @Import(name="cacheBehaviors")
    private @Nullable Output<List<DistributionCacheBehaviorArgs>> cacheBehaviors;

    public Optional<Output<List<DistributionCacheBehaviorArgs>>> cacheBehaviors() {
        return Optional.ofNullable(this.cacheBehaviors);
    }

    @Import(name="comment")
    private @Nullable Output<String> comment;

    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    @Import(name="customErrorResponses")
    private @Nullable Output<List<DistributionCustomErrorResponseArgs>> customErrorResponses;

    public Optional<Output<List<DistributionCustomErrorResponseArgs>>> customErrorResponses() {
        return Optional.ofNullable(this.customErrorResponses);
    }

    @Import(name="customOrigin")
    private @Nullable Output<DistributionLegacyCustomOriginArgs> customOrigin;

    public Optional<Output<DistributionLegacyCustomOriginArgs>> customOrigin() {
        return Optional.ofNullable(this.customOrigin);
    }

    @Import(name="defaultCacheBehavior")
    private @Nullable Output<DistributionDefaultCacheBehaviorArgs> defaultCacheBehavior;

    public Optional<Output<DistributionDefaultCacheBehaviorArgs>> defaultCacheBehavior() {
        return Optional.ofNullable(this.defaultCacheBehavior);
    }

    @Import(name="defaultRootObject")
    private @Nullable Output<String> defaultRootObject;

    public Optional<Output<String>> defaultRootObject() {
        return Optional.ofNullable(this.defaultRootObject);
    }

    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled;
    }

    @Import(name="httpVersion")
    private @Nullable Output<String> httpVersion;

    public Optional<Output<String>> httpVersion() {
        return Optional.ofNullable(this.httpVersion);
    }

    @Import(name="iPV6Enabled")
    private @Nullable Output<Boolean> iPV6Enabled;

    public Optional<Output<Boolean>> iPV6Enabled() {
        return Optional.ofNullable(this.iPV6Enabled);
    }

    @Import(name="logging")
    private @Nullable Output<DistributionLoggingArgs> logging;

    public Optional<Output<DistributionLoggingArgs>> logging() {
        return Optional.ofNullable(this.logging);
    }

    @Import(name="originGroups")
    private @Nullable Output<DistributionOriginGroupsArgs> originGroups;

    public Optional<Output<DistributionOriginGroupsArgs>> originGroups() {
        return Optional.ofNullable(this.originGroups);
    }

    @Import(name="origins")
    private @Nullable Output<List<DistributionOriginArgs>> origins;

    public Optional<Output<List<DistributionOriginArgs>>> origins() {
        return Optional.ofNullable(this.origins);
    }

    @Import(name="priceClass")
    private @Nullable Output<String> priceClass;

    public Optional<Output<String>> priceClass() {
        return Optional.ofNullable(this.priceClass);
    }

    @Import(name="restrictions")
    private @Nullable Output<DistributionRestrictionsArgs> restrictions;

    public Optional<Output<DistributionRestrictionsArgs>> restrictions() {
        return Optional.ofNullable(this.restrictions);
    }

    @Import(name="s3Origin")
    private @Nullable Output<DistributionLegacyS3OriginArgs> s3Origin;

    public Optional<Output<DistributionLegacyS3OriginArgs>> s3Origin() {
        return Optional.ofNullable(this.s3Origin);
    }

    @Import(name="viewerCertificate")
    private @Nullable Output<DistributionViewerCertificateArgs> viewerCertificate;

    public Optional<Output<DistributionViewerCertificateArgs>> viewerCertificate() {
        return Optional.ofNullable(this.viewerCertificate);
    }

    @Import(name="webACLId")
    private @Nullable Output<String> webACLId;

    public Optional<Output<String>> webACLId() {
        return Optional.ofNullable(this.webACLId);
    }

    private DistributionConfigArgs() {}

    private DistributionConfigArgs(DistributionConfigArgs $) {
        this.aliases = $.aliases;
        this.cNAMEs = $.cNAMEs;
        this.cacheBehaviors = $.cacheBehaviors;
        this.comment = $.comment;
        this.customErrorResponses = $.customErrorResponses;
        this.customOrigin = $.customOrigin;
        this.defaultCacheBehavior = $.defaultCacheBehavior;
        this.defaultRootObject = $.defaultRootObject;
        this.enabled = $.enabled;
        this.httpVersion = $.httpVersion;
        this.iPV6Enabled = $.iPV6Enabled;
        this.logging = $.logging;
        this.originGroups = $.originGroups;
        this.origins = $.origins;
        this.priceClass = $.priceClass;
        this.restrictions = $.restrictions;
        this.s3Origin = $.s3Origin;
        this.viewerCertificate = $.viewerCertificate;
        this.webACLId = $.webACLId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DistributionConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DistributionConfigArgs $;

        public Builder() {
            $ = new DistributionConfigArgs();
        }

        public Builder(DistributionConfigArgs defaults) {
            $ = new DistributionConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder aliases(@Nullable Output<List<String>> aliases) {
            $.aliases = aliases;
            return this;
        }

        public Builder aliases(List<String> aliases) {
            return aliases(Output.of(aliases));
        }

        public Builder aliases(String... aliases) {
            return aliases(List.of(aliases));
        }

        public Builder cNAMEs(@Nullable Output<List<String>> cNAMEs) {
            $.cNAMEs = cNAMEs;
            return this;
        }

        public Builder cNAMEs(List<String> cNAMEs) {
            return cNAMEs(Output.of(cNAMEs));
        }

        public Builder cNAMEs(String... cNAMEs) {
            return cNAMEs(List.of(cNAMEs));
        }

        public Builder cacheBehaviors(@Nullable Output<List<DistributionCacheBehaviorArgs>> cacheBehaviors) {
            $.cacheBehaviors = cacheBehaviors;
            return this;
        }

        public Builder cacheBehaviors(List<DistributionCacheBehaviorArgs> cacheBehaviors) {
            return cacheBehaviors(Output.of(cacheBehaviors));
        }

        public Builder cacheBehaviors(DistributionCacheBehaviorArgs... cacheBehaviors) {
            return cacheBehaviors(List.of(cacheBehaviors));
        }

        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        public Builder customErrorResponses(@Nullable Output<List<DistributionCustomErrorResponseArgs>> customErrorResponses) {
            $.customErrorResponses = customErrorResponses;
            return this;
        }

        public Builder customErrorResponses(List<DistributionCustomErrorResponseArgs> customErrorResponses) {
            return customErrorResponses(Output.of(customErrorResponses));
        }

        public Builder customErrorResponses(DistributionCustomErrorResponseArgs... customErrorResponses) {
            return customErrorResponses(List.of(customErrorResponses));
        }

        public Builder customOrigin(@Nullable Output<DistributionLegacyCustomOriginArgs> customOrigin) {
            $.customOrigin = customOrigin;
            return this;
        }

        public Builder customOrigin(DistributionLegacyCustomOriginArgs customOrigin) {
            return customOrigin(Output.of(customOrigin));
        }

        public Builder defaultCacheBehavior(@Nullable Output<DistributionDefaultCacheBehaviorArgs> defaultCacheBehavior) {
            $.defaultCacheBehavior = defaultCacheBehavior;
            return this;
        }

        public Builder defaultCacheBehavior(DistributionDefaultCacheBehaviorArgs defaultCacheBehavior) {
            return defaultCacheBehavior(Output.of(defaultCacheBehavior));
        }

        public Builder defaultRootObject(@Nullable Output<String> defaultRootObject) {
            $.defaultRootObject = defaultRootObject;
            return this;
        }

        public Builder defaultRootObject(String defaultRootObject) {
            return defaultRootObject(Output.of(defaultRootObject));
        }

        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder httpVersion(@Nullable Output<String> httpVersion) {
            $.httpVersion = httpVersion;
            return this;
        }

        public Builder httpVersion(String httpVersion) {
            return httpVersion(Output.of(httpVersion));
        }

        public Builder iPV6Enabled(@Nullable Output<Boolean> iPV6Enabled) {
            $.iPV6Enabled = iPV6Enabled;
            return this;
        }

        public Builder iPV6Enabled(Boolean iPV6Enabled) {
            return iPV6Enabled(Output.of(iPV6Enabled));
        }

        public Builder logging(@Nullable Output<DistributionLoggingArgs> logging) {
            $.logging = logging;
            return this;
        }

        public Builder logging(DistributionLoggingArgs logging) {
            return logging(Output.of(logging));
        }

        public Builder originGroups(@Nullable Output<DistributionOriginGroupsArgs> originGroups) {
            $.originGroups = originGroups;
            return this;
        }

        public Builder originGroups(DistributionOriginGroupsArgs originGroups) {
            return originGroups(Output.of(originGroups));
        }

        public Builder origins(@Nullable Output<List<DistributionOriginArgs>> origins) {
            $.origins = origins;
            return this;
        }

        public Builder origins(List<DistributionOriginArgs> origins) {
            return origins(Output.of(origins));
        }

        public Builder origins(DistributionOriginArgs... origins) {
            return origins(List.of(origins));
        }

        public Builder priceClass(@Nullable Output<String> priceClass) {
            $.priceClass = priceClass;
            return this;
        }

        public Builder priceClass(String priceClass) {
            return priceClass(Output.of(priceClass));
        }

        public Builder restrictions(@Nullable Output<DistributionRestrictionsArgs> restrictions) {
            $.restrictions = restrictions;
            return this;
        }

        public Builder restrictions(DistributionRestrictionsArgs restrictions) {
            return restrictions(Output.of(restrictions));
        }

        public Builder s3Origin(@Nullable Output<DistributionLegacyS3OriginArgs> s3Origin) {
            $.s3Origin = s3Origin;
            return this;
        }

        public Builder s3Origin(DistributionLegacyS3OriginArgs s3Origin) {
            return s3Origin(Output.of(s3Origin));
        }

        public Builder viewerCertificate(@Nullable Output<DistributionViewerCertificateArgs> viewerCertificate) {
            $.viewerCertificate = viewerCertificate;
            return this;
        }

        public Builder viewerCertificate(DistributionViewerCertificateArgs viewerCertificate) {
            return viewerCertificate(Output.of(viewerCertificate));
        }

        public Builder webACLId(@Nullable Output<String> webACLId) {
            $.webACLId = webACLId;
            return this;
        }

        public Builder webACLId(String webACLId) {
            return webACLId(Output.of(webACLId));
        }

        public DistributionConfigArgs build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            return $;
        }
    }

}
